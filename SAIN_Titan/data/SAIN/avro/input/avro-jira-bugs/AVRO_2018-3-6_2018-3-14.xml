<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:26:19 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2018-3-6+AND+created+%3C%3D+2018-3-14+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="4" total="4"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-2155] Generate documentation for C# classes and enums</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2155</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Update the C# &quot;avrogen&quot; code generation to populate documentation for code entities (classes and enums) that are generated from named schemas (record, enum and fixed). At this time, it only generates documentation for Avro fields (C# fields and properties).&lt;/p&gt;</description>
                <environment></environment>
        <key id="13143065">AVRO-2155</key>
            <summary>Generate documentation for C# classes and enums</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dkulp">Daniel Kulp</assignee>
                                    <reporter username="blachniet">Brian Lachniet</reporter>
                        <labels>
                    </labels>
                <created>Wed, 7 Mar 2018 01:35:36 +0000</created>
                <updated>Wed, 5 Dec 2018 16:52:45 +0000</updated>
                            <resolved>Wed, 5 Dec 2018 16:52:45 +0000</resolved>
                                    <version>1.8.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>csharp</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16394288" author="githubbot" created="Sat, 10 Mar 2018 18:32:17 +0000"  >&lt;p&gt;blachniet opened a new pull request #296: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2155&quot; title=&quot;Generate documentation for C# classes and enums&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2155&quot;&gt;&lt;del&gt;AVRO-2155&lt;/del&gt;&lt;/a&gt;: Include documentation for named schemas in generated code&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/296&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/296&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2155&quot; title=&quot;Generate documentation for C# classes and enums&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2155&quot;&gt;&lt;del&gt;AVRO-2155&lt;/del&gt;&lt;/a&gt;(&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2155&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-2155&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;   1. Added `Documentation` property to `NamedSchema`, as well as an argument in the constructor to accept the value for the property&lt;br/&gt;
   2. Added unit tests for the `Documentation`: `TestEumDoc`, `TestFixedDoc` and `TestRecordDoc`&lt;br/&gt;
   3. In `CodeGen.cs`, added comments to the generated fixed, enum and record code declarations.&lt;br/&gt;
   4. Unrelated change: Added missing parameter documentation on `EnumSchema`, `FixedSchema`, `NamedSchema` and `RecordSchema` documentation&lt;/p&gt;

&lt;p&gt;   I didn&apos;t see a good way to unit test the documentation in the generated code. As an alternative, I&apos;ve added &lt;span class=&quot;error&quot;&gt;&amp;#91;sample.zip&amp;#93;&lt;/span&gt;(&lt;a href=&quot;https://github.com/apache/avro/files/1799659/sample.zip&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/files/1799659/sample.zip&lt;/a&gt;) containing a sample protocol and before/after generated code for comparison.&lt;/p&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16394294" author="blachniet" created="Sat, 10 Mar 2018 18:39:50 +0000"  >&lt;p&gt;I&apos;ve submitted a pull request containing the changes to resolve this issue. I was not sure which &quot;Fix Version&quot; to target, so I left it blank. Please let me know what, if anything, else I need to do to have this incorporated in the next release. Thanks!&lt;/p&gt;</comment>
                            <comment id="16710146" author="githubbot" created="Wed, 5 Dec 2018 14:52:41 +0000"  >&lt;p&gt;dkulp closed pull request #296: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2155&quot; title=&quot;Generate documentation for C# classes and enums&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2155&quot;&gt;&lt;del&gt;AVRO-2155&lt;/del&gt;&lt;/a&gt;: Include documentation for named schemas in generated code&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/296&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/296&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/csharp/src/apache/main/CodeGen/CodeGen.cs b/lang/csharp/src/apache/main/CodeGen/CodeGen.cs&lt;br/&gt;
index 7e70a02d5..2bcebabd9 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/main/CodeGen/CodeGen.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/main/CodeGen/CodeGen.cs&lt;br/&gt;
@@ -260,6 +260,11 @@ protected virtual void processFixed(Schema schema)&lt;br/&gt;
             ctd.Attributes = MemberAttributes.Public;&lt;br/&gt;
             ctd.BaseTypes.Add(&quot;SpecificFixed&quot;);&lt;/p&gt;

&lt;p&gt;+            if (fixedSchema.Documentation != null)&lt;br/&gt;
+            &lt;/p&gt;
{
+                ctd.Comments.Add(createDocComment(fixedSchema.Documentation));
+            }
&lt;p&gt;+&lt;br/&gt;
             // create static schema field&lt;br/&gt;
             createSchemaField(schema, ctd, true);&lt;/p&gt;

&lt;p&gt;@@ -306,6 +311,11 @@ protected virtual void processEnum(Schema schema)&lt;br/&gt;
             ctd.IsEnum = true;&lt;br/&gt;
             ctd.Attributes = MemberAttributes.Public;&lt;/p&gt;

&lt;p&gt;+            if (enumschema.Documentation != null)&lt;br/&gt;
+            &lt;/p&gt;
{
+                ctd.Comments.Add(createDocComment(enumschema.Documentation));
+            }
&lt;p&gt;+&lt;br/&gt;
             foreach (string symbol in enumschema.Symbols)&lt;br/&gt;
             {&lt;br/&gt;
                 if (CodeGenUtil.Instance.ReservedKeywords.Contains(symbol))&lt;br/&gt;
@@ -526,6 +536,11 @@ protected virtual CodeTypeDeclaration processRecord(Schema schema)&lt;br/&gt;
             ctd.IsClass = true;&lt;br/&gt;
             ctd.IsPartial = true;&lt;/p&gt;

&lt;p&gt;+            if (recordSchema.Documentation != null)&lt;br/&gt;
+            &lt;/p&gt;
{
+                ctd.Comments.Add(createDocComment(recordSchema.Documentation));
+            }
&lt;p&gt;+&lt;br/&gt;
             createSchemaField(schema, ctd, isError);&lt;/p&gt;

&lt;p&gt;             // declare Get() to be used by the Writer classes&lt;br/&gt;
diff --git a/lang/csharp/src/apache/main/Schema/EnumSchema.cs b/lang/csharp/src/apache/main/Schema/EnumSchema.cs&lt;br/&gt;
index fc21d14b7..93c36c7ef 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/main/Schema/EnumSchema.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/main/Schema/EnumSchema.cs&lt;br/&gt;
@@ -70,7 +70,8 @@ internal static EnumSchema NewInstance(JToken jtok, PropertyMap props, SchemaNam&lt;br/&gt;
                 symbolMap&lt;span class=&quot;error&quot;&gt;&amp;#91;s&amp;#93;&lt;/span&gt; = i++;&lt;br/&gt;
                 symbols.Add(s);&lt;br/&gt;
             }&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return new EnumSchema(name, aliases, symbols, symbolMap, props, names);&lt;br/&gt;
+            return new EnumSchema(name, aliases, symbols, symbolMap, props, names,&lt;br/&gt;
+                JsonHelper.GetOptionalString(jtok, &quot;doc&quot;));&lt;br/&gt;
         }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         /// &amp;lt;summary&amp;gt;&lt;br/&gt;
@@ -80,10 +81,13 @@ internal static EnumSchema NewInstance(JToken jtok, PropertyMap props, SchemaNam&lt;br/&gt;
         /// &amp;lt;param name=&quot;aliases&quot;&amp;gt;list of aliases for the name&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;symbols&quot;&amp;gt;list of enum symbols&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;symbolMap&quot;&amp;gt;map of enum symbols and value&amp;lt;/param&amp;gt;&lt;br/&gt;
+        /// &amp;lt;param name=&quot;props&quot;&amp;gt;custom properties on this schema&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;names&quot;&amp;gt;list of named schema already read&amp;lt;/param&amp;gt;&lt;br/&gt;
+        /// &amp;lt;param name=&quot;doc&quot;&amp;gt;documentation for this named schema&amp;lt;/param&amp;gt;&lt;br/&gt;
         private EnumSchema(SchemaName name, IList&amp;lt;SchemaName&amp;gt; aliases, List&amp;lt;string&amp;gt; symbols,&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;IDictionary&amp;lt;String, int&amp;gt; symbolMap, PropertyMap props, SchemaNames names)&lt;/li&gt;
	&lt;li&gt;: base(Type.Enumeration, name, aliases, props, names)&lt;br/&gt;
+                            IDictionary&amp;lt;String, int&amp;gt; symbolMap, PropertyMap props, SchemaNames names,&lt;br/&gt;
+                            string doc)&lt;br/&gt;
+                            : base(Type.Enumeration, name, aliases, props, names, doc)
         {
             if (null == name.Name) throw new SchemaParseException(&quot;name cannot be null for enum schema.&quot;);
             this.Symbols = symbols;
diff --git a/lang/csharp/src/apache/main/Schema/FixedSchema.cs b/lang/csharp/src/apache/main/Schema/FixedSchema.cs
index 67c843d9a..873992116 100644
--- a/lang/csharp/src/apache/main/Schema/FixedSchema.cs
+++ b/lang/csharp/src/apache/main/Schema/FixedSchema.cs
@@ -44,7 +44,8 @@ internal static FixedSchema NewInstance(JToken jtok, PropertyMap props, SchemaNa
             SchemaName name = NamedSchema.GetName(jtok, encspace);
             var aliases = NamedSchema.GetAliases(jtok, name.Space, name.EncSpace);
 
-            return new FixedSchema(name, aliases, JsonHelper.GetRequiredInteger(jtok, &quot;size&quot;), props, names);
+            return new FixedSchema(name, aliases, JsonHelper.GetRequiredInteger(jtok, &quot;size&quot;), props, names,
+                JsonHelper.GetOptionalString(jtok, &quot;doc&quot;));
         }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         /// &amp;lt;summary&amp;gt;&lt;br/&gt;
@@ -53,9 +54,12 @@ internal static FixedSchema NewInstance(JToken jtok, PropertyMap props, SchemaNa&lt;br/&gt;
         /// &amp;lt;param name=&quot;name&quot;&amp;gt;name of the fixed schema&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;aliases&quot;&amp;gt;list of aliases for the name&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;size&quot;&amp;gt;fixed size&amp;lt;/param&amp;gt;&lt;br/&gt;
+        /// &amp;lt;param name=&quot;props&quot;&amp;gt;custom properties on this schema&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;names&quot;&amp;gt;list of named schema already parsed in&amp;lt;/param&amp;gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private FixedSchema(SchemaName name, IList&amp;lt;SchemaName&amp;gt; aliases, int size, PropertyMap props, SchemaNames names)&lt;/li&gt;
	&lt;li&gt;: base(Type.Fixed, name, aliases, props, names)&lt;br/&gt;
+        /// &amp;lt;param name=&quot;doc&quot;&amp;gt;documentation for this named schema&amp;lt;/param&amp;gt;&lt;br/&gt;
+        private FixedSchema(SchemaName name, IList&amp;lt;SchemaName&amp;gt; aliases, int size, PropertyMap props, SchemaNames names,&lt;br/&gt;
+            string doc)&lt;br/&gt;
+                            : base(Type.Fixed, name, aliases, props, names, doc)&lt;br/&gt;
         {&lt;br/&gt;
             if (null == name.Name) throw new SchemaParseException(&quot;name cannot be null for fixed schema.&quot;);&lt;br/&gt;
             if (size &amp;lt;= 0) throw new ArgumentOutOfRangeException(&quot;size&quot;, &quot;size must be greater than zero.&quot;);&lt;br/&gt;
diff --git a/lang/csharp/src/apache/main/Schema/NamedSchema.cs b/lang/csharp/src/apache/main/Schema/NamedSchema.cs&lt;br/&gt;
index e0bfab0aa..62fb14566 100644
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/csharp/src/apache/main/Schema/NamedSchema.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/main/Schema/NamedSchema.cs&lt;br/&gt;
@@ -57,6 +57,11 @@ public string Fullname&lt;br/&gt;
             get 
{ return SchemaName.Fullname; }
&lt;p&gt;         }&lt;/p&gt;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+        /// &amp;lt;summary&amp;gt;&lt;br/&gt;
+        /// Documentation for the schema, if any. Null if there is no documentation.&lt;br/&gt;
+        /// &amp;lt;/summary&amp;gt;&lt;br/&gt;
+        public string Documentation &lt;/p&gt;
{ get; private set; }
&lt;p&gt;+&lt;br/&gt;
         /// &amp;lt;summary&amp;gt;&lt;br/&gt;
         /// List of aliases for this named schema&lt;br/&gt;
         /// &amp;lt;/summary&amp;gt;&lt;br/&gt;
@@ -95,11 +100,16 @@ internal static NamedSchema NewInstance(JObject jo, PropertyMap props, SchemaNam&lt;br/&gt;
         /// &amp;lt;/summary&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;type&quot;&amp;gt;schema type&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;name&quot;&amp;gt;name&amp;lt;/param&amp;gt;&lt;br/&gt;
+        /// &amp;lt;param name=&quot;aliases&quot;&amp;gt;aliases for this named schema&amp;lt;/param&amp;gt;&lt;br/&gt;
+        /// &amp;lt;param name=&quot;props&quot;&amp;gt;custom properties on this schema&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;names&quot;&amp;gt;list of named schemas already read&amp;lt;/param&amp;gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;protected NamedSchema(Type type, SchemaName name, IList&amp;lt;SchemaName&amp;gt; aliases, PropertyMap props, SchemaNames names)&lt;br/&gt;
+        /// &amp;lt;param name=&quot;doc&quot;&amp;gt;documentation for this named schema&amp;lt;/param&amp;gt;&lt;br/&gt;
+        protected NamedSchema(Type type, SchemaName name, IList&amp;lt;SchemaName&amp;gt; aliases, PropertyMap props, SchemaNames names,&lt;br/&gt;
+            string doc)&lt;br/&gt;
                                 : base(type, props)&lt;br/&gt;
         {&lt;br/&gt;
             this.SchemaName = name;&lt;br/&gt;
+            this.Documentation = doc;&lt;br/&gt;
             this.aliases = aliases;&lt;br/&gt;
             if (null != name.Name)  // Added this check for anonymous records inside Message&lt;br/&gt;
                 if (!names.Add(name, this))&lt;br/&gt;
diff --git a/lang/csharp/src/apache/main/Schema/RecordSchema.cs b/lang/csharp/src/apache/main/Schema/RecordSchema.cs&lt;br/&gt;
index 8c32b6913..b1495dff0 100644
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/csharp/src/apache/main/Schema/RecordSchema.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/main/Schema/RecordSchema.cs&lt;br/&gt;
@@ -75,7 +75,8 @@ internal static RecordSchema NewInstance(Type type, JToken jtok, PropertyMap pro&lt;br/&gt;
             var fields = new List&amp;lt;Field&amp;gt;();&lt;br/&gt;
             var fieldMap = new Dictionary&amp;lt;string, Field&amp;gt;();&lt;br/&gt;
             var fieldAliasMap = new Dictionary&amp;lt;string, Field&amp;gt;();&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;var result = new RecordSchema(type, name, aliases, props, fields, request, fieldMap, fieldAliasMap, names);&lt;br/&gt;
+            var result = new RecordSchema(type, name, aliases, props, fields, request, fieldMap, fieldAliasMap, names,&lt;br/&gt;
+                JsonHelper.GetOptionalString(jtok, &quot;doc&quot;));&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;             int fieldPos = 0;&lt;br/&gt;
             foreach (JObject jfield in jfields)&lt;br/&gt;
@@ -99,14 +100,17 @@ internal static RecordSchema NewInstance(Type type, JToken jtok, PropertyMap pro&lt;br/&gt;
         /// &amp;lt;param name=&quot;type&quot;&amp;gt;type of record schema, either record or error&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;name&quot;&amp;gt;name of the record schema&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;aliases&quot;&amp;gt;list of aliases for the record name&amp;lt;/param&amp;gt;&lt;br/&gt;
+        /// &amp;lt;param name=&quot;props&quot;&amp;gt;custom properties on this schema&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;fields&quot;&amp;gt;list of fields for the record&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;request&quot;&amp;gt;true if this is an anonymous record with &apos;request&apos; instead of &apos;fields&apos;&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;fieldMap&quot;&amp;gt;map of field names and field objects&amp;lt;/param&amp;gt;&lt;br/&gt;
+        /// &amp;lt;param name=&quot;fieldAliasMap&quot;&amp;gt;map of field aliases and field objects&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;names&quot;&amp;gt;list of named schema already read&amp;lt;/param&amp;gt;&lt;br/&gt;
+        /// &amp;lt;param name=&quot;doc&quot;&amp;gt;documentation for this named schema&amp;lt;/param&amp;gt;&lt;br/&gt;
         private RecordSchema(Type type, SchemaName name, IList&amp;lt;SchemaName&amp;gt; aliases,  PropertyMap props,&lt;br/&gt;
                                 List&amp;lt;Field&amp;gt; fields, bool request, IDictionary&amp;lt;string, Field&amp;gt; fieldMap,&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;IDictionary&amp;lt;string, Field&amp;gt; fieldAliasMap, SchemaNames names)&lt;/li&gt;
	&lt;li&gt;: base(type, name, aliases, props, names)&lt;br/&gt;
+                                IDictionary&amp;lt;string, Field&amp;gt; fieldAliasMap, SchemaNames names, string doc)&lt;br/&gt;
+                                : base(type, name, aliases, props, names, doc)
         {
             if (!request &amp;amp;&amp;amp; null == name.Name) throw new SchemaParseException(&quot;name cannot be null for record schema.&quot;);
             this.Fields = fields;
diff --git a/lang/csharp/src/apache/test/Schema/SchemaTests.cs b/lang/csharp/src/apache/test/Schema/SchemaTests.cs
index 7931d405b..e49abfd8e 100644
--- a/lang/csharp/src/apache/test/Schema/SchemaTests.cs
+++ b/lang/csharp/src/apache/test/Schema/SchemaTests.cs
@@ -195,6 +195,25 @@ public void TestRecord(string s, string[] kv)
             testToString(sc);
         }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+        [TestCase(&quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;LongList\&quot;,&quot; +&lt;br/&gt;
+            &quot;\&quot;fields\&quot;:[&lt;/p&gt;
{\&quot;name\&quot;:\&quot;f1\&quot;,\&quot;type\&quot;:\&quot;long\&quot;}
&lt;p&gt;,&quot; +&lt;br/&gt;
+            &quot;&lt;/p&gt;
{\&quot;name\&quot;:\&quot;f2\&quot;,\&quot;type\&quot;: \&quot;int\&quot;}
&lt;p&gt;]}&quot;,&lt;br/&gt;
+            null)]&lt;br/&gt;
+        [TestCase(&quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;LongList\&quot;,&quot; +&lt;br/&gt;
+            &quot;\&quot;fields\&quot;:[&lt;/p&gt;
{\&quot;name\&quot;:\&quot;f1\&quot;,\&quot;type\&quot;:\&quot;long\&quot;, \&quot;default\&quot;: \&quot;100\&quot;}
&lt;p&gt;,&quot; +&lt;br/&gt;
+            &quot;&lt;/p&gt;
{\&quot;name\&quot;:\&quot;f2\&quot;,\&quot;type\&quot;: \&quot;int\&quot;}
&lt;p&gt;], \&quot;doc\&quot;: \&quot;\&quot;}&quot;,&lt;br/&gt;
+            &quot;&quot;)]&lt;br/&gt;
+        [TestCase(&quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;LongList\&quot;,&quot; +&lt;br/&gt;
+            &quot;\&quot;fields\&quot;:[&lt;/p&gt;
{\&quot;name\&quot;:\&quot;f1\&quot;,\&quot;type\&quot;:\&quot;long\&quot;, \&quot;default\&quot;: \&quot;100\&quot;}
&lt;p&gt;,&quot; +&lt;br/&gt;
+            &quot;&lt;/p&gt;
{\&quot;name\&quot;:\&quot;f2\&quot;,\&quot;type\&quot;: \&quot;int\&quot;}
&lt;p&gt;], \&quot;doc\&quot;: \&quot;this is a test\&quot;}&quot;,&lt;br/&gt;
+            &quot;this is a test&quot;)]&lt;br/&gt;
+        public void TestRecordDoc(string s, string expectedDoc)&lt;br/&gt;
+        &lt;/p&gt;
{
+            var rs = Schema.Parse(s) as RecordSchema;
+            Assert.IsNotNull(rs);
+            Assert.AreEqual(expectedDoc, rs.Documentation);
+        }
&lt;p&gt;+&lt;br/&gt;
         [TestCase(&quot;&lt;/p&gt;
{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;name\&quot;: \&quot;Test\&quot;, \&quot;symbols\&quot;: [\&quot;A\&quot;, \&quot;B\&quot;]}
&lt;p&gt;&quot;,&lt;br/&gt;
             new string[] &lt;/p&gt;
{ &quot;A&quot;, &quot;B&quot; }
&lt;p&gt;)]&lt;br/&gt;
         public void TestEnum(string s, string[] symbols)&lt;br/&gt;
@@ -214,6 +233,16 @@ public void TestEnum(string s, string[] symbols)&lt;br/&gt;
             testToString(sc);&lt;br/&gt;
         }&lt;/p&gt;

&lt;p&gt;+        [TestCase(&quot;&lt;/p&gt;
{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;name\&quot;: \&quot;Test\&quot;, \&quot;symbols\&quot;: [\&quot;A\&quot;, \&quot;B\&quot;]}
&lt;p&gt;&quot;, null)]&lt;br/&gt;
+        [TestCase(&quot;&lt;/p&gt;
{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;name\&quot;: \&quot;Test\&quot;, \&quot;symbols\&quot;: [\&quot;A\&quot;, \&quot;B\&quot;], \&quot;doc\&quot;: \&quot;\&quot;}
&lt;p&gt;&quot;, &quot;&quot;)]&lt;br/&gt;
+        [TestCase(&quot;&lt;/p&gt;
{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;name\&quot;: \&quot;Test\&quot;, \&quot;symbols\&quot;: [\&quot;A\&quot;, \&quot;B\&quot;], \&quot;doc\&quot;: \&quot;this is a test\&quot;}
&lt;p&gt;&quot;, &quot;this is a test&quot;)]&lt;br/&gt;
+        public void TestEnumDoc(string s, string expectedDoc)&lt;br/&gt;
+        &lt;/p&gt;
{
+            var es = Schema.Parse(s) as EnumSchema;
+            Assert.IsNotNull(es);
+            Assert.AreEqual(expectedDoc, es.Documentation);
+        }
&lt;p&gt;+&lt;br/&gt;
         [TestCase(&quot;&lt;/p&gt;
{\&quot;type\&quot;: \&quot;array\&quot;, \&quot;items\&quot;: \&quot;long\&quot;}
&lt;p&gt;&quot;, &quot;long&quot;)]&lt;br/&gt;
         public void TestArray(string s, string item)&lt;/p&gt;
         {
@@ -265,6 +294,16 @@ public void TestFixed(string s, int size)
             testToString(sc);
         }

&lt;p&gt;+        [TestCase(&quot;&lt;/p&gt;
{ \&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;name\&quot;: \&quot;Test\&quot;, \&quot;size\&quot;: 1}
&lt;p&gt;&quot;, null)]&lt;br/&gt;
+        [TestCase(&quot;&lt;/p&gt;
{ \&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;name\&quot;: \&quot;Test\&quot;, \&quot;size\&quot;: 1, \&quot;doc\&quot;: \&quot;\&quot;}
&lt;p&gt;&quot;, &quot;&quot;)]&lt;br/&gt;
+        [TestCase(&quot;&lt;/p&gt;
{ \&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;name\&quot;: \&quot;Test\&quot;, \&quot;size\&quot;: 1, \&quot;doc\&quot;: \&quot;this is a test\&quot;}
&lt;p&gt;&quot;, &quot;this is a test&quot;)]&lt;br/&gt;
+        public void TestFixedDoc(string s, string expectedDoc)&lt;br/&gt;
+        &lt;/p&gt;
{
+            var fs = Schema.Parse(s) as FixedSchema;
+            Assert.IsNotNull(fs);
+            Assert.AreEqual(expectedDoc, fs.Documentation);
+        }
&lt;p&gt;+&lt;br/&gt;
         &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;a&amp;quot;, &amp;quot;o.a.h&amp;quot;, Result = &amp;quot;o.a.h.a&amp;quot;)&amp;#93;&lt;/span&gt;&lt;br/&gt;
         public string testFullname(string s1, string s2)&lt;br/&gt;
         {&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16710147" author="jira-bot" created="Wed, 5 Dec 2018 14:52:46 +0000"  >&lt;p&gt;Commit 915cb4541fa0e7d3d96646947f449cbb4b75589a in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=blachniet&quot; class=&quot;user-hover&quot; rel=&quot;blachniet&quot;&gt;Brian Lachniet&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=915cb45&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=915cb45&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2155&quot; title=&quot;Generate documentation for C# classes and enums&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2155&quot;&gt;&lt;del&gt;AVRO-2155&lt;/del&gt;&lt;/a&gt;: Include documentation for named schemas in generated code (#296)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2155&quot; title=&quot;Generate documentation for C# classes and enums&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2155&quot;&gt;&lt;del&gt;AVRO-2155&lt;/del&gt;&lt;/a&gt;: Add `Documentation` property to `NamedSchema`&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2155&quot; title=&quot;Generate documentation for C# classes and enums&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2155&quot;&gt;&lt;del&gt;AVRO-2155&lt;/del&gt;&lt;/a&gt;: Add documentation to generated code&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16710148" author="jira-bot" created="Wed, 5 Dec 2018 14:52:47 +0000"  >&lt;p&gt;Commit 915cb4541fa0e7d3d96646947f449cbb4b75589a in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=blachniet&quot; class=&quot;user-hover&quot; rel=&quot;blachniet&quot;&gt;Brian Lachniet&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=915cb45&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=915cb45&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2155&quot; title=&quot;Generate documentation for C# classes and enums&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2155&quot;&gt;&lt;del&gt;AVRO-2155&lt;/del&gt;&lt;/a&gt;: Include documentation for named schemas in generated code (#296)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2155&quot; title=&quot;Generate documentation for C# classes and enums&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2155&quot;&gt;&lt;del&gt;AVRO-2155&lt;/del&gt;&lt;/a&gt;: Add `Documentation` property to `NamedSchema`&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2155&quot; title=&quot;Generate documentation for C# classes and enums&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2155&quot;&gt;&lt;del&gt;AVRO-2155&lt;/del&gt;&lt;/a&gt;: Add documentation to generated code&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16710149" author="jira-bot" created="Wed, 5 Dec 2018 14:52:49 +0000"  >&lt;p&gt;Commit 915cb4541fa0e7d3d96646947f449cbb4b75589a in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=blachniet&quot; class=&quot;user-hover&quot; rel=&quot;blachniet&quot;&gt;Brian Lachniet&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=915cb45&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=915cb45&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2155&quot; title=&quot;Generate documentation for C# classes and enums&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2155&quot;&gt;&lt;del&gt;AVRO-2155&lt;/del&gt;&lt;/a&gt;: Include documentation for named schemas in generated code (#296)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2155&quot; title=&quot;Generate documentation for C# classes and enums&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2155&quot;&gt;&lt;del&gt;AVRO-2155&lt;/del&gt;&lt;/a&gt;: Add `Documentation` property to `NamedSchema`&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2155&quot; title=&quot;Generate documentation for C# classes and enums&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2155&quot;&gt;&lt;del&gt;AVRO-2155&lt;/del&gt;&lt;/a&gt;: Add documentation to generated code&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 10 Mar 2018 18:32:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3qymf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>C# Codegen: Include documentation on generated code for named schemas (enum, fixed and record)</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2156] Allow custom namespace for C# generated code</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2156</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The namespace used in Avro schemas/protocols does not always map nicely to a standard C# namespace. Avrogen (the C# code generator) currently uses the Avro namespace as the C# namespace. I propose that we update the avrogen utility to allow the user to override the namespace used in the generated code via a command line parameter.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13143066">AVRO-2156</key>
            <summary>Allow custom namespace for C# generated code</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dkulp">Daniel Kulp</assignee>
                                    <reporter username="blachniet">Brian Lachniet</reporter>
                        <labels>
                    </labels>
                <created>Wed, 7 Mar 2018 01:43:27 +0000</created>
                <updated>Mon, 10 Dec 2018 18:49:26 +0000</updated>
                            <resolved>Wed, 5 Dec 2018 16:30:07 +0000</resolved>
                                    <version>1.8.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>csharp</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16394370" author="githubbot" created="Sun, 11 Mar 2018 00:13:14 +0000"  >&lt;p&gt;blachniet opened a new pull request #297: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2156&quot; title=&quot;Allow custom namespace for C# generated code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2156&quot;&gt;&lt;del&gt;AVRO-2156&lt;/del&gt;&lt;/a&gt;: Map Avro namespace to C# namespaces during code generation&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/297&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/297&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2156&quot; title=&quot;Allow custom namespace for C# generated code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2156&quot;&gt;&lt;del&gt;AVRO-2156&lt;/del&gt;&lt;/a&gt;(&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2156&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-2156&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;   Added new optional command line argument, `--namespace &amp;lt;my.avro.ns:my.csharp.ns&amp;gt;`.&lt;/p&gt;

&lt;p&gt;   Normally, `avrogen.exe` uses the namespaces defined in the schema or protocol as the namespace in the generated C# code. This default behavior has not changed as a part of this pull request. However, if the user wishes to replace the Avro namespace with a C#&lt;del&gt;friendly namespace in the generated code, they can provide the `&lt;/del&gt;-namespace` option. &lt;/p&gt;

&lt;p&gt;   For example, if this is our protocol:&lt;/p&gt;

&lt;p&gt;   ```&lt;br/&gt;
   // sample.avdl&lt;br/&gt;
   @namespace(&quot;org.example.sample&quot;)&lt;br/&gt;
   protocol MySampleProtocol &lt;/p&gt;
{
       fixed MD5(16);
   }
&lt;p&gt;   ```&lt;/p&gt;

&lt;p&gt;   `avrogen.exe -p sample.avdl output` would produce something like:&lt;/p&gt;

&lt;p&gt;   ```csharp&lt;br/&gt;
   // MD5.cs&lt;br/&gt;
   namespace org.example.sample&lt;/p&gt;
   {
       public partial class MD5 : SpecificFixed //...
   }
&lt;p&gt;   ``` &lt;/p&gt;

&lt;p&gt;   If the user wanted a more C#-friendly namespace in the generated code, the could run `avrogen.exe -p sample.avdl output --namespace &quot;org.example.sample:Sample.Models&quot;` to produce something like:&lt;/p&gt;


&lt;p&gt;   ```csharp&lt;br/&gt;
   // MD5.cs&lt;br/&gt;
   namespace Sample.Models&lt;/p&gt;
   {
       public partial class MD5 : SpecificFixed //...
   }
&lt;p&gt;   ``` &lt;/p&gt;

&lt;p&gt;   I am open to any suggestions, whether implementation details or command line interface. Thanks!&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16394371" author="blachniet" created="Sun, 11 Mar 2018 00:14:54 +0000"  >&lt;p&gt;Once again, I do not know the best &quot;Fix Version&quot; to target nor the best branch to target my PR on. Let me know if I picked wrong. Thanks!&lt;/p&gt;</comment>
                            <comment id="16710154" author="githubbot" created="Wed, 5 Dec 2018 14:54:04 +0000"  >&lt;p&gt;dkulp closed pull request #297: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2156&quot; title=&quot;Allow custom namespace for C# generated code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2156&quot;&gt;&lt;del&gt;AVRO-2156&lt;/del&gt;&lt;/a&gt;: Map Avro namespace to C# namespaces during code generation&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/297&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/297&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/csharp/src/apache/codegen/AvroGen.cs b/lang/csharp/src/apache/codegen/AvroGen.cs&lt;br/&gt;
index 033b8404b..465857f60 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/codegen/AvroGen.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/codegen/AvroGen.cs&lt;br/&gt;
@@ -25,25 +25,111 @@ class AvroGen&lt;br/&gt;
     {&lt;br/&gt;
         static void Main(string[] args)&lt;br/&gt;
         {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (args.Length != 3)&lt;br/&gt;
+            // Print usage if no arguments provided or help requested&lt;br/&gt;
+            if (args.Length == 0 || args&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; == &quot;&lt;del&gt;h&quot; || args&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; == &quot;&lt;/del&gt;-help&quot;)
             {
                 Usage();
                 return;
             }&lt;/li&gt;
	&lt;li&gt;if (args&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; == &quot;-p&quot;)&lt;/li&gt;
	&lt;li&gt;GenProtocol(args&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;, args&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;);&lt;/li&gt;
	&lt;li&gt;else if (args&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; == &quot;-s&quot;)&lt;/li&gt;
	&lt;li&gt;GenSchema(args&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;, args&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;);&lt;/li&gt;
	&lt;li&gt;else&lt;br/&gt;
+&lt;br/&gt;
+            // Parse command line arguments&lt;br/&gt;
+            bool? isProtocol = null;&lt;br/&gt;
+            string inputFile = null;&lt;br/&gt;
+            string outputDir = null;&lt;br/&gt;
+            var namespaceMapping = new Dictionary&amp;lt;string, string&amp;gt;();&lt;br/&gt;
+            for (int i = 0; i &amp;lt; args.Length; ++i)&lt;br/&gt;
+            {&lt;br/&gt;
+                if (args&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt; == &quot;-p&quot;)&lt;br/&gt;
+                
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+                    if (i + 1 &amp;gt;= args.Length)+                    {
+                        Console.WriteLine(&quot;Missing path to protocol file&quot;);
+                        Usage();
+                        return;
+                    }++                    isProtocol = true;+                    inputFile = args[++i];+                }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+                else if (args&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt; == &quot;-s&quot;)&lt;br/&gt;
+                &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+                    if (i + 1 &amp;gt;= args.Length)+                    {
+                        Console.WriteLine(&quot;Missing path to schema file&quot;);
+                        Usage();
+                        return;
+                    }++                    isProtocol = false;+                    inputFile = args[++i];+                }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+                else if (args&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt; == &quot;--namespace&quot;)&lt;br/&gt;
+                &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+                    if (i + 1 &amp;gt;= args.Length)+                    {
+                        Console.WriteLine(&quot;Missing namespace mapping&quot;);
+                        Usage();
+                        return;
+                    }++                    var parts = args[++i].Split(new char[] { &apos;:&apos; }, StringSplitOptions.RemoveEmptyEntries);+                    if (parts.Length != 2)+                    {
+                        Console.WriteLine(&quot;Malformed namespace mapping. Required format is \&quot;avro.namespace:csharp.namespace\&quot;&quot;);
+                        Usage();
+                        return;
+                    }++                    namespaceMapping[parts[0]] = parts[1];+                }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+                else if (outputDir == null)&lt;br/&gt;
+                &lt;/p&gt;
{
+                    outputDir = args[i];
+                }
&lt;p&gt;+                else&lt;br/&gt;
+                &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+                    Console.WriteLine(&amp;quot;Unexpected command line argument}&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
	&lt;li&gt;static void GenProtocol(string infile, string outdir)&lt;br/&gt;
+        static void GenProtocol(string infile, string outdir,&lt;br/&gt;
+            IEnumerable&amp;lt;KeyValuePair&amp;lt;string, string&amp;gt;&amp;gt; namespaceMapping)
         &lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {             try             {
@@ -53,6 +139,9 @@ static void GenProtocol(string infile, string outdir)
                 CodeGen codegen = new CodeGen();
                 codegen.AddProtocol(protocol);
 
+                foreach (var entry in namespaceMapping)
+                    codegen.NamespaceMapping[entry.Key] = entry.Value;
+
                 codegen.GenerateCode();
                 codegen.WriteTypes(outdir);
             }@@ -61,7 +150,8 @@ static void GenProtocol(string infile, string outdir)                 Console.WriteLine(&amp;quot;Exception occurred. &amp;quot; + ex.Message);             }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;         }&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;static void GenSchema(string infile, string outdir)&lt;br/&gt;
+        static void GenSchema(string infile, string outdir,&lt;br/&gt;
+            IEnumerable&amp;lt;KeyValuePair&amp;lt;string, string&amp;gt;&amp;gt; namespaceMapping)&lt;br/&gt;
         {&lt;br/&gt;
             try
             {
@@ -71,6 +161,9 @@ static void GenSchema(string infile, string outdir)
                 CodeGen codegen = new CodeGen();
                 codegen.AddSchema(schema);
 
+                foreach (var entry in namespaceMapping)
+                    codegen.NamespaceMapping[entry.Key] = entry.Value;
+
                 codegen.GenerateCode();
                 codegen.WriteTypes(outdir);
             }
&lt;p&gt;diff --git a/lang/csharp/src/apache/main/CodeGen/CodeGen.cs b/lang/csharp/src/apache/main/CodeGen/CodeGen.cs&lt;br/&gt;
index 7e70a02d5..294671dff 100644&lt;/p&gt;
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/csharp/src/apache/main/CodeGen/CodeGen.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/main/CodeGen/CodeGen.cs&lt;br/&gt;
@@ -44,6 +44,11 @@ public class CodeGen&lt;br/&gt;
         /// &amp;lt;/summary&amp;gt;&lt;br/&gt;
         public IList&amp;lt;Protocol&amp;gt; Protocols 
{ get; private set; }&lt;br/&gt;
 &lt;br/&gt;
+        /// &amp;lt;summary&amp;gt;&lt;br/&gt;
+        /// Mapping of Avro namespaces to C# namespaces&lt;br/&gt;
+        /// &amp;lt;/summary&amp;gt;&lt;br/&gt;
+        public IDictionary&amp;lt;string, string&amp;gt; NamespaceMapping { get; private set; }
&lt;p&gt;+&lt;br/&gt;
         /// &amp;lt;summary&amp;gt;&lt;br/&gt;
         /// List of generated namespaces&lt;br/&gt;
         /// &amp;lt;/summary&amp;gt;&lt;br/&gt;
@@ -56,6 +61,7 @@ public CodeGen()&lt;/p&gt;
         {
             this.Schemas = new List&amp;lt;Schema&amp;gt;();
             this.Protocols = new List&amp;lt;Protocol&amp;gt;();
+            this.NamespaceMapping = new Dictionary&amp;lt;string, string&amp;gt;();
         }&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         /// &amp;lt;summary&amp;gt;&lt;br/&gt;
@@ -90,7 +96,11 @@ protected virtual CodeNamespace addNamespace(string name)&lt;/p&gt;

&lt;p&gt;             if (!namespaceLookup.TryGetValue(name, out ns))&lt;/p&gt;
             {
-                ns = new CodeNamespace(CodeGenUtil.Instance.Mangle(name));
+                string csharpNamespace;
+                ns = NamespaceMapping.TryGetValue(name, out csharpNamespace)
+                    ? new CodeNamespace(csharpNamespace)
+                    : new CodeNamespace(CodeGenUtil.Instance.Mangle(name));
+
                 foreach (CodeNamespaceImport nci in CodeGenUtil.Instance.NamespaceImports)
                     ns.Imports.Add(nci);
 
diff --git a/lang/csharp/src/apache/test/CodGen/CodeGenTest.cs b/lang/csharp/src/apache/test/CodGen/CodeGenTest.cs
index c5428b31e..f1141dbb3 100644
--- a/lang/csharp/src/apache/test/CodGen/CodeGenTest.cs
+++ b/lang/csharp/src/apache/test/CodGen/CodeGenTest.cs
@@ -98,6 +98,43 @@ public static void TestCodeGen(string str, object[] result)
             }
&lt;p&gt;         }&lt;/p&gt;

&lt;p&gt;+        [TestCase(@&quot;&lt;/p&gt;
{
+&quot;&quot;type&quot;&quot;: &quot;&quot;fixed&quot;&quot;,
+&quot;&quot;namespace&quot;&quot;: &quot;&quot;com.base&quot;&quot;,
+&quot;&quot;name&quot;&quot;: &quot;&quot;MD5&quot;&quot;,
+&quot;&quot;size&quot;&quot;: 16
+}
&lt;p&gt;&quot;, null, null, &quot;com.base&quot;)]&lt;br/&gt;
+        [TestCase(@&quot;&lt;/p&gt;
{
+&quot;&quot;type&quot;&quot;: &quot;&quot;fixed&quot;&quot;,
+&quot;&quot;namespace&quot;&quot;: &quot;&quot;com.base&quot;&quot;,
+&quot;&quot;name&quot;&quot;: &quot;&quot;MD5&quot;&quot;,
+&quot;&quot;size&quot;&quot;: 16
+}
&lt;p&gt;&quot;, &quot;com.base&quot;, &quot;SchemaTest&quot;, &quot;SchemaTest&quot;)]&lt;br/&gt;
+        [TestCase(@&quot;&lt;/p&gt;
{
+&quot;&quot;type&quot;&quot;: &quot;&quot;fixed&quot;&quot;,
+&quot;&quot;namespace&quot;&quot;: &quot;&quot;com.base&quot;&quot;,
+&quot;&quot;name&quot;&quot;: &quot;&quot;MD5&quot;&quot;,
+&quot;&quot;size&quot;&quot;: 16
+}
&lt;p&gt;&quot;, &quot;miss&quot;, &quot;SchemaTest&quot;, &quot;com.base&quot;)]&lt;br/&gt;
+        public void TestCodeGenNamespaceMapping(string str, string avroNamespace, string csharpNamespace,&lt;br/&gt;
+            string expectedNamespace)&lt;br/&gt;
+        {&lt;br/&gt;
+            Schema schema = Schema.Parse(str);&lt;br/&gt;
+&lt;br/&gt;
+            var codegen = new CodeGen();&lt;br/&gt;
+            codegen.AddSchema(schema);&lt;br/&gt;
+&lt;br/&gt;
+            if (avroNamespace != null &amp;amp;&amp;amp; csharpNamespace != null)&lt;br/&gt;
+            &lt;/p&gt;
{
+                codegen.NamespaceMapping[avroNamespace] = csharpNamespace;
+            }
&lt;p&gt;+&lt;br/&gt;
+            var results = GenerateAssembly(codegen);&lt;br/&gt;
+            foreach(var type in results.CompiledAssembly.GetTypes())&lt;br/&gt;
+            &lt;/p&gt;
{
+                Assert.AreEqual(expectedNamespace, type.Namespace);
+            }
&lt;p&gt;+        }&lt;/p&gt;

&lt;p&gt;         private static CompilerResults GenerateSchema(Schema schema)&lt;br/&gt;
         {&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16710155" author="jira-bot" created="Wed, 5 Dec 2018 14:54:09 +0000"  >&lt;p&gt;Commit 602a2c5b5258d5e1f0f60f71506b16801cbdf156 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=blachniet&quot; class=&quot;user-hover&quot; rel=&quot;blachniet&quot;&gt;Brian Lachniet&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=602a2c5&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=602a2c5&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2156&quot; title=&quot;Allow custom namespace for C# generated code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2156&quot;&gt;&lt;del&gt;AVRO-2156&lt;/del&gt;&lt;/a&gt;: Map Avro namespace to C# namespaces during code generation&lt;/p&gt;</comment>
                            <comment id="16715353" author="jira-bot" created="Mon, 10 Dec 2018 18:49:26 +0000"  >&lt;p&gt;Commit 602a2c5b5258d5e1f0f60f71506b16801cbdf156 in avro&apos;s branch refs/heads/&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=blachniet&quot; class=&quot;user-hover&quot; rel=&quot;blachniet&quot;&gt;Brian Lachniet&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=602a2c5&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=602a2c5&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2156&quot; title=&quot;Allow custom namespace for C# generated code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2156&quot;&gt;&lt;del&gt;AVRO-2156&lt;/del&gt;&lt;/a&gt;: Map Avro namespace to C# namespaces during code generation&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 11 Mar 2018 00:13:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3qymn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>C#: Allow namespace replacements in generated code</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2157] IDL compiler won&apos;t accept the word &quot;schema&quot; in namespace-qualified type references</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2157</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The following IDL will not compile:&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@namespace(&lt;span class=&quot;code-quote&quot;&gt;&quot;org.avro.example.protocol&quot;&lt;/span&gt;)
protocol TwoByteSender {
  &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; schema &lt;span class=&quot;code-quote&quot;&gt;&quot;../schema/twobytes.avsc&quot;&lt;/span&gt;;

  record TwoByteReq {
    org.avro.example.schema.TwoBytes twobyte; 
  }

  void send(org.avro.example.schema.TwoBytes twobyte);
  void sendReq(TwoByteReq req);
}&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(The code below, &lt;b&gt;twobytes.avsc&lt;/b&gt;, compiles without issue, and is included for completeness.)&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
{
  &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;TwoBytes&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;org.avro.example.schema&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;size&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;2&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;fixed&quot;&lt;/span&gt;
}&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The error thrown by the compiler is:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;org.apache.avro.compiler.idl.ParseException: Encountered &quot; &quot;schema&quot; &quot;schema &quot;&quot; at line 34, column 14.
Was expecting one of:
&quot;array&quot; ...
&quot;boolean&quot; ...
&quot;double&quot; ...
&quot;enum&quot; ...
&quot;error&quot; ...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&#160;&lt;/p&gt;</description>
                <environment>&lt;p&gt;I have produced the error in Ubuntu 16.04, with Java 1.8.0_151, using both the avro-maven-plugin, as well as by modifying the test files in the apache/avro/lang/compiler test suite.&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;</environment>
        <key id="13143819">AVRO-2157</key>
            <summary>IDL compiler won&apos;t accept the word &quot;schema&quot; in namespace-qualified type references</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.svg">Trivial</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="maxenglander">Max Englander</assignee>
                                    <reporter username="maxenglander">Max Englander</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Mar 2018 06:18:47 +0000</created>
                <updated>Wed, 14 Mar 2018 16:45:08 +0000</updated>
                            <resolved>Wed, 14 Mar 2018 16:45:08 +0000</resolved>
                                    <version>1.8.1</version>
                    <version>1.8.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="16393309" author="maxenglander" created="Fri, 9 Mar 2018 18:12:36 +0000"  >&lt;p&gt;Not sure where&#160;the right place to paste this is, but here&apos;s my attempt to fix the issue:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/avro/pull/295&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/295&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="16398859" author="jira-bot" created="Wed, 14 Mar 2018 16:44:17 +0000"  >&lt;p&gt;Commit 5c270dad2a281f4e70fb8c8a657d93a0cc72b7a8 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=5c270da&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=5c270da&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Merge pull request #295 from psocratic/jira-avro-2157&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2157&quot; title=&quot;IDL compiler won&amp;#39;t accept the word &amp;quot;schema&amp;quot; in namespace-qualified type references&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2157&quot;&gt;&lt;del&gt;AVRO-2157&lt;/del&gt;&lt;/a&gt;: Permit &apos;schema&apos; in IDL namespaces.&lt;/p&gt;</comment>
                            <comment id="16398862" author="cutting" created="Wed, 14 Mar 2018 16:45:08 +0000"  >&lt;p&gt;I committed this.&#160; Thanks, Max!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 14 Mar 2018 16:44:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            44 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3r39z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2158] Modernize C# Documentation</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2158</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I&apos;d like to propose that we &quot;modernize&quot; the Avro C# documentation using &lt;a href=&quot;https://dotnet.github.io/docfx/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;DocFX&lt;/a&gt;. This is the closest thing that C# has to Javadoc. I threw together a quick example of what this would look like here: &lt;a href=&quot;https://blachniet.github.io/avro-csharp-docs/api/Avro.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://blachniet.github.io/avro-csharp-docs/api/Avro.html&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/blachniet/avro-csharp-docs&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;GitHub Repo Containing Site Source&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/blachniet/avro/tree/docs/lang/csharp&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Branch from which site was generated - see the /lang/csharp/docs folder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;DocFX uses the triple-slash documentation in the C# code to generate API documentation. It also allows for conceptual documentation (getting started guides,&#160;tutorials, articles, etc.).&lt;/p&gt;

&lt;p&gt;If there is no opposition, I will pull together a legitimate solution (what I&apos;ve got right now was thrown together in a few minutes).&lt;/p&gt;</description>
                <environment></environment>
        <key id="13144119">AVRO-2158</key>
            <summary>Modernize C# Documentation</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="blachniet">Brian Lachniet</reporter>
                        <labels>
                    </labels>
                <created>Sun, 11 Mar 2018 01:15:22 +0000</created>
                <updated>Sun, 11 Mar 2018 01:15:22 +0000</updated>
                                                                            <component>csharp</component>
                    <component>doc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            45 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3r54f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
