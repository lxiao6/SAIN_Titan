<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:13:55 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2010-5-12+AND+created+%3C%3D+2010-5-19+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="6" total="6"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-540] make GenericArray reversible</title>
                <link>https://issues.apache.org/jira/browse/AVRO-540</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;There are a number of RPC methods in Cassandra that return ordered results (ordered by pluggable comparators, avro&apos;s ordering won&apos;t work), and each has a means of specifying that the order be reversed. The way this is currently done is to use a List to process the results, Collections.reverse() to reorder if needed, and then copy them to a GenericArray to be returned. It would be nice to avoid this intermediary step.&lt;/p&gt;

&lt;p&gt;The patch that follows adds a reverse() method to GenericData.Array that simply reverses the order of the elements in the underlying Object[].&lt;/p&gt;</description>
                <environment></environment>
        <key id="12464467">AVRO-540</key>
            <summary>make GenericArray reversible</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="urandom">Eric Evans</assignee>
                                    <reporter username="urandom">Eric Evans</reporter>
                        <labels>
                    </labels>
                <created>Thu, 13 May 2010 21:01:47 +0000</created>
                <updated>Wed, 8 Sep 2010 21:07:47 +0000</updated>
                            <resolved>Thu, 13 May 2010 21:56:53 +0000</resolved>
                                    <version>1.3.2</version>
                                    <fixVersion>1.4.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12867261" author="cutting" created="Thu, 13 May 2010 21:34:23 +0000"  >&lt;p&gt;Looks good.  A line of javadoc would be great, since this is a non-overridden public method.  (The rest of the methods in that class need @Override.  Mea culpa.)&lt;/p&gt;

&lt;p&gt;For my edification: are Cassandra&apos;s comparators not written in terms that can be translated to an Avro schema?  If they were, then you should be able to read the data using an altered schema that gives you the ordering you want.  The intent of Avro&apos;s comparators is not that you&apos;re stuck with the ordering specified when the data is written, but rather that you can specify alternate ordering&apos;s at read time.  But perhaps that&apos;s not possible here.&lt;/p&gt;</comment>
                            <comment id="12867265" author="cutting" created="Thu, 13 May 2010 21:46:02 +0000"  >&lt;p&gt;Nevermind.  It is overriding a method that has javadoc!  +1 as-is.&lt;/p&gt;</comment>
                            <comment id="12867267" author="cutting" created="Thu, 13 May 2010 21:56:53 +0000"  >&lt;p&gt;I just committed this.  Thanks, Eric!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12444424" name="0001-AVRO-540.-reverse-method-for-generic-arrays.patch" size="3001" author="urandom" created="Thu, 13 May 2010 21:03:05 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 13 May 2010 21:34:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94851</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 37 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e0yf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79917</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-541] Java: TestDataFileConcat sometimes fails</title>
                <link>https://issues.apache.org/jira/browse/AVRO-541</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;TestDataFileConcat intermittently fails with:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Testcase: testConcateateFiles[5] took 0.032 sec
        Caused an ERROR
java.io.IOException: Block read partially, the data may be corrupt
org.apache.avro.AvroRuntimeException: java.io.IOException: Block read partially, the data may be corrupt
        at org.apache.avro.file.DataFileStream.hasNext(DataFileStream.java:173)
        at org.apache.avro.file.DataFileStream.next(DataFileStream.java:193)
        at org.apache.avro.TestDataFileConcat.testConcateateFiles(TestDataFileConcat.java:141)
Caused by: java.io.IOException: Block read partially, the data may be corrupt
        at org.apache.avro.file.DataFileStream.hasNext(DataFileStream.java:157)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12464479">AVRO-541</key>
            <summary>Java: TestDataFileConcat sometimes fails</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="scott_carey">Scott Carey</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Thu, 13 May 2010 22:42:19 +0000</created>
                <updated>Wed, 8 Sep 2010 21:07:51 +0000</updated>
                            <resolved>Tue, 24 Aug 2010 21:24:10 +0000</resolved>
                                                    <fixVersion>1.4.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12896119" author="cutting" created="Fri, 6 Aug 2010 18:48:52 +0000"  >&lt;p&gt;Here&apos;s a patch (not for commit) that forces this to fail every time, deterministically, by hardwiring the random seed to a value that triggers failures.&lt;/p&gt;

&lt;p&gt;Some observations:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;failures appear to happen roughly 1/16 times&lt;/li&gt;
	&lt;li&gt;failures observed were always when appending a compressed file to an uncompressed&lt;/li&gt;
	&lt;li&gt;in this particular failure, the final bytes of an appended block are incorrect, just before the sync marker.  These bytes should be &apos;355 205 335 356 236   r&apos; but are instead &apos;w   y   b   p   d   D 215 252 270 335 324 335&apos;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I found this by looking for the value that fails the unit test:&lt;/p&gt;

&lt;p&gt;expected:&amp;lt;&lt;/p&gt;
{&quot;stringField&quot;: &quot;dwvpxfdknqocdbppkpjfkmkmppcowqcmw&quot;, &quot;longField&quot;: -4115970600535328707}
&lt;p&gt;&amp;gt; but was:&amp;lt;&lt;/p&gt;
{&quot;stringField&quot;: &quot;dwvpxfdknqocdbppkpjfkmkmppcowqcmw&quot;, &quot;longField&quot;: -125568963}
&lt;p&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;One can scan the file for &quot;dwv...&quot; to find where this should be.  Fortunately the bug is in an uncompressed file, build/test/test-null-A.avro.  To find what the bytes for &quot;longField&quot; should be, one can look for &quot;dwv...&quot; in build/test/test-null-A.avro.  Note that the sync marker, unique per file, is found following the null byte following the schema text at the head of the file.&lt;/p&gt;

&lt;p&gt;So it appears that, for some reason, the uncompressed data buffer that&apos;s appended in this is both too long and contains some incorrect data at its end.  I have no idea yet why.&lt;/p&gt;

&lt;p&gt;Scott, as the author of much of this, do you have any idea?&lt;/p&gt;</comment>
                            <comment id="12896387" author="scott_carey" created="Sun, 8 Aug 2010 17:54:03 +0000"  >&lt;p&gt;Thanks for getting it this far Doug, I&apos;ll dig into it.&lt;/p&gt;

&lt;p&gt;If the failure is always when appending compressed to uncompressed, then either the extra data comes from when the block was compressed, or is a flaw in handling buffers when we are decompressing.  &lt;/p&gt;
</comment>
                            <comment id="12896944" author="scott_carey" created="Tue, 10 Aug 2010 16:55:11 +0000"  >&lt;p&gt;OK, this one is getting interesting.  I wish it wasn&apos;t so interesting...&lt;/p&gt;

&lt;p&gt;So, here are some perplexing details noticed while stepping through in the debugger:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Concatenate from gzip-6 &amp;gt;&amp;gt; null uncompresses the gzip blocks and writes uncompressed blocks.  This is where we are seeing the bug.&lt;/li&gt;
	&lt;li&gt;Take the exact same gzip-6 file, and concatenate it to another gzip&apos;ed file and tell it to force compression, causes the same code to execute on the front side as expected:  uncompress the blocks.&lt;/li&gt;
	&lt;li&gt;In the first case above, the data sometimes comes out of a block corrupted.  The first &apos;chunk&apos; from java.util.zip.Inflater is good, then it is junk after that.  This junk is always at the end of our block as the first chunk from Inflater is slightly smaller than our block size.&lt;/li&gt;
	&lt;li&gt;In the second case, the data does not come out of the block corrupted!  That is, sometimes Inflater.java uncompresses the same block fine, and sometimes it does not.&lt;/li&gt;
	&lt;li&gt;If you change the avro file block size (syncInterval) you will get different results.  A different block size will cause &lt;em&gt;different&lt;/em&gt; blocks of the file to be corrupt, or none of them corrupt.  So it seems that the random seed&apos;s influence on reproducing the bug it is not caused by a data block&apos;s data contents, but its data size in relation to the block size.&lt;/li&gt;
	&lt;li&gt;If you change the schema from (string, long) to (long, string) you get different errors &amp;#8211; mostly hard exceptions rather than validation errors.&lt;/li&gt;
	&lt;li&gt;The issue always corresponds with the InflaterInputStream not returning &apos;-1&apos; at the end of stream but throwing an apparently spurious exception (because the same data file can sometimes be uncompressed successfully).&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;The good news:&lt;br/&gt;
When you comment out the JUnit assertEquals(), the test still fails because Avro detects that the block is corrupted, or some other error occurs.  So most likely any user running into this in the real world would not have silent data corruption.&lt;/p&gt;

&lt;p&gt;I currently use this feature quite a bit, but only concatenating from gzip to gzip without uncompressing the block (I can concatenate faster than the disks can handle this way &amp;#8211; from thousands of smaller files into larger ones).&lt;/p&gt;

&lt;p&gt;I should have more time to look into this later today.  Some next steps:&lt;br/&gt;
Produce a reduced test case where decompression fails, side by side with one where it works on the same file.  Hopefully this will either help pinpoint a bug in our use of InflaterInputStream or in Inflater itself.&lt;br/&gt;
Possible work-arounds and code cleanup:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Use Inflater directly instead of InflaterInputStream to reduce the layers between gzip compression and the JNI code in Inflater.java.&lt;/li&gt;
	&lt;li&gt;Refactor DataFileStream and DataFileWriter to use the same codepath for block decompression.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12897563" author="scott_carey" created="Thu, 12 Aug 2010 03:47:58 +0000"  >&lt;p&gt;This patch addresses the issue here.&lt;/p&gt;

&lt;p&gt;Furthermore, it cleans up and refactors DataFileStream and DataFileWriter a little bit, encapsulating block write, decode, and encode work in DataFileStream.DataBlock for consistency.&lt;/p&gt;

&lt;p&gt;The bug here was caused by a quirk in how Inflater.java works.   This quirk ONLY affects deflate with &apos;nowrap&apos; mode.  Simply changing nowrap to false stops this bug, but is not up to spec.&lt;/p&gt;

&lt;p&gt;The simplest work-around was to use InflaterOutputStream instead of InflaterInputStream.  This also allows for sharing more code between compress() and decompress().&lt;/p&gt;

&lt;p&gt;The OutputStream variations avoid the complexity of having to deal with detecting the end of the stream that happens with the read() methods of the OutputStream interface, making it all much simpler, both in our code and in the internals of InflaterOutputStream and DeflaterOutputStream compared to the InputStream variants.   Its just easier to &apos;push&apos; to the Inflate and Deflate API than to pull.&lt;/p&gt;

&lt;p&gt;For some information on the sorts of things that were happening, see this Java bug: &lt;br/&gt;
&lt;a href=&quot;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4795299&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4795299&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The work-arounds there do not work well for a case where the end of the array is not guaranteed to be the end of the stream, which it is not when abstracted through a ByteBuffer for input in decompress().&lt;/p&gt;</comment>
                            <comment id="12897566" author="scott_carey" created="Thu, 12 Aug 2010 03:54:48 +0000"  >&lt;p&gt;Additonally, the last patch has a more robust test to expose these issues &amp;#8211; looping through the work 50 times with different buffer sizes (TestDataFileConcat).    I have tested this patch with the unit test set to run on test.count = 300 with the syncInterval at every integer between 100 and 3099 inclusive successfully.&lt;/p&gt;

&lt;p&gt;Interop tests for files pass between Java and Python. &lt;/p&gt;</comment>
                            <comment id="12897901" author="cutting" created="Thu, 12 Aug 2010 19:16:47 +0000"  >&lt;p&gt;Thanks for fixing this!  Overall the patch looks good.  A few nits:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;should the random seed still be a constant, or should we switch back to currentTimeMillis()?&lt;/li&gt;
	&lt;li&gt;checkstyle complains about an empty statement at line 120 of DeflateCodec.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I switched back to a random seed and ran the test 50+ times without a failure.&lt;/p&gt;</comment>
                            <comment id="12900534" author="cutting" created="Fri, 20 Aug 2010 00:24:23 +0000"  >&lt;p&gt;Scott, if I don&apos;t hear otherwise, I&apos;ll change the test back to use a random seed, fix the checkstyle warning and commit this.&lt;/p&gt;</comment>
                            <comment id="12900550" author="scott_carey" created="Fri, 20 Aug 2010 01:24:42 +0000"  >&lt;p&gt;Sounds good.  I will be offline and unable to get to this until Monday 8/23.  I can do those changes and commit it then if you have not gotten to it.&lt;/p&gt;</comment>
                            <comment id="12901633" author="scott_carey" created="Mon, 23 Aug 2010 22:28:46 +0000"  >&lt;p&gt;Updated patch fixing checkstyle issue and changing the data file concatenation test to use the current time as the random seed.  &lt;br/&gt;
I will commit this tomorrow afternoon if there are no objections.&lt;/p&gt;</comment>
                            <comment id="12901658" author="cutting" created="Mon, 23 Aug 2010 23:07:04 +0000"  >&lt;p&gt;+1 looks good to me!&lt;/p&gt;</comment>
                            <comment id="12902079" author="cutting" created="Tue, 24 Aug 2010 21:24:10 +0000"  >&lt;p&gt;I just committed this.  Thanks, Scott!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12452871" name="AVRO-541.patch" size="16778" author="scott_carey" created="Mon, 23 Aug 2010 22:28:46 +0000"/>
                            <attachment id="12451855" name="AVRO-541.patch" size="17083" author="scott_carey" created="Thu, 12 Aug 2010 03:47:58 +0000"/>
                            <attachment id="12451451" name="AVRO-541.patch" size="1721" author="cutting" created="Fri, 6 Aug 2010 18:48:52 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 8 Aug 2010 17:54:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94852</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 22 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e0yn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79918</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-542] NPE in ReflectData </title>
                <link>https://issues.apache.org/jira/browse/AVRO-542</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;On line 253 of ReflectData.java the package is retrieved with:&lt;/p&gt;

&lt;p&gt;String space = c.getPackage().getName();&lt;/p&gt;

&lt;p&gt;getPackage is documented to be able to return null, and in practice does with generated classes and in certain child classloader scenarios. A safer alternative would be to derive the package by parsing the string returned from the class&apos;s name:&lt;/p&gt;

&lt;p&gt;String space = c.getName().substring(0, name.lastIndexOf(&apos;.&apos;); &lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</description>
                <environment>&lt;p&gt;Java&lt;/p&gt;</environment>
        <key id="12464547">AVRO-542</key>
            <summary>NPE in ReflectData </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="dbritsch">Douglas Britsch</reporter>
                        <labels>
                    </labels>
                <created>Fri, 14 May 2010 18:39:41 +0000</created>
                <updated>Wed, 25 Aug 2010 19:01:46 +0000</updated>
                            <resolved>Fri, 14 May 2010 19:04:11 +0000</resolved>
                                    <version>1.3.2</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12867635" author="cutting" created="Fri, 14 May 2010 18:59:23 +0000"  >&lt;p&gt;This looks like a duplicate of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-86&quot; title=&quot;NullPointerException when using reflection to create a schema for a class without a package.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-86&quot;&gt;&lt;del&gt;AVRO-86&lt;/del&gt;&lt;/a&gt;, which never got applied since it lacked a test case and we somehow lost track of it.  Maybe we should resolve this issue as a duplicate and set the priority and fix-version of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-86&quot; title=&quot;NullPointerException when using reflection to create a schema for a class without a package.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-86&quot;&gt;&lt;del&gt;AVRO-86&lt;/del&gt;&lt;/a&gt; to make it a blocker for 1.4.0 so that we make sure it&apos;s fixed before the next release?  Does that sound like reasonable plan?  Maybe I can even find some time this afternoon to put together a test case...&lt;/p&gt;</comment>
                            <comment id="12867638" author="dbritsch" created="Fri, 14 May 2010 19:04:11 +0000"  >&lt;p&gt;Seems like a reasonable approach to me. Sorry for the dupe.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 14 May 2010 18:59:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94853</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 37 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e0yv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79919</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-86&quot; title=&quot;NullPointerException when using reflection to create a schema for a class without a package.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-86&quot;&gt;&lt;strike&gt;AVRO-86&lt;/strike&gt;&lt;/a&gt;</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-543] ruby: schema comparison is hella slow</title>
                <link>https://issues.apache.org/jira/browse/AVRO-543</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;schema comparison is very, very slow causing large latencies on handshake.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12464582">AVRO-543</key>
            <summary>ruby: schema comparison is hella slow</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jmhodges">Jeff Hodges</assignee>
                                    <reporter username="jmhodges">Jeff Hodges</reporter>
                        <labels>
                    </labels>
                <created>Sat, 15 May 2010 04:10:13 +0000</created>
                <updated>Mon, 14 Jun 2010 01:37:06 +0000</updated>
                            <resolved>Wed, 19 May 2010 22:31:00 +0000</resolved>
                                    <version>1.3.2</version>
                                    <fixVersion>1.3.3</fixVersion>
                                    <component>ruby</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12867841" author="jmhodges" created="Sat, 15 May 2010 08:51:37 +0000"  >&lt;p&gt;Removes the not-good pattern of Yajl.load(schema.to_s) calls, and, more importantly, at handshake, it uses the attributes on the schema classes instead of the to_hash methods.&lt;/p&gt;</comment>
                            <comment id="12867847" author="jmhodges" created="Sat, 15 May 2010 10:09:00 +0000"  >&lt;p&gt;I like this clean up even more.&lt;/p&gt;</comment>
                            <comment id="12869384" author="jmhodges" created="Wed, 19 May 2010 22:31:00 +0000"  >&lt;p&gt;Committed as r946466.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12444574" name="AVRO-543-2.patch" size="8394" author="jmhodges" created="Sat, 15 May 2010 10:09:00 +0000"/>
                            <attachment id="12444572" name="AVRO-543.patch" size="5896" author="jmhodges" created="Sat, 15 May 2010 08:51:37 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94854</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 36 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e0z3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79920</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-544] Allow the HttpServer to serve forever without a call to Thread.sleep()</title>
                <link>https://issues.apache.org/jira/browse/AVRO-544</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;One way would be to expose the join() method on the HttpServer: &lt;a href=&quot;http://jetty.codehaus.org/jetty/jetty-6/apidocs/org/mortbay/jetty/Server.html#join%28%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jetty.codehaus.org/jetty/jetty-6/apidocs/org/mortbay/jetty/Server.html#join%28%29&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12464749">AVRO-544</key>
            <summary>Allow the HttpServer to serve forever without a call to Thread.sleep()</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hammer">Jeff Hammerbacher</assignee>
                                    <reporter username="hammer">Jeff Hammerbacher</reporter>
                        <labels>
                    </labels>
                <created>Tue, 18 May 2010 02:32:18 +0000</created>
                <updated>Wed, 8 Sep 2010 21:07:51 +0000</updated>
                            <resolved>Mon, 19 Jul 2010 22:11:00 +0000</resolved>
                                                    <fixVersion>1.4.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12884988" author="hammer" created="Sun, 4 Jul 2010 01:54:51 +0000"  >&lt;p&gt;Hey Patrick,&lt;/p&gt;

&lt;p&gt;Thanks for the idea. I did the dead-simplest exposing of &lt;tt&gt;join()&lt;/tt&gt; and it works for me. Now I can do things like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;    HttpServer server = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HttpServer(r, 9090);
    server.join();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;instead of:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;    HttpServer server = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HttpServer(r, 9090);
    &lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.sleep(10000);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which is sane. I could be naive in how I expose join(), however, so if someone more familiar with Java servers wants to take a look, please do.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Jeff&lt;/p&gt;</comment>
                            <comment id="12885002" author="scott_carey" created="Sun, 4 Jul 2010 05:44:24 +0000"  >&lt;p&gt;+1 It looks sane to expose Jetty&apos;s join() method.  Since this is public we probably want a line of javadoc along the lines of &quot;Will block until the server has stopped or the thread is interrupted.&quot;&lt;/p&gt;

&lt;p&gt; If anything more complicated is needed down the road (for example, a timeout while waiting or callback when it finishes) we can add that later.&lt;/p&gt;</comment>
                            <comment id="12885003" author="hammer" created="Sun, 4 Jul 2010 06:18:11 +0000"  >&lt;p&gt;Adding a Javadoc per Scott&apos;s feedback&lt;/p&gt;</comment>
                            <comment id="12885045" author="kkrugler" created="Sun, 4 Jul 2010 15:45:43 +0000"  >&lt;p&gt;In all my code where I need to start up a Jetty server, I do the start() and join() together, as in:&lt;/p&gt;

&lt;p&gt;    public void start() throws Exception &lt;/p&gt;
{
        _server.start();
        _server.join();
    }

&lt;p&gt;What&apos;s the rational for splitting these up? If you need to have explicit control over starting/stopping the server, then I would have a start() method as per above, otherwise just put both into the constructor.&lt;/p&gt;
</comment>
                            <comment id="12885397" author="hammer" created="Tue, 6 Jul 2010 03:11:51 +0000"  >&lt;p&gt;For another point of reference, rather than calling &lt;tt&gt;start()&lt;/tt&gt; in the ctor, &lt;tt&gt;org.apache.hadoop.http.HttpServer&lt;/tt&gt; exposes &lt;tt&gt;start()&lt;/tt&gt;, &lt;tt&gt;stop()&lt;/tt&gt;, and &lt;tt&gt;join()&lt;/tt&gt; as public methods.&lt;/p&gt;

&lt;p&gt;I think I like the Hadoop way best: pull &lt;tt&gt;start()&lt;/tt&gt; out of the ctor and make it a public method. That means existing client code needs to change to call &lt;tt&gt;start()&lt;/tt&gt; after the ctor, but I think it&apos;s worth it.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="12885405" author="kkrugler" created="Tue, 6 Jul 2010 03:37:12 +0000"  >&lt;p&gt;If you&apos;re requiring a &lt;tt&gt;start()&lt;/tt&gt; method call (which I like), then I&apos;m still curious why you think having &lt;tt&gt;join()&lt;/tt&gt; is important.&lt;/p&gt;</comment>
                            <comment id="12885694" author="scott_carey" created="Tue, 6 Jul 2010 21:27:40 +0000"  >&lt;p&gt;+1 on &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-544&quot; title=&quot;Allow the HttpServer to serve forever without a call to Thread.sleep()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-544&quot;&gt;&lt;del&gt;AVRO-544&lt;/del&gt;&lt;/a&gt;-2.patch&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What&apos;s the rational for splitting these up? If you need to have explicit control over starting/stopping the server, then I would have a start() method as per above, otherwise just put both into the constructor.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;start() should not block.  The constructor should most definitely not block.  If a user wants to block, there is join(), they should not be forced to block and burn up a thread.&lt;/p&gt;

&lt;p&gt;Use cases I&apos;ve had where I don&apos;t want to block are numerous.&lt;/p&gt;

&lt;p&gt;Here is an example, two servers with different ports / configurations plus a thread pool with scheduled tasks for custom business logic:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;MyCustomExecutorService pool = ...
HttpServer server1 = ...
HttpServer server2 = ...

pool.submitWithFixedDelay(someTask);
server1.start();
server2.start();

&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; shutdown = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt;(!shutdown) {
  shutdown = MyCustomShutdownListener.awaitShutdown();
}
server2.stop();
server1.stop();
pool.shutdownNow();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, it is generally better to explicitly start asynchronous activities after construction and configuration of their representative entities &amp;#8211; there are many use cases where construction and starting should be separated.&lt;/p&gt;
</comment>
                            <comment id="12885732" author="scott_carey" created="Tue, 6 Jul 2010 23:26:46 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think I like the Hadoop way best: pull start() out of the ctor and make it a public method. That means existing client code needs to change to call start() after the ctor, but I think it&apos;s worth it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1  Oops, I didn&apos;t interpret the whole thread here properly the first time through.  A new patch that did this like Hadoop does would be better than the current one IMO.&lt;/p&gt;

&lt;p&gt;I think we should probably avoid doing anything other than prep and configuration in the constructor and allow users to control when the server is started.  For example it is often important to only open your ports for requests after some prep-work is done, and it is often useful to construct the object at a different time or place from when you start.&lt;/p&gt;

&lt;p&gt;Exposing start(), stop() and join() like Hadoop is the way to go &amp;#8211; it lets users be maximally flexible.  There is a reason why the Jetty API has it like that.&lt;/p&gt;

&lt;p&gt;We can consider a convenience method that does both start() and join() in one go (perhaps &apos;run()&apos;?) but that is trivial and some might call it API clutter.  It saves one line of trivial code, so I&apos;m a little dubious of the value.  &lt;br/&gt;
Lets finish this JIRA and discuss that in another JIRA.  Ken, if its important to you to avoid typing both start() and join(), please open a different JIRA for that.&lt;/p&gt;</comment>
                            <comment id="12885739" author="kkrugler" created="Tue, 6 Jul 2010 23:41:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;Ken, if its important to you to avoid typing both start() and join(), please open a different JIRA for that.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, I was just curious about having a separate &lt;tt&gt;start()&lt;/tt&gt; versus &lt;tt&gt;join()&lt;/tt&gt;, as I hadn&apos;t run into that use case.&lt;/p&gt;</comment>
                            <comment id="12885864" author="hammer" created="Wed, 7 Jul 2010 07:25:48 +0000"  >&lt;p&gt;Okay, here&apos;s a patch that factors start() out of the ctor as well, and changes all of the users of the ctor as well. Note that exposing start() should allow us to make TestStatsPluginAndServlet.java less hacky (e.g. only start one server), but I&apos;ll leave that for those who know Java better than me.&lt;/p&gt;

&lt;p&gt;Also, I note that DatagramServer and SocketServer both implement the Server interface, so they should probably override start() as well. Given that they are deprecated, and they don&apos;t currently use the @Override annotation on close() either, I didn&apos;t bother to change them.&lt;/p&gt;

&lt;p&gt;Lastly, why do we use close()? Jetty uses stop(), and that seems like the logical thing for Avro servers to implement as well.&lt;/p&gt;</comment>
                            <comment id="12885865" author="hammer" created="Wed, 7 Jul 2010 07:26:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;Lastly, why do we use close()? Jetty uses stop(), and that seems like the logical thing for Avro servers to implement as well.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;To clarify: I am only talking about choice of name for the function.&lt;/p&gt;</comment>
                            <comment id="12885980" author="kkrugler" created="Wed, 7 Jul 2010 16:34:26 +0000"  >&lt;p&gt;I agree that &lt;tt&gt;stop()&lt;/tt&gt; is the better name.&lt;/p&gt;</comment>
                            <comment id="12886024" author="hammer" created="Wed, 7 Jul 2010 18:41:52 +0000"  >&lt;p&gt;Ken: I&apos;ve created a new issue for renaming close() to stop() so that this issue will not block&lt;/p&gt;</comment>
                            <comment id="12886156" author="philip" created="Wed, 7 Jul 2010 23:52:02 +0000"  >&lt;p&gt;Took a look via reviewboard:&lt;/p&gt;

&lt;p&gt;The code, besides the catch (Exception e), looks fine.&lt;/p&gt;

&lt;p&gt;I do worry that this is a massively backwards-incompatible change.  Anyone who&apos;s set up an Avro RPC server using HttpServer now needs to add a line to their code.  I can only think of hacky ways around that.&lt;/p&gt;


&lt;p&gt;trunk/lang/java/src/java/org/apache/avro/ipc/HttpServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/281/#comment1391&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/281/#comment1391&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   I would add to the java doc that this throws AvroRuntimeException.&lt;/p&gt;



&lt;p&gt;trunk/lang/java/src/java/org/apache/avro/ipc/HttpServer.java&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://review.hbase.org/r/281/#comment1392&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/281/#comment1392&lt;/a&gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;   catch (Exception e) is poor form, typically.  It&apos;s usually better to explicitly catch the type of exception that Jetty&apos;s start throws.&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Philip&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12886179" author="hammer" created="Thu, 8 Jul 2010 01:39:03 +0000"  >&lt;p&gt;Added a @throws comment to the Javadoc for start(). Any other comments? I think this may be ready to commit.&lt;/p&gt;</comment>
                            <comment id="12886187" author="philip" created="Thu, 8 Jul 2010 01:49:12 +0000"  >&lt;p&gt;From reviewboard:&lt;/p&gt;

&lt;p&gt;Jeff Hammerbacher:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;gt; On 2010-07-07 16:51:01, Philip Zeyliger wrote:&lt;br/&gt;
&amp;gt; &amp;gt; The code, besides the catch (Exception e), looks fine.&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt; I do worry that this is a massively backwards-incompatible change.  Anyone who&apos;s set up an Avro RPC server using HttpServer now needs to add a line to their code.  I can only think of hacky ways around that.&lt;/p&gt;

&lt;p&gt;Well, considering that Avro RPC is under active development, I think now is the time to make massively breaking changes. The discussion on this ticket seems to indicate that the changes are for the better, so I vote for making them now while we still can.&lt;/p&gt;

&lt;p&gt;To that end, see also &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-594&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-594&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Scott Carey:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ReviewBoard is awesome.  I&apos;ll need to figure out how to use it sometime.&lt;/p&gt;

&lt;p&gt;Comments inline:&lt;br/&gt;
On Jul 7, 2010, at 4:51 PM, Philip Zeyliger wrote:&lt;/p&gt;

&lt;p&gt;&amp;gt;&lt;br/&gt;
&amp;gt; -----------------------------------------------------------&lt;br/&gt;
&amp;gt; This is an automatically generated e-mail. To reply, visit:&lt;br/&gt;
&amp;gt; &lt;a href=&quot;http://review.hbase.org/r/281/#review320&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/281/#review320&lt;/a&gt;&lt;br/&gt;
&amp;gt; -----------------------------------------------------------&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; The code, besides the catch (Exception e), looks fine.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; I do worry that this is a massively backwards-incompatible change.  Anyone who&apos;s set up an Avro RPC server using HttpServer now needs to add a line to their code.  I can only think of hacky ways around that.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
Yeah, that is a concern.  This is definitely an improvement though.&lt;/p&gt;

&lt;p&gt;&amp;gt;&lt;br/&gt;
&amp;gt; trunk/lang/java/src/java/org/apache/avro/ipc/HttpServer.java&lt;br/&gt;
&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/281/#comment1391&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/281/#comment1391&lt;/a&gt;&amp;gt;&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;    I would add to the java doc that this throws AvroRuntimeException.&lt;br/&gt;
&amp;gt;&lt;/p&gt;

&lt;p&gt;&quot;@throws AvroRuntimeException if the underlying Jetty server throws any exception while starting.&quot; ?&lt;/p&gt;

&lt;p&gt;&amp;gt;&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; trunk/lang/java/src/java/org/apache/avro/ipc/HttpServer.java&lt;br/&gt;
&amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/281/#comment1392&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/281/#comment1392&lt;/a&gt;&amp;gt;&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt;    catch (Exception e) is poor form, typically.  It&apos;s usually better to explicitly catch the type of exception that Jetty&apos;s start throws.&lt;br/&gt;
&amp;gt;&lt;/p&gt;

&lt;p&gt;True, but Jetty&apos;s start() signature is:&lt;/p&gt;

&lt;p&gt;void org.mortbay.component.AbstractLifeCycle.start() throws Exception&lt;/p&gt;

&lt;p&gt;So my only caution with this patch is the backwards-incompatible change.  Luckily it is not subtle.  I&apos;m fine with the change but am not a major user of HttpServer.  This does likely imply a change for other Servers down the road too.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&amp;gt; On 2010-07-07 16:51:01, Philip Zeyliger wrote:&lt;br/&gt;
&amp;gt; &amp;gt; trunk/lang/java/src/java/org/apache/avro/ipc/HttpServer.java, line 65&lt;br/&gt;
&amp;gt; &amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/281/diff/1/?file=2195#file2195line65&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/281/diff/1/?file=2195#file2195line65&lt;/a&gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;     catch (Exception e) is poor form, typically.  It&apos;s usually better to explicitly catch the type of exception that Jetty&apos;s start throws.&lt;/p&gt;

&lt;p&gt;Jetty&apos;s start() throws Exception: &lt;a href=&quot;http://jetty.codehaus.org/jetty/jetty-6/apidocs/org/mortbay/component/LifeCycle.html#start%28%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jetty.codehaus.org/jetty/jetty-6/apidocs/org/mortbay/component/LifeCycle.html#start%28%29&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;&amp;gt; On 2010-07-07 16:51:01, Philip Zeyliger wrote:&lt;br/&gt;
&amp;gt; &amp;gt; trunk/lang/java/src/java/org/apache/avro/ipc/HttpServer.java, line 60&lt;br/&gt;
&amp;gt; &amp;gt; &amp;lt;&lt;a href=&quot;http://review.hbase.org/r/281/diff/1/?file=2195#file2195line60&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://review.hbase.org/r/281/diff/1/?file=2195#file2195line60&lt;/a&gt;&amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;&lt;br/&gt;
&amp;gt; &amp;gt;     I would add to the java doc that this throws AvroRuntimeException.&lt;/p&gt;

&lt;p&gt;Will do.&lt;/p&gt;
&lt;blockquote&gt;&lt;/blockquote&gt;</comment>
                            <comment id="12889308" author="hammer" created="Fri, 16 Jul 2010 20:29:11 +0000"  >&lt;p&gt;Hey Doug,&lt;/p&gt;

&lt;p&gt;All of the comments above have been addressed. I believe this patch is ready to go in.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Jeff&lt;/p&gt;</comment>
                            <comment id="12890044" author="cutting" created="Mon, 19 Jul 2010 21:20:05 +0000"  >&lt;p&gt;+1 this looks good to me and passes tests.&lt;/p&gt;

&lt;p&gt;Only minor nit is that I&apos;d replace the javadoc comment &quot;Prepares a server to be started on the named port.&quot; with &quot;Constructs a server that will run on the named port.&quot;&lt;/p&gt;</comment>
                            <comment id="12890058" author="cutting" created="Mon, 19 Jul 2010 21:59:38 +0000"  >&lt;p&gt;Here&apos;s a version that:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;changes the javadoc as suggested above&lt;/li&gt;
	&lt;li&gt;updates SocketServer, NettyServer &amp;amp; DatagramServer too, plus their tests&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12890059" author="hammer" created="Mon, 19 Jul 2010 22:01:26 +0000"  >&lt;p&gt;Looks good. I haven&apos;t tested the new changes, but they seem reasonable via eyeballed code review. If the tests pass, go for it.&lt;/p&gt;</comment>
                            <comment id="12890077" author="scott_carey" created="Mon, 19 Jul 2010 22:38:55 +0000"  >&lt;p&gt;+1 looks good to me.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12468746">AVRO-594</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12460976">HBASE-2400</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12448638" name="AVRO-544-2.patch" size="515" author="hammer" created="Sun, 4 Jul 2010 06:18:11 +0000"/>
                            <attachment id="12448862" name="AVRO-544-3.patch" size="5267" author="hammer" created="Wed, 7 Jul 2010 07:25:48 +0000"/>
                            <attachment id="12448938" name="AVRO-544-4.patch" size="5379" author="hammer" created="Thu, 8 Jul 2010 01:39:02 +0000"/>
                            <attachment id="12449885" name="AVRO-544.patch" size="15985" author="cutting" created="Mon, 19 Jul 2010 21:59:38 +0000"/>
                            <attachment id="12448632" name="AVRO-544.patch" size="435" author="hammer" created="Sun, 4 Jul 2010 01:54:51 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 4 Jul 2010 05:44:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94855</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 27 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e0zb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79921</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Changed servers to not be started by constructor, but by new start() method.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-545] Move mapreduce bindings out of avro jar</title>
                <link>https://issues.apache.org/jira/browse/AVRO-545</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;MapReduce should not depend on any jars (eg. avro&apos;s main jar) that also depend on the MapReduce jar.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12464841">AVRO-545</key>
            <summary>Move mapreduce bindings out of avro jar</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21146&amp;avatarType=issuetype">Sub-task</type>
                            <parent id="12472990">AVRO-647</parent>
                                    <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="scott_carey">Scott Carey</assignee>
                                    <reporter username="owen.omalley">Owen O&apos;Malley</reporter>
                        <labels>
                    </labels>
                <created>Tue, 18 May 2010 23:12:28 +0000</created>
                <updated>Sat, 12 Mar 2011 00:32:54 +0000</updated>
                            <resolved>Thu, 16 Dec 2010 00:40:55 +0000</resolved>
                                    <version>1.4.0</version>
                                    <fixVersion>1.5.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12868901" author="scott_carey" created="Tue, 18 May 2010 23:33:35 +0000"  >&lt;p&gt;The mapreduce dependency in Avro is specified as &quot;optional&quot;, which means that consumers of avro do not automatically pull it in as a dependency.  In other words, its not a transitive dependency.  &lt;/p&gt;

&lt;p&gt;We can move it to another jar &quot;avro-mapred.jar&quot;, but there is only a KB or two difference in jar size at the moment.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;org.apache.hadoop&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;hadoop-core&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;0.20.2&amp;lt;/version&amp;gt;
      &amp;lt;optional&amp;gt;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;lt;/optional&amp;gt;
    &amp;lt;/dependency&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In short, if Hadoop 0.22 depends on Avro 1.4, it does not imply that Hadoop 0.22 depends on Hadoop 0.20.2 due to the above &quot;optional&quot; flag.&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;http://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the maven site:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How do optional dependencies work?&lt;/p&gt;

&lt;p&gt;Project-A -&amp;gt; Project-B&lt;/p&gt;

&lt;p&gt;The diagram above says that Project-A depends on Project-B. When A declares B as an optional dependency in its POM, this relationship remains unchanged. Its just like a normal build where Project-B will be added in its classpath.&lt;/p&gt;

&lt;p&gt;Project-X -&amp;gt; Project-A&lt;/p&gt;

&lt;p&gt;But when another project(Project-X) declares Project-A as a dependency in its POM, the optional dependency takes effect. You&apos;ll notice that Project-B is not included in the classpath of Project-X; you will need to declare it directly in your POM in order for B to be included in X&apos;s classpath.&lt;/p&gt;
&lt;/blockquote&gt;</comment>
                            <comment id="12868912" author="owen.omalley" created="Tue, 18 May 2010 23:50:37 +0000"  >&lt;p&gt;I understand the mechanics of how it has been accomplished. It is bad system design to make circular dependencies between projects. I consider this a blocker for Avro 1.4 being used by Hadoop Common, HDFS, or MapReduce.&lt;/p&gt;</comment>
                            <comment id="12868919" author="owen.omalley" created="Tue, 18 May 2010 23:59:29 +0000"  >&lt;p&gt;Note that I&apos;m just asking that the Avro jar that Hadoop depends on should not depend on any of the Hadoop jars. Moving the classes to the tools jar or some other jar would be fine.&lt;/p&gt;</comment>
                            <comment id="12908105" author="owen.omalley" created="Fri, 10 Sep 2010 17:34:10 +0000"  >&lt;p&gt;This patch moves the mapred classes to a different jar.&lt;/p&gt;</comment>
                            <comment id="12908109" author="owen.omalley" created="Fri, 10 Sep 2010 17:35:35 +0000"  >&lt;p&gt;This blocks Avro 1.4.1&apos;s adoption by Hadoop.&lt;/p&gt;</comment>
                            <comment id="12908213" author="cutting" created="Fri, 10 Sep 2010 22:14:38 +0000"  >&lt;p&gt;A new jar should be a separately publishable maven artifact.  So ivy.xml needs to be updated to add this as a separate configuration, a pom and source jar need to be generated, the mvn-install and mvn-deploy targets need to be updated, etc.&lt;/p&gt;

&lt;p&gt;I also don&apos;t yet see the functionaly problem that Avro&apos;s jar referring to Hadoop classes creates for Hadoop.  Can you please describe the problem scenario in more detail?  Thanks!&lt;/p&gt;</comment>
                            <comment id="12908243" author="owen.omalley" created="Fri, 10 Sep 2010 23:57:41 +0000"  >&lt;p&gt;The problem is the standard one that jars shouldn&apos;t recursively depend on each other. It leads to lots of issues. In particular, if Hadoop changes a method, it can require a new release of avro to use the two together. This is a classic anti-pattern for software. You never want projects to recursively depend on each other.&lt;/p&gt;

&lt;p&gt;The fact that your pom file lies about its dependencies makes this obvious. If you made the correct pom file, it would be impossible to release either Avro or Hadoop except simultaneously.&lt;/p&gt;
</comment>
                            <comment id="12908263" author="scott_carey" created="Sat, 11 Sep 2010 01:50:08 +0000"  >&lt;p&gt;Related to: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-647&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-647&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;None of the bits of Avro that Hadoop will use depend on Hadoop.&lt;br/&gt;
None of the bits of Avro that use Hadoop will be called by Hadoop.&lt;br/&gt;
If this was not so, then moving it out of the jar would not be a possible solution to the problem.&lt;/p&gt;

&lt;p&gt;There is no circular dependency between Hadoop itself and Avro unless Hadoop decides to use classes in o.a.a.mapred.  &lt;br/&gt;
Unless a user decided to call those in a Task. But then this inclusion might actually be desired!&lt;/p&gt;

&lt;p&gt;Because of the way that Hadoop works, putting all of its dependencies in the front of the classpath for a Task, no user user will be able to run a newer version of Avro than what is in Hadoop.  With the mapred package broken out, at least a user might have a chance of using a different version of that, provided it was compatible with the &apos;avro-core&apos; version Hadoop was using; but the safe bet would be to force the exact same version and bundle it with hadoop.&lt;/p&gt;

&lt;p&gt;So at first I thought this was important to break out for Hadoop&apos;s sake, but now I don&apos;t.  Its important for Avro&apos;s sake for users and applications that don&apos;t use Hadoop.&lt;/p&gt;

&lt;p&gt;It might be the other way around.  Using Avro in Hadoop is blocked by Hadoop sorting out its classpath issues since it currently forces all user Tasks to run with its dependencies  (there is no separate classloader for Tasks, for instance).&lt;br/&gt;
There is a Hadoop ticket for that, I can&apos;t seem to locate it right now.&lt;/p&gt;


&lt;p&gt;Avro does not lie about its dependency on Hadoop.  There is never a time that an Avro user needs hadoop.  Although &quot;provided&quot; scope might be more appropriate than &quot;optional&quot;, its functionally the same in this case.&lt;br/&gt;
The only way that a user can execute any avro.mapred code is to run from inside Hadoop, where the hadoop jars and dependencies come from hadoop and not from any packaging the user may attempt.  Specifying the dependency as a runtime dependency would be a lie &amp;#8211; the execution context (Hadoop) is expected to provide it.&lt;/p&gt;
</comment>
                            <comment id="12908268" author="cutting" created="Sat, 11 Sep 2010 03:29:25 +0000"  >&lt;p&gt;&amp;gt; if Hadoop changes a method, it can require a new release of avro to use the two together&lt;/p&gt;

&lt;p&gt;That seems true regardless of whether Avro&apos;s jars are split.  If Hadoop changes a method, Hadoop could continue to use its existing version of Avro, since Hadoop itself does not call the Avro methods that might call that changed method.  It would break users of Avro&apos;s MR API, but they&apos;d be broken anyway until Avro&apos;s MR code is updated.  Also, the APIs that Avro uses are APIs that Hadoop has promised not to change, and Avro will not consider updating to newer Hadoop APIs until 0.22 has mostly replaced 0.20 in production, i.e., not for a while.&lt;/p&gt;

&lt;p&gt;I don&apos;t see that upgrading Hadoop to Avro 1.4.0 would create a regression for users of Hadoop.  Without a regression, I don&apos;t see how this should be a blocking issue.&lt;/p&gt;

&lt;p&gt;The argument for breaking up jars that Scott made in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-647&quot; title=&quot;Break avro.jar into avro.jar, avro-dev.jar and avro-hadoop.jar&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-647&quot;&gt;&lt;del&gt;AVRO-647&lt;/del&gt;&lt;/a&gt; is that it would permit our POMs to more precisely specify dependencies, so that, e.g., folks who don&apos;t use RPC don&apos;t pull in Jetty, which sounds like a useful improvement.  So I&apos;d be okay committing a patch that creates POMs for new jars, etc.  But I&apos;d rather see this done once, as a complete fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-647&quot; title=&quot;Break avro.jar into avro.jar, avro-dev.jar and avro-hadoop.jar&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-647&quot;&gt;&lt;del&gt;AVRO-647&lt;/del&gt;&lt;/a&gt; rather than piecemeal here, so that we only force Avro users to update their dependencies once.  I also believe that such an incompatible change would be more appropriate for Avro 1.5.0 than 1.4.1.  By the time that Hadoop removes its 0.20 APIs we&apos;ll long since have split Avro into multiple jars.&lt;/p&gt;

&lt;p&gt;So my proposal is that we remove this as a blocker for Avro 1.4.1 but add &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-647&quot; title=&quot;Break avro.jar into avro.jar, avro-dev.jar and avro-hadoop.jar&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-647&quot;&gt;&lt;del&gt;AVRO-647&lt;/del&gt;&lt;/a&gt; to the plan for Avro 1.5.0, which should be out before the end of the year.&lt;/p&gt;</comment>
                            <comment id="12908377" author="owen.omalley" created="Sat, 11 Sep 2010 22:08:31 +0000"  >&lt;p&gt;This is a regression. The 1.4.0 pom does not accurately reflect the dependencies. That is broken. Users should be able to depend on your pom and automatically get the transitive dependencies. Clearly, if you weren&apos;t breaking the rules by introducing a cycle in the dependency graph you &lt;b&gt;would&lt;/b&gt; include the Hadoop jars in your pom.&lt;/p&gt;

&lt;p&gt;I also noticed that your avro-tool jar includes everything from the build classes, which includes everything from the main avro jar. I assume that is unintentional.&lt;/p&gt;

&lt;p&gt;If you are really going to ignore my patch and not fix this until the end of the year. I&apos;ll need to fork Avro back into Hadoop and I&apos;d really rather avoid that. I already have more than enough work cleaning up Hadoop.&lt;/p&gt;</comment>
                            <comment id="12908379" author="cutting" created="Sat, 11 Sep 2010 22:47:24 +0000"  >&lt;p&gt;&amp;gt; If you are really going to ignore my patch...&lt;/p&gt;

&lt;p&gt;I did not ignore your patch.  I reviewed it.  It is incomplete.  Folks who use the MR API in Avro 1.4.0, retrieving it from Maven central, need to have an upgrade path that lets them still get the code from Maven central.  A new jar needs a new POM, javadoc, source, plus updates to Ant targets that publish artifacts, etc.  I would also vastly prefer that we make such an incompatible change once, rather than piecemeal, providing a complete fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-647&quot; title=&quot;Break avro.jar into avro.jar, avro-dev.jar and avro-hadoop.jar&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-647&quot;&gt;&lt;del&gt;AVRO-647&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12971902" author="scott_carey" created="Thu, 16 Dec 2010 00:40:55 +0000"  >&lt;p&gt;Fixed as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-647&quot; title=&quot;Break avro.jar into avro.jar, avro-dev.jar and avro-hadoop.jar&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-647&quot;&gt;&lt;del&gt;AVRO-647&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12472990">AVRO-647</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12454314" name="avro-545.patch" size="1935" author="owen.omalley" created="Fri, 10 Sep 2010 17:34:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 18 May 2010 23:33:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4144</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 6 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e0zj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79922</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
