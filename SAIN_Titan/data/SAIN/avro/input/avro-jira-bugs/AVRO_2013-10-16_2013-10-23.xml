<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:19:21 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2013-10-16+AND+created+%3C%3D+2013-10-23+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="4" total="4"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1387] DataFileWriter must allow files not to be flushed at the end of every block.</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1387</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;We are considering changes in Flume&apos;s file channel to use Avro, one of the requirements is that each event (which maps to one avro record) be checksummed so we know if the data is corrupt. &lt;/p&gt;

&lt;p&gt;We&apos;d probably have to add a new version for this, since this will change the data format on disk. I can start working on a Java version if there are no objections&lt;/p&gt;</description>
                <environment></environment>
        <key id="12674379">AVRO-1387</key>
            <summary>DataFileWriter must allow files not to be flushed at the end of every block.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hshreedharan">Hari Shreedharan</assignee>
                                    <reporter username="hshreedharan">Hari Shreedharan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 Oct 2013 19:33:33 +0000</created>
                <updated>Thu, 23 Jan 2014 21:58:56 +0000</updated>
                            <resolved>Fri, 25 Oct 2013 22:14:22 +0000</resolved>
                                                    <fixVersion>1.7.6</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13798360" author="brocknoland" created="Thu, 17 Oct 2013 20:18:21 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;This can be implemented such that the checksum is optional. &lt;/p&gt;</comment>
                            <comment id="13799257" author="cutting" created="Fri, 18 Oct 2013 16:34:21 +0000"  >&lt;p&gt;This could be added as a new feature of the data file format, but that would require all clients in all languages to be updated before they can process such files.&lt;/p&gt;

&lt;p&gt;Another approach might be to use a wrapper schema, like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.avro.file.CheckSummed&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[
    {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;value&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&amp;lt;insert your schema here&amp;gt;}
    {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;checksum&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;}
  ]}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In Java we can provide classes that perform checksumming:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;ChecksummedWriter&amp;lt;T&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; DataFileWriter&amp;lt;T&amp;gt;
  @Override create(Schema s, File f) { ... }  &lt;span class=&quot;code-comment&quot;&gt;// wraps the schema with a checksum schema
&lt;/span&gt;  @Override append(T value) { ... }           &lt;span class=&quot;code-comment&quot;&gt;// appends a checksum after each entry
&lt;/span&gt;}
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;ChecksummedReader&amp;lt;T&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; DataFileReader&amp;lt;T&amp;gt;
  @Override T next() { ... }                  &lt;span class=&quot;code-comment&quot;&gt;// validates checksum
&lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This would permit implementations that know nothing about Avro checksumming to still access data that has checksums.  We could even change the DataFileReader.openReader() factory to automatically return ChecksummedReader when appropriate, making this transparent for Java applications.&lt;/p&gt;</comment>
                            <comment id="13799280" author="brocknoland" created="Fri, 18 Oct 2013 16:49:04 +0000"  >&lt;p&gt;Thanks for the suggestion Doug!  Two things we&apos;d like do with the new format is:&lt;/p&gt;

&lt;p&gt;1) Identity when a portion of the file is corrupt across records&lt;br/&gt;
2) Be able skip past corrupt records&lt;/p&gt;

&lt;p&gt;Assuming the corruption happened outside of the flume record and corrupted Avro&apos;s own record metadata, would be able to identify this on read and skip ahead until we found a good record? What we&apos;d like to have is something like so:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  Reader in = ..
  Record rec = null;
  do {
     try {
       rec = in.read();
       if(rec != null)
         doSomething(rec);
     } catch(InvalidRecordException ex) {
      in.seekNext();
    } while(rec != null);
 }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As our records are fairly large, I believe we plan on writing sync markers between each record so I think the seekNext() part should be doable. The thing that worries me is how avro will handle corruption of the avro event metadata itself. If it throws some kind of runtime exception (ArrayIndexOutofBounds, NullPointer, etc) I wouldn&apos;t want to &quot;assume&quot; that was corrupt data.&lt;/p&gt;</comment>
                            <comment id="13799283" author="brocknoland" created="Fri, 18 Oct 2013 16:50:04 +0000"  >&lt;p&gt;Whoops that should have been:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  Reader in = ..
  Record rec = null;
  do {
     try {
       rec = in.read();
       if(rec != null)
         doSomething(rec);
     } catch(InvalidRecordException ex) {
      in.seekNext();
    }
 } while(rec != null);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13799343" author="cutting" created="Fri, 18 Oct 2013 17:54:24 +0000"  >&lt;p&gt;If you&apos;re willing to write a new block per record, then you might consider just using the Snappy codec, which includes a checksum for each block.  Alternately, you could define a meta-codec, that wraps other codecs in checksums, e.g., we might have codecs like deflate+md5 or null+crc32.  The point being that we already have a pluggable per-block extension point in codecs, and one of the standard implementations already includes checksums.&lt;/p&gt;</comment>
                            <comment id="13799351" author="brocknoland" created="Fri, 18 Oct 2013 18:06:28 +0000"  >&lt;p&gt;That sounds like something we should investigate!&lt;/p&gt;</comment>
                            <comment id="13799364" author="hshreedharan" created="Fri, 18 Oct 2013 18:11:30 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; - Thanks! That sounds like a good idea. I will take a look at this. On a side note - assuming that each record is not very large (a few hundreds of bytes to a few KB), and the writes happen to a local FS, is it reasonable to write one block per record and write a sync marker at the end of a record? In that case, I think the Snappy codec would make sense for us.&lt;/p&gt;</comment>
                            <comment id="13799365" author="cutting" created="Fri, 18 Oct 2013 18:11:32 +0000"  >&lt;p&gt;FWIW, we should probably change SnappyCodec to use a more-specific exception for checksum errors.  Currently it throws IOException.&lt;/p&gt;

&lt;p&gt;To implement seekNext() we just need to set blockRemaining=0.  We could add a new method for this, or simply call reader.seek(reader.tell()) which would accomplish the same.&lt;/p&gt;

&lt;p&gt;Doug&lt;/p&gt;</comment>
                            <comment id="13799376" author="cutting" created="Fri, 18 Oct 2013 18:25:40 +0000"  >&lt;p&gt;&amp;gt; is it reasonable to write one block per record and write a sync marker at the end of a record?&lt;/p&gt;

&lt;p&gt;I believe that each block written causes a flush of the output stream, which is a system call.  This could probably be avoided if it&apos;s found to slow things considerably, though we might want to make that optional, since folks might depend on the current flush-per-block behavior.  A system call every few hundred bytes though might be tolerable.&lt;/p&gt;</comment>
                            <comment id="13799395" author="hshreedharan" created="Fri, 18 Oct 2013 18:41:01 +0000"  >&lt;p&gt;We could make that optional, leaving the current behavior as default. So we can optionally not flush at the end of a block. I will submit a patch for this and file a jira for making the Snappy codec exception better.&lt;/p&gt;</comment>
                            <comment id="13800182" author="hshreedharan" created="Sun, 20 Oct 2013 19:10:06 +0000"  >&lt;p&gt;I updated the jira title to reflect the current discussion.&lt;/p&gt;</comment>
                            <comment id="13800183" author="hshreedharan" created="Sun, 20 Oct 2013 19:12:05 +0000"  >&lt;p&gt;Added the ability to not flush the block on every sync. Enabling this class-wide, so that this is true even when the reaching the syncInterval does not cause a flush unless the flush method is explicitly called. Also added a unit test.&lt;/p&gt;</comment>
                            <comment id="13800208" author="hshreedharan" created="Sun, 20 Oct 2013 20:13:48 +0000"  >&lt;p&gt;SVN-friendly patch&lt;/p&gt;</comment>
                            <comment id="13804490" author="hshreedharan" created="Thu, 24 Oct 2013 18:14:16 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; - The attached patch is ready for review. Please take a look when you get some time. Thanks!&lt;/p&gt;</comment>
                            <comment id="13805752" author="jira-bot" created="Fri, 25 Oct 2013 22:13:44 +0000"  >&lt;p&gt;Commit 1535888 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1535888&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1535888&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1387&quot; title=&quot;DataFileWriter must allow files not to be flushed at the end of every block.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1387&quot;&gt;&lt;del&gt;AVRO-1387&lt;/del&gt;&lt;/a&gt;. Java: Add DataFileWriter option to inhibit flush per block.  Contributed by Hari Shreedharan.&lt;/p&gt;</comment>
                            <comment id="13805754" author="cutting" created="Fri, 25 Oct 2013 22:14:22 +0000"  >&lt;p&gt;I committed this.  Thanks, Hari!&lt;/p&gt;</comment>
                            <comment id="13805763" author="hshreedharan" created="Fri, 25 Oct 2013 22:25:37 +0000"  >&lt;p&gt;Thanks for committing, Doug!&lt;/p&gt;</comment>
                            <comment id="13805929" author="hudson" created="Sat, 26 Oct 2013 01:23:43 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #399 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/399/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/399/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1387&quot; title=&quot;DataFileWriter must allow files not to be flushed at the end of every block.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1387&quot;&gt;&lt;del&gt;AVRO-1387&lt;/del&gt;&lt;/a&gt;. Java: Add DataFileWriter option to inhibit flush per block.  Contributed by Hari Shreedharan. (cutting: rev 1535888)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/file/DataFileStream.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/file/DataFileWriter.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12636694">FLUME-1946</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12609331" name="AVRO-1387.patch" size="7903" author="hshreedharan" created="Sun, 20 Oct 2013 20:13:48 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 17 Oct 2013 20:18:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>354001</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 13 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1p15j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>354293</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1388] Avro container files should allow fsync-ing files to disk</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1388</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Another feature we require in Avro data files in addition to &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1387&quot; title=&quot;DataFileWriter must allow files not to be flushed at the end of every block.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1387&quot;&gt;&lt;del&gt;AVRO-1387&lt;/del&gt;&lt;/a&gt; is that we be able to fsync the files to disk. Currently we cannot do this, but this can be achieved without API changes. If there are no objections,  I will submit a patch&lt;/p&gt;</description>
                <environment></environment>
        <key id="12674381">AVRO-1388</key>
            <summary>Avro container files should allow fsync-ing files to disk</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hshreedharan">Hari Shreedharan</assignee>
                                    <reporter username="hshreedharan">Hari Shreedharan</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 Oct 2013 19:35:21 +0000</created>
                <updated>Thu, 23 Jan 2014 21:58:56 +0000</updated>
                            <resolved>Thu, 7 Nov 2013 19:09:27 +0000</resolved>
                                                    <fixVersion>1.7.6</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13799270" author="cutting" created="Fri, 18 Oct 2013 16:42:03 +0000"  >&lt;p&gt;Yes, this would be a very useful addition.  We could either add out.getFD().sync() directly to DataFileWriter.flush(), or add a new method for this.  Are there cases where folks might currently call flush() but not want to force an fsync?&lt;/p&gt;</comment>
                            <comment id="13799302" author="hshreedharan" created="Fri, 18 Oct 2013 17:08:32 +0000"  >&lt;p&gt;I think it is possible that people would want to do just a flush and not an fsync - though I am not sure of that. We could just add a new method to avoid changing current behavior, so people don&apos;t suddenly notice additional latency. I will submit a patch for this one with a new method to do this, if that sounds good.&lt;/p&gt;</comment>
                            <comment id="13799366" author="cutting" created="Fri, 18 Oct 2013 18:13:51 +0000"  >&lt;p&gt;Sounds reasonable to me.&lt;/p&gt;</comment>
                            <comment id="13799477" author="brocknoland" created="Fri, 18 Oct 2013 20:24:39 +0000"  >&lt;p&gt;It doesn&apos;t look like the FileWriter and FileStream classes have a method to get the current file offset. We&apos;ll need that as well.&lt;/p&gt;</comment>
                            <comment id="13799488" author="hshreedharan" created="Fri, 18 Oct 2013 20:32:34 +0000"  >&lt;p&gt;Yeah, I was planning to add that, since it is fairly easy to add it. Just a matter of exposing the position from the writer/reader.&lt;/p&gt;</comment>
                            <comment id="13799722" author="hshreedharan" created="Sat, 19 Oct 2013 01:38:14 +0000"  >&lt;p&gt;It looks like there are a couple of methods which allow the user to set a raw output stream, for the DataFileWriter to use. I don&apos;t know if it is reasonable to assume that the OutputStream passed in is an instance of FileOutputStream. Else we will need to do something like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(out &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; FileOutputStream) {
  &lt;span class=&quot;code-comment&quot;&gt;// we could &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; check at the time of initialization and store a ref to FileOutputStream directly to avoid &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; check on every fsync
&lt;/span&gt;   ((FileOutputStream)out).getFD().sync();
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
  &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; or noop? Not sure throwing is really warranted here
&lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="13799999" author="cutting" created="Sat, 19 Oct 2013 20:33:32 +0000"  >&lt;p&gt;If this is a new method whose contract is to call FileDescriptor#sync() then throwing an exception might be reasonable.&lt;/p&gt;

&lt;p&gt;On the other hand, it might be better to generalize this, so that it can be used with HDFS too.  We might:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;add a Syncable interface&lt;/li&gt;
	&lt;li&gt;cast to that in the DataFileWriter#sync()&lt;/li&gt;
	&lt;li&gt;add a SyncableFileOutputStream implementation&lt;/li&gt;
	&lt;li&gt;change DataFileWriter#create(Schema,File) to call create(schema, new SyncableFileOutputStream(file)).&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13800090" author="hshreedharan" created="Sun, 20 Oct 2013 06:07:42 +0000"  >&lt;p&gt;Yep, I was thinking about generalizing this too, but I was not sure if there would be interest in having the sync method in non-FileOutputStream cases. I will submit a patch soon.&lt;/p&gt;</comment>
                            <comment id="13807224" author="hshreedharan" created="Mon, 28 Oct 2013 21:09:58 +0000"  >&lt;p&gt;Patch that implements this functionality. Unfortunately there is no easy way to test this - but the patch itself is fairly simple.&lt;/p&gt;

&lt;p&gt;I can submit an HDFS implementation too, but where would that go? &lt;/p&gt;</comment>
                            <comment id="13815255" author="hshreedharan" created="Wed, 6 Nov 2013 20:26:26 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; - Please take a look when you get a chance. I am planning to implement something in Flume based on this patch.&lt;/p&gt;</comment>
                            <comment id="13815283" author="cutting" created="Wed, 6 Nov 2013 20:59:30 +0000"  >&lt;p&gt;This looks good.  A few comments:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;SyncableFileOutputStream needs some class-level javadoc&lt;/li&gt;
	&lt;li&gt;does @inheritDoc really work on constructors?&lt;/li&gt;
	&lt;li&gt;no need to worry about an HDFS implementation yet&lt;/li&gt;
	&lt;li&gt;we should add a test that check that sync() is called&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The test might subclass ByteArrayOutputStream, implementing a Syncable that counts the number of times sync() has been called.&lt;/p&gt;</comment>
                            <comment id="13815303" author="hshreedharan" created="Wed, 6 Nov 2013 21:25:52 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;! I will update the patch with soon.&lt;/p&gt;</comment>
                            <comment id="13815499" author="hshreedharan" created="Thu, 7 Nov 2013 00:34:48 +0000"  >&lt;ul&gt;
	&lt;li&gt;Added a test each for create and appendTo.&lt;/li&gt;
	&lt;li&gt;Fixed a bug in the patch that caused the sync to be called on the internal ByteArrayFileOutputStream rather than the underlying stream.&lt;/li&gt;
	&lt;li&gt;Added javadoc for the SyncableFileOutputStream class and constructors.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;I am now caching the underlying stream in the writer class itself, so we can call sync on that. An alternate implementation would be to have BufferedFileOutputStream and PositionFilter implement Syncable. But doing this would mean that the sync call gets redirected 2 times - which is less efficient.&lt;/p&gt;</comment>
                            <comment id="13816198" author="cutting" created="Thu, 7 Nov 2013 18:17:42 +0000"  >&lt;p&gt;This is really close.&lt;/p&gt;

&lt;p&gt;The append-based test fails for me using JDK 7 because it relies on an earlier test to generate the files, but in JDK 7, tests are no longer run in the order they are defined.  Rather, this must be called from runTestsInOrder().&lt;/p&gt;

&lt;p&gt;Also, I slightly prefer the name fSync() for the new DataFileWriter method, instead of syncFs().&lt;/p&gt;

&lt;p&gt;Here&apos;s a version of the patch that makes these two changes.  Does this look reasonable to you?  If so, I&apos;ll commit it.&lt;/p&gt;</comment>
                            <comment id="13816256" author="hshreedharan" created="Thu, 7 Nov 2013 18:53:44 +0000"  >&lt;p&gt;+1. Looks good to me.&lt;/p&gt;</comment>
                            <comment id="13816287" author="jira-bot" created="Thu, 7 Nov 2013 19:09:26 +0000"  >&lt;p&gt;Commit 1539765 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1539765&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1539765&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1388&quot; title=&quot;Avro container files should allow fsync-ing files to disk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1388&quot;&gt;&lt;del&gt;AVRO-1388&lt;/del&gt;&lt;/a&gt;. Java: Add fsync support to DataFileWriter.  Contributed by Hari Shreedharan.&lt;/p&gt;</comment>
                            <comment id="13816289" author="cutting" created="Thu, 7 Nov 2013 19:09:27 +0000"  >&lt;p&gt;I committed this.  Thanks, Hari!&lt;/p&gt;</comment>
                            <comment id="13816820" author="hudson" created="Thu, 7 Nov 2013 23:54:53 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #402 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/402/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/402/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1388&quot; title=&quot;Avro container files should allow fsync-ing files to disk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1388&quot;&gt;&lt;del&gt;AVRO-1388&lt;/del&gt;&lt;/a&gt;. Java: Add fsync support to DataFileWriter.  Contributed by Hari Shreedharan. (cutting: rev 1539765)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/file/DataFileWriter.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/file/Syncable.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/file/SyncableFileOutputStream.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12636694">FLUME-1946</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12612489" name="AVRO-1388-2.patch" size="11194" author="hshreedharan" created="Thu, 7 Nov 2013 00:34:48 +0000"/>
                            <attachment id="12612650" name="AVRO-1388.patch" size="11042" author="cutting" created="Thu, 7 Nov 2013 18:17:42 +0000"/>
                            <attachment id="12610675" name="AVRO-1388.patch" size="6063" author="hshreedharan" created="Mon, 28 Oct 2013 21:09:57 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 18 Oct 2013 16:42:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>354003</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 11 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1p15z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>354295</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1389] Avro C# Code Generator Should Provide Mechanism to Compare Objects</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1389</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It would be nice if the code generator makes it possible to compare objects by overriding Equals() for example or providing a method that performs property-wise objects comparison.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12674777">AVRO-1389</key>
            <summary>Avro C# Code Generator Should Provide Mechanism to Compare Objects</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="H.Youssef">Youssef Hatem</reporter>
                        <labels>
                    </labels>
                <created>Mon, 21 Oct 2013 11:55:43 +0000</created>
                <updated>Mon, 21 Oct 2013 11:57:19 +0000</updated>
                                            <version>1.7.5</version>
                                                    <component>csharp</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>354399</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 14 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1p3kf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>354689</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1390] BitSet can&apos;t be serialized.</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1390</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Attempting to serialize/deserialize BitSet causes Avro to serialize an empty object ... of course when it is deserialized the object is empty.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/19282468/avro-serialization-fails-with-some-objects&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/19282468/avro-serialization-fails-with-some-objects&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12674938">AVRO-1390</key>
            <summary>BitSet can&apos;t be serialized.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="ajo.fod">Ajo Fod</reporter>
                        <labels>
                    </labels>
                <created>Tue, 22 Oct 2013 01:12:59 +0000</created>
                <updated>Sun, 30 Dec 2018 04:17:18 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13801463" author="arunkv" created="Tue, 22 Oct 2013 04:24:53 +0000"  >&lt;p&gt;The schema derived for java.util.BitSet is: &lt;/p&gt;
{&quot;type&quot;:&quot;record&quot;,&quot;name&quot;:&quot;BitSet&quot;,&quot;namespace&quot;:&quot;java.util&quot;,&quot;fields&quot;:[]}
&lt;p&gt; It is missing all fields.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 22 Oct 2013 04:24:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>354560</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 13 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1p4k7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>354850</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
