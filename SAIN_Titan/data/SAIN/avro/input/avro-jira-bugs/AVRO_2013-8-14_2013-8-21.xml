<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:19:05 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2013-8-14+AND+created+%3C%3D+2013-8-21+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="3" total="3"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1361] The values of a map are not correct</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1361</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;When I put values into a map, the values appear delayed with one cycle:&lt;/p&gt;

&lt;p&gt;// pseudo code&lt;br/&gt;
map = Map()&lt;br/&gt;
for (i = 0; i &amp;lt; 5; i++) {&lt;br/&gt;
   map.put(i, i)&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;// then map contains the following elements: &lt;/p&gt;
{&quot;0&quot;: &quot;1&quot;, &quot;1&quot;: &quot;2&quot;, &quot;2&quot;: &quot;3&quot;, &quot;3&quot;: &quot;4&quot;, &quot;4&quot;: &quot;&quot;}
&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I wrote a sample code, which demonstrates the bug. I hope I&apos;m not wrong. I have also problems with the reference counting: if I comment out the free() calls in the program, I get glibc errors. Is it possible, that the Avro frees not just its own pointers in the *decref() calls?&lt;/p&gt;</description>
                <environment>&lt;p&gt;Ubuntu 12.10&lt;/p&gt;</environment>
        <key id="12663626">AVRO-1361</key>
            <summary>The values of a map are not correct</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="btibi">Tibor Benke</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 Aug 2013 11:44:23 +0000</created>
                <updated>Wed, 18 Dec 2013 13:15:15 +0000</updated>
                            <resolved>Wed, 18 Dec 2013 13:15:15 +0000</resolved>
                                    <version>1.7.4</version>
                                                    <component>c</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13739559" author="btibi" created="Wed, 14 Aug 2013 11:45:17 +0000"  >&lt;p&gt;Sample program to demonstrate the bug.&lt;/p&gt;</comment>
                            <comment id="13752170" author="btibi" created="Wed, 28 Aug 2013 06:59:16 +0000"  >&lt;p&gt;Could you just take a look at it? There is a sample program attached to demonstrate either my mistake or the bug. &lt;/p&gt;</comment>
                            <comment id="13752392" author="dcreager" created="Wed, 28 Aug 2013 13:32:58 +0000"  >&lt;p&gt;Sorry, I&apos;ve been out for a couple of weeks with a new baby.  I&apos;ll take a look at it today.&lt;/p&gt;</comment>
                            <comment id="13752428" author="dcreager" created="Wed, 28 Aug 2013 14:25:04 +0000"  >&lt;p&gt;The main issue is how you&apos;re filling in the contents of the map.  Your code assumes that you need to create an avro_value_t for the value of each entry, and then use avro_value_add to add that value that you created to the map.  That&apos;s actually not the right approach.  Instead, the map is responsible for managing the storage of the values that it contains.  So instead of creating a value, and then calling avro_value_add, you just call avro_value_add.  The map implementation will allocate a new value for the given key (or return an existing value if the key is already present).  You can then use avro_value_set_string to fill in that value that the map created for you.&lt;/p&gt;

&lt;p&gt;On a related note, when you extract the key and value for each map entry, your code allocates a char buffer.  You don&apos;t need to do this.  The map value, and the string values that it contains, have their own copies of the actual string content.  avro_value_get_by_index and avro_value_get_string don&apos;t copy this content; instead, they return a pointer to that storage that&apos;s managed by the value instance.&lt;/p&gt;

&lt;p&gt;There are more details in &#167;4.1.3 of the &lt;a href=&quot;http://avro.apache.org/docs/current/api/c/index.html#_avro_values&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;C documentation&lt;/a&gt;.  I&apos;m also going to attach a modified version of your main.c, which produces the right results (and has no memory leaks).  You can diff the two to see exactly what changes were needed, and I&apos;m happy to discuss any of the changes in more detail if you like.&lt;/p&gt;</comment>
                            <comment id="13753541" author="btibi" created="Thu, 29 Aug 2013 11:57:53 +0000"  >&lt;p&gt;Thank you very much! It&apos;s good to know that it was my mistake and not a bug &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I understood what you wrote and the fixed program works like a charm. But I still get segmentation fault when these lines are in the code:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    avro_value_get_size(&amp;amp;simple_map, &amp;amp;map_size);
    for (i = 0; i &amp;lt; map_size; i++) {
        avro_value_get_by_index(&amp;amp;simple_map, i, &amp;amp;tmp, (const char**)&amp;amp;key);
        avro_value_get_string(&amp;amp;tmp, (const char**)value, &amp;amp;value_size);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I still use the 1.7.4 version.&lt;/p&gt;

&lt;p&gt;I didn&apos;t found lot of examples on the internet, so you could use this sample program in the documentation &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13851685" author="dcreager" created="Wed, 18 Dec 2013 13:14:45 +0000"  >&lt;p&gt;You want &lt;tt&gt;(const char **) &amp;amp;value&lt;/tt&gt;, not &lt;tt&gt;(const char **) value&lt;/tt&gt;.  If value is declared as &lt;tt&gt;const char *&lt;/tt&gt;, then you shouldn&apos;t need a cast at all; &lt;tt&gt;&amp;amp;value&lt;/tt&gt; on its own should work.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12600400" name="main-fixed.c" size="2844" author="dcreager" created="Wed, 28 Aug 2013 14:25:29 +0000"/>
                            <attachment id="12597947" name="main.c" size="3145" author="btibi" created="Wed, 14 Aug 2013 11:45:17 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 28 Aug 2013 13:32:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>343627</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 5 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1n9db:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>343931</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1362] C# parser allows incorrect syntax for record fields of a named type</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1362</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The following schema compiles successfully in Avro(c#), but in Avro(Java)returns a &quot;Type not supported: Invoice&quot; when parsing the &quot;ListOfInvoices&quot; array.  &lt;br/&gt;
Problem appears to be in the parse method.  {&quot;items&quot;: &quot;Invoice&quot;} does not properly parse to find the &quot;Invoice&quot; type.&lt;/p&gt;

&lt;p&gt;{   &quot;namespace&quot;: &quot;SampleClasses&quot;,&lt;br/&gt;
    &quot;name&quot;: &quot;Batch&quot;,&lt;br/&gt;
    &quot;type&quot;: &quot;record&quot;,&lt;br/&gt;
    &quot;fields&quot;: [&lt;br/&gt;
		{ &quot;name&quot;: &quot;Invoices&quot;, &quot;type&quot;: {&lt;br/&gt;
				&quot;type&quot;: &quot;array&quot;,&lt;br/&gt;
				&quot;items&quot;: {&lt;br/&gt;
                            &quot;name&quot;: &quot;Invoice&quot;,&lt;br/&gt;
                            &quot;type&quot;: &quot;record&quot;,&lt;br/&gt;
                            &quot;fields&quot;: [&lt;/p&gt;
                                { &quot;name&quot;: &quot;Id&quot;, &quot;type&quot;: &quot;string&quot; }
&lt;p&gt;                            ]&lt;br/&gt;
						}&lt;br/&gt;
				}&lt;br/&gt;
		},&lt;br/&gt;
		&lt;/p&gt;
{ &quot;name&quot;: &quot;SingleInvoice&quot;, &quot;type&quot;: &quot;Invoice&quot; }
&lt;p&gt;,            // This reference to &quot;Invoice&quot; works fine.&lt;br/&gt;
		{ &quot;name&quot;: &quot;ListOfInvoices&quot;, &quot;type&quot;: {&lt;br/&gt;
				&quot;type&quot;: &quot;array&quot;, &quot;items&quot;: &lt;/p&gt;
{	&quot;type&quot;: &quot;Invoice&quot; }
&lt;p&gt;    // Fails - does not get previous definition of &quot;Invoice&quot;&lt;br/&gt;
			    }&lt;br/&gt;
		}&lt;br/&gt;
	]&lt;br/&gt;
}&lt;/p&gt;</description>
                <environment>&lt;p&gt;Schema class - org.apache.avro:avro:1.7.4&lt;br/&gt;
Also confirmed in Avro 1.7.5 (RC)&lt;/p&gt;</environment>
        <key id="12663905">AVRO-1362</key>
            <summary>C# parser allows incorrect syntax for record fields of a named type</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="bill baird">Bill Baird</reporter>
                        <labels>
                    </labels>
                <created>Thu, 15 Aug 2013 18:59:52 +0000</created>
                <updated>Wed, 19 Mar 2014 06:07:49 +0000</updated>
                                            <version>1.7.4</version>
                                                    <component>csharp</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13741512" author="cutting" created="Thu, 15 Aug 2013 21:32:58 +0000"  >&lt;p&gt;The syntax is incorrect.  The correct way to refer to a named schema is just with its name as a string, not with &lt;/p&gt;
{&quot;type&quot;:&amp;lt;name&amp;gt;}
&lt;p&gt;.  The latter syntax may only be used with one of the fixed set of Avro schema types (null, boolean int, long, float, double, string, bytes, record, fixed, enum, array or map), not with user type names.  The C# implementation is non-standard in accepting this syntax.&lt;/p&gt;</comment>
                            <comment id="13741784" author="bill baird" created="Fri, 16 Aug 2013 01:20:20 +0000"  >&lt;p&gt;Thanks.  This makes sense.  Should this become a c# issue?&lt;/p&gt;</comment>
                            <comment id="13742496" author="cutting" created="Fri, 16 Aug 2013 18:25:39 +0000"  >&lt;p&gt;Yes, it seems to me that C# might be too permissive here.&lt;/p&gt;</comment>
                            <comment id="13940220" author="busbey" created="Wed, 19 Mar 2014 06:07:49 +0000"  >&lt;p&gt;Updated to indicate the issue is with the C# rather than Java implementation.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 15 Aug 2013 21:32:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>343906</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 44 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1nb2v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>344208</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1363] C# UnionSchema fails to parse the the unions with same type names with different namespaces</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1363</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;C# Union schema is unable to handle same type names with different namespaces. It&apos;s throwing &quot;SchemaParseException(&quot;Duplicate type in union: &quot;...) exception.&lt;/p&gt;

&lt;p&gt;In the below code, key of uniqueSchemas should be FullName of the type which is similar to Java implementation. &lt;/p&gt;

&lt;p&gt;internal static UnionSchema NewInstance(JArray jarr, PropertyMap props, SchemaNames names, string encspace)&lt;br/&gt;
        {&lt;br/&gt;
            List&amp;lt;Schema&amp;gt; schemas = new List&amp;lt;Schema&amp;gt;();&lt;br/&gt;
            IDictionary&amp;lt;string, string&amp;gt; uniqueSchemas = new Dictionary&amp;lt;string, string&amp;gt;();&lt;/p&gt;

&lt;p&gt;            foreach (JToken jvalue in jarr)&lt;/p&gt;
            {
                Schema unionType = Schema.ParseJson(jvalue, names, encspace);
                if (null == unionType)
                    throw new SchemaParseException(&quot;Invalid JSON in union&quot; + jvalue.ToString());

                string name = unionType.Name;
                if (uniqueSchemas.ContainsKey(name))
                    throw new SchemaParseException(&quot;Duplicate type in union: &quot; + name);

                uniqueSchemas.Add(name, name);
                schemas.Add(unionType);
            }

&lt;p&gt;            return new UnionSchema(schemas, props);&lt;br/&gt;
        }&lt;/p&gt;

&lt;p&gt;See the attachement to recreate the issue&lt;/p&gt;</description>
                <environment></environment>
        <key id="12664609">AVRO-1363</key>
            <summary>C# UnionSchema fails to parse the the unions with same type names with different namespaces</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dkulp">Daniel Kulp</assignee>
                                    <reporter username="ramanasv">Ramana Suvarapu</reporter>
                        <labels>
                    </labels>
                <created>Tue, 20 Aug 2013 13:11:08 +0000</created>
                <updated>Wed, 5 Dec 2018 16:52:21 +0000</updated>
                            <resolved>Wed, 5 Dec 2018 16:52:21 +0000</resolved>
                                    <version>1.7.4</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>csharp</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="15658499" author="githubbot" created="Fri, 11 Nov 2016 23:25:39 +0000"  >&lt;p&gt;GitHub user Simon24601 opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/156&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/156&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1363&quot; title=&quot;C# UnionSchema fails to parse the the unions with same type names with different namespaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1363&quot;&gt;&lt;del&gt;AVRO-1363&lt;/del&gt;&lt;/a&gt; Fix the C# parsing of a union schema &lt;/p&gt;

&lt;p&gt;     Fix the C# parsing of a union schema that contains  duplicate names but in different namespaces. The full name is now used when parsing the schema. This is identical to my previous pull request on this topic, but I&apos;ve rebased to apache/master and squashed all the commits to a single commit. &lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/Simon24601/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Simon24601/avro&lt;/a&gt; AVRO_1363_squashed&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/156.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/156.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #156&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit d7b6622343590ce7304a03a7e2085dde34f5f2ab&lt;br/&gt;
Author: srw &amp;lt;srw@localhost&amp;gt;&lt;br/&gt;
Date:   2016-11-11T23:23:11Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1363&quot; title=&quot;C# UnionSchema fails to parse the the unions with same type names with different namespaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1363&quot;&gt;&lt;del&gt;AVRO-1363&lt;/del&gt;&lt;/a&gt; Fix the C# parsing of a union schema that contains duplicate names but in different namespaces. The full name is now used when parsing the schema&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="16310187" author="bukovics" created="Wed, 3 Jan 2018 19:50:00 +0000"  >&lt;p&gt;I&apos;ve run into this same issue recently and locally hacked the avro code to correct the issue in a similar way.  Is there any ETA on when this fix might make it into the product?&lt;/p&gt;</comment>
                            <comment id="16707733" author="jira-bot" created="Mon, 3 Dec 2018 20:13:44 +0000"  >&lt;p&gt;Commit b5bec5ca18901507f6fc01d635f10465fd3edcdf in avro&apos;s branch refs/heads/master from Simon24601&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=b5bec5c&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=b5bec5c&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Avro1363  C# union schema can now contain multiple entries with the same name and different namespace (#131)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1849&quot; title=&quot;C++ printJson fails on record with no fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1849&quot;&gt;&lt;del&gt;AVRO-1849&lt;/del&gt;&lt;/a&gt; Fix the issue where converting the schema of a record with no fields produced an invalid JSON&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Fix style issues in the code.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Fix the build scripts; build.sh requires the :z addition to work on SELinux (see Jira 1925). lang/c+&lt;ins&gt;/build.sh refers to the lang/c&lt;/ins&gt;+/build directory which is empty. These are now fixed.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Update to use BOOST_TEST_CHECKPOINT&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1926&quot; title=&quot;lang/c++ build.sh  doesn&amp;#39;t work&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1926&quot;&gt;&lt;del&gt;AVRO-1926&lt;/del&gt;&lt;/a&gt; Revert changes to the lang/c++/build.sh script and add the SchemaTests to the list of tests. Also revert SELinux changes to build.sh as these should be committed separately&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1363&quot; title=&quot;C# UnionSchema fails to parse the the unions with same type names with different namespaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1363&quot;&gt;&lt;del&gt;AVRO-1363&lt;/del&gt;&lt;/a&gt; Fix the parsing of a union schema with duplicate names but different namespaces. In Java, this works, but not in C#&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Remove c++ changes from the AVRO1363 branch&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16710271" author="githubbot" created="Wed, 5 Dec 2018 16:06:28 +0000"  >&lt;p&gt;dkulp closed pull request #156: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1363&quot; title=&quot;C# UnionSchema fails to parse the the unions with same type names with different namespaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1363&quot;&gt;&lt;del&gt;AVRO-1363&lt;/del&gt;&lt;/a&gt; Fix the C# parsing of a union schema &lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/156&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/156&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/csharp/src/apache/main/Schema/NamedSchema.cs b/lang/csharp/src/apache/main/Schema/NamedSchema.cs&lt;br/&gt;
index 02beb7984..b75483f84 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/main/Schema/NamedSchema.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/main/Schema/NamedSchema.cs&lt;br/&gt;
@@ -52,7 +52,7 @@ public string Namespace&lt;br/&gt;
         /// &amp;lt;summary&amp;gt;&lt;br/&gt;
         /// Namespace.Name of the schema&lt;br/&gt;
         /// &amp;lt;/summary&amp;gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public string Fullname&lt;br/&gt;
+        public override string Fullname
         &lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {             get { return SchemaName.Fullname; }         }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;diff --git a/lang/csharp/src/apache/main/Schema/Schema.cs b/lang/csharp/src/apache/main/Schema/Schema.cs&lt;br/&gt;
index fc0e23792..d2d2f079c 100644&lt;/p&gt;
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/csharp/src/apache/main/Schema/Schema.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/main/Schema/Schema.cs&lt;br/&gt;
@@ -70,12 +70,20 @@ protected Schema(Type type, PropertyMap props)&lt;br/&gt;
             this.Props = props;&lt;br/&gt;
         }&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+        /// &amp;lt;summary&amp;gt;&lt;br/&gt;
+        /// If this is a record, enum or fixed, returns its name, otherwise the name the primitive type. &lt;br/&gt;
+        /// &amp;lt;/summary&amp;gt;&lt;br/&gt;
+        public abstract string Name &lt;/p&gt;
{ get; }&lt;br/&gt;
+        &lt;br/&gt;
         /// &amp;lt;summary&amp;gt;&lt;br/&gt;
         /// The name of this schema. If this is a named schema such as an enum, it returns the fully qualified&lt;br/&gt;
         /// name for the schema. For other schemas, it returns the type of the schema.&lt;br/&gt;
         /// &amp;lt;/summary&amp;gt;&lt;br/&gt;
-        public abstract string Name { get; }
&lt;p&gt;-&lt;br/&gt;
+        public virtual string Fullname &lt;br/&gt;
+        {&lt;br/&gt;
+            get &lt;/p&gt;
{ return Name; }
&lt;p&gt;+        }&lt;br/&gt;
+        &lt;br/&gt;
         /// &amp;lt;summary&amp;gt;&lt;br/&gt;
         /// Static class to return new instance of schema object&lt;br/&gt;
         /// &amp;lt;/summary&amp;gt;&lt;br/&gt;
diff --git a/lang/csharp/src/apache/main/Schema/UnionSchema.cs b/lang/csharp/src/apache/main/Schema/UnionSchema.cs&lt;br/&gt;
index df2c37fce..bc2ab5b9b 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/main/Schema/UnionSchema.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/main/Schema/UnionSchema.cs&lt;br/&gt;
@@ -56,7 +56,7 @@ internal static UnionSchema NewInstance(JArray jarr, PropertyMap props, SchemaNa&lt;br/&gt;
                 if (null == unionType)&lt;br/&gt;
                     throw new SchemaParseException(&quot;Invalid JSON in union&quot; + jvalue.ToString());&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;string name = unionType.Name;&lt;br/&gt;
+                string name = unionType.Fullname;&lt;br/&gt;
                 if (uniqueSchemas.ContainsKey(name))&lt;br/&gt;
                     throw new SchemaParseException(&quot;Duplicate type in union: &quot; + name);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;diff --git a/lang/csharp/src/apache/test/Schema/SchemaTests.cs b/lang/csharp/src/apache/test/Schema/SchemaTests.cs&lt;br/&gt;
index b12483187..885b5a40b 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/test/Schema/SchemaTests.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/test/Schema/SchemaTests.cs&lt;br/&gt;
@@ -69,7 +69,8 @@ public class SchemaTests&lt;br/&gt;
             Description = &quot;No fields&quot;, ExpectedException = typeof(SchemaParseException))]&lt;br/&gt;
         [TestCase(&quot;&lt;/p&gt;
{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;LongList\&quot;, \&quot;fields\&quot;: \&quot;hi\&quot;}
&lt;p&gt;&quot;,&lt;br/&gt;
             Description = &quot;Fields not an array&quot;, ExpectedException = typeof(SchemaParseException))]&lt;br/&gt;
-&lt;br/&gt;
+        [TestCase(&quot;[{\&quot;type\&quot;: \&quot;record\&quot;,\&quot;name\&quot;: \&quot;Test\&quot;,\&quot;namespace\&quot;:\&quot;ns1\&quot;,\&quot;fields\&quot;: [&lt;/p&gt;
{\&quot;name\&quot;: \&quot;f\&quot;,\&quot;type\&quot;: \&quot;long\&quot;}
&lt;p&gt;]},&quot; + &lt;br/&gt;
+                   &quot;{\&quot;type\&quot;: \&quot;record\&quot;,\&quot;name\&quot;: \&quot;Test\&quot;,\&quot;namespace\&quot;:\&quot;ns2\&quot;,\&quot;fields\&quot;: [&lt;/p&gt;
{\&quot;name\&quot;: \&quot;f\&quot;,\&quot;type\&quot;: \&quot;long\&quot;}
&lt;p&gt;]}]&quot;)]&lt;br/&gt;
         // Enum&lt;br/&gt;
         [TestCase(&quot;&lt;/p&gt;
{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;name\&quot;: \&quot;Test\&quot;, \&quot;symbols\&quot;: [\&quot;A\&quot;, \&quot;B\&quot;]}
&lt;p&gt;&quot;)]&lt;br/&gt;
         [TestCase(&quot;&lt;/p&gt;
{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;name\&quot;: \&quot;Status\&quot;, \&quot;symbols\&quot;: \&quot;Normal Caution Critical\&quot;}
&lt;p&gt;&quot;,&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12598945" name="reader.avpr" size="989" author="ramanasv" created="Tue, 20 Aug 2013 13:11:51 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 11 Nov 2016 23:25:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>344552</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1nf1b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>344852</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
