<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:17:56 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2012-11-13+AND+created+%3C%3D+2012-11-20+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="6" total="6"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1204] Schema.createUnion can produce schemas that aren&apos;t parseable due to redefinition of types</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1204</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Schemas returned from &lt;tt&gt;Schema.createUnion&lt;/tt&gt; aren&apos;t always re-parsable (after calling Schema.toString()).&lt;/p&gt;

&lt;p&gt;If you create a union of types that contain multiple references to the same type, the resulting &lt;tt&gt;Schema&lt;/tt&gt; instance returned can&apos;t be written to JSON and then re-parsed due to a SchemaParseException on type redefinition.&lt;/p&gt;

&lt;p&gt;The fix probably involves changes to &lt;tt&gt;UnionSchema.toJson&lt;/tt&gt; to ensure that any repeated type definitions are replaced by a named reference.&lt;/p&gt;

&lt;p&gt;For a concrete example, the union of the following two schemas is problematic:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;child-schema.avsc&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-javascript&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
 &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;UnionTestChild&quot;&lt;/span&gt;,
 &lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.avro&quot;&lt;/span&gt;,
 &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[
               { &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;intField&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt;},
               { &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;stringField&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;}
           ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;parent-schema.avsc&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-javascript&quot;&gt;{
   &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
   &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;UnionTestParent&quot;&lt;/span&gt;,
   &lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.avro&quot;&lt;/span&gt;,
   &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[
      {
         &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;child&quot;&lt;/span&gt;,
         &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:{
            &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
            &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;UnionTestChild&quot;&lt;/span&gt;,
            &lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.avro&quot;&lt;/span&gt;,
            &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[
               { &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;intField&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt;},
               { &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;stringField&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;}
            ]
         }
      }
   ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12616015">AVRO-1204</key>
            <summary>Schema.createUnion can produce schemas that aren&apos;t parseable due to redefinition of types</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="marciosilva">Marcio Silva</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 Nov 2012 04:01:17 +0000</created>
                <updated>Sat, 17 Nov 2012 01:08:26 +0000</updated>
                                            <version>1.7.2</version>
                    <version>1.7.3</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13496841" author="marciosilva" created="Wed, 14 Nov 2012 04:11:58 +0000"  >&lt;p&gt;A patch that contains a junit test that illustrates the problem.&lt;/p&gt;</comment>
                            <comment id="13499244" author="cutting" created="Fri, 16 Nov 2012 23:35:18 +0000"  >&lt;p&gt;I was able to make this test pass.  I have attached my modified version.&lt;/p&gt;

&lt;p&gt;At first it failed in setUp() while parsing the parent schema using a parser that already had the child schema defined.  So I changed it to create a new parser for each, since the parent file is a standalone schema and does not refer to the child by name.&lt;/p&gt;

&lt;p&gt;Secondly I changed the assertEquals() in assertSchemaParseable() to compare the schema against its printed and parsed equivalent.&lt;/p&gt;

&lt;p&gt;I think these were both bugs in the test, not bugs in Avro.  So, perhaps there is a bug in Avro you&apos;re encountering, but I don&apos;t see how this test demonstrates it.&lt;/p&gt;</comment>
                            <comment id="13499294" author="marciosilva" created="Sat, 17 Nov 2012 01:08:26 +0000"  >&lt;p&gt;Sorry, I should&apos;ve been more thorough in testing the unit test (I stopped when I saw my same error, should&apos;ve looked at the stack trace) We were seeing this bug with some of our internal schemas.  I&apos;ll try to see if I can create a better test to reproduce the error we were seeing.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12553450" name="0001-Creating-test-case-to-illustrate-Union-schema-proble.patch" size="3898" author="marciosilva" created="Wed, 14 Nov 2012 04:11:58 +0000"/>
                            <attachment id="12553860" name="AVRO-1204.patch" size="3607" author="cutting" created="Fri, 16 Nov 2012 23:35:18 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 16 Nov 2012 23:35:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>257628</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 10 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0k3nr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>115410</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1205] Add Stereotype Annotation to Generated Beans</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1205</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Avro generated schema beans currently lack a formal way of distinguishing them as Avro schema beans at runtime. I would like to propose that a new stereotype annotation be added to Avro Core and the ability to have all Avro generated schema beans annotated with this newly created stereotype annotation.&lt;/p&gt;

&lt;p&gt;I&apos;m planning on adding a FallbackTypeConverter to the Camel-Avro project and I hoping this feature will allow me to cleanly detect Avro beans for conversion at runtime.&lt;/p&gt;


&lt;p&gt;If this feature is implemented Avro schema beans would look something like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;...

@org.apache.avro.reflect.AvroSchema
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;User &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; org.apache.avro.specific.SpecificRecordBase &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; org.apache.avro.specific.SpecificRecord {

...

}
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;The maven plugin configuration would look something like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&amp;lt;plugin&amp;gt;
  &amp;lt;groupId&amp;gt;org.apache.avro&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;avro-maven-plugin&amp;lt;/artifactId&amp;gt;
  &amp;lt;executions&amp;gt;
    &amp;lt;execution&amp;gt;
      &amp;lt;goals&amp;gt;
        &amp;lt;goal&amp;gt;schema&amp;lt;/goal&amp;gt;
      &amp;lt;/goals&amp;gt;
    &amp;lt;/execution&amp;gt;
  &amp;lt;/executions&amp;gt;
  &amp;lt;configuration&amp;gt;
   &amp;lt;stereotype&amp;gt;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&amp;lt;/stereotype&amp;gt;
  &amp;lt;/configuration&amp;gt;
&amp;lt;/plugin&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12616081">AVRO-1205</key>
            <summary>Add Stereotype Annotation to Generated Beans</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="saden1">Sharmarke Aden</assignee>
                                    <reporter username="saden1">Sharmarke Aden</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 Nov 2012 15:52:31 +0000</created>
                <updated>Mon, 10 Dec 2012 17:57:37 +0000</updated>
                            <resolved>Wed, 21 Nov 2012 22:57:52 +0000</resolved>
                                    <version>1.7.2</version>
                                    <fixVersion>1.7.3</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13497585" author="cutting" created="Wed, 14 Nov 2012 23:30:30 +0000"  >&lt;p&gt;Adding an annotation to emitted classes seems reasonable.&lt;/p&gt;

&lt;p&gt;Is there any harm in always generating the annotation?  Why make it optional?&lt;/p&gt;

&lt;p&gt;Also, if the annotation is emitted by the specific compiler it should probably be in the package org.apache.avro.specific, not org.apache.avro.reflect, no?&lt;/p&gt;

&lt;p&gt;Finally, I note that Java has an annotation for generated code:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.oracle.com/javase/6/docs/api/javax/annotation/Generated.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://docs.oracle.com/javase/6/docs/api/javax/annotation/Generated.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We could instead emit this as something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;@javax.annotation.Generated(value = { &lt;span class=&quot;code-quote&quot;&gt;&quot;avro&quot;&lt;/span&gt; });
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but that would be harder to check, since you couldn&apos;t just call Class#isAnnotationPresent().&lt;/p&gt;</comment>
                            <comment id="13497682" author="saden1" created="Thu, 15 Nov 2012 01:24:19 +0000"  >&lt;p&gt;There is no harm in always adding an annotation to emitted classes and doing so would preferable. I don&apos;t know enough about package placement preference in Avro so I will deffer to you on the matter. &lt;/p&gt;

&lt;p&gt;With respect to using Generated annotation, I believe annotating all generated beans using standard annotations would be wise but as you&apos;ve mentioned it makes runtime detection of Avro beans a bit more cumbersome and clunky. My preference is to have Avro own its annotation(s) much like JAXB and various other frameworks. &lt;/p&gt;</comment>
                            <comment id="13500022" author="saden1" created="Mon, 19 Nov 2012 05:16:41 +0000"  >&lt;p&gt;Here is a patch that adds an annotation called AvroSchema and annotates generated beans with it.&lt;/p&gt;</comment>
                            <comment id="13500633" author="cutting" created="Mon, 19 Nov 2012 20:39:45 +0000"  >&lt;p&gt;Patch looks good.  A few minor comments:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The annotation interface needs some javadoc describing how it&apos;s used.&lt;/li&gt;
	&lt;li&gt;A better name might be AvroGenerated instead of AvroSchema?&lt;/li&gt;
	&lt;li&gt;Should we also annotate generated protocol interfaces?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13500727" author="saden1" created="Mon, 19 Nov 2012 23:26:44 +0000"  >&lt;p&gt;Here is an updated patch that contains Doug&apos;s recommendations. &lt;/p&gt;</comment>
                            <comment id="13502399" author="cutting" created="Wed, 21 Nov 2012 22:57:52 +0000"  >&lt;p&gt;I committed this.  Thanks, Sharmarke!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12554118" name="vcs-diff6870599675664484518.patch" size="5778" author="saden1" created="Mon, 19 Nov 2012 05:16:41 +0000"/>
                            <attachment id="12554257" name="vcs-diff7678145690419942974.patch" size="6716" author="saden1" created="Mon, 19 Nov 2012 23:26:43 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 14 Nov 2012 23:30:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>257824</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 9 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0kk8n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>118096</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>schema, bean, annotation, stereotype, runtime, maven</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1206] utf-8 serialisation problems </title>
                <link>https://issues.apache.org/jira/browse/AVRO-1206</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;some serialized utf-8 characters like &quot;&#23478;&quot; cannot be read latter, avro break with &lt;br/&gt;
/gems/ruby-1.9.3-p194/gems/avro-1.7.2/lib/avro/io.rb:230:in `match_schemas&apos;: undefined method `type&apos; for nil:NilClass (NoMethodError)&lt;br/&gt;
	from /home/Tophe/.rvm/gems/ruby-1.9.3-p194/gems/avro-1.7.2/lib/avro/io.rb:288:in `read_data&apos;&lt;br/&gt;
	from /home/Tophe/.rvm/gems/ruby-1.9.3-p194/gems/avro-1.7.2/lib/avro/io.rb:384:in `read_union&apos;&lt;br/&gt;
	from /home/Tophe/.rvm/gems/ruby-1.9.3-p194/gems/avro-1.7.2/lib/avro/io.rb:317:in `read_data&apos;&lt;br/&gt;
	from /home/Tophe/.rvm/gems/ruby-1.9.3-p194/gems/avro-1.7.2/lib/avro/io.rb:392:in `block in read_record&apos;&lt;br/&gt;
	from /home/Tophe/.rvm/gems/ruby-1.9.3-p194/gems/avro-1.7.2/lib/avro/io.rb:390:in `each&apos;&lt;br/&gt;
	from /home/Tophe/.rvm/gems/ruby-1.9.3-p194/gems/avro-1.7.2/lib/avro/io.rb:390:in `read_record&apos;&lt;br/&gt;
	from /home/Tophe/.rvm/gems/ruby-1.9.3-p194/gems/avro-1.7.2/lib/avro/io.rb:318:in `read_data&apos;&lt;br/&gt;
	from /home/Tophe/.rvm/gems/ruby-1.9.3-p194/gems/avro-1.7.2/lib/avro/io.rb:283:in `read&apos;&lt;br/&gt;
	from /home/Tophe/.rvm/gems/ruby-1.9.3-p194/gems/avro-1.7.2/lib/avro/data_file.rb:223:in `block in each&apos;&lt;br/&gt;
	from /home/Tophe/.rvm/gems/ruby-1.9.3-p194/gems/avro-1.7.2/lib/avro/data_file.rb:211:in `loop&apos;&lt;br/&gt;
	from /home/Tophe/.rvm/gems/ruby-1.9.3-p194/gems/avro-1.7.2/lib/avro/data_file.rb:211:in `each&apos;&lt;br/&gt;
	from avr_err_example.rb:42:in `block in &amp;lt;main&amp;gt;&apos;&lt;/p&gt;</description>
                <environment>&lt;p&gt;ruby-1.9.3p194, avro gem 1.7.2.&lt;/p&gt;</environment>
        <key id="12616408">AVRO-1206</key>
            <summary>utf-8 serialisation problems </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="cvigny">Tophe Vigny</reporter>
                        <labels>
                    </labels>
                <created>Fri, 16 Nov 2012 13:27:18 +0000</created>
                <updated>Mon, 10 Dec 2012 17:57:35 +0000</updated>
                            <resolved>Wed, 28 Nov 2012 22:35:22 +0000</resolved>
                                    <version>1.7.2</version>
                                    <fixVersion>1.7.3</fixVersion>
                                    <component>ruby</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13499230" author="cutting" created="Fri, 16 Nov 2012 23:09:36 +0000"  >&lt;p&gt;Is this the same problem as &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1134&quot; title=&quot;Ruby datafile serialization fails with UTF-8 characters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1134&quot;&gt;&lt;del&gt;AVRO-1134&lt;/del&gt;&lt;/a&gt;?  Should we commit the fix there?&lt;/p&gt;</comment>
                            <comment id="13500110" author="cvigny" created="Mon, 19 Nov 2012 09:30:41 +0000"  >&lt;p&gt;hi all,&lt;/p&gt;

&lt;p&gt;I have merged the patch from &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1134&quot; title=&quot;Ruby datafile serialization fails with UTF-8 characters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1134&quot;&gt;&lt;del&gt;AVRO-1134&lt;/del&gt;&lt;/a&gt;, and then all work.&lt;br/&gt;
I have run the test with ruby-1.9.3 and ruby-1.8.7, all of them passed.&lt;br/&gt;
some test have to be modified because in 1.9.3 ./ isn&apos;t in the classpath, so change require &apos;test_help&apos; with require &apos;./test_help&apos; can solve the problem.&lt;br/&gt;
if you release a new 1.7.3 gems, can you also change :&lt;br/&gt;
s.description = &quot;Apache is a data serialization and RPC format&quot; with s.description = &quot;Avro is a data serialization and RPC format&quot;&lt;/p&gt;</comment>
                            <comment id="13500620" author="cutting" created="Mon, 19 Nov 2012 20:26:08 +0000"  >&lt;p&gt;Here&apos;s a patch that includes the patch from &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1134&quot; title=&quot;Ruby datafile serialization fails with UTF-8 characters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1134&quot;&gt;&lt;del&gt;AVRO-1134&lt;/del&gt;&lt;/a&gt; and updates the description.&lt;/p&gt;

&lt;p&gt;I also added a test, but the test passes for me with or without the change to io.rb in either Ruby 1.8.7 or 1.9.3.  I would rather not commit the change until we have a test that fails without it.  Can someone please help improve this test?&lt;/p&gt;</comment>
                            <comment id="13501145" author="cvigny" created="Tue, 20 Nov 2012 12:45:10 +0000"  >&lt;p&gt;Hi Doug, &lt;br/&gt;
I can help with the test issue.&lt;/p&gt;

&lt;p&gt;i get a copy from trunk&lt;br/&gt;
svn checkout &lt;a href=&quot;http://svn.apache.org/repos/asf/avro/trunk/lang/ruby/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/repos/asf/avro/trunk/lang/ruby/&lt;/a&gt;&lt;br/&gt;
A    ruby/test&lt;br/&gt;
A    ruby/test/tool.rb&lt;br/&gt;
A    ruby/test/test_protocol.rb&lt;br/&gt;
A    ruby/test/sample_ipc_http_server.rb&lt;br/&gt;
A    ruby/test/sample_ipc_server.rb&lt;br/&gt;
A    ruby/test/test_socket_transport.rb&lt;br/&gt;
A    ruby/test/test_io.rb&lt;br/&gt;
A    ruby/test/test_help.rb&lt;br/&gt;
A    ruby/test/test_datafile.rb&lt;br/&gt;
A    ruby/test/random_data.rb&lt;br/&gt;
A    ruby/test/sample_ipc_http_client.rb&lt;br/&gt;
A    ruby/test/sample_ipc_client.rb&lt;br/&gt;
A    ruby/interop&lt;br/&gt;
A    ruby/interop/test_interop.rb&lt;br/&gt;
A    ruby/Rakefile&lt;br/&gt;
A    ruby/.gitignore&lt;br/&gt;
A    ruby/Manifest&lt;br/&gt;
A    ruby/lib&lt;br/&gt;
A    ruby/lib/avro&lt;br/&gt;
A    ruby/lib/avro/schema.rb&lt;br/&gt;
A    ruby/lib/avro/protocol.rb&lt;br/&gt;
A    ruby/lib/avro/io.rb&lt;br/&gt;
A    ruby/lib/avro/collect_hash.rb&lt;br/&gt;
A    ruby/lib/avro/data_file.rb&lt;br/&gt;
A    ruby/lib/avro/ipc.rb&lt;br/&gt;
A    ruby/lib/avro.rb&lt;br/&gt;
A    ruby/CHANGELOG&lt;br/&gt;
 U   ruby&lt;br/&gt;
R&#233;vision 1411599 extraite.&lt;/p&gt;

&lt;p&gt;and then&lt;br/&gt;
patch &amp;lt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1206&quot; title=&quot;utf-8 serialisation problems &quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1206&quot;&gt;&lt;del&gt;AVRO-1206&lt;/del&gt;&lt;/a&gt;.patch &lt;br/&gt;
patching file Rakefile&lt;br/&gt;
patching file io.rb&lt;br/&gt;
Hunk #1 FAILED at 201.&lt;br/&gt;
1 out of 1 hunk FAILED &amp;#8211; saving rejects to file io.rb.rej&lt;br/&gt;
patching file test_datafile.rb&lt;br/&gt;
Hunk #1 FAILED at 1.&lt;br/&gt;
Hunk #2 FAILED at 140.&lt;br/&gt;
2 out of 2 hunks FAILED &amp;#8211; saving rejects to file test_datafile.rb.rej&lt;/p&gt;

&lt;p&gt;what the matter ?&lt;br/&gt;
I have merged the the test manualy, do some code modification to ensure loading of the ../lib/avro.&lt;br/&gt;
and so : with your test :&lt;br/&gt;
original io.rb&lt;br/&gt;
Tophe@info3:~/work/ruby/test$ ruby test_datafile.rb &lt;br/&gt;
Run options: &lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Running tests:&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;...F&lt;/p&gt;

&lt;p&gt;Finished tests in 0.088778s, 45.0561 tests/s, 878.5939 assertions/s.&lt;/p&gt;

&lt;p&gt;  1) Failure:&lt;br/&gt;
test_utf8(TestDataFile) &lt;span class=&quot;error&quot;&gt;&amp;#91;test_datafile.rb:155&amp;#93;&lt;/span&gt;:&lt;br/&gt;
&amp;lt;&quot;&#23478;&quot;&amp;gt; expected but was&lt;br/&gt;
&amp;lt;&quot;\xE5&quot;&amp;gt;.&lt;/p&gt;

&lt;p&gt;4 tests, 78 assertions, 1 failures, 0 errors, 0 skips&lt;br/&gt;
only one byte stored fo a  bytes char, and with modified io.rb&lt;br/&gt;
Tophe@info3:~/work/ruby/test$ ruby test_datafile.rb &lt;br/&gt;
Run options: &lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Running tests:&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;....&lt;/p&gt;

&lt;p&gt;Finished tests in 0.088450s, 45.2230 tests/s, 881.8492 assertions/s.&lt;/p&gt;

&lt;p&gt;4 tests, 78 assertions, 0 failures, 0 errors, 0 skips&lt;/p&gt;

&lt;p&gt;you need to add &lt;/p&gt;

&lt;p&gt;#encoding: utf-8 at the begining of test_datafile.rb&lt;br/&gt;
for the assertion, we can do :&lt;br/&gt;
      (rmaj,rmin,rlast) = RUBY_VERSION.split(&quot;.&quot;).map &lt;/p&gt;
{|a| a.to_i}
&lt;p&gt;      if rmaj &amp;lt;2 &amp;amp;&amp;amp;  rmin &amp;lt; 9&lt;br/&gt;
        assert_equal &quot;&#23478;&quot;, s&lt;br/&gt;
      else&lt;br/&gt;
        assert_equal &quot;&#23478;&quot;, s.force_encoding(&apos;UTF-8&apos;) &lt;br/&gt;
      end&lt;br/&gt;
that test work with ruby 1.8 and &amp;gt;= 1.9 because of the encoding awareness of 1.9 ruby branche, you need to specify encoding, or we need to compre in binary.&lt;/p&gt;

&lt;p&gt;is it possible to specify the encoding in the schema, either for all data, or by string type ? that could contribute to have the reader returning correct string encoding.&lt;br/&gt;
that can be more simple to use, because reader don&apos;t need to know the encoding.&lt;/p&gt;

&lt;p&gt;the problem for you is that you are loading the gem and not the ../lib, and you have made the correction on the gem. (I have the same problem, and I spend some time on that)&lt;br/&gt;
try that:&lt;br/&gt;
gem uninstall avro (all)&lt;/p&gt;

&lt;p&gt;and run the test , it should not run. because there are some require &apos;avro&apos; along the code, and that load the gem, not the source code.&lt;br/&gt;
to load the source code you should do in the test_help.rb :&lt;/p&gt;

&lt;p&gt;$LOAD_PATH &amp;lt;&amp;lt; &apos;../lib/&apos;&lt;br/&gt;
require &apos;avro&apos;&lt;br/&gt;
that way, avro.rb should be loaded from ../lib and not $GEM_HOME/...&lt;/p&gt;

&lt;p&gt;I can send you a patch, if I can apply your patch on the trunk. tell me if you need, and what to do.&lt;br/&gt;
by the way you can remove the FIXME in&lt;br/&gt;
def write_string(datum)&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;FIXME utf-8 encode this in 1.9&lt;br/&gt;
    write_bytes(datum)&lt;br/&gt;
end&lt;/li&gt;
&lt;/ol&gt;


</comment>
                            <comment id="13501539" author="cutting" created="Tue, 20 Nov 2012 22:08:38 +0000"  >&lt;p&gt;Test passes for me when I apply it as follows:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; svn co http:&lt;span class=&quot;code-comment&quot;&gt;//svn.apache.org/repos/asf/avro/trunk
&lt;/span&gt; cd trunk/lang/ruby
 patch -p 0 &amp;lt; AVRO-1206.patch
 rake test
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If I run &apos;gem uninstall avro&apos; I get the message:&lt;/p&gt;

&lt;p&gt;  INFO:  gem &quot;avro&quot; is not installed&lt;/p&gt;

</comment>
                            <comment id="13502001" author="cvigny" created="Wed, 21 Nov 2012 14:23:08 +0000"  >&lt;p&gt;hi Doug,&lt;/p&gt;

&lt;p&gt;you are using ruby 1.8.x (oldest branch), try with ruby &amp;gt; 1.9.x (official branch), you can use rvm (ruby version manager) to install multiple ruby version.&lt;/p&gt;

&lt;p&gt;Tophe@info3:~/work/svn_1/trunk/lang/ruby$ rvm use 1.8.7&lt;br/&gt;
Using /home/Tophe/.rvm/gems/ruby-1.8.7-p371&lt;br/&gt;
Tophe@info3:~/work/svn_1/trunk/lang/ruby$ rake test&lt;br/&gt;
/home/Tophe/work/svn_1/trunk/lang/ruby/Rakefile:19: warning: already initialized constant VERSION&lt;br/&gt;
/home/Tophe/.rvm/rubies/ruby-1.8.7-p371/bin/ruby -I&quot;lib:ext:bin:test&quot; -I&quot;/home/Tophe/.rvm/gems/ruby-1.8.7-p371@global/gems/rake-10.0.2/lib&quot; &quot;/home/Tophe/.rvm/gems/ruby-1.8.7-p371@global/gems/rake-10.0.2/lib/rake/rake_test_loader.rb&quot; &quot;test/test_socket_transport.rb&quot; &quot;test/test_io.rb&quot; &quot;test/test_datafile.rb&quot; &quot;test/test_help.rb&quot; &quot;test/test_protocol.rb&quot; &lt;br/&gt;
Loaded suite /home/Tophe/.rvm/gems/ruby-1.8.7-p371@global/gems/rake-10.0.2/lib/rake/rake_test_loader&lt;br/&gt;
Started&lt;br/&gt;
................................&lt;br/&gt;
Finished in 0.536805 seconds.&lt;/p&gt;

&lt;p&gt;32 tests, 710 assertions, 0 failures, 0 errors&lt;/p&gt;


&lt;p&gt;Tophe@info3:~/work/svn_1/trunk/lang/ruby$ rvm use 1.9.3&lt;br/&gt;
Using /home/Tophe/.rvm/gems/ruby-1.9.3-p327&lt;br/&gt;
Tophe@info3:~/work/svn_1/trunk/lang/ruby$ rake test&lt;br/&gt;
/home/Tophe/.rvm/rubies/ruby-1.9.3-p327/bin/ruby -I&quot;lib:ext:bin:test&quot; -I&quot;/home/Tophe/.rvm/gems/ruby-1.9.3-p327@global/gems/rake-10.0.2/lib&quot; &quot;/home/Tophe/.rvm/gems/ruby-1.9.3-p327@global/gems/rake-10.0.2/lib/rake/rake_test_loader.rb&quot; &quot;test/test_socket_transport.rb&quot; &quot;test/test_io.rb&quot; &quot;test/test_datafile.rb&quot; &quot;test/test_help.rb&quot; &quot;test/test_protocol.rb&quot; &lt;br/&gt;
Run options: &lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Running tests:&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;...F............................&lt;/p&gt;

&lt;p&gt;Finished tests in 0.212220s, 150.7870 tests/s, 3345.5875 assertions/s.&lt;/p&gt;

&lt;p&gt;  1) Failure:&lt;br/&gt;
test_utf8(TestDataFile) &lt;span class=&quot;error&quot;&gt;&amp;#91;/home/Tophe/work/svn_1/trunk/lang/ruby/test/test_datafile.rb:152&amp;#93;&lt;/span&gt;:&lt;br/&gt;
&amp;lt;&quot;&#23478;&quot;&amp;gt; expected but was&lt;br/&gt;
&amp;lt;&quot;\xE5\xAE\xB6&quot;&amp;gt;.&lt;/p&gt;

&lt;p&gt;32 tests, 710 assertions, 1 failures, 0 errors, 0 skips&lt;br/&gt;
rake aborted!&lt;/p&gt;

&lt;p&gt;apply that modif :&lt;/p&gt;

&lt;p&gt;Index: test/test_datafile.rb&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; test/test_datafile.rb	(revision 1410649)&lt;br/&gt;
+++ test/test_datafile.rb	(working copy)&lt;br/&gt;
@@ -1,3 +1,4 @@&lt;br/&gt;
+# &lt;del&gt;&lt;b&gt;&lt;/del&gt; coding: utf-8 &lt;del&gt;&lt;/b&gt;&lt;/del&gt;&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Licensed to the Apache Software Foundation (ASF) under one&lt;/li&gt;
	&lt;li&gt;or more contributor license agreements.  See the NOTICE file&lt;/li&gt;
	&lt;li&gt;distributed with this work for additional information&lt;br/&gt;
@@ -140,4 +141,17 @@&lt;br/&gt;
       assert_equal(block_count+1, dw.block_count)&lt;br/&gt;
     end&lt;br/&gt;
   end&lt;br/&gt;
+  def test_utf8&lt;br/&gt;
+    datafile = Avro::DataFile::open(&apos;data.avr&apos;, &apos;w&apos;, &apos;&quot;string&quot;&apos;)&lt;br/&gt;
+    datafile &amp;lt;&amp;lt; &quot;&#23478;&quot;&lt;br/&gt;
+    datafile.close&lt;br/&gt;
+    &lt;br/&gt;
+    datafile = Avro::DataFile.open(&apos;data.avr&apos;)&lt;br/&gt;
+    datafile.each do |s|&lt;br/&gt;
+      (rmaj,rmin,rlast) = RUBY_VERSION.split(&quot;.&quot;).map 
{|a| a.to_i}
&lt;p&gt;+      if rmaj &amp;lt;2 &amp;amp;&amp;amp; rmin &amp;lt; 9&lt;br/&gt;
+        assert_equal &quot;&#23478;&quot;, s&lt;br/&gt;
+      else&lt;br/&gt;
+        assert_equal &quot;&#23478;&quot;, s.force_encoding(&apos;UTF-8&apos;)&lt;br/&gt;
+      end&lt;br/&gt;
+    end&lt;br/&gt;
+    datafile.close&lt;br/&gt;
+    end&lt;br/&gt;
+  end&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Tophe@info3:~/work/svn_1/trunk/lang/ruby$ rake test&lt;br/&gt;
/home/Tophe/.rvm/rubies/ruby-1.9.3-p327/bin/ruby -I&quot;lib:ext:bin:test&quot; -I&quot;/home/Tophe/.rvm/gems/ruby-1.9.3-p327@global/gems/rake-10.0.2/lib&quot; &quot;/home/Tophe/.rvm/gems/ruby-1.9.3-p327@global/gems/rake-10.0.2/lib/rake/rake_test_loader.rb&quot; &quot;test/test_socket_transport.rb&quot; &quot;test/test_io.rb&quot; &quot;test/test_datafile.rb&quot; &quot;test/test_help.rb&quot; &quot;test/test_protocol.rb&quot; &lt;br/&gt;
Run options: &lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Running tests:&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;................................&lt;/p&gt;

&lt;p&gt;Finished tests in 0.166176s, 192.5669 tests/s, 4272.5791 assertions/s.&lt;/p&gt;

&lt;p&gt;32 tests, 710 assertions, 0 failures, 0 errors, 0 skips&lt;/p&gt;

&lt;p&gt;and now change&lt;br/&gt;
      def write_bytes(datum)&lt;br/&gt;
        write_long(datum.size)&lt;br/&gt;
        @writer.write(datum)&lt;br/&gt;
      end&lt;/p&gt;


&lt;p&gt;and run test in 1.9.3&lt;br/&gt;
Tophe@info3:~/work/svn_1/trunk/lang/ruby$ rake test&lt;br/&gt;
/home/Tophe/.rvm/rubies/ruby-1.9.3-p327/bin/ruby -I&quot;lib:ext:bin:test&quot; -I&quot;/home/Tophe/.rvm/gems/ruby-1.9.3-p327@global/gems/rake-10.0.2/lib&quot; &quot;/home/Tophe/.rvm/gems/ruby-1.9.3-p327@global/gems/rake-10.0.2/lib/rake/rake_test_loader.rb&quot; &quot;test/test_socket_transport.rb&quot; &quot;test/test_io.rb&quot; &quot;test/test_datafile.rb&quot; &quot;test/test_help.rb&quot; &quot;test/test_protocol.rb&quot; &lt;br/&gt;
Run options: &lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Running tests:&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;...F............................&lt;/p&gt;

&lt;p&gt;Finished tests in 0.186894s, 171.2203 tests/s, 3798.9507 assertions/s.&lt;/p&gt;

&lt;p&gt;  1) Failure:&lt;br/&gt;
test_utf8(TestDataFile) &lt;span class=&quot;error&quot;&gt;&amp;#91;/home/Tophe/work/svn_1/trunk/lang/ruby/test/test_datafile.rb:156&amp;#93;&lt;/span&gt;:&lt;br/&gt;
&amp;lt;&quot;&#23478;&quot;&amp;gt; expected but was&lt;br/&gt;
&amp;lt;&quot;\xE5&quot;&amp;gt;.&lt;/p&gt;

&lt;p&gt;32 tests, 710 assertions, 1 failures, 0 errors, 0 skips&lt;br/&gt;
rake aborted!&lt;/p&gt;

&lt;p&gt;and no in 1.8.7&lt;/p&gt;

&lt;p&gt;Tophe@info3:~/work/svn_1/trunk/lang/ruby$ rvm use 1.8.7&lt;br/&gt;
Using /home/Tophe/.rvm/gems/ruby-1.8.7-p371&lt;br/&gt;
Tophe@info3:~/work/svn_1/trunk/lang/ruby$ rake test&lt;br/&gt;
/home/Tophe/work/svn_1/trunk/lang/ruby/Rakefile:19: warning: already initialized constant VERSION&lt;br/&gt;
/home/Tophe/.rvm/rubies/ruby-1.8.7-p371/bin/ruby -I&quot;lib:ext:bin:test&quot; -I&quot;/home/Tophe/.rvm/gems/ruby-1.8.7-p371@global/gems/rake-10.0.2/lib&quot; &quot;/home/Tophe/.rvm/gems/ruby-1.8.7-p371@global/gems/rake-10.0.2/lib/rake/rake_test_loader.rb&quot; &quot;test/test_socket_transport.rb&quot; &quot;test/test_io.rb&quot; &quot;test/test_datafile.rb&quot; &quot;test/test_help.rb&quot; &quot;test/test_protocol.rb&quot; &lt;br/&gt;
Loaded suite /home/Tophe/.rvm/gems/ruby-1.8.7-p371@global/gems/rake-10.0.2/lib/rake/rake_test_loader&lt;br/&gt;
Started&lt;br/&gt;
................................&lt;br/&gt;
Finished in 0.379195 seconds.&lt;/p&gt;

&lt;p&gt;32 tests, 710 assertions, 0 failures, 0 errors&lt;/p&gt;

&lt;p&gt;it seems that string.size, return the caracter count in ruby &amp;gt; 1.9, and not the byte count as in ruby &amp;lt; 1.9&lt;br/&gt;
the patch correct that and work for all rubies .&lt;br/&gt;
surely it can work with jruby, but need to remove yajl, ruby json perhaps can do the job ? and we can use avro in jruby with the avro gem.&lt;br/&gt;
Or yajl can be an option, if the require work it can be used, if not present can use JSON.load,dump.&lt;/p&gt;


</comment>
                            <comment id="13502406" author="cutting" created="Wed, 21 Nov 2012 23:07:04 +0000"  >&lt;p&gt;Hmm.  &apos;ruby --version&apos; prints 1.9.1 for me, but if this patch fixes things for you then I&apos;ll commit it.&lt;/p&gt;</comment>
                            <comment id="13502649" author="cvigny" created="Thu, 22 Nov 2012 08:42:00 +0000"  >&lt;p&gt;Hi Doug&lt;/p&gt;

&lt;p&gt;that&apos;s amazing. &lt;br/&gt;
for me the test don&apos;t work with a compiled ruby 1.9.1.&lt;br/&gt;
anyway, thank&apos;s you for the commit.&lt;/p&gt;



&lt;p&gt;Tophe@info3:~/work/svn_1/trunk/lang/ruby$ rvm use 1.9.1&lt;br/&gt;
Using /home/Tophe/.rvm/gems/ruby-1.9.1-p431&lt;br/&gt;
Tophe@info3:~/work/svn_1/trunk/lang/ruby$ rake test&lt;br/&gt;
/home/Tophe/.rvm/rubies/ruby-1.9.1-p431/bin/ruby -I&quot;lib:ext:bin:test&quot; -I&quot;/home/Tophe/.rvm/gems/ruby-1.9.1-p431@global/gems/rake-10.0.2/lib&quot; &quot;/home/Tophe/.rvm/gems/ruby-1.9.1-p431@global/gems/rake-10.0.2/lib/rake/rake_test_loader.rb&quot; &quot;test/test_socket_transport.rb&quot; &quot;test/test_io.rb&quot; &quot;test/test_datafile.rb&quot; &quot;test/test_help.rb&quot; &quot;test/test_protocol.rb&quot; &lt;br/&gt;
Loaded suite /home/Tophe/.rvm/gems/ruby-1.9.1-p431@global/gems/rake-10.0.2/lib/rake/rake_test_loader&lt;br/&gt;
Started&lt;br/&gt;
...F............................&lt;br/&gt;
Finished in 0.221537 seconds.&lt;/p&gt;

&lt;p&gt;  1) Failure:&lt;br/&gt;
test_utf8(TestDataFile) &lt;span class=&quot;error&quot;&gt;&amp;#91;/home/Tophe/work/svn_1/trunk/lang/ruby/test/test_datafile.rb:156&amp;#93;&lt;/span&gt;:&lt;br/&gt;
&amp;lt;&quot;&#23478;&quot;&amp;gt; expected but was&lt;br/&gt;
&amp;lt;&quot;\xE5&quot;&amp;gt;.&lt;/p&gt;

&lt;p&gt;32 tests, 710 assertions, 1 failures, 0 errors, 0 skips&lt;br/&gt;
rake aborted!&lt;/p&gt;</comment>
                            <comment id="13505989" author="cutting" created="Wed, 28 Nov 2012 22:35:22 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="12600411">AVRO-1134</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12600411">AVRO-1134</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12554229" name="AVRO-1206.patch" size="1678" author="cutting" created="Mon, 19 Nov 2012 20:26:08 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 16 Nov 2012 23:09:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>258189</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 8 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0knnb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>118648</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>exemple to redo the error :&lt;br/&gt;
require &amp;#39;avro&amp;#39;&lt;br/&gt;
schema_json = &amp;lt;&amp;lt;-JSON&lt;br/&gt;
{    &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;quot;type&amp;quot;: &amp;quot;record&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;quot;name&amp;quot;: &amp;quot;Activities&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;quot;fields&amp;quot; : [&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;quot;name&amp;quot;: &amp;quot;params&amp;quot;, &amp;quot;type&amp;quot;: [&amp;quot;string&amp;quot;,&amp;quot;null&amp;quot;]}&lt;br/&gt;
]&lt;br/&gt;
}&lt;br/&gt;
JSON&lt;br/&gt;
&lt;br/&gt;
schema = Avro::Schema.parse(schema_json)&lt;br/&gt;
writer = Avro::IO::DatumWriter.new(schema)&lt;br/&gt;
fname = &amp;quot;test.avr&amp;quot;&lt;br/&gt;
&lt;br/&gt;
puts &amp;quot;writing to #{fname}&amp;quot;&lt;br/&gt;
file = File.open(fname, &amp;#39;wb&amp;#39;)&lt;br/&gt;
dw = Avro::DataFile::Writer.new(file, writer, schema)&lt;br/&gt;
&lt;br/&gt;
# don&amp;#39;t work when reading !&lt;br/&gt;
dw &amp;lt;&amp;lt; {&amp;quot;params&amp;quot; =&amp;gt; &amp;quot;&#23478;&amp;quot;}&lt;br/&gt;
# don&amp;#39;t work too&lt;br/&gt;
#dw &amp;lt;&amp;lt; {&amp;quot;params&amp;quot; =&amp;gt; &amp;quot;&#65288;&amp;quot;}&lt;br/&gt;
dw.close&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
puts &amp;quot;reading&amp;quot;&lt;br/&gt;
Avro::DataFile.open(fname, &amp;#39;r&amp;#39;) do |dr|&lt;br/&gt;
&amp;nbsp;&amp;nbsp;dr.each {|a|&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;puts a[&amp;quot;params&amp;quot;]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
end</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>utf-8 ruby avro</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1207] Add Mojo Tests to the Maven Plugin</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1207</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The plugin Mojos currently don&apos;t have tests.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12616422">AVRO-1207</key>
            <summary>Add Mojo Tests to the Maven Plugin</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="saden1">Sharmarke Aden</assignee>
                                    <reporter username="saden1">Sharmarke Aden</reporter>
                        <labels>
                    </labels>
                <created>Fri, 16 Nov 2012 15:26:37 +0000</created>
                <updated>Mon, 10 Dec 2012 17:57:37 +0000</updated>
                            <resolved>Mon, 19 Nov 2012 20:57:31 +0000</resolved>
                                    <version>1.7.2</version>
                                    <fixVersion>1.7.3</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13498862" author="saden1" created="Fri, 16 Nov 2012 15:28:12 +0000"  >&lt;p&gt;This path adds mojo tests to the maven plugin.&lt;/p&gt;</comment>
                            <comment id="13499036" author="cutting" created="Fri, 16 Nov 2012 19:26:40 +0000"  >&lt;p&gt;+1 This looks great to me.  I&apos;ll commit it soon unless someone objects.&lt;/p&gt;</comment>
                            <comment id="13500015" author="saden1" created="Mon, 19 Nov 2012 04:31:56 +0000"  >&lt;p&gt;Did minor comments and code clean up.&lt;/p&gt;</comment>
                            <comment id="13500648" author="cutting" created="Mon, 19 Nov 2012 20:57:31 +0000"  >&lt;p&gt;I committed this.  Thanks, Sharmarke!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12554116" name="vcs-diff5497937809969069066.patch" size="18936" author="saden1" created="Mon, 19 Nov 2012 04:31:55 +0000"/>
                            <attachment id="12553785" name="vcs-diff6800257181085963461.patch" size="18786" author="saden1" created="Fri, 16 Nov 2012 15:28:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 16 Nov 2012 19:26:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>258263</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 9 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0kqzr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>119190</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1208] Improve Trevni&apos;s performance on row-oriented data access</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1208</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Trevni uses an 64KB internal buffer to store values of a column. When accessing a column, it reads 64KB (if we do not consider compression and checksum) data from the storage layer. However, when the table is accessed in a row-oriented fashion (a entire row needs to be handed over to the upper layer), in the worst case (a full table scan and values of this table are all the same size), every 64KB data read can cause a seek.&lt;/p&gt;

&lt;p&gt;This jira is used to discuss if we should consider the data access pattern mentioned above and if so, how to improve the performance of Trevni. Row-oriented data processing engines, e.g. Hive, can benefit from this work.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12616743">AVRO-1208</key>
            <summary>Improve Trevni&apos;s performance on row-oriented data access</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="10011">Won&apos;t Do</resolution>
                                        <assignee username="yhuai">Yin Huai</assignee>
                                    <reporter username="yhuai">Yin Huai</reporter>
                        <labels>
                    </labels>
                <created>Mon, 19 Nov 2012 14:33:16 +0000</created>
                <updated>Wed, 2 Jan 2019 18:18:34 +0000</updated>
                            <resolved>Wed, 2 Jan 2019 18:18:34 +0000</resolved>
                                    <version>1.7.3</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="13500268" author="yhuai" created="Mon, 19 Nov 2012 14:39:14 +0000"  >&lt;p&gt;A simple way to moderate this issue is to provide a prefeching mechanism. Users and upper-layer applications can ask Trevni to prefetch certain number of blocks.&lt;/p&gt;

&lt;p&gt;btw, if you think this improvement is valid, I can work on this jira.&lt;/p&gt;</comment>
                            <comment id="13500515" author="cutting" created="Mon, 19 Nov 2012 19:13:11 +0000"  >&lt;p&gt;This sounds like it could be a useful optimization.&lt;/p&gt;

&lt;p&gt;A way to implement this might be as a Trevni Input implementation:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://avro.apache.org/docs/current/api/java/org/apache/trevni/Input.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/current/api/java/org/apache/trevni/Input.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This optimization might be an Input that wraps another Input.  A ~1MB buffer should provide significant improvement.  When the first 64kB request is made, 1MB could be read into the buffer and its first 64kB could be returned.  Subsequent requests that are within the buffer could be resolved without any i/o.&lt;/p&gt;

&lt;p&gt;It would be good to have a benchmark to validate this.  Do you have a relevant Trevni benchmark?&lt;/p&gt;</comment>
                            <comment id="13500518" author="cutting" created="Mon, 19 Nov 2012 19:14:05 +0000"  >&lt;p&gt;And, yes, it would be great if you&apos;d like to work on this.&lt;/p&gt;</comment>
                            <comment id="13500543" author="yhuai" created="Mon, 19 Nov 2012 19:35:38 +0000"  >&lt;p&gt;ok. I will start to work on it.&lt;/p&gt;</comment>
                            <comment id="13501433" author="yhuai" created="Tue, 20 Nov 2012 20:08:11 +0000"  >&lt;p&gt;Yes, I have a benchmark right now. It is available at &lt;a href=&quot;https://github.com/yhuai/tableplacement&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/yhuai/tableplacement&lt;/a&gt;. In tableplacement-experiment/expScripts, read.Trevni.sh and&lt;br/&gt;
write.Trevni.sh can be used to write and read a file with the format of Trevni. &lt;/p&gt;

&lt;p&gt;I just did a quick test. The table I used has 6 int columns, the value of which is randomly picked from 0 to 9999, 6 string columns, the length of each string is 30, and 1 map column, the size of which is 10. The type of keys in the map column is string and the length of each key string is 4. The value type of values in the map column is int and every int value is randomly picked from 0 to 2147483646.&lt;/p&gt;

&lt;p&gt;For a table with 3000000 rows (about 900MB, no compression), the throughput of a entire table scan is about 55 MB/s. The sequential access throughput of my disk is about 150 MB/s (sudo hdparm -t /dev/sda).&lt;/p&gt;</comment>
                            <comment id="13559778" author="jadler" created="Tue, 22 Jan 2013 17:21:55 +0000"  >&lt;p&gt;Has anyone taken a look at this issue recently? I&apos;m having similar issues with Trevni performance when accessing full rows of data.&lt;/p&gt;</comment>
                            <comment id="13559797" author="yhuai" created="Tue, 22 Jan 2013 17:38:22 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jadler&quot; class=&quot;user-hover&quot; rel=&quot;jadler&quot;&gt;Joseph Adler&lt;/a&gt; I was planning on working on it, but have not got time since I reported it. Will try to submit a initial patch next week.&lt;/p&gt;</comment>
                            <comment id="13559810" author="jadler" created="Tue, 22 Jan 2013 17:54:42 +0000"  >&lt;p&gt;I may also be able to submit a patch, if you&apos;d like. (Just hacked a solution for this problem.)&lt;/p&gt;</comment>
                            <comment id="13559812" author="yhuai" created="Tue, 22 Jan 2013 17:57:53 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jadler&quot; class=&quot;user-hover&quot; rel=&quot;jadler&quot;&gt;Joseph Adler&lt;/a&gt; sure, no problem.&lt;/p&gt;</comment>
                            <comment id="13559910" author="jadler" created="Tue, 22 Jan 2013 19:18:28 +0000"  >&lt;p&gt;Actually, I&apos;m thinking that the I/O issue is a red herring.&lt;/p&gt;

&lt;p&gt;I did some profiling of trevni (using Yourkit) and found that a huge amount of time was being spent deserializing String objects in the org.apache.trevni.InputBuffer. I&apos;m testing this hypothesis now, and will submit a patch if this turns out to be the case.&lt;/p&gt;</comment>
                            <comment id="13559966" author="yhuai" created="Tue, 22 Jan 2013 20:13:02 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jadler&quot; class=&quot;user-hover&quot; rel=&quot;jadler&quot;&gt;Joseph Adler&lt;/a&gt; I used Hive&apos;s SerDe to serialize data to bytes and the type of columns in a Trevni file should be ValueType.BYTES. So, in InputBuffer, readBytes should be called instead of readString. Can you share your testing results with me?&lt;/p&gt;

&lt;p&gt;Also, when I was testing Trevni locally last year, I found if HadoopInput is used with Local FS, the read method in ChecksumFSInputChecker will be used, and this method opens the file and check the checksum in every read call. This behavior can also cause low read performance.&lt;/p&gt;</comment>
                            <comment id="13569064" author="jadler" created="Fri, 1 Feb 2013 20:45:33 +0000"  >&lt;p&gt;I opened another issue (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1241&quot; title=&quot;improve trevni performance on string deserialization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1241&quot;&gt;&lt;del&gt;AVRO-1241&lt;/del&gt;&lt;/a&gt;), and included a patch with my changes&lt;/p&gt;</comment>
                            <comment id="13569182" author="yhuai" created="Fri, 1 Feb 2013 22:40:17 +0000"  >&lt;p&gt;a initial implementation of the patch. I added two methods in ColumnValues. Users can call startRowWithPrefetch(int numOfPrefetched) to ask Trevni to prefetch n blocks when it needs to read a new block from the disk. Inside of startRowWithPrefetch, startBlockWithPrefetch(int block, int numOfPrefetched) is called to read totally numOfPrefetched+1 blocks.&lt;/p&gt;</comment>
                            <comment id="13569215" author="yhuai" created="Fri, 1 Feb 2013 23:04:05 +0000"  >&lt;p&gt;Did a quick test with &lt;a href=&quot;https://github.com/yhuai/tableplacement.git&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;my benchmark tool&lt;/a&gt;, using the table described at &lt;a href=&quot;https://github.com/yhuai/tableplacement/blob/AVRO-1208/tableplacement-experiment/tableProperties/LazyBinaryColumnarSerDe/t0.4-singleFile-noColumnGroup.properties&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;. Without prefetching, the throughput is about 70 MiB/s. By prefetching 16 blocks (reading 17 blocks at a time), the throughput is about 82 Mib/s.&lt;/p&gt;

&lt;p&gt;My system info: &lt;br/&gt;
OS: Ubuntu 12.04 with kernel 3.2.0-37.&lt;br/&gt;
Java: 1.6.0_24&lt;br/&gt;
Disk: WD RE4 WD1003FBYX 1TB 7200 RPM&lt;/p&gt;

&lt;p&gt;To play with the patch. &lt;br/&gt;
1) install avro applied with this patch to your local maven repo&lt;br/&gt;
2) checkout branch &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1208&quot; title=&quot;Improve Trevni&amp;#39;s performance on row-oriented data access&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1208&quot;&gt;&lt;del&gt;AVRO-1208&lt;/del&gt;&lt;/a&gt; from the tool linked above and build it with &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;mvn clean &lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; -DskipTests -P avro-1.7.4&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;3) in tableplacement-experiment/expScripts/exp0.6.conf, modify the path of data generated by the benchmark (&quot;DIR&quot;) and the device you are using (&quot;DEVICE&quot;)&lt;br/&gt;
4) in tableplacement-experiment/expScripts/expConf, use &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;sudo ./exp.write.Trevni.sh exp0.6&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; to generate data&lt;br/&gt;
5) in tableplacement-experiment/expScripts/expConf, use &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;sudo ./exp.strace.read.Trevni.sh exp0.6 &amp;lt;io buffer size&amp;gt; cfg1:all &amp;lt;dir of strace&amp;gt; &amp;lt;num of prefetched blocks&amp;gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; to do the test. &amp;lt;io buffer size&amp;gt; does not matter at here since I am using InputFile. &amp;lt;dir of strace&amp;gt; is the location to store the results of strace.&lt;/p&gt;</comment>
                            <comment id="13569222" author="yhuai" created="Fri, 1 Feb 2013 23:10:27 +0000"  >&lt;p&gt;Also, in the test mentioned above, using startBlockWithPrefetch to only read 1 block (&amp;lt;num of prefetched blocks&amp;gt;=0) make the throughput drops from ~70 MiB/s (original Trevni) to ~66 MiB/s.&lt;/p&gt;</comment>
                            <comment id="13569229" author="cutting" created="Fri, 1 Feb 2013 23:16:19 +0000"  >&lt;p&gt;This is great work!  I&apos;d love to hear whether others find similar improvements.&lt;/p&gt;

&lt;p&gt;How does Avro fare compared to RCFile?&lt;/p&gt;

&lt;p&gt;I found that Java 1.7 performed much better than 1.6 for Avro benchmarks.  You might try that too.&lt;/p&gt;</comment>
                            <comment id="13569796" author="yhuai" created="Sun, 3 Feb 2013 15:16:34 +0000"  >&lt;p&gt;last patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1208&quot; title=&quot;Improve Trevni&amp;#39;s performance on row-oriented data access&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1208&quot;&gt;&lt;del&gt;AVRO-1208&lt;/del&gt;&lt;/a&gt;.1) has a checkstyle error due to a tab. &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1208&quot; title=&quot;Improve Trevni&amp;#39;s performance on row-oriented data access&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1208&quot;&gt;&lt;del&gt;AVRO-1208&lt;/del&gt;&lt;/a&gt;.2 should work. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; Thanks. I will try java 1.7. Also,&lt;br/&gt;
I have not finished my evaluation. Will post results comparing Trevni with RCFile asap.&lt;/p&gt;
</comment>
                            <comment id="13603413" author="yhuai" created="Fri, 15 Mar 2013 14:30:50 +0000"  >&lt;p&gt;Here are some comparisons between RCFile and Trevni. I mainly focus on the data reading.&lt;/p&gt;

&lt;p&gt;Based on current implementations, RCFile and Trevni have three major differences.&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;The row group size in RCFile is configurable. Trevni uses a single row group for a Trevni file (so applications need to horizontally partition the table to multiple Trevni files, and the size of a Trevni file needs to be less than the HDFS block size. Am i right?).&lt;/li&gt;
	&lt;li&gt;When reading needed columns of a row group, RCFile loads these columns at once. So, applications need to wait the I/O (on reading all needed columns in a row group) before accessing any row in this row group. In a Trevni file, a column is stored by many small blocks which are compression units. When Trevni needs to read data from disks, applications only wait for Trevni to read a few blocks before accessing a row.&lt;/li&gt;
	&lt;li&gt;When reading needed columns of a row group, RCFile loads these columns in a column by column fashion. For Trevni, applications need to decide how to read needed columns. They can read data in a row by row fashion or in a column by column fashion.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;For a given table, applications need to set a suitable row group size for RCFile. A small row group size will cause a small size of a column in a row group (a column in a row group is stored contiguously). Many seeks will degrade the performance of data reading (this is described in Trevni specification). Also, a small row group size can cause a read buffer contain data from unneeded columns and cause the OS readahead less effective (cannot asynchronous fetch data from needed columns).&lt;/p&gt;

&lt;p&gt;To overcome the low I/O efficiency of RCFile, a large row group size can be used. However, RCFile needs to read all needed columns of a row group at once. In this way, CPU and I/O may not be effectively overlapped (less benefit from OS asynchronous readahead). Suppose that applications explicitly stores a table to multiple RCFile files and every file has a single row group. When applications process data in a file, it will be blocked until all needed data is loaded from disks. In this example, we will first wait on I/O and then wait on CPU.&lt;/p&gt;

&lt;p&gt;For the third difference, a large row group size in RCFile imply a higher I/O performance since all needed columns in a row group are read in a column by column fashion. But for Trevni, since applications usually read data in needed columns in a row by row fashion (seems AvroColumnReader reads data in a row by row fashion, and Hive and Pig integration of Trevni relies on this reader), the throughput of reading data stored in Trevni can be significantly degraded (cased by unnecessary disk seeks). &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12567653" name="AVRO-1208.1.patch" size="9275" author="yhuai" created="Fri, 1 Feb 2013 22:40:17 +0000"/>
                            <attachment id="12567769" name="AVRO-1208.2.patch" size="9262" author="yhuai" created="Sun, 3 Feb 2013 15:16:34 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 19 Nov 2012 19:13:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>258605</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 45 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0l0lz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>120749</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1209] Include immutable source templates with Maven plugin</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1209</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It would be nice to have mostly immutable classes generated by the Maven plugin for the cases when people want to use Avro specific records as their first class model objects and want some assurances of immutability.  An easy way to accomplish this is with another template set that can be shipped with the compiler artifact.  Since the &lt;tt&gt;templateDirectory&lt;/tt&gt; of the plugin is already configurable, then to use this one must only change their local configuration.&lt;/p&gt;

&lt;p&gt;This is somewhat related to &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-988&quot; title=&quot;Java:  Add public, private, and public-deprecated options for SpecificCompiler output&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-988&quot;&gt;&lt;del&gt;AVRO-988&lt;/del&gt;&lt;/a&gt;, but I have removed the field setters in addition to making the fields private.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12616854">AVRO-1209</key>
            <summary>Include immutable source templates with Maven plugin</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jeffkole">Jeff Kolesky</assignee>
                                    <reporter username="jeffkole">Jeff Kolesky</reporter>
                        <labels>
                    </labels>
                <created>Mon, 19 Nov 2012 22:59:48 +0000</created>
                <updated>Mon, 10 Dec 2012 17:57:37 +0000</updated>
                            <resolved>Thu, 29 Nov 2012 22:08:20 +0000</resolved>
                                    <version>1.7.2</version>
                                    <fixVersion>1.7.3</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13500713" author="jeffkole" created="Mon, 19 Nov 2012 23:01:20 +0000"  >&lt;p&gt;diff --git a/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/immutable/enum.vm b/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/immutable/enum.vm&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 0000000..2cdc90c&lt;br/&gt;
&amp;#8212; /dev/null&lt;br/&gt;
+++ b/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/immutable/enum.vm&lt;br/&gt;
@@ -0,0 +1,29 @@&lt;br/&gt;
+##&lt;br/&gt;
+## Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
+## or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
+## distributed with this work for additional information&lt;br/&gt;
+## regarding copyright ownership.  The ASF licenses this file&lt;br/&gt;
+## to you under the Apache License, Version 2.0 (the&lt;br/&gt;
+## &quot;License&quot;); you may not use this file except in compliance&lt;br/&gt;
+## with the License.  You may obtain a copy of the License at&lt;br/&gt;
+##&lt;br/&gt;
+##     &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
+##&lt;br/&gt;
+## Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
+## distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
+## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
+## See the License for the specific language governing permissions and&lt;br/&gt;
+## limitations under the License.&lt;br/&gt;
+##&lt;br/&gt;
+#if ($schema.getNamespace())&lt;br/&gt;
+package $schema.getNamespace();&lt;br/&gt;
+#end&lt;br/&gt;
+@SuppressWarnings(&quot;all&quot;)&lt;br/&gt;
+#if ($schema.getDoc())&lt;br/&gt;
+/** $schema.getDoc() */&lt;br/&gt;
+#end&lt;br/&gt;
+public enum ${this.mangle($schema.getName())} {&lt;br/&gt;
+  #foreach ($symbol in ${schema.getEnumSymbols()})${this.mangle($symbol)}#if ($velocityHasNext), #end#end&lt;br/&gt;
+  ;&lt;br/&gt;
+  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(&quot;${this.javaEscape($schema.toString())}&quot;);&lt;br/&gt;
+}&lt;br/&gt;
diff --git a/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/immutable/fixed.vm b/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/immutable/fixed.vm&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 0000000..60c28d4&lt;br/&gt;
&amp;#8212; /dev/null&lt;br/&gt;
+++ b/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/immutable/fixed.vm&lt;br/&gt;
@@ -0,0 +1,38 @@&lt;br/&gt;
+##&lt;br/&gt;
+## Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
+## or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
+## distributed with this work for additional information&lt;br/&gt;
+## regarding copyright ownership.  The ASF licenses this file&lt;br/&gt;
+## to you under the Apache License, Version 2.0 (the&lt;br/&gt;
+## &quot;License&quot;); you may not use this file except in compliance&lt;br/&gt;
+## with the License.  You may obtain a copy of the License at&lt;br/&gt;
+##&lt;br/&gt;
+##     &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
+##&lt;br/&gt;
+## Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
+## distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
+## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
+## See the License for the specific language governing permissions and&lt;br/&gt;
+## limitations under the License.&lt;br/&gt;
+##&lt;br/&gt;
+#if ($schema.getNamespace())&lt;br/&gt;
+package $schema.getNamespace();&lt;br/&gt;
+#end&lt;br/&gt;
+@SuppressWarnings(&quot;all&quot;)&lt;br/&gt;
+#if ($schema.getDoc())&lt;br/&gt;
+/** $schema.getDoc() */&lt;br/&gt;
+#end&lt;br/&gt;
+@org.apache.avro.specific.FixedSize($schema.getFixedSize())&lt;br/&gt;
+public class ${this.mangle($schema.getName())} extends org.apache.avro.specific.SpecificFixed {&lt;br/&gt;
+  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(&quot;${this.javaEscape($schema.toString())}&quot;);&lt;br/&gt;
+&lt;br/&gt;
+  /** Creates a new ${this.mangle($schema.getName())} */&lt;br/&gt;
+  public ${this.mangle($schema.getName())}() &lt;/p&gt;
{
+    super();
+  }&lt;br/&gt;
+&lt;br/&gt;
+  /** Creates a new ${this.mangle($schema.getName())} with the given bytes */&lt;br/&gt;
+  public ${this.mangle($schema.getName())}(byte[] bytes) {
+    super(bytes);
+  }&lt;br/&gt;
+}&lt;br/&gt;
diff --git a/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/immutable/protocol.vm b/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/immutable/protocol.vm&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 0000000..d715b5a&lt;br/&gt;
&amp;#8212; /dev/null&lt;br/&gt;
+++ b/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/immutable/protocol.vm&lt;br/&gt;
@@ -0,0 +1,76 @@&lt;br/&gt;
+##&lt;br/&gt;
+## Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
+## or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
+## distributed with this work for additional information&lt;br/&gt;
+## regarding copyright ownership.  The ASF licenses this file&lt;br/&gt;
+## to you under the Apache License, Version 2.0 (the&lt;br/&gt;
+## &quot;License&quot;); you may not use this file except in compliance&lt;br/&gt;
+## with the License.  You may obtain a copy of the License at&lt;br/&gt;
+##&lt;br/&gt;
+##     &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
+##&lt;br/&gt;
+## Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
+## distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
+## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
+## See the License for the specific language governing permissions and&lt;br/&gt;
+## limitations under the License.&lt;br/&gt;
+##&lt;br/&gt;
+#if ($protocol.getNamespace())&lt;br/&gt;
+package $protocol.getNamespace();&lt;br/&gt;
+#end&lt;br/&gt;
+&lt;br/&gt;
+@SuppressWarnings(&quot;all&quot;)&lt;br/&gt;
+#if ($protocol.getDoc())&lt;br/&gt;
+/** $protocol.getDoc() */&lt;br/&gt;
+#end&lt;br/&gt;
+public interface $this.mangle($protocol.getName()) {&lt;br/&gt;
+  public static final org.apache.avro.Protocol PROTOCOL = org.apache.avro.Protocol.parse(&quot;${this.javaEscape($protocol.toString())}&quot;);&lt;br/&gt;
+#foreach ($e in $protocol.getMessages().entrySet())&lt;br/&gt;
+#set ($name = $e.getKey())&lt;br/&gt;
+#set ($message = $e.getValue())&lt;br/&gt;
+#set ($response = $message.getResponse())&lt;br/&gt;
+#if ($message.getDoc())&lt;br/&gt;
+  /** $this.escapeForJavadoc($message.getDoc()) */&lt;br/&gt;
+#end&lt;br/&gt;
+  #if ($message.isOneWay())void#else${this.javaUnbox($response)}#end&lt;br/&gt;
+ ${this.mangle($name)}(##&lt;br/&gt;
+#foreach ($p in $message.getRequest().getFields())##&lt;br/&gt;
+#*      *#${this.javaUnbox($p.schema())} ${this.mangle($p.name())}#if ($velocityHasNext), #end&lt;br/&gt;
+#end&lt;br/&gt;
+)#if (! $message.isOneWay())&lt;br/&gt;
+ throws org.apache.avro.AvroRemoteException##&lt;br/&gt;
+## The first error is always &quot;string&quot;, so we skip it.&lt;br/&gt;
+#foreach ($error in $message.getErrors().getTypes().subList(1, $message.getErrors().getTypes().size()))&lt;br/&gt;
+, ${this.mangle($error.getFullName())}##&lt;br/&gt;
+#end##    (error list)&lt;br/&gt;
+#end##    (one way)&lt;br/&gt;
+;&lt;br/&gt;
+#end## (requests)&lt;br/&gt;
+&lt;br/&gt;
+## Generate nested callback API&lt;br/&gt;
+  @SuppressWarnings(&quot;all&quot;)&lt;br/&gt;
+#if ($protocol.getDoc())&lt;br/&gt;
+  /** $protocol.getDoc() */&lt;br/&gt;
+#end&lt;br/&gt;
+  public interface Callback extends $this.mangle($protocol.getName()) {&lt;br/&gt;
+    public static final org.apache.avro.Protocol PROTOCOL = #if ($protocol.getNamespace())$protocol.getNamespace().#end${this.mangle($protocol.getName())}.PROTOCOL;&lt;br/&gt;
+#foreach ($e in $protocol.getMessages().entrySet())&lt;br/&gt;
+#set ($name = $e.getKey())&lt;br/&gt;
+#set ($message = $e.getValue())&lt;br/&gt;
+#set ($response = $message.getResponse())&lt;br/&gt;
+## Generate callback method if the message is not one-way:&lt;br/&gt;
+#if (! $message.isOneWay())&lt;br/&gt;
+#if ($message.getDoc())&lt;br/&gt;
+    /** $this.escapeForJavadoc($message.getDoc()) */&lt;br/&gt;
+#end&lt;br/&gt;
+    void ${this.mangle($name)}(##&lt;br/&gt;
+#foreach ($p in $message.getRequest().getFields())##&lt;br/&gt;
+#*      *#${this.javaUnbox($p.schema())} ${this.mangle($p.name())}#if ($velocityHasNext), #end&lt;br/&gt;
+#end&lt;br/&gt;
+#if ($message.getRequest().getFields().size() &amp;gt; 0), #end&lt;br/&gt;
+org.apache.avro.ipc.Callback&amp;lt;${this.javaType($response)}&amp;gt; callback) throws java.io.IOException;&lt;br/&gt;
+#end## (generate callback method)&lt;br/&gt;
+#end## (requests)&lt;br/&gt;
+  }## End of Callback interface&lt;br/&gt;
+&lt;br/&gt;
+}## End of protocol interface&lt;br/&gt;
diff --git a/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/immutable/record.vm b/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/immutable/record.vm&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 0000000..b296e1b&lt;br/&gt;
&amp;#8212; /dev/null&lt;br/&gt;
+++ b/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/immutable/record.vm&lt;br/&gt;
@@ -0,0 +1,221 @@&lt;br/&gt;
+##&lt;br/&gt;
+## Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
+## or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
+## distributed with this work for additional information&lt;br/&gt;
+## regarding copyright ownership.  The ASF licenses this file&lt;br/&gt;
+## to you under the Apache License, Version 2.0 (the&lt;br/&gt;
+## &quot;License&quot;); you may not use this file except in compliance&lt;br/&gt;
+## with the License.  You may obtain a copy of the License at&lt;br/&gt;
+##&lt;br/&gt;
+##     &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
+##&lt;br/&gt;
+## Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
+## distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
+## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
+## See the License for the specific language governing permissions and&lt;br/&gt;
+## limitations under the License.&lt;br/&gt;
+##&lt;br/&gt;
+#if ($schema.getNamespace())&lt;br/&gt;
+package $schema.getNamespace();&lt;br/&gt;
+#end&lt;br/&gt;
+@SuppressWarnings(&quot;all&quot;)&lt;br/&gt;
+#if ($schema.getDoc())&lt;br/&gt;
+/** $schema.getDoc() */&lt;br/&gt;
+#end&lt;br/&gt;
+public class ${this.mangle($schema.getName())}#if ($schema.isError()) extends org.apache.avro.specific.SpecificExceptionBase#else extends org.apache.avro.specific.SpecificRecordBase#end implements org.apache.avro.specific.SpecificRecord {&lt;br/&gt;
+  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(&quot;${this.javaEscape($schema.toString())}&quot;);&lt;br/&gt;
+#foreach ($field in $schema.getFields())&lt;br/&gt;
+#if ($field.doc())&lt;br/&gt;
+  /** $field.doc() */&lt;br/&gt;
+#end&lt;br/&gt;
+  private ${this.javaUnbox($field.schema())} ${this.mangle($field.name(), $schema.isError())};&lt;br/&gt;
+#end&lt;br/&gt;
+#if ($schema.isError())&lt;br/&gt;
+&lt;br/&gt;
+  public ${this.mangle($schema.getName())}() {+    super();+  }
&lt;p&gt;+&lt;br/&gt;
+  public ${this.mangle($schema.getName())}(Object value) &lt;/p&gt;
{
+    super(value);
+  }
&lt;p&gt;+&lt;br/&gt;
+  public ${this.mangle($schema.getName())}(Throwable cause) &lt;/p&gt;
{
+    super(cause);
+  }
&lt;p&gt;+&lt;br/&gt;
+  public ${this.mangle($schema.getName())}(Object value, Throwable cause) &lt;/p&gt;
{
+    super(value, cause);
+  }
&lt;p&gt;+&lt;br/&gt;
+#else&lt;br/&gt;
+#if ($schema.getFields().size() &amp;gt; 0)&lt;br/&gt;
+&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Default constructor.&lt;br/&gt;
+   */&lt;br/&gt;
+  public ${this.mangle($schema.getName())}() {}&lt;br/&gt;
+&lt;br/&gt;
+  /**&lt;br/&gt;
+   * All-args constructor.&lt;br/&gt;
+   */&lt;br/&gt;
+  public ${this.mangle($schema.getName())}(#foreach($field in $schema.getFields())${this.javaType($field.schema())} ${this.mangle($field.name())}#if($velocityCount &amp;lt; $schema.getFields().size()), #end#end) {&lt;br/&gt;
+#foreach ($field in $schema.getFields())&lt;br/&gt;
+    this.${this.mangle($field.name())} = ${this.mangle($field.name())};&lt;br/&gt;
+#end&lt;br/&gt;
+  }&lt;br/&gt;
+#end&lt;br/&gt;
+&lt;br/&gt;
+#end&lt;br/&gt;
+  public org.apache.avro.Schema getSchema() &lt;/p&gt;
{ return SCHEMA$; }
&lt;p&gt;+  // Used by DatumWriter.  Applications should not call.&lt;br/&gt;
+  public java.lang.Object get(int field$) {&lt;br/&gt;
+    switch (field$) {&lt;br/&gt;
+#set ($i = 0)&lt;br/&gt;
+#foreach ($field in $schema.getFields())&lt;br/&gt;
+    case $i: return ${this.mangle($field.name(), $schema.isError())};&lt;br/&gt;
+#set ($i = $i + 1)&lt;br/&gt;
+#end&lt;br/&gt;
+    default: throw new org.apache.avro.AvroRuntimeException(&quot;Bad index&quot;);&lt;br/&gt;
+    }&lt;br/&gt;
+  }&lt;br/&gt;
+  // Used by DatumReader.  Applications should not call.&lt;br/&gt;
+  @SuppressWarnings(value=&quot;unchecked&quot;)&lt;br/&gt;
+  public void put(int field$, java.lang.Object value$) {&lt;br/&gt;
+    switch (field$) {&lt;br/&gt;
+#set ($i = 0)&lt;br/&gt;
+#foreach ($field in $schema.getFields())&lt;br/&gt;
+    case $i: ${this.mangle($field.name(), $schema.isError())} = (${this.javaType($field.schema())})value$; break;&lt;br/&gt;
+#set ($i = $i + 1)&lt;br/&gt;
+#end&lt;br/&gt;
+    default: throw new org.apache.avro.AvroRuntimeException(&quot;Bad index&quot;);&lt;br/&gt;
+    }&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+#foreach ($field in $schema.getFields())&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Gets the value of the &apos;${this.mangle($field.name(), $schema.isError())}&apos; field.&lt;br/&gt;
+#if ($field.doc())   * $field.doc()#end&lt;br/&gt;
+   */&lt;br/&gt;
+  public ${this.javaType($field.schema())} ${this.generateGetMethod($schema, $field)}() {&lt;br/&gt;
+    return ${this.mangle($field.name(), $schema.isError())};&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+#end&lt;br/&gt;
+  /** Creates a new ${this.mangle($schema.getName())} RecordBuilder */&lt;br/&gt;
+  public static #if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.Builder newBuilder() {&lt;br/&gt;
+    return new #if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.Builder();&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+  /** Creates a new ${this.mangle($schema.getName())} RecordBuilder by copying an existing Builder */&lt;br/&gt;
+  public static #if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.Builder newBuilder(#if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.Builder other) {&lt;br/&gt;
+    return new #if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.Builder(other);&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+  /** Creates a new ${this.mangle($schema.getName())} RecordBuilder by copying an existing $this.mangle($schema.getName()) instance */&lt;br/&gt;
+  public static #if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.Builder newBuilder(#if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())} other) {&lt;br/&gt;
+    return new #if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.Builder(other);&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+  /**&lt;br/&gt;
+   * RecordBuilder for ${this.mangle($schema.getName())} instances.&lt;br/&gt;
+   */&lt;br/&gt;
+  public static class Builder extends#if ($schema.isError()) org.apache.avro.specific.SpecificErrorBuilderBase&amp;lt;${this.mangle($schema.getName())}&amp;gt;#else org.apache.avro.specific.SpecificRecordBuilderBase&amp;lt;${this.mangle($schema.getName())}&amp;gt;#end&lt;br/&gt;
+&lt;br/&gt;
+    implements#if ($schema.isError()) org.apache.avro.data.ErrorBuilder&amp;lt;${this.mangle($schema.getName())}&amp;gt;#else org.apache.avro.data.RecordBuilder&amp;lt;${this.mangle($schema.getName())}&amp;gt;#end {&lt;br/&gt;
+&lt;br/&gt;
+#foreach ($field in $schema.getFields())&lt;br/&gt;
+    private ${this.javaUnbox($field.schema())} ${this.mangle($field.name(), $schema.isError())};&lt;br/&gt;
+#end&lt;br/&gt;
+&lt;br/&gt;
+    /** Creates a new Builder */&lt;br/&gt;
+    private Builder() {&lt;br/&gt;
+      super(#if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.SCHEMA$);&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
+    /** Creates a Builder by copying an existing Builder */&lt;br/&gt;
+    private Builder(#if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.Builder other) &lt;/p&gt;
{
+      super(other);
+    }
&lt;p&gt;+&lt;br/&gt;
+    /** Creates a Builder by copying an existing $this.mangle($schema.getName()) instance */&lt;br/&gt;
+    private Builder(#if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())} other) {&lt;br/&gt;
+      #if ($schema.isError())super(other)#else&lt;br/&gt;
+      super(#if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.SCHEMA$)#end;&lt;br/&gt;
+#foreach ($field in $schema.getFields())&lt;br/&gt;
+      if (isValidValue(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;$field.pos()&amp;#93;&lt;/span&gt;, other.${this.mangle($field.name(), $schema.isError())})) {&lt;br/&gt;
+        this.${this.mangle($field.name(), $schema.isError())} = (${this.javaType($field.schema())}) data().deepCopy(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;$field.pos()&amp;#93;&lt;/span&gt;.schema(), other.${this.mangle($field.name(), $schema.isError())});&lt;br/&gt;
+        fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;$field.pos()&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
+      }&lt;br/&gt;
+#end&lt;br/&gt;
+    }&lt;br/&gt;
+#if ($schema.isError())&lt;br/&gt;
+&lt;br/&gt;
+    @Override&lt;br/&gt;
+    public #if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.Builder setValue(Object value) &lt;/p&gt;
{
+      super.setValue(value);
+      return this;
+    }
&lt;p&gt;+&lt;br/&gt;
+    @Override&lt;br/&gt;
+    public #if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.Builder clearValue() &lt;/p&gt;
{
+      super.clearValue();
+      return this;
+    }
&lt;p&gt;+&lt;br/&gt;
+    @Override&lt;br/&gt;
+    public #if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.Builder setCause(Throwable cause) &lt;/p&gt;
{
+      super.setCause(cause);
+      return this;
+    }
&lt;p&gt;+&lt;br/&gt;
+    @Override&lt;br/&gt;
+    public #if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.Builder clearCause() &lt;/p&gt;
{
+      super.clearCause();
+      return this;
+    }
&lt;p&gt;+#end&lt;br/&gt;
+&lt;br/&gt;
+#foreach ($field in $schema.getFields())&lt;br/&gt;
+    /** Gets the value of the &apos;${this.mangle($field.name(), $schema.isError())}&apos; field */&lt;br/&gt;
+    public ${this.javaType($field.schema())} ${this.generateGetMethod($schema, $field)}() {&lt;br/&gt;
+      return ${this.mangle($field.name(), $schema.isError())};&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
+    /** Sets the value of the &apos;${this.mangle($field.name(), $schema.isError())}&apos; field */&lt;br/&gt;
+    public #if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.Builder ${this.generateSetMethod($schema, $field)}(${this.javaUnbox($field.schema())} value) {&lt;br/&gt;
+      validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;$field.pos()&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
+      this.${this.mangle($field.name(), $schema.isError())} = value;&lt;br/&gt;
+      fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;$field.pos()&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
+      return this;&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
+    /** Checks whether the &apos;${this.mangle($field.name(), $schema.isError())}&apos; field has been set */&lt;br/&gt;
+    public boolean ${this.generateHasMethod($schema, $field)}() &lt;/p&gt;
{
+      return fieldSetFlags()[$field.pos()];
+    }
&lt;p&gt;+&lt;br/&gt;
+    /** Clears the value of the &apos;${this.mangle($field.name(), $schema.isError())}&apos; field */&lt;br/&gt;
+    public #if ($schema.getNamespace())$schema.getNamespace().#end${this.mangle($schema.getName())}.Builder ${this.generateClearMethod($schema, $field)}() {&lt;br/&gt;
+#if (${this.isUnboxedJavaTypeNullable($field.schema())})&lt;br/&gt;
+      ${this.mangle($field.name(), $schema.isError())} = null;&lt;br/&gt;
+#end&lt;br/&gt;
+      fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;$field.pos()&amp;#93;&lt;/span&gt; = false;&lt;br/&gt;
+      return this;&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
+#end&lt;br/&gt;
+    @Override&lt;br/&gt;
+    public ${this.mangle($schema.getName())} build() {&lt;br/&gt;
+      try {&lt;br/&gt;
+        ${this.mangle($schema.getName())} record = new ${this.mangle($schema.getName())}(#if ($schema.isError())getValue(), getCause()#end);&lt;br/&gt;
+#foreach ($field in $schema.getFields())&lt;br/&gt;
+        record.${this.mangle($field.name(), $schema.isError())} = fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;$field.pos()&amp;#93;&lt;/span&gt; ? this.${this.mangle($field.name(), $schema.isError())} : (${this.javaType($field.schema())}) defaultValue(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;$field.pos()&amp;#93;&lt;/span&gt;);&lt;br/&gt;
+#end&lt;br/&gt;
+        return record;&lt;br/&gt;
+      } catch (Exception e) &lt;/p&gt;
{
+        throw new org.apache.avro.AvroRuntimeException(e);
+      }
&lt;p&gt;+    }&lt;br/&gt;
+  }&lt;br/&gt;
+}&lt;br/&gt;
diff --git a/lang/java/compiler/src/test/java/org/apache/avro/compiler/TestSpecificCompiler.java b/lang/java/compiler/src/test/java/org/apache/avro/compiler/TestSpecificCompiler.java&lt;br/&gt;
index 6ad67ce..76cd76e 100644&lt;br/&gt;
&amp;#8212; a/lang/java/compiler/src/test/java/org/apache/avro/compiler/TestSpecificCompiler.java&lt;br/&gt;
+++ b/lang/java/compiler/src/test/java/org/apache/avro/compiler/TestSpecificCompiler.java&lt;br/&gt;
@@ -20,6 +20,8 @@ package org.apache.avro.compiler;&lt;br/&gt;
 import static org.junit.Assert.assertTrue;&lt;/p&gt;

&lt;p&gt; import java.io.File;&lt;br/&gt;
+import java.io.BufferedReader;&lt;br/&gt;
+import java.io.FileReader;&lt;br/&gt;
 import java.io.IOException;&lt;br/&gt;
 import java.net.URISyntaxException;&lt;/p&gt;

&lt;p&gt;@@ -46,6 +48,38 @@ public class TestSpecificCompiler &lt;/p&gt;
{
     compiler.setStringType(StringType.CharSequence);
     File outputDir = AvroTestUtil.tempDirectory(getClass(), &quot;specific-output&quot;);
     compiler.compileToDestination(src, outputDir);
-    assertTrue(new File(outputDir, &quot;SimpleRecord.java&quot;).exists());
+    File generatedClass = new File(outputDir, &quot;SimpleRecord.java&quot;);
+    assertTrue(generatedClass.exists());
+    generatedClass.delete();
+  }
&lt;p&gt;+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testImmutableRecordDoesNotIncludeSetterMethod() throws IOException, URISyntaxException{&lt;br/&gt;
+    String schemaSrcPath = &quot;src/test/resources/simple_record.avsc&quot;;&lt;br/&gt;
+    String velocityTemplateDir = &quot;src/main/velocity/org/apache/avro/compiler/specific/templates/java/immutable/&quot;;&lt;br/&gt;
+    File src = new File(schemaSrcPath);&lt;br/&gt;
+    Schema.Parser parser = new Schema.Parser();&lt;br/&gt;
+    Schema schema = parser.parse(src);&lt;br/&gt;
+    SpecificCompiler compiler = new SpecificCompiler(schema);&lt;br/&gt;
+    compiler.setTemplateDir(velocityTemplateDir);&lt;br/&gt;
+    compiler.setStringType(StringType.CharSequence);&lt;br/&gt;
+    File outputDir = AvroTestUtil.tempDirectory(getClass(), &quot;specific-output&quot;);&lt;br/&gt;
+    compiler.compileToDestination(src, outputDir);&lt;br/&gt;
+    File generatedClass = new File(outputDir, &quot;SimpleRecord.java&quot;);&lt;br/&gt;
+    assertTrue(generatedClass.exists());&lt;br/&gt;
+    System.out.println(generatedClass);&lt;br/&gt;
+    BufferedReader reader = new BufferedReader(new FileReader(generatedClass));&lt;br/&gt;
+    String line = null;&lt;br/&gt;
+    while ((line = reader.readLine()) != null) &lt;/p&gt;
{
+        System.out.println(line);
+      // No line should include a deprecated public value field
+      assertTrue(&quot;Line contains a deprecated public field: &quot; + line,
+        !line.contains(&quot;@Deprecated public int value&quot;));
+      // No line should include a setter for the value field
+      assertTrue(&quot;Line contains setter: &quot; + line,
+        !line.contains(&quot;public void setValue(int&quot;));
+    }
&lt;p&gt;+    reader.close();&lt;br/&gt;
+    generatedClass.delete();&lt;br/&gt;
   }&lt;br/&gt;
 }&lt;/p&gt;</comment>
                            <comment id="13500774" author="jeffkole" created="Tue, 20 Nov 2012 01:32:59 +0000"  >&lt;p&gt;This patch works similarly to my implementation of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-988&quot; title=&quot;Java:  Add public, private, and public-deprecated options for SpecificCompiler output&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-988&quot;&gt;&lt;del&gt;AVRO-988&lt;/del&gt;&lt;/a&gt; in that it adds an option to SpecificCompiler that is exposed through the Maven plugin.  Only one of these two patches should likely be approved, though this second patch would be best approved in conjunction with my patch on &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-988&quot; title=&quot;Java:  Add public, private, and public-deprecated options for SpecificCompiler output&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-988&quot;&gt;&lt;del&gt;AVRO-988&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13500776" author="jeffkole" created="Tue, 20 Nov 2012 01:34:51 +0000"  >&lt;p&gt;There are two possible implementations to choose from.  The &lt;tt&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1209&quot; title=&quot;Include immutable source templates with Maven plugin&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1209&quot;&gt;&lt;del&gt;AVRO-1209&lt;/del&gt;&lt;/a&gt;.patch&lt;/tt&gt; includes a new set of templates that create immutable specific record classes.  The &lt;tt&gt;setter-option-for-compiler.patch&lt;/tt&gt; works in conjunction with &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-988&quot; title=&quot;Java:  Add public, private, and public-deprecated options for SpecificCompiler output&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-988&quot;&gt;&lt;del&gt;AVRO-988&lt;/del&gt;&lt;/a&gt; and adds an option to the &lt;tt&gt;SpecificCompiler&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="13506048" author="cutting" created="Wed, 28 Nov 2012 23:33:08 +0000"  >&lt;p&gt;I like the removeSetters approach since it duplicates less logic and will hence be easier to maintain.&lt;/p&gt;

&lt;p&gt;If no one objects and if you add some tests then I&apos;d be happy to commit this.&lt;/p&gt;</comment>
                            <comment id="13506067" author="jeffkole" created="Thu, 29 Nov 2012 00:05:54 +0000"  >&lt;p&gt;Most recent patch includes a test for the functionality.  Apologies for my prior laziness.  There will likely be conflicts with the patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-988&quot; title=&quot;Java:  Add public, private, and public-deprecated options for SpecificCompiler output&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-988&quot;&gt;&lt;del&gt;AVRO-988&lt;/del&gt;&lt;/a&gt;.  If you would like me to submit one large patch for both, I can do that, too.&lt;/p&gt;</comment>
                            <comment id="13506072" author="cutting" created="Thu, 29 Nov 2012 00:10:14 +0000"  >&lt;p&gt;Thanks for adding the tests so quickly!  I&apos;ll plan on committing this tomorrow.&lt;/p&gt;

&lt;p&gt;Sure, a combined patch might make things easier.&lt;/p&gt;</comment>
                            <comment id="13506088" author="jeffkole" created="Thu, 29 Nov 2012 00:45:35 +0000"  >&lt;p&gt;A single patch that fixes &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-988&quot; title=&quot;Java:  Add public, private, and public-deprecated options for SpecificCompiler output&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-988&quot;&gt;&lt;del&gt;AVRO-988&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1209&quot; title=&quot;Include immutable source templates with Maven plugin&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1209&quot;&gt;&lt;del&gt;AVRO-1209&lt;/del&gt;&lt;/a&gt; with an option on the compiler to create setters or not.  Tests included.&lt;/p&gt;</comment>
                            <comment id="13506145" author="jeffkole" created="Thu, 29 Nov 2012 02:00:45 +0000"  >&lt;p&gt;Newest version of the patch with the change to getFieldVisibility that &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=scott_carey&quot; class=&quot;user-hover&quot; rel=&quot;scott_carey&quot;&gt;Scott Carey&lt;/a&gt; suggested in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-988&quot; title=&quot;Java:  Add public, private, and public-deprecated options for SpecificCompiler output&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-988&quot;&gt;&lt;del&gt;AVRO-988&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13506862" author="cutting" created="Thu, 29 Nov 2012 22:08:20 +0000"  >&lt;p&gt;I committed this.  Thanks, Jeff!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12554251" name="AVRO-1209.patch" size="20048" author="jeffkole" created="Mon, 19 Nov 2012 23:02:24 +0000"/>
                            <attachment id="12555292" name="AVRO-988-1209.patch" size="16072" author="jeffkole" created="Thu, 29 Nov 2012 02:00:45 +0000"/>
                            <attachment id="12555277" name="AVRO-988-1209.patch" size="16232" author="jeffkole" created="Thu, 29 Nov 2012 00:45:35 +0000"/>
                            <attachment id="12555269" name="setter-option-for-compiler.patch" size="9941" author="jeffkole" created="Thu, 29 Nov 2012 00:05:54 +0000"/>
                            <attachment id="12554275" name="setter-option-for-compiler.patch" size="5462" author="jeffkole" created="Tue, 20 Nov 2012 01:32:59 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 28 Nov 2012 23:33:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>258726</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 8 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0l2pz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>121091</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Allows for the creation of immutable specific record generated classes.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
