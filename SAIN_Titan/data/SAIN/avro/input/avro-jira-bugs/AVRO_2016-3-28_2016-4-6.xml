<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:23:14 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2016-3-28+AND+created+%3C%3D+2016-4-6+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="6" total="6"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1816] Add support for logical decimal type for python AVRO</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1816</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently, python Avro does not seem to support a DECIMAL type. &lt;br/&gt;
I &lt;a href=&quot;https://github.com/premsantosh/avro/commit/162bbb73bdb09c197722f33a0b4dcaf9f7c6f9b8&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;added&lt;/a&gt; support for encoding and decoding logical decimal type for python avro.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12954021">AVRO-1816</key>
            <summary>Add support for logical decimal type for python AVRO</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="premsantosh">Prem Santosh</assignee>
                                    <reporter username="premsantosh">Prem Santosh</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Mar 2016 18:01:43 +0000</created>
                <updated>Wed, 7 Nov 2018 18:57:55 +0000</updated>
                                            <version>1.9.0</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>python</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="15214599" author="githubbot" created="Mon, 28 Mar 2016 18:12:42 +0000"  >&lt;p&gt;GitHub user premsantosh opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/81&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/81&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Added decimal logical type support for python avro&lt;/p&gt;

&lt;p&gt;    I have created an issue for this here: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1816&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1816&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/premsantosh/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/premsantosh/avro&lt;/a&gt; logical-decimal-type&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/81.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/81.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #81&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 162bbb73bdb09c197722f33a0b4dcaf9f7c6f9b8&lt;br/&gt;
Author: Prem Santosh Udaya Shankar &amp;lt;pxu@yelp.com&amp;gt;&lt;br/&gt;
Date:   2016-03-21T22:08:22Z&lt;/p&gt;

&lt;p&gt;    Added decimal logical type support for python avro&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15214605" author="githubbot" created="Mon, 28 Mar 2016 18:14:43 +0000"  >&lt;p&gt;Github user premsantosh closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/81&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/81&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15214623" author="githubbot" created="Mon, 28 Mar 2016 18:25:04 +0000"  >&lt;p&gt;GitHub user premsantosh opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/82&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/82&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1816&quot; title=&quot;Add support for logical decimal type for python AVRO&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1816&quot;&gt;AVRO-1816&lt;/a&gt; Add support for logical decimal type for python AVRO&lt;/p&gt;



&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/premsantosh/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/premsantosh/avro&lt;/a&gt; logical-decimal-type&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/82.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/82.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #82&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 162bbb73bdb09c197722f33a0b4dcaf9f7c6f9b8&lt;br/&gt;
Author: Prem Santosh Udaya Shankar &amp;lt;pxu@yelp.com&amp;gt;&lt;br/&gt;
Date:   2016-03-21T22:08:22Z&lt;/p&gt;

&lt;p&gt;    Added decimal logical type support for python avro&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="16377949" author="githubbot" created="Tue, 27 Feb 2018 03:18:59 +0000"  >&lt;p&gt;gsdatta commented on issue #82: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1816&quot; title=&quot;Add support for logical decimal type for python AVRO&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1816&quot;&gt;AVRO-1816&lt;/a&gt; Add support for logical decimal type for python AVRO&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/82#issuecomment-368733760&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/82#issuecomment-368733760&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   @mtth Any chance this is getting merged soon?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16678194" author="githubbot" created="Wed, 7 Nov 2018 12:57:41 +0000"  >&lt;p&gt;Fokko commented on issue #82: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1816&quot; title=&quot;Add support for logical decimal type for python AVRO&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1816&quot;&gt;AVRO-1816&lt;/a&gt; Add support for logical decimal type for python AVRO&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/82#issuecomment-436614360&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/82#issuecomment-436614360&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   @premsantosh Can you rebase onto master?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16678643" author="githubbot" created="Wed, 7 Nov 2018 18:57:55 +0000"  >&lt;p&gt;premsantosh commented on issue #82: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1816&quot; title=&quot;Add support for logical decimal type for python AVRO&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1816&quot;&gt;AVRO-1816&lt;/a&gt; Add support for logical decimal type for python AVRO&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/82#issuecomment-436738095&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/82#issuecomment-436738095&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   &amp;gt; @premsantosh Can you rebase onto master?&lt;/p&gt;

&lt;p&gt;   @Fokko I&apos;ve rebased this. Thanks!&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 28 Mar 2016 18:12:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2vapr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1817] Allow enums to be &quot;promoted&quot; to strings</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1817</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;We should consider adding a resolution rule that can promote an enum to a string using the enum&apos;s symbol.&lt;/p&gt;

&lt;p&gt;I have an Avro schema that has a field with an enum type. However, I have realized that an enum is not the type I actually wanted. I would much rather have the type of the field be a string. I went to change this, but of course this type of change (enum -&amp;gt; string) is not within the bounds of Avro&apos;s schema evolution. Therefore a reader with this changed schema is not be able to read an object written with the old schema.&lt;/p&gt;

&lt;p&gt;For example, if the writer schema was:&lt;/p&gt;

&lt;p&gt;enum Colour {&lt;br/&gt;
  RED, YELLOW, GREEN &lt;br/&gt;
}&lt;br/&gt;
protocol stoplight {&lt;br/&gt;
  Colour colour;&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;And the reader schema was:&lt;/p&gt;

&lt;p&gt;protocol stoplight {&lt;br/&gt;
  string colour;&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Then when you access the colour field of your object, you get the string representation of the enum value&apos;s symbol .&lt;/p&gt;

&lt;p&gt;For example, Colour.RED =&amp;gt; &quot;RED&quot;, Colour.YELLOW =&amp;gt; &quot;YELLOW&quot;, Colour.GREEN =&amp;gt; &quot;GREEN&quot;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12954939">AVRO-1817</key>
            <summary>Allow enums to be &quot;promoted&quot; to strings</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="movermeyer">Michael Overmeyer</reporter>
                        <labels>
                    </labels>
                <created>Thu, 31 Mar 2016 12:35:21 +0000</created>
                <updated>Fri, 29 Jul 2016 05:54:38 +0000</updated>
                                                                            <component>java</component>
                    <component>spec</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="15219902" author="busbey" created="Thu, 31 Mar 2016 14:05:44 +0000"  >&lt;p&gt;I can&apos;t think of anything this would break, and I&apos;m kind of surprised it&apos;s not already handled.&lt;/p&gt;

&lt;p&gt;Interested in putting up a patch &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=movermeyer&quot; class=&quot;user-hover&quot; rel=&quot;movermeyer&quot;&gt;Michael Overmeyer&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="15219964" author="movermeyer" created="Thu, 31 Mar 2016 14:49:40 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;: I could give it a shot, but unfortunately I won&apos;t have time to work on it for a few weeks.&lt;br/&gt;
If anyone else wants to take a stab at it in the mean time, they should feel free to do so.&lt;/p&gt;</comment>
                            <comment id="15397539" author="movermeyer" created="Thu, 28 Jul 2016 13:38:44 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;: Realistically, I will not have the time to learn the Avro code base sufficiently to implement this anytime soon.&lt;/p&gt;</comment>
                            <comment id="15398756" author="yibing" created="Fri, 29 Jul 2016 05:54:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;, I am not sure whether this task is feasible, especially when binary encoder/writer is used.&lt;br/&gt;
AFAICS, in &lt;tt&gt;GenericDatumWriter&lt;/tt&gt;, an enum value is written as its offset in schema enum symbols list.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void writeEnum(Schema schema, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; datum, Encoder out)
    &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!data.isEnum(datum))
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AvroTypeException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Not an &lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt;: &quot;&lt;/span&gt;+datum);
    out.writeEnum(schema.getEnumOrdinal(datum.toString()));
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If &lt;tt&gt;BinaryEncoder&lt;/tt&gt; is used, this offset is write &lt;b&gt;through&lt;/b&gt; to the data file, without any flags added to it.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void writeEnum(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; e) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.writeInt(e);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In datum reader and decoder, it is very hard, if not impossible, to figure out whether the data to read is actually an enum or an actual string. Things can be even more complicated if unicode string is considered.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 31 Mar 2016 14:05:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 25 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2vgdr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1818] Avoid buffer copy in DeflateCodec.compress and decompress</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1818</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;One of our jobs reading avro hit OOM due to the buffer copy in compress and decompress methods which is very inefficient. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/avro/blob/master/lang/java/avro/src/main/java/org/apache/avro/file/DeflateCodec.java#L71-L86&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/master/lang/java/avro/src/main/java/org/apache/avro/file/DeflateCodec.java#L71-L86&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOf(Arrays.java:3236)
	at java.io.ByteArrayOutputStream.toByteArray(ByteArrayOutputStream.java:191)
	at org.apache.avro.file.DeflateCodec.decompress(DeflateCodec.java:84)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;p&gt;I would suggest using a class that extends ByteArrrayOutputStream like &lt;a href=&quot;https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/DataOutputBuffer.java#L51-L53&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/DataOutputBuffer.java#L51-L53&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and do&lt;br/&gt;
ByteBuffer result = ByteBuffer.wrap(buf.getData(), 0, buf.getLength());&lt;/p&gt;</description>
                <environment></environment>
        <key id="12955103">AVRO-1818</key>
            <summary>Avoid buffer copy in DeflateCodec.compress and decompress</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="nkollar">Nandor Kollar</assignee>
                                    <reporter username="rohini">Rohini Palaniswamy</reporter>
                        <labels>
                    </labels>
                <created>Thu, 31 Mar 2016 21:39:14 +0000</created>
                <updated>Sun, 30 Dec 2018 04:17:16 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="15244417" author="rdblue" created="Sat, 16 Apr 2016 21:43:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rohini&quot; class=&quot;user-hover&quot; rel=&quot;rohini&quot;&gt;Rohini Palaniswamy&lt;/a&gt;, thanks for letting us know about this. Would you like to contribute a patch or pull request that does what you suggest?&lt;/p&gt;</comment>
                            <comment id="15636703" author="githubbot" created="Fri, 4 Nov 2016 15:33:25 +0000"  >&lt;p&gt;GitHub user nandorKollar opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/152&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/152&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1818&quot; title=&quot;Avoid buffer copy in DeflateCodec.compress and decompress&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1818&quot;&gt;AVRO-1818&lt;/a&gt; - Avoid buffer copy in DeflateCodec.compress and decompress&lt;/p&gt;



&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/nandorKollar/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/nandorKollar/avro&lt;/a&gt; master&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/152.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/152.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #152&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 692c478bcb8041e2c9aec9ec273a16814a219497&lt;br/&gt;
Author: Nandor Kollar &amp;lt;nkollar@cloudera.com&amp;gt;&lt;br/&gt;
Date:   2016-11-04T15:30:55Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1818&quot; title=&quot;Avoid buffer copy in DeflateCodec.compress and decompress&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1818&quot;&gt;AVRO-1818&lt;/a&gt; - Avoid buffer copy in DeflateCodec.compress and decompress&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15798070" author="githubbot" created="Wed, 4 Jan 2017 12:04:58 +0000"  >&lt;p&gt;Github user nandorKollar closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/152&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/152&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 16 Apr 2016 21:43:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 2 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2vhe7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1819] org.apache.avro.Protocol.parseMessage doesn&apos;t respect request field&apos;s aliases</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1819</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Avro specification (&lt;a href=&quot;https://avro.apache.org/docs/1.8.0/spec.html#Aliases&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://avro.apache.org/docs/1.8.0/spec.html#Aliases&lt;/a&gt; &quot;Named types and fields may have aliases&quot;) and Idl compiler supports aliases on request&apos;s fields. But org.apache.avro.Protocol.parseMessage have a special code to parse request body (not the same as for an ordinary record) and during field parsing we don&apos;t keep info about aliases. So it leads to lack of important functionality supporting protocol refactoring with backward compatibility.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12955497">AVRO-1819</key>
            <summary>org.apache.avro.Protocol.parseMessage doesn&apos;t respect request field&apos;s aliases</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="DrVirtual">Konstantin Usachev</assignee>
                                    <reporter username="DrVirtual">Konstantin Usachev</reporter>
                        <labels>
                    </labels>
                <created>Sat, 2 Apr 2016 09:27:11 +0000</created>
                <updated>Fri, 10 Feb 2017 04:48:37 +0000</updated>
                            <resolved>Wed, 20 Apr 2016 17:13:22 +0000</resolved>
                                    <version>1.9.0</version>
                                    <fixVersion>1.8.1</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="15222945" author="drvirtual" created="Sat, 2 Apr 2016 17:02:08 +0000"  >&lt;p&gt;Opened another related bug &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1820&quot; title=&quot;Read annotations to request&amp;#39;s fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1820&quot;&gt;&lt;del&gt;AVRO-1820&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15223236" author="githubbot" created="Sun, 3 Apr 2016 12:04:45 +0000"  >&lt;p&gt;GitHub user DrVirtual opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/83&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/83&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1819&quot; title=&quot;org.apache.avro.Protocol.parseMessage doesn&amp;#39;t respect request field&amp;#39;s aliases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1819&quot;&gt;&lt;del&gt;AVRO-1819&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1820&quot; title=&quot;Read annotations to request&amp;#39;s fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1820&quot;&gt;&lt;del&gt;AVRO-1820&lt;/del&gt;&lt;/a&gt;: Parsing aliases and custom properties of request&apos;s field&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1819&quot; title=&quot;org.apache.avro.Protocol.parseMessage doesn&amp;#39;t respect request field&amp;#39;s aliases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1819&quot;&gt;&lt;del&gt;AVRO-1819&lt;/del&gt;&lt;/a&gt;: Parsing aliases of request&apos;s field&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1820&quot; title=&quot;Read annotations to request&amp;#39;s fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1820&quot;&gt;&lt;del&gt;AVRO-1820&lt;/del&gt;&lt;/a&gt;: Parsing custom properties of request&apos;s field&lt;/p&gt;

&lt;p&gt;    Fixed bug in org.apache.avro.Protocol.parseMessage of loss field&apos;s aliases and custom properties.&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/DrVirtual/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/DrVirtual/avro&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1819&quot; title=&quot;org.apache.avro.Protocol.parseMessage doesn&amp;#39;t respect request field&amp;#39;s aliases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1819&quot;&gt;&lt;del&gt;AVRO-1819&lt;/del&gt;&lt;/a&gt;_&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1820&quot; title=&quot;Read annotations to request&amp;#39;s fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1820&quot;&gt;&lt;del&gt;AVRO-1820&lt;/del&gt;&lt;/a&gt;_Request_field_properties&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/83.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/83.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #83&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit eb5c5ab3fb7bc25f78ff0f7215a302658532c744&lt;br/&gt;
Author: k.usachev &amp;lt;k.usachev@corp.mail.ru&amp;gt;&lt;br/&gt;
Date:   2016-04-03T11:43:07Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1819&quot; title=&quot;org.apache.avro.Protocol.parseMessage doesn&amp;#39;t respect request field&amp;#39;s aliases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1819&quot;&gt;&lt;del&gt;AVRO-1819&lt;/del&gt;&lt;/a&gt;: Parsing aliases of request&apos;s field&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1820&quot; title=&quot;Read annotations to request&amp;#39;s fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1820&quot;&gt;&lt;del&gt;AVRO-1820&lt;/del&gt;&lt;/a&gt;: Parsing custom properties of request&apos;s field&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15250256" author="jira-bot" created="Wed, 20 Apr 2016 16:58:01 +0000"  >&lt;p&gt;Commit 4c1463cba1bc268c2ccf2a506d27e6ee84030316 in avro&apos;s branch refs/heads/master from k.usachev&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=4c1463c&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=4c1463c&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1819&quot; title=&quot;org.apache.avro.Protocol.parseMessage doesn&amp;#39;t respect request field&amp;#39;s aliases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1819&quot;&gt;&lt;del&gt;AVRO-1819&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1820&quot; title=&quot;Read annotations to request&amp;#39;s fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1820&quot;&gt;&lt;del&gt;AVRO-1820&lt;/del&gt;&lt;/a&gt;: Java: Add aliases, custom properties to Protocol. Contributed by Konstantin Usachev.&lt;/p&gt;</comment>
                            <comment id="15250285" author="rdblue" created="Wed, 20 Apr 2016 17:13:22 +0000"  >&lt;p&gt;I committed this fix. Thanks for contributing, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=DrVirtual&quot; class=&quot;user-hover&quot; rel=&quot;DrVirtual&quot;&gt;Konstantin Usachev&lt;/a&gt;!&lt;/p&gt;</comment>
                            <comment id="15365426" author="chunfy.tseng" created="Thu, 7 Jul 2016 00:56:30 +0000"  >&lt;p&gt;When using RPC, the client can use such as httpclient similar tools or use the postman send HttpTransceiver rather than use? Can you please give me an example? Thank you!&lt;/p&gt;</comment>
                            <comment id="15860699" author="githubbot" created="Fri, 10 Feb 2017 04:48:37 +0000"  >&lt;p&gt;Github user asfgit closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/83&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/83&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 3 Apr 2016 12:04:45 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 49 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2vjtj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1820] Read annotations to request&apos;s fields</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1820</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;IDL compiler supports annotations on field&apos;s type but doesn&apos;t support annotations on field itself.  I mean you can write something like&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;...
void method(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; @annotation(&lt;span class=&quot;code-quote&quot;&gt;&quot;value&quot;&lt;/span&gt;) param);
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;which translates to&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;...{
        &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;param&quot;&lt;/span&gt;,
        &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt;,
        &lt;span class=&quot;code-quote&quot;&gt;&quot;annotation&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;value&quot;&lt;/span&gt;
      }...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but we lose annotations at org.apache.avro.Protocol.parseMessage. Another related to this bug is &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1819&quot; title=&quot;org.apache.avro.Protocol.parseMessage doesn&amp;#39;t respect request field&amp;#39;s aliases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1819&quot;&gt;&lt;del&gt;AVRO-1819&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12955526">AVRO-1820</key>
            <summary>Read annotations to request&apos;s fields</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="DrVirtual">Konstantin Usachev</assignee>
                                    <reporter username="DrVirtual">Konstantin Usachev</reporter>
                        <labels>
                    </labels>
                <created>Sat, 2 Apr 2016 17:01:08 +0000</created>
                <updated>Wed, 20 Apr 2016 18:01:15 +0000</updated>
                            <resolved>Wed, 20 Apr 2016 18:01:14 +0000</resolved>
                                    <version>1.8.0</version>
                                    <fixVersion>1.8.1</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="15223237" author="drvirtual" created="Sun, 3 Apr 2016 12:07:45 +0000"  >&lt;p&gt;Added PR for this task and &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1819&quot; title=&quot;org.apache.avro.Protocol.parseMessage doesn&amp;#39;t respect request field&amp;#39;s aliases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1819&quot;&gt;&lt;del&gt;AVRO-1819&lt;/del&gt;&lt;/a&gt;: &lt;a href=&quot;https://github.com/apache/avro/pull/83&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/83&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15250258" author="jira-bot" created="Wed, 20 Apr 2016 16:58:03 +0000"  >&lt;p&gt;Commit 4c1463cba1bc268c2ccf2a506d27e6ee84030316 in avro&apos;s branch refs/heads/master from k.usachev&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=4c1463c&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=4c1463c&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1819&quot; title=&quot;org.apache.avro.Protocol.parseMessage doesn&amp;#39;t respect request field&amp;#39;s aliases&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1819&quot;&gt;&lt;del&gt;AVRO-1819&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1820&quot; title=&quot;Read annotations to request&amp;#39;s fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1820&quot;&gt;&lt;del&gt;AVRO-1820&lt;/del&gt;&lt;/a&gt;: Java: Add aliases, custom properties to Protocol. Contributed by Konstantin Usachev.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 20 Apr 2016 16:58:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 39 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2vjzz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1821] Avro (Java) Memory Leak in ReflectData Caching</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1821</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I think I have encountered one of the memory leaks described by &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1283&quot; title=&quot;remove static caches from GenericData, SpecificData and ReflectData&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1283&quot;&gt;AVRO-1283&lt;/a&gt; in the way Java Avro implements field accessor caching in &lt;tt&gt;ReflectData&lt;/tt&gt;. When a reflected object is serialized, the key of &lt;tt&gt;ClassAccessorData.bySchema&lt;/tt&gt; (as retained by &lt;tt&gt;ReflectData.ACCESSOR_CACHE&lt;/tt&gt;) retains a strong reference to the schema that was used to serialize the object, but there exists no code path for clearing these references after a schema will no longer be used.&lt;/p&gt;

&lt;p&gt;While in most cases, a class will probably only have one schema associated with it (created and cached by &lt;tt&gt;ReflectData.getSchema(Type)&lt;/tt&gt;), I experienced &lt;tt&gt;OutOfMemoryError&lt;/tt&gt; when serializing generic classes with dynamically-generated schemas. The following is a minimal example which will exhaust a 50MiB heap (&lt;tt&gt;-Xmx50m&lt;/tt&gt;) after about 190K iterations:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;AvroMemoryLeakMinimal.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.ByteArrayOutputStream;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.Collections;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.Schema;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.BinaryEncoder;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.EncoderFactory;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.reflect.ReflectDatumWriter;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;AvroMemoryLeakMinimal {

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; count = 0;
        EncoderFactory encFactory = EncoderFactory.get();
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) {
                &lt;span class=&quot;code-comment&quot;&gt;// Create schema
&lt;/span&gt;                Schema schema = Schema.createRecord(&lt;span class=&quot;code-quote&quot;&gt;&quot;schema&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
                schema.setFields(Collections.&amp;lt;Schema.Field&amp;gt;emptyList());
                &lt;span class=&quot;code-comment&quot;&gt;// serialize
&lt;/span&gt;                ByteArrayOutputStream baos = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream(1024);
                BinaryEncoder encoder = encFactory.binaryEncoder(baos, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
                (&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReflectDatumWriter&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt;(schema)).write(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;(), encoder);
                &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] result = baos.toByteArray();

                count++;
            }
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (OutOfMemoryError e) {
            &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.print(&lt;span class=&quot;code-quote&quot;&gt;&quot;Memory exhausted after &quot;&lt;/span&gt;);
            &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.print(count);
            &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot; schemas&quot;&lt;/span&gt;);
            &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; e;
        }
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I was able to fix the bug in the latest 1.9.0-SNAPSHOT from git with the following patch to &lt;tt&gt;ClassAccessorData.bySchema&lt;/tt&gt; to use weak keys so that it properly released the &lt;tt&gt;Schema&lt;/tt&gt; objects if no other threads are still referencing them:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;ReflectData.java.patch&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;--- a/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectData.java
+++ b/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectData.java
@@ -57,6 +57,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.DatumWriter;
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.specific.FixedSize;
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.specific.SpecificData;
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.SchemaNormalization;
+&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.util.WeakIdentityHashMap;
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.codehaus.jackson.JsonNode;
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.codehaus.jackson.node.NullNode;
 
@@ -234,8 +235,8 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;ReflectData &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; SpecificData {
     &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; clazz;
     &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, FieldAccessor&amp;gt; byName =
         &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, FieldAccessor&amp;gt;();
-    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; IdentityHashMap&amp;lt;Schema, FieldAccessor[]&amp;gt; bySchema =
-        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IdentityHashMap&amp;lt;Schema, FieldAccessor[]&amp;gt;();
+    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; WeakIdentityHashMap&amp;lt;Schema, FieldAccessor[]&amp;gt; bySchema =
+        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; WeakIdentityHashMap&amp;lt;Schema, FieldAccessor[]&amp;gt;();
         
     &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; ClassAccessorData(&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; c) {
       clazz = c;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Additionally, I&apos;m not sure why an &lt;tt&gt;IdentityHashMap&lt;/tt&gt; was used instead of a standard &lt;tt&gt;HashMap&lt;/tt&gt;, since two equivalent schemas have the same set of &lt;tt&gt;FieldAccessor&lt;/tt&gt;. Everything appears to work and all tests pass if I use a &lt;tt&gt;WeakHashMap&lt;/tt&gt; instead of an &lt;tt&gt;WeakIdentityHashMap&lt;/tt&gt;, but I don&apos;t know if there was some other reason object identity was important for this map. If a non-identity map can be used, this will help reduce memory/CPU usage further by not regenerating all the field accessors for equivalent schemas.&lt;/p&gt;

&lt;p&gt;The following unit test appears to reliably catch this bug, but is non-deterministic due to the nature of garbage collection (and I&apos;m not sure there&apos;s a way around that):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;TestReflectData.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; org.apache.avro.reflect;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.Schema;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.lang.reflect.Field;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.Collections;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.Map;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; org.hamcrest.Matchers.lessThan;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; org.junit.Assert.assertThat;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;TestReflectData {

    /**
     * Test &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ReflectData is leaking {@link Schema} references 
     */
    @SuppressWarnings(&lt;span class=&quot;code-quote&quot;&gt;&quot;unchecked&quot;&lt;/span&gt;)
    @Test &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testWeakSchemaCaching() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException, NoSuchFieldException, IllegalAccessException {

        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; 1000; i++) {
            &lt;span class=&quot;code-comment&quot;&gt;// Create schema
&lt;/span&gt;            Schema schema = Schema.createRecord(&lt;span class=&quot;code-quote&quot;&gt;&quot;schema&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
            schema.setFields(Collections.&amp;lt;Schema.Field&amp;gt;emptyList());

            ReflectData.get().getRecordState(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;(), schema);
        }

        &lt;span class=&quot;code-comment&quot;&gt;// Reflect the number of schemas currently in the cache
&lt;/span&gt;        Field cacheField = ReflectData.&lt;span class=&quot;code-keyword&quot;&gt;class.&lt;/span&gt;getDeclaredField(&lt;span class=&quot;code-quote&quot;&gt;&quot;ACCESSOR_CACHE&quot;&lt;/span&gt;);
        cacheField.setAccessible(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt;, ?&amp;gt; ACCESSOR_CACHE = (Map) cacheField.get(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
        &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; classData = ACCESSOR_CACHE.get(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.class);

        Field bySchemaField = classData.getClass().getDeclaredField(&lt;span class=&quot;code-quote&quot;&gt;&quot;bySchema&quot;&lt;/span&gt;);
        bySchemaField.setAccessible(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        Map&amp;lt;Schema, FieldAccessor[]&amp;gt; accessors = (Map) bySchemaField.get(classData);

        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.gc(); &lt;span class=&quot;code-comment&quot;&gt;// Not guaranteed reliable, but seems to be reliable enough &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; our purposes
&lt;/span&gt;
        &lt;span class=&quot;code-comment&quot;&gt;// See &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; the number of schemas in the cache is less than the number we generated - &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; so, then they are being released.
&lt;/span&gt;        assertThat(&lt;span class=&quot;code-quote&quot;&gt;&quot;ReflectData cache should release references&quot;&lt;/span&gt;, accessors.size(), lessThan(1000));
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(Added &lt;tt&gt;org.hamcrest:hamcrest-all&lt;/tt&gt; dependency to test scope for the built-in &lt;tt&gt;lessThan()&lt;/tt&gt; matcher)&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;The current workaround that I&apos;m using to mitigate the leak is to cache schemas and re-use older instances when I&apos;m about to serialize an equivalent schema. Since most of the generated schemas are equivalent, this limits the number of leaked schemas to a handful. A more permanent workaround would be to switch to using a &lt;tt&gt;GenericRecord&lt;/tt&gt; instead of a generic java class for the object that is being serialized, since this cuts out the use of &lt;tt&gt;ReflectData&lt;/tt&gt; entirely.&lt;/p&gt;</description>
                <environment>&lt;p&gt;OS X 10.11.3&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;java version &lt;span class=&quot;code-quote&quot;&gt;&quot;1.8.0_66&quot;&lt;/span&gt;
Java(TM) SE &lt;span class=&quot;code-object&quot;&gt;Runtime&lt;/span&gt; Environment (build 1.8.0_66-b17)
Java HotSpot(TM) 64-Bit Server VM (build 25.66-b17, mixed mode)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</environment>
        <key id="12955792">AVRO-1821</key>
            <summary>Avro (Java) Memory Leak in ReflectData Caching</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="baharclerode">Bryan Harclerode</assignee>
                                    <reporter username="baharclerode">Bryan Harclerode</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Apr 2016 15:22:10 +0000</created>
                <updated>Tue, 20 Jun 2017 18:30:11 +0000</updated>
                            <resolved>Tue, 20 Jun 2017 08:44:49 +0000</resolved>
                                                    <fixVersion>1.8.1</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="15233776" author="rdblue" created="Sat, 9 Apr 2016 23:24:50 +0000"  >&lt;p&gt;Thanks for tracking this down, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=baharclerode&quot; class=&quot;user-hover&quot; rel=&quot;baharclerode&quot;&gt;Bryan Harclerode&lt;/a&gt;. I think you&apos;re right about the memory leak. It looks like you&apos;ve done a great job putting together a test case and the fix. Could you put together a patch or pull request with those and we&apos;ll get it committed?&lt;/p&gt;

&lt;p&gt;For your question about the IdentityHashMap vs regular HashMap, I think the main idea is that because these lookups are in very tight loops, we want to avoid unnecessary operations. It&apos;s cheap to keep a copy per schema because there aren&apos;t typically a huge number of schemas in an app. But, we do like to use weak maps to avoid problems like this. Thanks for working on this!&lt;/p&gt;</comment>
                            <comment id="15235569" author="baharclerode" created="Mon, 11 Apr 2016 17:42:29 +0000"  >&lt;p&gt;Attaching changes and unit tests as a patch from &lt;tt&gt;git format-patch&lt;/tt&gt;&lt;/p&gt;</comment>
                            <comment id="15244400" author="jira-bot" created="Sat, 16 Apr 2016 21:13:46 +0000"  >&lt;p&gt;Commit 58daaf08a2637e0976cc124571200ce198b3143d in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdblue&quot; class=&quot;user-hover&quot; rel=&quot;rdblue&quot;&gt;Ryan Blue&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=58daaf0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=58daaf0&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1821&quot; title=&quot;Avro (Java) Memory Leak in ReflectData Caching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1821&quot;&gt;&lt;del&gt;AVRO-1821&lt;/del&gt;&lt;/a&gt;: Fix possible memory leak of Schemas in ReflectData. Contributed by Byran Harclerode.&lt;/p&gt;</comment>
                            <comment id="15244402" author="rdblue" created="Sat, 16 Apr 2016 21:16:00 +0000"  >&lt;p&gt;I committed the fix. Thanks for your contribution, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=baharclerode&quot; class=&quot;user-hover&quot; rel=&quot;baharclerode&quot;&gt;Bryan Harclerode&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;I updated it slightly to avoid the need for reflection in the test (used package-private instead) and I used a Guava weak identity map instead of the one we&apos;re trying to move away from.&lt;/p&gt;</comment>
                            <comment id="15244432" author="jira-bot" created="Sat, 16 Apr 2016 22:04:58 +0000"  >&lt;p&gt;Commit 54eefb8d780237a7108c2a0c91b12282686426ad in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdblue&quot; class=&quot;user-hover&quot; rel=&quot;rdblue&quot;&gt;Ryan Blue&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=54eefb8&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=54eefb8&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1821&quot; title=&quot;Avro (Java) Memory Leak in ReflectData Caching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1821&quot;&gt;&lt;del&gt;AVRO-1821&lt;/del&gt;&lt;/a&gt; ADDENDUM: Fix checkstyle violations.&lt;/p&gt;</comment>
                            <comment id="15244927" author="nielsbasjes" created="Sun, 17 Apr 2016 21:42:47 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdblue&quot; class=&quot;user-hover&quot; rel=&quot;rdblue&quot;&gt;Ryan Blue&lt;/a&gt; &lt;br/&gt;
I was just verifying &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1826&quot; title=&quot;build.sh rat fails over extra license files and many others.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1826&quot;&gt;&lt;del&gt;AVRO-1826&lt;/del&gt;&lt;/a&gt; (the build rat problem) and it failed ...&lt;br/&gt;
The file lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectData.java is missing the appropriate copyright message.&lt;/p&gt;</comment>
                            <comment id="15244938" author="jira-bot" created="Sun, 17 Apr 2016 22:10:31 +0000"  >&lt;p&gt;Commit b30b9e7a3365f50aa6f4481705937c462914764d in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdblue&quot; class=&quot;user-hover&quot; rel=&quot;rdblue&quot;&gt;Ryan Blue&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=b30b9e7&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=b30b9e7&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1821&quot; title=&quot;Avro (Java) Memory Leak in ReflectData Caching&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1821&quot;&gt;&lt;del&gt;AVRO-1821&lt;/del&gt;&lt;/a&gt;: Add license header to TestReflectData.&lt;/p&gt;</comment>
                            <comment id="15244939" author="rdblue" created="Sun, 17 Apr 2016 22:10:52 +0000"  >&lt;p&gt;Fixed. Thanks for catching that, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nielsbasjes&quot; class=&quot;user-hover&quot; rel=&quot;nielsbasjes&quot;&gt;Niels Basjes&lt;/a&gt;!&lt;/p&gt;</comment>
                            <comment id="16055052" author="alunarbeach" created="Tue, 20 Jun 2017 02:12:27 +0000"  >&lt;p&gt;Any ETA when this patch will be released?&lt;/p&gt;</comment>
                            <comment id="16055373" author="nkollar" created="Tue, 20 Jun 2017 08:43:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=alunarbeach&quot; class=&quot;user-hover&quot; rel=&quot;alunarbeach&quot;&gt;Anbu Cheeralan&lt;/a&gt; it looks like &lt;a href=&quot;https://github.com/apache/avro/commit/ec8a091819a25bccf03adc868449f57f9c076d19&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;this&lt;/a&gt; is already committed and released in 1.8.1.&lt;/p&gt;</comment>
                            <comment id="16056246" author="alunarbeach" created="Tue, 20 Jun 2017 18:30:11 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkollar&quot; class=&quot;user-hover&quot; rel=&quot;nkollar&quot;&gt;Nandor Kollar&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12798067" name="0001-AVRO-1821-Fix-memory-leak-of-Schemas-in-ReflectData.patch" size="4305" author="baharclerode" created="Mon, 11 Apr 2016 17:42:29 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 9 Apr 2016 23:24:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 30 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2vln3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
