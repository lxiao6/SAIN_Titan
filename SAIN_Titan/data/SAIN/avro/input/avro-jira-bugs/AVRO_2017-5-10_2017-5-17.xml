<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:25:03 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2017-5-10+AND+created+%3C%3D+2017-5-17+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="2" total="2"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-2033] GenericUnions constructor defaults to a broken state</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2033</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Creating a GenericUnion with a NodePtr results in an object that causes errors when written. Specifically the index for the union type will be invalid. This will only be caught when reading the serialized record. &lt;/p&gt;


&lt;p&gt;The issue is the consturctor:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;   GenericUnion(&lt;span class=&quot;code-keyword&quot;&gt;const&lt;/span&gt; NodePtr&amp;amp; schema) :
        GenericContainer(AVRO_UNION, schema), curBranch_(schema-&amp;gt;leaves()) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Setting curBranch_ to schema-&amp;gt;leaves() will result in setting the value to an invalid index (one more than available. I believe the constructor in question should be changed to: &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  GenericContainer(AVRO_UNION, schema), curBranch_(0) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This should ensure the union is set to the default branch. &lt;/p&gt;

</description>
                <environment></environment>
        <key id="13070850">AVRO-2033</key>
            <summary>GenericUnions constructor defaults to a broken state</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="philrizk@gmail.com">Philip Rizk</assignee>
                                    <reporter username="philrizk@gmail.com">Philip Rizk</reporter>
                        <labels>
                    </labels>
                <created>Wed, 10 May 2017 15:48:42 +0000</created>
                <updated>Mon, 22 May 2017 02:31:13 +0000</updated>
                            <resolved>Mon, 22 May 2017 02:31:13 +0000</resolved>
                                    <version>1.7.7</version>
                                    <fixVersion>1.8.3</fixVersion>
                                    <component>c++</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="16004886" author="philrizk@gmail.com" created="Wed, 10 May 2017 15:49:32 +0000"  >&lt;p&gt;Index: GenericDatum.hh&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; api/GenericDatum.hh	&lt;br/&gt;
+++ api/GenericDatum.hh	&lt;br/&gt;
@@ -200,7 +200,7 @@&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;and the value should correspond to one of the branches of the union.&lt;br/&gt;
      */&lt;br/&gt;
     GenericUnion(const NodePtr&amp;amp; schema) :&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;GenericContainer(AVRO_UNION, schema), curBranch_(schema-&amp;gt;leaves()) {&lt;br/&gt;
+        GenericContainer(AVRO_UNION, schema), curBranch_(0) {&lt;br/&gt;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;</comment>
                            <comment id="16019086" author="thiru_mg" created="Mon, 22 May 2017 02:31:13 +0000"  >&lt;p&gt;Resolved with a small modification to the original patch: instead of initializing &lt;tt&gt;currentBranch_&lt;/tt&gt; directly, call &lt;tt&gt;selectBranch()&lt;/tt&gt;.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 22 May 2017 02:31:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 35 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3es4v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2034] Nested schema types with unexpected fields causes json parse failure</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2034</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;When parsing a nested type with an unexpected field using the JSON parser, this results in an error.  To reproduce, see the class &lt;tt&gt;TestNestedRecords&lt;/tt&gt; in the referenced PR.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/avro/pull/224&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/224&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note that this only occurs when the following pattern exists in the schema.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;regular field&lt;/li&gt;
	&lt;li&gt;nested record with additional field&lt;/li&gt;
	&lt;li&gt;Any subsequent field following the nested record with an unexpected field appears to reproduce the problem.&lt;/li&gt;
&lt;/ol&gt;
</description>
                <environment></environment>
        <key id="13071291">AVRO-2034</key>
            <summary>Nested schema types with unexpected fields causes json parse failure</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dkulp">Daniel Kulp</assignee>
                                    <reporter username="tnine">Todd Nine</reporter>
                        <labels>
                    </labels>
                <created>Thu, 11 May 2017 18:28:58 +0000</created>
                <updated>Tue, 11 Dec 2018 18:17:35 +0000</updated>
                            <resolved>Tue, 11 Dec 2018 18:17:35 +0000</resolved>
                                    <version>1.8.1</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="16006965" author="githubbot" created="Thu, 11 May 2017 18:29:55 +0000"  >&lt;p&gt;GitHub user tnine opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/224&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/224&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Nested schema types with unexpected fields causes json parse failure&lt;/p&gt;



&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/sandwich-expert/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/sandwich-expert/avro&lt;/a&gt; nested-field-fix&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/224.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/224.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #224&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit b57d9609f41ae4a7255698fda20129383274d3ec&lt;br/&gt;
Author: Todd Nine &amp;lt;todd@thelastpickle.com&amp;gt;&lt;br/&gt;
Date:   2017-05-11T18:24:15Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Created test to prove issue&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="16009871" author="tnine" created="Sun, 14 May 2017 22:48:43 +0000"  >&lt;p&gt;This is the flow I&apos;ve followed through the code.  My test is in this PR. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/avro/pull/224/files#diff-2a2af8f5525407454364290cc45f5cd9R1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/224/files#diff-2a2af8f5525407454364290cc45f5cd9R1&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Caller initiates record read&lt;/p&gt;


&lt;p&gt;&lt;tt&gt;GenericDatumReader.readRecord&lt;/tt&gt; is invoked on the root record&lt;br/&gt;
First field, &quot;parentField1&quot; is read via &lt;tt&gt;readString(Object old, Decoder in)&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;&lt;tt&gt;GenericDatumReader.readRecord&lt;/tt&gt; is recursively called on the internal nested record &quot;child1&quot;&lt;br/&gt;
First field &quot;childField&quot; is read via &lt;tt&gt;readString(Object old, Decoder in)&lt;/tt&gt;&lt;br/&gt;
&lt;tt&gt;GenericDataReader.readRecord&lt;/tt&gt; returns and the result is set into the field &quot;child1&quot;&lt;/p&gt;

&lt;p&gt;At this point, the &lt;tt&gt;protected Object readString(Object old, Decoder in)&lt;/tt&gt; method&lt;br/&gt;
is invoked in the GenericDatumReader when attempting to read the field &quot;parentField2&quot;.&lt;br/&gt;
Which in turn invokes &lt;tt&gt;ResolvingDecoder.readString(Utf8 old)&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;Once in this method, the encapsulated JsonDecoder&apos;s current state is incorrect.  Therefore, the call to&lt;br/&gt;
&lt;tt&gt;in.readString(old);&lt;/tt&gt; (line 201) will fail.&lt;/p&gt;

&lt;p&gt;This fails because the next symbol that is a string, is in fact the nested&lt;br/&gt;
field within the &quot;child1&quot; record that is unexpected&lt;/p&gt;


&lt;p&gt;I&apos;ve attempted to add &quot;skipToEndOfRecord&quot; functionality in the Decoder class and&lt;br/&gt;
subsequent subclasses.  This would be invoked before GenericDataReader.readRecord&lt;br/&gt;
returns with the intention of &quot;skipping&quot; over any subsequent fields that have not&lt;br/&gt;
been read in the record.  However, this seems to contradict logic I have found in this source in JsonDecoder:500&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (top == Symbol.RECORD_END) {
         &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (currentReorderBuffer != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !currentReorderBuffer.savedFields.isEmpty()) {
           &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Unknown fields: &quot;&lt;/span&gt; + currentReorderBuffer.savedFields.keySet());
         }
         currentReorderBuffer = reorderBuffers.pop();
       }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which will throw an error if fields are encountered in a record, but not read from the schema.&lt;/p&gt;</comment>
                            <comment id="16011013" author="tnine" created="Mon, 15 May 2017 18:04:54 +0000"  >&lt;p&gt;Issue has been fixed.  See PR.  All existing tests pass. &lt;/p&gt;</comment>
                            <comment id="16578256" author="graf_blutwurst" created="Mon, 13 Aug 2018 13:07:12 +0000"  >&lt;p&gt;I have a similar issue and came across this ticket. I dug some more into the issue and created some failing examples&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/GrafBlutwurst/4d5c108b026b34ce83d2569bc8991b3d&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gist.github.com/GrafBlutwurst/4d5c108b026b34ce83d2569bc8991b3d&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;Any feedback on &lt;a href=&quot;https://stackoverflow.com/questions/51817298/strict-avro-parsing-mode-no-dropping-additional-fields&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://stackoverflow.com/questions/51817298/strict-avro-parsing-mode-no-dropping-additional-fields&lt;/a&gt;&#160;would be welcome. but it seems the JSON parser has a major bug in record handling&lt;/p&gt;</comment>
                            <comment id="16717681" author="githubbot" created="Tue, 11 Dec 2018 18:13:34 +0000"  >&lt;p&gt;dkulp closed pull request #224: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Nested schema types with unexpected fields causes json parse failure&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/224&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/224&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/avro/src/main/java/org/apache/avro/io/JsonDecoder.java b/lang/java/avro/src/main/java/org/apache/avro/io/JsonDecoder.java&lt;br/&gt;
index 78fafaa83..cd2742453 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/main/java/org/apache/avro/io/JsonDecoder.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/io/JsonDecoder.java&lt;br/&gt;
@@ -494,14 +494,23 @@ public Symbol doAction(Symbol input, Symbol top) throws IOException &lt;/p&gt;
{
         throw error(&quot;record-start&quot;);
       }
&lt;p&gt;     } else if (top == Symbol.RECORD_END || top == Symbol.UNION_END) {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (in.getCurrentToken() == JsonToken.END_OBJECT) {&lt;br/&gt;
+      //&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; advance to the end of our object&lt;br/&gt;
+      while(in.getCurrentToken() != JsonToken.END_OBJECT)
{
         in.nextToken();
+      }
&lt;p&gt;+&lt;br/&gt;
+      if (in.getCurrentToken() == JsonToken.END_OBJECT) {&lt;br/&gt;
+&lt;br/&gt;
         if (top == Symbol.RECORD_END) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {           if (currentReorderBuffer != null &amp;amp;&amp;amp; !currentReorderBuffer.savedFields.isEmpty()) {
             throw error(&quot;Unknown fields: &quot; + currentReorderBuffer.savedFields.keySet());
           }           currentReorderBuffer = reorderBuffers.pop();         }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+&lt;br/&gt;
+        //&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; advance beyond the end object for the next record.&lt;br/&gt;
+        in.nextToken();&lt;br/&gt;
+&lt;br/&gt;
       } else &lt;/p&gt;
{
         throw error(top == Symbol.RECORD_END ? &quot;record-end&quot; : &quot;union-end&quot;);
       }
&lt;p&gt;diff --git a/lang/java/avro/src/test/java/org/apache/avro/TestNestedRecords.java b/lang/java/avro/src/test/java/org/apache/avro/TestNestedRecords.java&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 000000000..8900b1ee9&lt;/p&gt;
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;/dev/null&lt;br/&gt;
+++ b/lang/java/avro/src/test/java/org/apache/avro/TestNestedRecords.java&lt;br/&gt;
@@ -0,0 +1,110 @@&lt;br/&gt;
+package org.apache.avro;&lt;br/&gt;
+&lt;br/&gt;
+import org.apache.avro.generic.GenericData;&lt;br/&gt;
+import org.apache.avro.generic.GenericDatumReader;&lt;br/&gt;
+import org.apache.avro.io.DatumReader;&lt;br/&gt;
+import org.apache.avro.io.DecoderFactory;&lt;br/&gt;
+import org.apache.avro.io.JsonDecoder;&lt;br/&gt;
+import org.junit.Test;&lt;br/&gt;
+&lt;br/&gt;
+import java.io.ByteArrayInputStream;&lt;br/&gt;
+import java.io.IOException;&lt;br/&gt;
+&lt;br/&gt;
+import static org.hamcrest.CoreMatchers.equalTo;&lt;br/&gt;
+import static org.junit.Assert.assertThat;&lt;br/&gt;
+&lt;br/&gt;
+/**&lt;br/&gt;
+ * This test demonstrates the fix for a complex nested schema type.&lt;br/&gt;
+ */&lt;br/&gt;
+public class TestNestedRecords {&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testSingleSubRecord() throws IOException {&lt;br/&gt;
+&lt;br/&gt;
+    final Schema child = SchemaBuilder.record(&quot;Child&quot;)&lt;br/&gt;
+            .namespace(&quot;org.apache.avro.nested&quot;)&lt;br/&gt;
+            .fields()&lt;br/&gt;
+            .requiredString(&quot;childField&quot;).endRecord();&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
+    final Schema parent = SchemaBuilder.record(&quot;Parent&quot;)&lt;br/&gt;
+            .namespace(&quot;org.apache.avro.nested&quot;)&lt;br/&gt;
+            .fields()&lt;br/&gt;
+            .requiredString(&quot;parentField1&quot;)&lt;br/&gt;
+            .name(&quot;child1&quot;).type(child).noDefault()&lt;br/&gt;
+            .requiredString(&quot;parentField2&quot;).endRecord();&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
+    final String inputAsExpected = &quot;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {n&amp;quot; ++            &amp;quot; &amp;quot;parentField1&amp;quot;}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;&quot;;&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
+    final ByteArrayInputStream inputStream = new ByteArrayInputStream(inputAsExpected.getBytes());&lt;br/&gt;
+&lt;br/&gt;
+    final JsonDecoder decoder = DecoderFactory.get().jsonDecoder(parent, inputStream);&lt;br/&gt;
+    final DatumReader&amp;lt;Object&amp;gt; reader = new GenericDatumReader&amp;lt;Object&amp;gt;(parent);&lt;br/&gt;
+&lt;br/&gt;
+    final GenericData.Record  decoded = (GenericData.Record) reader.read(null, decoder);&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
+    assertThat(decoded.get(&quot;parentField1&quot;).toString(), equalTo(&quot;parentValue1&quot;));&lt;br/&gt;
+    assertThat(decoded.get(&quot;parentField2&quot;).toString(), equalTo(&quot;parentValue2&quot;));&lt;br/&gt;
+&lt;br/&gt;
+    assertThat(((GenericData.Record)decoded.get(&quot;child1&quot;)).get(&quot;childField&quot;).toString(), equalTo(&quot;childValue1&quot;));&lt;br/&gt;
+&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testSingleSubRecordExtraField() throws IOException {&lt;br/&gt;
+&lt;br/&gt;
+    final Schema child = SchemaBuilder.record(&quot;Child&quot;)&lt;br/&gt;
+            .namespace(&quot;org.apache.avro.nested&quot;)&lt;br/&gt;
+            .fields()&lt;br/&gt;
+            .requiredString(&quot;childField&quot;).endRecord();&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
+    final Schema parent = SchemaBuilder.record(&quot;Parent&quot;)&lt;br/&gt;
+            .namespace(&quot;org.apache.avro.nested&quot;)&lt;br/&gt;
+            .fields()&lt;br/&gt;
+            .requiredString(&quot;parentField1&quot;)&lt;br/&gt;
+            .name(&quot;child1&quot;).type(child).noDefault()&lt;br/&gt;
+            .requiredString(&quot;parentField2&quot;).endRecord();&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
+    final String inputAsExpected = &quot;&lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {n&amp;quot; ++            &amp;quot; &amp;quot;parentField1&amp;quot;}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;&quot;;&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
+    final ByteArrayInputStream inputStream = new ByteArrayInputStream(inputAsExpected.getBytes());&lt;br/&gt;
+&lt;br/&gt;
+    final JsonDecoder decoder = DecoderFactory.get().jsonDecoder(parent, inputStream);&lt;br/&gt;
+    final DatumReader&amp;lt;Object&amp;gt; reader = new GenericDatumReader&amp;lt;Object&amp;gt;(parent);&lt;br/&gt;
+&lt;br/&gt;
+    final GenericData.Record decoded = (GenericData.Record) reader.read(null, decoder);&lt;br/&gt;
+&lt;br/&gt;
+    assertThat(decoded.get(&quot;parentField1&quot;).toString(), equalTo(&quot;parentValue1&quot;));&lt;br/&gt;
+    assertThat(decoded.get(&quot;parentField2&quot;).toString(), equalTo(&quot;parentValue2&quot;));&lt;br/&gt;
+&lt;br/&gt;
+    assertThat(((GenericData.Record)decoded.get(&quot;child1&quot;)).get(&quot;childField&quot;).toString(), equalTo(&quot;childValue1&quot;));&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+}&lt;/p&gt;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16717682" author="jira-bot" created="Tue, 11 Dec 2018 18:13:37 +0000"  >&lt;p&gt;Commit d55f5e152c288a2037d65d15a7169d76aa9be2be in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tnine&quot; class=&quot;user-hover&quot; rel=&quot;tnine&quot;&gt;Todd Nine&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=d55f5e1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=d55f5e1&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Nested schema types with unexpected fields causes json parse failure (#224)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Created test to prove issue&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt;. Updates test to show a working record vs a failing record in the simplest possible scheme.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Fixes advance logic to skip unrecognized fields at record end&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16717683" author="jira-bot" created="Tue, 11 Dec 2018 18:13:39 +0000"  >&lt;p&gt;Commit d55f5e152c288a2037d65d15a7169d76aa9be2be in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tnine&quot; class=&quot;user-hover&quot; rel=&quot;tnine&quot;&gt;Todd Nine&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=d55f5e1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=d55f5e1&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Nested schema types with unexpected fields causes json parse failure (#224)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Created test to prove issue&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt;. Updates test to show a working record vs a failing record in the simplest possible scheme.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Fixes advance logic to skip unrecognized fields at record end&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16717685" author="jira-bot" created="Tue, 11 Dec 2018 18:13:41 +0000"  >&lt;p&gt;Commit d55f5e152c288a2037d65d15a7169d76aa9be2be in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tnine&quot; class=&quot;user-hover&quot; rel=&quot;tnine&quot;&gt;Todd Nine&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=d55f5e1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=d55f5e1&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Nested schema types with unexpected fields causes json parse failure (#224)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Created test to prove issue&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt;. Updates test to show a working record vs a failing record in the simplest possible scheme.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Fixes advance logic to skip unrecognized fields at record end&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16717686" author="jira-bot" created="Tue, 11 Dec 2018 18:13:42 +0000"  >&lt;p&gt;Commit d55f5e152c288a2037d65d15a7169d76aa9be2be in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tnine&quot; class=&quot;user-hover&quot; rel=&quot;tnine&quot;&gt;Todd Nine&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=d55f5e1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=d55f5e1&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Nested schema types with unexpected fields causes json parse failure (#224)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Created test to prove issue&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt;. Updates test to show a working record vs a failing record in the simplest possible scheme.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Fixes advance logic to skip unrecognized fields at record end&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16717694" author="jira-bot" created="Tue, 11 Dec 2018 18:17:27 +0000"  >&lt;p&gt;Commit 254ee8ff595c6c52580128aec9355394f96382d5 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dkulp&quot; class=&quot;user-hover&quot; rel=&quot;dkulp&quot;&gt;Daniel Kulp&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=254ee8f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=254ee8f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2034&quot; title=&quot;Nested schema types with unexpected fields causes json parse failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2034&quot;&gt;&lt;del&gt;AVRO-2034&lt;/del&gt;&lt;/a&gt; Remove conditions that will always be true/false&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 11 May 2017 18:29:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3euuv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
