<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:12:45 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2009-9-28+AND+created+%3C%3D+2009-10-7+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="11" total="11"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-126] Support embedded schema (de)serialization not only for files but for arbitrary byte arrays</title>
                <link>https://issues.apache.org/jira/browse/AVRO-126</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;While DataFileWriter can serialize to an arbitrary output stream, DataFileReader cannot. However, it&apos;s useful to allow for this. Thus, a SeekableByteArrayInput should be available to wrap a byte[] and allow for Deserialization from a byte input stream.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12436738">AVRO-126</key>
            <summary>Support embedded schema (de)serialization not only for files but for arbitrary byte arrays</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="floleibert">Flo Leibert</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Sep 2009 07:55:07 +0000</created>
                <updated>Mon, 1 Mar 2010 21:47:25 +0000</updated>
                            <resolved>Tue, 12 Jan 2010 22:32:16 +0000</resolved>
                                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12760176" author="floleibert" created="Mon, 28 Sep 2009 07:57:17 +0000"  >&lt;p&gt;SeekableByteArrayInput now available&lt;/p&gt;</comment>
                            <comment id="12760672" author="cutting" created="Tue, 29 Sep 2009 19:00:53 +0000"  >&lt;p&gt;Can you further elaborate the use case?  In particular, what is the non-file use case for DataFileReader?  If you need to directly write and read instances from streams, then you can use DatumWriter and DatumReader directly, no?  Thanks!&lt;/p&gt;</comment>
                            <comment id="12760674" author="floleibert" created="Tue, 29 Sep 2009 19:15:12 +0000"  >&lt;p&gt;The DatumReader / DatumWriter don&apos;t support the EmbeddedSchema - I propose renaming the DataFileReader/Writer to DataStreamReader/Writer and thus supporting use cases outside the FS spectrum. I am using those for storing data in Voldemort where I don&apos;t have file access but I&apos;m passed a byte array... &lt;/p&gt;

</comment>
                            <comment id="12760714" author="cutting" created="Tue, 29 Sep 2009 21:23:20 +0000"  >&lt;p&gt;Are you using a new DataFile-formatted blob per instance?  That&apos;s pretty heavy-weight.&lt;/p&gt;</comment>
                            <comment id="12760740" author="floleibert" created="Tue, 29 Sep 2009 22:04:36 +0000"  >&lt;p&gt;I agree it&apos;s heavy weight - I still think there are some usecases for this - i.e. when you have a 1000s of different schemata where each schema has a big amount of data... &lt;/p&gt;</comment>
                            <comment id="12798429" author="hammer" created="Sun, 10 Jan 2010 00:30:23 +0000"  >&lt;p&gt;I think we should resolve this issue before the 1.3 release.&lt;/p&gt;</comment>
                            <comment id="12798746" author="cutting" created="Mon, 11 Jan 2010 17:58:37 +0000"  >&lt;p&gt;I think this was fixed in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-160&quot; title=&quot;file format should be friendly to streaming&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-160&quot;&gt;&lt;del&gt;AVRO-160&lt;/del&gt;&lt;/a&gt;.  There&apos;s a new class DataFileStream that accepts an arbitrary input stream.  Does this suffice?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12420682" name="AVRO-126.patch" size="1100" author="floleibert" created="Mon, 28 Sep 2009 07:57:17 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Sep 2009 19:00:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94454</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 3 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dyen:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79504</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-127]  Avro should support multiple schemas from the same AVRO file </title>
                <link>https://issues.apache.org/jira/browse/AVRO-127</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;in our application, we often have to merge together all the day&apos;s data into one daily file,&lt;br/&gt;
data file schemas must be changing within the day, so we have different schemas within the same file.&lt;/p&gt;

&lt;p&gt;AVRO should support multiple schemas within the same file, ideally different schemas can be parsed out&lt;br/&gt;
to different children classes of the same schema class.&lt;/p&gt;

</description>
                <environment>&lt;p&gt;all systems&lt;/p&gt;</environment>
        <key id="12436764">AVRO-127</key>
            <summary> Avro should support multiple schemas from the same AVRO file </summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="yangyangyyy">Yang Yang</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Sep 2009 16:41:55 +0000</created>
                <updated>Tue, 13 Dec 2011 19:06:46 +0000</updated>
                            <resolved>Tue, 29 Sep 2009 00:23:03 +0000</resolved>
                                                    <fixVersion>1.2.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12760356" author="cutting" created="Mon, 28 Sep 2009 19:29:51 +0000"  >&lt;p&gt;In Avro 1.1 we added DataFileWriter#addSchema(Schema):&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hadoop.apache.org/avro/docs/current/api/java/org/apache/avro/file/DataFileWriter.html#addSchema%28org.apache.avro.Schema%29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://hadoop.apache.org/avro/docs/current/api/java/org/apache/avro/file/DataFileWriter.html#addSchema%28org.apache.avro.Schema%29&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This only works if the top-level schema is a union.  It lets you add clauses to that union as you write the file.  So, for example, you might do something like:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;DataFileWriter&amp;lt;Object&amp;gt; out = 
  new DataFileWriter&amp;lt;Object&amp;gt;(Schema.createUnion(new ArrayList()[])),
   new FileOutputStream(&quot;foo&quot;), new GenericDatumWriter());
...
out.addSchema(x.getSchema());
out.write(x);
...
out.addSchema(y.getSchema());
out.write(y)
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Does that achieve what you want?  This should work with specific or reflect data too.&lt;/p&gt;

&lt;p&gt;Note that you should only add a given schema once.  Also, if you have a large number of schemas (&amp;gt;10?) per file then performance may lag a bit, since it scans the union linearly each time an entry is appended.  But that could easily be optimized if it became a problem.&lt;/p&gt;

&lt;p&gt;I am tempted to make this the default for DataFileWriter: that we add a constructor that does not include a schema, in which case an empty union is used.  Also, we could then automatically add schemas to the union if they&apos;re not already present.  Would that be useful?&lt;/p&gt;</comment>
                            <comment id="12760376" author="yangyangyyy" created="Mon, 28 Sep 2009 20:40:08 +0000"  >&lt;p&gt;yes, this is exactly what we want.&lt;/p&gt;


&lt;p&gt;the schema change frequency is fine, we will have about at most 1--2 changes each month, so about 1 or 2 daily files out of every 30 files will have&lt;br/&gt;
more than 1 schema in them. &lt;/p&gt;

&lt;p&gt;having a new constructor isn&apos;t so urgently needed, the above &quot;empty union---&amp;gt;addSchema() &quot;  approach is good enough.&lt;/p&gt;


&lt;p&gt;but there is indeed a problem: I normally use GenericDatumWriter so that  I can use it directly on HDFS , instead of facing a file (the hadoop FileInput/FileOutputFormat &lt;br/&gt;
API gives me a DataInputStream to work with, not a file), it seems that GenericDatumWriter does not have addSchema() method. does that need to be copied over &lt;br/&gt;
to GenericDatumWriter ?&lt;/p&gt;





&lt;p&gt;Thanks&lt;br/&gt;
Yang&lt;/p&gt;</comment>
                            <comment id="12760430" author="cutting" created="Mon, 28 Sep 2009 23:07:49 +0000"  >&lt;p&gt;This technique relies on the way that unions are encoded.  In general, if new elements are added to the end of a union schema then data written with this schema before these were added can still be read.  So you can do the same thing with GenericDatumWriter: just create the new extended union schema, then either use DatumWriter#setSchema() to install it or create a new DatumWriter with the new extended schema.&lt;/p&gt;

&lt;p&gt;Note that you should store the union schema somewhere with the data, so that you can be guaranteed to be able to read it later.  Avro&apos;s data file format takes care of this for you.&lt;/p&gt;

&lt;p&gt;&amp;gt; I normally use GenericDatumWriter so that I can use it directly on HDFS ,instead of facing a file &lt;br/&gt;
&amp;gt; (the hadoop FileInput/FileOutputFormat API gives me a DataInputStream to work with, not a file)&lt;/p&gt;

&lt;p&gt;Avro&apos;s DataFileWriter constructor accepts an OutputStream, and, with a bit of code you can implement Avro&apos;s SeekableInput interface so that you can read an Avro data file from HDFS:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;public class SeekableHadoopInput extends FilterInputStream implements SeekableInput {
  public SeekableHadoopInput(FSDataInputStream in, long length) { 
    super(in);
    this.length = length;
  }
  public long length() { return length; }
  public void seek(long pos) { ((FSDataInputStream)in).seek(pos); }
  public long tell() { return ((FSDataInputStream)in).getPos(); }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Alternately, in Hadoop 0.21 you can store Avro data in SequenceFiles.  But we do really need to create InputFormat and OutputFormat&apos;s for Avro&apos;s data file...&lt;/p&gt;</comment>
                            <comment id="12760447" author="yangyangyyy" created="Tue, 29 Sep 2009 00:22:50 +0000"  >&lt;p&gt;got it, thanks, closing this&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 28 Sep 2009 19:29:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94455</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 17 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dyev:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79505</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-128] support NULL in AVRO record</title>
                <link>https://issues.apache.org/jira/browse/AVRO-128</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;some of our records have optional fields, and these fields can be simple types or record types.&lt;/p&gt;

&lt;p&gt;right now if we don&apos;t assign values to these fields, at least in &quot;specific&quot; implementation, it generates errors (I remember it&apos;s null pointer error)&lt;/p&gt;

&lt;p&gt;it would be nice to support dumping NULL to some default values (of course what &quot;default&quot; values to choose needs to be worked out).&lt;br/&gt;
using UNION could possibly solve it, but there are too many combinations of NULL/non-null for all the fields, so we would run into exponential number&lt;br/&gt;
of schemas, so this is impossible, I believe.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12436778">AVRO-128</key>
            <summary>support NULL in AVRO record</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="yangyangyyy">Yang Yang</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Sep 2009 20:59:43 +0000</created>
                <updated>Tue, 13 Dec 2011 19:06:52 +0000</updated>
                            <resolved>Thu, 14 Jan 2010 01:36:38 +0000</resolved>
                                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12800073" author="hammer" created="Thu, 14 Jan 2010 01:36:38 +0000"  >&lt;p&gt;&quot;null&quot; is a type and a field in a record can be null using the idiom of a union schema where one of the types is &quot;null&quot;.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 14 Jan 2010 01:36:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94456</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 2 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dyf3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79506</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-129] add Http client and server</title>
                <link>https://issues.apache.org/jira/browse/AVRO-129</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Avro should support HTTP as an RPC transport.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12436858">AVRO-129</key>
            <summary>add Http client and server</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Sep 2009 21:10:49 +0000</created>
                <updated>Wed, 14 Oct 2009 18:53:05 +0000</updated>
                            <resolved>Wed, 30 Sep 2009 20:53:08 +0000</resolved>
                                                    <fixVersion>1.2.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12760711" author="cutting" created="Tue, 29 Sep 2009 21:13:39 +0000"  >&lt;p&gt;Here&apos;s a patch that implements this, including tests.&lt;/p&gt;</comment>
                            <comment id="12761004" author="cutting" created="Wed, 30 Sep 2009 20:53:08 +0000"  >&lt;p&gt;I just committed this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12420832" name="AVRO-129.patch" size="9413" author="cutting" created="Tue, 29 Sep 2009 21:13:39 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94457</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 17 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dyfb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79507</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-130] &quot;bad file descriptor&quot; error after shutting down python ipc.SocketServer</title>
                <link>https://issues.apache.org/jira/browse/AVRO-130</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I see the following error after shutting down the ipc.SocketServer:&lt;br/&gt;
--------------&lt;br/&gt;
....&lt;br/&gt;
Closed: Connection-(&apos;127.0.0.1&apos;, 35220)&lt;br/&gt;
Exception in thread SocketServer on (&apos;localhost&apos;, 0):&lt;br/&gt;
Traceback (most recent call last):&lt;br/&gt;
  File &quot;/usr/lib/python2.6/threading.py&quot;, line 525, in __bootstrap_inner&lt;br/&gt;
    self.run()&lt;br/&gt;
  File &quot;/home/phunt/dev/workspace/avro-rpc-quickstart/lib/python/avro/ipc.py&quot;, line 385, in run&lt;br/&gt;
    raise e&lt;br/&gt;
error: &lt;span class=&quot;error&quot;&gt;&amp;#91;Errno 9&amp;#93;&lt;/span&gt; Bad file descriptor&lt;br/&gt;
----------------&lt;/p&gt;

&lt;p&gt;If I put a &quot;print(&quot;done&quot;)&quot; as the last line in:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://github.com/phunt/avro-rpc-quickstart/blob/master/src/main/python/send_message.py&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/phunt/avro-rpc-quickstart/blob/master/src/main/python/send_message.py&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The above error is printed &lt;em&gt;after&lt;/em&gt; the done message it output. It seems that the socketserver is not shutting down correctly during the &quot;close&quot; and subsequently fails.&lt;/p&gt;</description>
                <environment>&lt;p&gt;python 2.6, ubuntu (jaunty)&lt;/p&gt;</environment>
        <key id="12436887">AVRO-130</key>
            <summary>&quot;bad file descriptor&quot; error after shutting down python ipc.SocketServer</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hammer">Jeff Hammerbacher</assignee>
                                    <reporter username="phunt">Patrick Hunt</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 Sep 2009 04:09:39 +0000</created>
                <updated>Mon, 1 Mar 2010 17:10:27 +0000</updated>
                            <resolved>Thu, 7 Jan 2010 19:27:23 +0000</resolved>
                                    <version>1.1.0</version>
                                    <fixVersion>1.3.0</fixVersion>
                                    <component>python</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12796263" author="hammer" created="Mon, 4 Jan 2010 17:51:43 +0000"  >&lt;p&gt;We handle this correctly (by using Python&apos;s SocketServer) in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-264&quot; title=&quot; Rewrite Python implementation&amp;#39;s IPC path (protocol.py, ipc.py, genericipc.py) and associated tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-264&quot;&gt;&lt;del&gt;AVRO-264&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12797754" author="hammer" created="Thu, 7 Jan 2010 19:27:23 +0000"  >&lt;p&gt;Fixed by &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-264&quot; title=&quot; Rewrite Python implementation&amp;#39;s IPC path (protocol.py, ipc.py, genericipc.py) and associated tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-264&quot;&gt;&lt;del&gt;AVRO-264&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12444093">AVRO-264</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 4 Jan 2010 17:51:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94458</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 3 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dyfj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79508</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-131] ant test to publish junit test results as xml files </title>
                <link>https://issues.apache.org/jira/browse/AVRO-131</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;By having an option to log test results as xml, hudson can parse and display junit xml test report.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12436910">AVRO-131</key>
            <summary>ant test to publish junit test results as xml files </summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gkesavan">Giridharan Kesavan</assignee>
                                    <reporter username="gkesavan">Giridharan Kesavan</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 Sep 2009 11:30:52 +0000</created>
                <updated>Tue, 13 Dec 2011 19:06:53 +0000</updated>
                            <resolved>Tue, 6 Oct 2009 21:33:34 +0000</resolved>
                                    <version>1.2.0</version>
                                    <fixVersion>1.2.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12761175" author="gkesavan" created="Thu, 1 Oct 2009 11:29:44 +0000"  >&lt;p&gt;this patch adds a property variable to set the junit output format, which defaults to plain txt, and can be overridden to take xml as a value. &lt;/p&gt;</comment>
                            <comment id="12762791" author="cutting" created="Tue, 6 Oct 2009 21:33:34 +0000"  >&lt;p&gt;I just committed this.  Thanks, Giri.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12421005" name="AVRO-131.patch" size="1012" author="gkesavan" created="Thu, 1 Oct 2009 11:29:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 6 Oct 2009 21:33:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94459</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 16 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dyfr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79509</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-132] Fix multi-threading race condition when threads share schema objects</title>
                <link>https://issues.apache.org/jira/browse/AVRO-132</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;This bug was discovered when using the same avro schema object to decode many messages in parallel.  &lt;/p&gt;

&lt;p&gt;A reference count used to manage the some pointers used by the schema was not atomic, so race conditions caused them to be decremented more than they were incremented (and thus, deleted).&lt;/p&gt;

&lt;p&gt;The solution is to use atomic counters for references, and by switching to boost::shared_ptr, we get this. &lt;/p&gt;
</description>
                <environment></environment>
        <key id="12437148">AVRO-132</key>
            <summary>Fix multi-threading race condition when threads share schema objects</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sbanacho">Scott Banachowski</assignee>
                                    <reporter username="sbanacho">Scott Banachowski</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Oct 2009 19:11:14 +0000</created>
                <updated>Tue, 20 Oct 2009 18:08:09 +0000</updated>
                            <resolved>Thu, 8 Oct 2009 00:13:50 +0000</resolved>
                                                    <fixVersion>1.2.0</fixVersion>
                                    <component>c++</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12761676" author="sbanacho" created="Fri, 2 Oct 2009 19:12:30 +0000"  >&lt;p&gt;patch with bug fix (patch also fixes some typos in comments, and marks some functions const).&lt;/p&gt;</comment>
                            <comment id="12762792" author="cutting" created="Tue, 6 Oct 2009 21:37:05 +0000"  >&lt;p&gt;+1 This builds and passes tests for me on Ubuntu.&lt;/p&gt;</comment>
                            <comment id="12762799" author="sbanacho" created="Tue, 6 Oct 2009 22:00:12 +0000"  >&lt;p&gt;Thanks for testing Doug, I will do the commit.  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


</comment>
                            <comment id="12763313" author="sbanacho" created="Thu, 8 Oct 2009 00:13:50 +0000"  >&lt;p&gt;Committed revision 822968.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12421142" name="AVRO-132.patch" size="7156" author="sbanacho" created="Fri, 2 Oct 2009 19:12:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 6 Oct 2009 21:37:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94460</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 16 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dyfz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79510</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-133] The Avro spec must be change controlled</title>
                <link>https://issues.apache.org/jira/browse/AVRO-133</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It seems currently changes are being made without bumping the version number.&lt;/p&gt;

&lt;p&gt;The spec should:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Change minor number each time any change is made&lt;/li&gt;
	&lt;li&gt;Include a change log listing each change and accompanying version number&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12437298">AVRO-133</key>
            <summary>The Avro spec must be change controlled</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="jonbratseth">Jon Bratseth</reporter>
                        <labels>
                    </labels>
                <created>Mon, 5 Oct 2009 17:10:33 +0000</created>
                <updated>Wed, 14 Oct 2009 18:53:05 +0000</updated>
                            <resolved>Tue, 6 Oct 2009 17:39:41 +0000</resolved>
                                                    <fixVersion>1.2.0</fixVersion>
                                    <component>spec</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12762283" author="cutting" created="Mon, 5 Oct 2009 18:08:34 +0000"  >&lt;p&gt;The spec is versioned along with everything else in releases.&lt;/p&gt;

&lt;p&gt;Change logs are available in Jira, e.g., &lt;a href=&quot;http://tinyurl.com/ycpmoyr&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://tinyurl.com/ycpmoyr&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The CHANGES.txt file included in releases also lists all changes.&lt;/p&gt;

&lt;p&gt;Are these insufficient?&lt;/p&gt;


</comment>
                            <comment id="12762289" author="cutting" created="Mon, 5 Oct 2009 18:23:35 +0000"  >&lt;p&gt;One more: changes to the spec document are logged in subversion too, at:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/viewvc/hadoop/avro/trunk/src/doc/content/xdocs/spec.xml?view=log&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/hadoop/avro/trunk/src/doc/content/xdocs/spec.xml?view=log&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Subversion change lists are also linked from the Jira issues that resolve them, visible if you select the &quot;All&quot; tab.&lt;/p&gt;</comment>
                            <comment id="12762300" author="sbanacho" created="Mon, 5 Oct 2009 18:35:21 +0000"  >&lt;p&gt;I think the issue is with the printed/published documentation.&lt;/p&gt;

&lt;p&gt;For example, when I print a pdf copy of the spec, the only thing that indicates a version is the title &quot;Avro 1.0 Specification&quot;&lt;/p&gt;

&lt;p&gt;However, the spec is &lt;b&gt;much&lt;/b&gt; different from one I printed several months ago, which also had the title &quot;Avro 1.0 Specification&quot;.  There&apos;s no indication that the version is any different than the new one except by directly comparing the text.&lt;/p&gt;

&lt;p&gt;I think the same is true of the spec web pages.&lt;/p&gt;

&lt;p&gt;Adding a minor version, or perhaps a date that the spec was generate, to the generated web pages/ documents, would help distinguish which copies of the spec are newer.   Even better, if there was an addendum to the spec that highlighted what was updated at each version/date.&lt;/p&gt;</comment>
                            <comment id="12762305" author="jonbratseth" created="Mon, 5 Oct 2009 18:41:31 +0000"  >&lt;p&gt;There was some degree of confusion amongst those implementing the spec  &lt;br/&gt;
in a meeting we had Friday because people were not aware of changes  &lt;br/&gt;
which happened after they printed their copy, looked at it last or  &lt;br/&gt;
whatever.&lt;br/&gt;
So, judging from empirical evidence, something more is needed  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;At the very least I think there should be a minor in the version  &lt;br/&gt;
number which is bumped each time there is a change, otherwise we&apos;ll  &lt;br/&gt;
have implementations of &quot;version 1.0&quot; which are out of date with the  &lt;br/&gt;
current &quot;version 1.0&quot;.&lt;/p&gt;

&lt;p&gt;A change log included in the document would also be convenient to  &lt;br/&gt;
address cases as the above, it is nice with specs which are completely  &lt;br/&gt;
standalone.&lt;/p&gt;
</comment>
                            <comment id="12762353" author="cutting" created="Mon, 5 Oct 2009 20:36:30 +0000"  >&lt;p&gt;&amp;gt; For example, when I print a pdf copy of the spec, the only thing that indicates a version is the title &quot;Avro 1.0 Specification&quot;&lt;/p&gt;

&lt;p&gt;Ah, right, that needs to get updated.&lt;/p&gt;

&lt;p&gt;Currently I update by hand the version in the tab (&quot;Avro X.X.X Documentation&quot;), as directed in:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wiki.apache.org/hadoop/Avro/HowToRelease&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/hadoop/Avro/HowToRelease&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;but I neglected the version in the spec page itself.&lt;/p&gt;

&lt;p&gt;Ideally we could get the version from the build, so that we only specify it in a single place.&lt;/p&gt;</comment>
                            <comment id="12762355" author="cutting" created="Mon, 5 Oct 2009 20:39:46 +0000"  >&lt;p&gt;Here&apos;s a patch that adds the version number from the build into the spec document (and similarly to the &quot;Avro X.X.X Documentation&quot; tab.&lt;/p&gt;</comment>
                            <comment id="12762699" author="cutting" created="Tue, 6 Oct 2009 17:39:41 +0000"  >&lt;p&gt;I just committed this.  The specification document now includes the correct version number.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12421330" name="AVRO-133.patch" size="2682" author="cutting" created="Mon, 5 Oct 2009 20:39:46 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 5 Oct 2009 18:08:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94461</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 16 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dyg7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79511</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-134] Mismatch between the spec and implementation of metadata blocks in files</title>
                <link>https://issues.apache.org/jira/browse/AVRO-134</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The spec says there are three keys in metadata blocks - schema, count and &lt;em&gt;codec&lt;/em&gt;. But the code in DataFileWriter adds schema, count and &lt;em&gt;sync&lt;/em&gt;. The sync field is used by the DataFileReader. We need to do the following:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Add the key sync in the specification.&lt;/li&gt;
	&lt;li&gt;Either drop the key codec in the specification or add code to support codec in DataFileReader/DataFileWriter. If we decide to have codec, we need to also publish  in the spec the list of supported codecs with their names to use in the metadata block.&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12437315">AVRO-134</key>
            <summary>Mismatch between the spec and implementation of metadata blocks in files</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thiru_mg">Thiruvalluvan M. G.</assignee>
                                    <reporter username="thiru_mg">Thiruvalluvan M. G.</reporter>
                        <labels>
                    </labels>
                <created>Mon, 5 Oct 2009 21:05:34 +0000</created>
                <updated>Tue, 13 Dec 2011 19:06:45 +0000</updated>
                            <resolved>Wed, 7 Oct 2009 18:36:56 +0000</resolved>
                                                    <fixVersion>1.2.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12762400" author="cutting" created="Mon, 5 Oct 2009 21:51:29 +0000"  >&lt;p&gt;&amp;gt; Add the key sync in the specification.&lt;/p&gt;

&lt;p&gt;+1 We should certainly do this.&lt;/p&gt;

&lt;p&gt;&amp;gt; Either drop the key codec in the specification or add code to support codec in DataFileReader/DataFileWriter.&lt;/p&gt;

&lt;p&gt;We should really add codec support.  Compression provides huge advantages, but, to remain splittability, compression needs to be chunked and sync markers need to be uncompressed.  I just filed &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-135&quot; title=&quot;add compression to data files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-135&quot;&gt;&lt;del&gt;AVRO-135&lt;/del&gt;&lt;/a&gt; to address that.&lt;/p&gt;</comment>
                            <comment id="12762488" author="thiru_mg" created="Tue, 6 Oct 2009 03:03:00 +0000"  >&lt;p&gt;Here is a patch with the following changes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;DataFileWriter encodes a codec &quot;raw&quot; into the data file&lt;/li&gt;
	&lt;li&gt;DataFileReader checks for a codec with value &quot;raw&quot;. If not found it throws an exception.&lt;/li&gt;
	&lt;li&gt;I&apos;ve refactored the constants used in DataFileReader and DataFileWriter into a separate class DataFileConstants. It should ideally be a Java interface. But checkstyle doesn&apos;t like constants-only interfaces. It needs at least one method.&lt;/li&gt;
	&lt;li&gt;I&apos;ve made the corresponding changes to python code as well.&lt;/li&gt;
	&lt;li&gt;Changed the documentation to reflect the change&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12762695" author="cutting" created="Tue, 6 Oct 2009 17:23:39 +0000"  >&lt;p&gt;This looks good to me.  I would prefer we call this the &quot;null&quot; codec rather than the &quot;raw&quot; codec.  I also think that if no codec is specified in a file then we should assume the null codec rather than throw an exception.&lt;/p&gt;

&lt;p&gt;Note that this is similar to HTTP&apos;s content-codings (&lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.5&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.5&lt;/a&gt;).  HTTP names the default codec &quot;identity&quot;, which I&apos;d also be okay with, though I prefer &quot;null&quot;.  It&apos;s not an error in HTTP to leave the codec unspecified.  They also use &quot;deflate&quot; to refer to zlib, which has created confusion according to &lt;a href=&quot;http://www.zlib.net/zlib_faq.html#faq39&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.zlib.net/zlib_faq.html#faq39&lt;/a&gt;, so I think &quot;zlib&quot; is a better name for us to use, when we get to that.&lt;/p&gt;

&lt;p&gt;&amp;gt; checkstyle doesn&apos;t like constants-only interfaces.&lt;/p&gt;

&lt;p&gt;We could change that by removing the &quot;InterfaceIsType&quot; line from src/java/checkstyle.xml.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://checkstyle.sourceforge.net/config_design.html#InterfaceIsType&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://checkstyle.sourceforge.net/config_design.html#InterfaceIsType&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, if this were an interface, would you want DataFileReader/Writer to implement it?  I&apos;d rather avoid that, as it would force the interface public, and I do not want to clutter the public, documented API with this.&lt;/p&gt;</comment>
                            <comment id="12762726" author="scott_carey" created="Tue, 6 Oct 2009 18:30:10 +0000"  >&lt;p&gt;w.r.t zlib, deflate and gzip:&lt;/p&gt;

&lt;p&gt;All use the Deflate algorithm to compress a stream, RFC 1951&lt;br/&gt;
&lt;a href=&quot;http://www.faqs.org/rfcs/rfc1951.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.faqs.org/rfcs/rfc1951.html&lt;/a&gt;&lt;br/&gt;
In Java terms, the above is a DeflateOutputStream &apos;unwrapped&apos;.  I believe in HTTP that certain browsers interpret Content-Encoding: deflate to mean this.  &lt;/p&gt;

&lt;p&gt;zlib, is technically capable of multiple compression types but is usually a Deflate stream wrapped with a header and an Adler32 checksum footer. &lt;br/&gt;
&lt;a href=&quot;http://www.faqs.org/rfcs/rfc1950.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.faqs.org/rfcs/rfc1950.html&lt;/a&gt;&lt;br/&gt;
In Java, this is a &quot;wrapped&quot; DeflateOutputStream.  Some browsers require this for &apos;deflate&apos;, others examine the payload and can deal with both types of &apos;deflate&apos; in HTTP land.&lt;br/&gt;
The header is typically 2 bytes, and the footer 4 bytes.&lt;/p&gt;

&lt;p&gt;gzip, is a file format for compressed content, but like zlib only Deflate is used in practice.  It has a relatively large header and footer and stores the uncompressed size (mod 2^32) and a CRC32 checksum.  &lt;br/&gt;
The header is large (12 bytes minimum) and the footer is 8 bytes.  &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1952.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.faqs.org/rfcs/rfc1952.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For Avro&apos;s purposes, zlib or raw deflate seem most appropriate to me.  If we want a minimal package, zlib has that.  gzip is a bloated wrapper for the purposes here. &lt;br/&gt;
Perhaps we want to store an adler32 or crc32 + length for all block types in the metadata, thus making it redundant to store it in the block?  In that case a raw deflate stream is appropriate. &lt;/p&gt;

&lt;p&gt;Also, in light of future block formats, how do we control the compression level?  Is it encoded in the codec parameter?  i.e. zlib:1 , zlib:9 etc?  Or is that not needed?&lt;br/&gt;
Deflate at compression level 1 compresses at nearly lzo speeds, and is about 10 to 30 times slower at level 9, so I&apos;m sure we will want to have that controllable.  But that is a decision when the stream is written and does not impact readers.&lt;/p&gt;</comment>
                            <comment id="12762748" author="cutting" created="Tue, 6 Oct 2009 19:22:18 +0000"  >&lt;p&gt;&amp;gt; For Avro&apos;s purposes, zlib or raw deflate seem most appropriate to me.&lt;/p&gt;

&lt;p&gt;I agree.  I don&apos;t have a strong preference.  The 6-byte overhead of zlib seems acceptable, but don&apos;t see that it provides much benefit.  We generally expect the filesystem to provide checksums, so I&apos;d argue against adding one if we use raw deflate.  If folks are more comfortable having a checksum, then we should perhaps use zlib.&lt;/p&gt;

&lt;p&gt;&amp;gt; how do we control the compression level?&lt;/p&gt;

&lt;p&gt;This does not affect the format, so doesn&apos;t need to be part of the Avro specification, right?  Rather it can be a part of the API, which varies by programming language.  So, in Java, we might add a method, DataFileWriter#setCodecCompressionLevel(int), that must be called before the first entry is appended to a file.  Does that sound right?&lt;/p&gt;
</comment>
                            <comment id="12762846" author="thiru_mg" created="Wed, 7 Oct 2009 02:35:57 +0000"  >&lt;p&gt;Here is a new patch.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It uses &quot;null&quot; instead of &quot;raw&quot; as the name of the codec.&lt;/li&gt;
	&lt;li&gt;If there is no key by name &quot;codec&quot; null is assumed&lt;/li&gt;
	&lt;li&gt;I left the DataFileConstants as a class. As Doug pointed out, having it as an interface and deriving from it will require it be made public. We can, even with interface, continue to use the constants the same way use now, but then interface doesn&apos;t buy you anything. A third option is to statically import those constants, but I&apos;m not a big fan of static imports.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12763178" author="cutting" created="Wed, 7 Oct 2009 18:36:56 +0000"  >&lt;p&gt;I just committed this.  Thanks, Thiru!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12421483" name="AVRO-134.patch" size="9684" author="thiru_mg" created="Wed, 7 Oct 2009 02:35:57 +0000"/>
                            <attachment id="12421378" name="AVRO-134.patch" size="9144" author="thiru_mg" created="Tue, 6 Oct 2009 03:10:19 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 5 Oct 2009 21:51:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94462</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 16 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dygf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79512</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-135] add compression to data files</title>
                <link>https://issues.apache.org/jira/browse/AVRO-135</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;We should add support for at least one compression codec to data files.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12437320">AVRO-135</key>
            <summary>add compression to data files</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="philip">Philip Zeyliger</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Mon, 5 Oct 2009 21:50:03 +0000</created>
                <updated>Mon, 1 Mar 2010 17:10:27 +0000</updated>
                            <resolved>Fri, 22 Jan 2010 01:30:13 +0000</resolved>
                                                    <fixVersion>1.3.0</fixVersion>
                                    <component>java</component>
                    <component>spec</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="12762427" author="cutting" created="Mon, 5 Oct 2009 22:33:09 +0000"  >&lt;p&gt;The first codec to implement is probably zlib, since it has built-in support in Java and Python and its license is compatible with Apache, so we can use it from C and C++ too.  I propose that we name this codec &quot;zlib&quot;.&lt;/p&gt;

&lt;p&gt;The second codec to implement might be LZF.  Like LZO, this is much faster than zlib/gzip, without achieving quite as much compression.  Unlike LZO, it&apos;s license is compatible with Apache.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://software.schmorp.de/pkg/liblzf.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://software.schmorp.de/pkg/liblzf.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There&apos;s a Java port of LZF, so we would not need to use native code from Java.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://h2database.googlecode.com/svn/trunk/h2/src/main/org/h2/compress/CompressLZF.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://h2database.googlecode.com/svn/trunk/h2/src/main/org/h2/compress/CompressLZF.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately I can&apos;t find a Python binding.  How hard is it to call C from Python?&lt;/p&gt;
</comment>
                            <comment id="12762437" author="henryr" created="Mon, 5 Oct 2009 22:47:47 +0000"  >&lt;p&gt;It&apos;s pretty easy to call C from Python - there&apos;s a very full featured C API since the standard Python runtime is C based. (see &lt;a href=&quot;http://docs.python.org/c-api/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://docs.python.org/c-api/&lt;/a&gt;). The API takes care of connecting Python calls to their C equivalents. Then you call into the API to unmarshal the arguments into C variables and then you can pass them onto the LZF library.&lt;/p&gt;

&lt;p&gt;The tricky part is getting reference counting right but if this is a thin layer between Python and a C LZF library then it probably doesn&apos;t need to worry too much about Python object lifetimes. (Concurrency is also a pain, but again probably not a big issue here). &lt;/p&gt;
</comment>
                            <comment id="12772570" author="cutting" created="Mon, 2 Nov 2009 17:44:03 +0000"  >&lt;p&gt;Looks like there&apos;s also a Java version of FastLZ, and FastLZ may be added to Hadoop in &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6349&quot; title=&quot;Implement FastLZCodec for fastlz/lzo algorithm&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6349&quot;&gt;&lt;del&gt;HADOOP-6349&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://code.google.com/p/jfastlz/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/jfastlz/&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://code.google.com/p/fastlz/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/fastlz/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;FastLZ claims better decompression time than LZF, but the changelog for LZF also claims it&apos;s now faster than FastLZ:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.fastlz.org/lzf.htm&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.fastlz.org/lzf.htm&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://oldhome.schmorp.de/marc/liblzf.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://oldhome.schmorp.de/marc/liblzf.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It probably doesn&apos;t matter too much which one we choose.&lt;/p&gt;</comment>
                            <comment id="12786736" author="ijuma" created="Sun, 6 Dec 2009 23:24:41 +0000"  >&lt;p&gt;There&apos;s also &lt;a href=&quot;https://issues.apache.org/jira/browse/HADOOP-6389&quot; title=&quot;Add support for LZF compression&quot; class=&quot;issue-link&quot; data-issue-key=&quot;HADOOP-6389&quot;&gt;HADOOP-6389&lt;/a&gt; too.&lt;/p&gt;</comment>
                            <comment id="12795448" author="philip" created="Wed, 30 Dec 2009 21:11:47 +0000"  >&lt;p&gt;With the progress on &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-160&quot; title=&quot;file format should be friendly to streaming&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-160&quot;&gt;&lt;del&gt;AVRO-160&lt;/del&gt;&lt;/a&gt;, I propose we consider this a blocker for the next release.  &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-160&quot; title=&quot;file format should be friendly to streaming&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-160&quot;&gt;&lt;del&gt;AVRO-160&lt;/del&gt;&lt;/a&gt; breaks the API already (and there&apos;s some discussion there about storing lengths and such), so it seems important to make sure that it works for the compressed use case while it&apos;s really easy to fix.&lt;/p&gt;

&lt;p&gt;I&apos;m happy to spend some cycles on it as soon as &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-160&quot; title=&quot;file format should be friendly to streaming&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-160&quot;&gt;&lt;del&gt;AVRO-160&lt;/del&gt;&lt;/a&gt; is committed.&lt;/p&gt;</comment>
                            <comment id="12795459" author="cutting" created="Wed, 30 Dec 2009 21:56:11 +0000"  >&lt;p&gt;+1 for making this a blocker.  I&apos;m currently leaning towards fastlz.  Adding the java version of that looks really easy.  Subsequently we can add support for calling the C implementation from Java.  Adding python will be a bit more work, since we&apos;ll need to call native code, but is probably required before we release, especially if we want to enable compression by default.&lt;/p&gt;

&lt;p&gt;Should we enable compression by default?  I think this might make sense if compression is substantially faster than object serialization/deserialization and if all implementations of Avro support the anointed default codec.&lt;/p&gt;</comment>
                            <comment id="12795472" author="philip" created="Wed, 30 Dec 2009 22:27:12 +0000"  >&lt;p&gt;Let&apos;s hold of on enabling cheap compression by default until there are two language implementations?  (It&apos;s going to be simpler to have the uncompressed version working in two languages than the compressed version.)&lt;/p&gt;

&lt;p&gt;We may want to reserve the right to change the default compression over time, which I think we&apos;ll be able to do.&lt;/p&gt;

&lt;p&gt;&amp;#8211; Philip&lt;/p&gt;</comment>
                            <comment id="12795625" author="cutting" created="Thu, 31 Dec 2009 17:46:27 +0000"  >&lt;p&gt;&amp;gt; Let&apos;s hold of on enabling cheap compression by default until there are two language implementations?&lt;/p&gt;

&lt;p&gt;Yes, of course.  We should not make a codec the default that&apos;s not implemented in every language.&lt;/p&gt;</comment>
                            <comment id="12798941" author="scott_carey" created="Mon, 11 Jan 2010 23:54:48 +0000"  >&lt;p&gt;Lets just put deflate or gzip in here for this release.  This is the least amount of work, and so long as we make it &apos;gzip 1&apos; equivalent it isn&apos;t that slow.  &apos;gzip 1&apos; is about 4x faster compressing than the normal default of &apos;gzip 6&apos;, with &apos;gzip 1&apos; on today&apos;s CPUs typically between 35MB/sec and 70MB/sec throughput on compression.&lt;/p&gt;

&lt;p&gt;I have some code I can contribute for Java that replaces GzipOutputStream to allow control over the compression ratio and exposes the number of bytes written (compressed and uncompressed).   This can use the Hadoop optimized PureJavaCRC32 for best performance as well.&lt;br/&gt;
At this point, I am eager to use 1.3 and will write such a codec anyway if it is not supported (not sure if gzip or deflate, but that is a minor issue on ~64k blocks).  &lt;/p&gt;

&lt;p&gt;LZF/LZO/FastLZ would be nice, but that is more involved.&lt;br/&gt;
I&apos;ve been working on some pure java LZF implementations as an experiment.  I chose this over FastLZ because the code was a lot easier to undersdand and much better documented (though both are lacking).   Additionally, FastLZ warns that the format may change at any time on their site, which also kept me away.  &lt;br/&gt;
Short story &amp;#8211; the JIT isn&apos;t good enough in Java 6 or Java 7 to do the right low level optimizations to catch up to native code yet, but I can get compression rates about 80 to 120MB/sec and decompression between 100 and 160MB/sec with it and compression ratios just slightly worse than LZO but better than the C LZF code.&lt;/p&gt;

&lt;p&gt;If FastLZ&apos;s java library is used, its can use some performance improvements.&lt;/p&gt;
</comment>
                            <comment id="12799279" author="cutting" created="Tue, 12 Jan 2010 17:39:03 +0000"  >&lt;p&gt;&amp;gt; Let&apos;s just put deflate or gzip in here for this release.&lt;/p&gt;

&lt;p&gt;That would be fine with me too.&lt;/p&gt;

&lt;p&gt;&amp;gt; I&apos;ve been working on some pure java LZF implementations as an experiment.&lt;br/&gt;
&amp;gt; I can get compression rates about 80 to 120MB/sec and decompression between 100 and 160MB/sec with it&lt;/p&gt;

&lt;p&gt;That&apos;s awesome!  Good performance without native code would be really nice to have.&lt;/p&gt;
</comment>
                            <comment id="12800798" author="philip" created="Fri, 15 Jan 2010 18:01:53 +0000"  >&lt;p&gt;Who&apos;s on first?  Which is to say, Scott or Doug, if you&apos;re working on this already, awesome, and, if not, I&apos;ll take a stab.&lt;/p&gt;

&lt;p&gt;&amp;#8211; Philip&lt;/p&gt;</comment>
                            <comment id="12800842" author="cutting" created="Fri, 15 Jan 2010 19:12:34 +0000"  >&lt;p&gt;If you&apos;re game to work on it, please do!&lt;/p&gt;</comment>
                            <comment id="12801689" author="philip" created="Mon, 18 Jan 2010 06:24:21 +0000"  >&lt;p&gt;Attaching a patch that attempts gzip compression.&lt;/p&gt;

&lt;p&gt;The patch itself introduces an enum (CompressionCodec), and introduces switch statements in DataFileWriter and DataFileStream.  Compression involves writing the original data into a buffer, then compressing that in one go into another buffer, and finally writing the length of that second buffer followed by its contents into the output stream.  For decompression, there&apos;s a filter that restricts the inputstream to a certain length.  I&apos;ve modified TestDataFile to be parameterized across all possible values of codec, and added a test that&apos;s more simple, that I used to hammer out the early bugs.  I&apos;ve added a setCompressionCodec() API to DataFileWriter.&lt;/p&gt;

&lt;p&gt;In theory, for inflate/deflate and for gzip, we don&apos;t actually need to store the length.  (See &lt;a href=&quot;http://www.gzip.org/format.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.gzip.org/format.txt&lt;/a&gt; .)  It&apos;s irritating to do so with the GzipInputStream API, but we could fix it so that the bytes that weren&apos;t used in decompression are returned back to the stream.  (The Inflater API has a getRemaining() API that helps do just that, and, in fact, it&apos;s used by GzipInputStream in readTrailer().)&lt;/p&gt;

&lt;p&gt;Do folks have an opinion on whether we should store the length or not?  If we don&apos;t store it, it&apos;s possible we could avoid a memory copy or two by writing straight into the output buffer, but it&apos;ll complicate the read path a little bit.&lt;/p&gt;

&lt;p&gt;Do folks have an opinion on gzip vs deflate?  Gzip costs 10 bytes header, 4 bytes CRC-32, and 4 bytes uncompressed size.&lt;/p&gt;</comment>
                            <comment id="12801878" author="philip" created="Mon, 18 Jan 2010 17:54:48 +0000"  >&lt;p&gt;After sleeping on it, I think it&apos;s a good idea to leave the compressed length in there.  If we do that, then we could implement parallel (as in one thread-per block) decompression.&lt;/p&gt;</comment>
                            <comment id="12801889" author="cutting" created="Mon, 18 Jan 2010 18:22:45 +0000"  >&lt;p&gt;Looks good.  Some comments:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Should we, instead of a switch, have an abstract base class for codecs?  It could have methods like:
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;String getName();&lt;/li&gt;
		&lt;li&gt;Decoder expand(Decoder in);&lt;/li&gt;
		&lt;li&gt;void compress(byte[] buffer, int start, int end, Encoder out);&lt;br/&gt;
We can have a factory that creates a codec given a name, so that folks can experiment with non-standard codecs without changing Avro.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;in the spec, you use the term &quot;varint&quot;, not used elsewhere in that document.&lt;/li&gt;
	&lt;li&gt;in the spec, we should be very clear on whether we&apos;re using gzip or deflate, as these are often confused.  my slight preference would be for deflate, since it&apos;s more minimal, but i also realize that adding another level of CRC will give lots of folks warm fuzzy feelings.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12801995" author="philip" created="Mon, 18 Jan 2010 23:59:39 +0000"  >&lt;p&gt;I spent some time thinking about an interface for Codec and want to digest a bit longer.&lt;/p&gt;

&lt;p&gt;DataFileWriter gets a DatumWriter and a Datum and then it uses DatumWriter.write(D Datum, Encoder) to write the value.  In turn, Encoder (which is a BinaryEncoder in this case), writes to an OutputStream.  The current approach is to encode into a ByteBufferOutputStream, and, when that reaches a certain size, copy it into the final output.  I&apos;m trying to figure out where a Codec interface fits in here.  It could:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Pretend to be an OutputStream, i.e., be used when constructing BinaryEncoder(), and offer an uncompressedSize() method, as well as a writeTo() method.  So, a replacement for ByteBufferOutputStream.&lt;/li&gt;
	&lt;li&gt;Pretend to be an Encoder.  The advantage here is that you could build a compression scheme that was schema-aware (e.g., semi-columnar or PAX-like), without re-parsing the data.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m leaning towards the former right now.  What do you mean by compress(byte[], int, int, Encoder) above?&lt;/p&gt;</comment>
                            <comment id="12802006" author="cutting" created="Tue, 19 Jan 2010 00:45:15 +0000"  >&lt;p&gt;&amp;gt; Pretend to be an OutputStream [ ... ]&lt;/p&gt;

&lt;p&gt;I just looked at what your switch statements were doing in each case to devise the API.  The API I provided above would make both the default and gzip codecs very small, while using an OutputStream I think would take considerably more code than is in your current patch.&lt;/p&gt;

&lt;p&gt;I wouldn&apos;t worry about making a codec API that&apos;s useful for other stuff.  Making it an abstract class rather than an interface means we can revise it down the road without breaking folks.&lt;/p&gt;

&lt;p&gt;&amp;gt; What do you mean by compress(byte[], int, int, Encoder) above?&lt;/p&gt;

&lt;p&gt;That #compress() method would compress the bytes passed in and write them as a compressed block to the Encoder.  The default no-op codec&apos;s impl would just write the bytes to the Encoder.&lt;/p&gt;

&lt;p&gt;The #expand() method above would provide a decoder for a single compression block, reading it from the provided Decoder.  The default no-op codec would just return the Decoder passed in.&lt;/p&gt;</comment>
                            <comment id="12802009" author="scott_carey" created="Tue, 19 Jan 2010 00:55:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;in the spec, we should be very clear on whether we&apos;re using gzip or deflate, as these are often confused. my slight preference would be for deflate, since it&apos;s more minimal, but i also realize that adding another level of CRC will give lots of folks warm fuzzy feelings.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I lean towards deflate.  Though, we have to be very clear what we mean by that, there are two kinds of &apos;deflate&apos; interpretations.  &lt;br/&gt;
The first, is the raw compressed scheme, which has no crc or header (RFC 1951).  In Java, this is the &apos;unwrapped&apos; deflate variant.  Some web browsers call this &quot;deflate&quot;.&lt;br/&gt;
The second is a deflate stream with an adler32 checksum, and is the format that a *.zip file stores its individual entries (RFC 1950).  This is also known as the &quot;ZLIB&quot; format, but some web browsers simply call it &apos;deflate&apos;.  It has a 6 byte overhead (2 byte header, 4 byte adler32 checksum).&lt;/p&gt;

&lt;p&gt;Lastly, is gzip (RFC 1952), which wraps raw deflate with a header and footer, which typically have about 20 bytes overhead.&lt;/p&gt;

&lt;p&gt;In the past, I&apos;ve leaned towards gzip because if a file is written in this format, all sorts of utilities can read it.  But we are storing compressed blocks within our own file format, so there is no advantage to using gzip.  Furthermore, the Java API for gzip annoyingly removes the ability to set the compression level and to find out the number of bytes output.   I think that control over the compression level is highly important for users.&lt;br/&gt;
The Deflater API in Java does allow control over the compression level.&lt;/p&gt;

&lt;p&gt;The &apos;ZLIB&apos; deflate format has an adler32 checksum and 2 byte header (and is standardized), so if we want a checksum we can choose that instead of gzip.&lt;br/&gt;
Otherwise, the raw deflate stream, perhaps with the uncompressed size prepended, would be great.&lt;/p&gt;</comment>
                            <comment id="12802139" author="philip" created="Tue, 19 Jan 2010 08:35:23 +0000"  >&lt;p&gt;Attaching a patch which ditches the switch statements in exchange for &quot;Codec&quot; classes.  I also switched to deflate (the rfc1951 variant).&lt;/p&gt;

&lt;p&gt;I ended up having a package-private Codec abstract class (with two extant implementations) and a public CodecOption class.  The latter is necessary for users to set what codec they&apos;re using.  One thing that doesn&apos;t currently work is setting compression options for append.  We don&apos;t recover what compression strength you used when you re-open a file.&lt;/p&gt;

&lt;p&gt;I spent a good 30+ minutes scratching my head when I switched from GZIPInput/OutputFormat to DeflaterInput/OutputFormat.  Whereas the GZIP classes are named Input/Outputformat, the Deflate classes are named DeflaterOutputFormat and InflaterInputFormat.&lt;/p&gt;

&lt;p&gt;Scott, thanks for the clear explanation of rfc1950 vs rfc1951.  Do you know what Java library implements 1950?  Java&apos;s docs are confusing as ever here (at least to me).&lt;/p&gt;</comment>
                            <comment id="12802146" author="scott_carey" created="Tue, 19 Jan 2010 09:08:04 +0000"  >&lt;blockquote&gt;&lt;p&gt;Do you know what Java library implements 1950? Java&apos;s docs are confusing as ever here (at least to me).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The same Deflator class, it is a constructor flag &amp;#8211; &apos;boolean nowrap&apos;.&lt;br/&gt;
&lt;a href=&quot;http://java.sun.com/j2se/1.4.2/docs/api/java/util/zip/Deflater.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/j2se/1.4.2/docs/api/java/util/zip/Deflater.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Specifying wrapped or not wrapped is the same process as compression level &amp;#8211; construct the Deflator and pass it in to the DeflatorOutputStream constructor..&lt;/p&gt;

&lt;p&gt;Or, the Deflator class can be used &apos;raw&apos; without an output stream on byte arrays.  The source code for DeflatorOutputStream is instructive for this if it is necessary.  Codecs could be defined to function on byte[] rather than input/output streams.&lt;/p&gt;

&lt;p&gt;If I recall correctly, I had to decipher manually that &apos;nowrap&apos; was indeed just rfc1950 with the header/footer removed &amp;#8212; a.k.a. rfc1951 &amp;#8211; because the documentation doesn&apos;t say much.  I was doing this for a servlet compression filter which has to know that some browser user-agents only accept ZLIB (&apos;nowrap = false&apos;) when they claim to support &quot;Content-Encoding: deflate&quot;, and others mean bare deflate (&apos;nowrap = true&apos;).  HTTP spec doesn&apos;t specify.  Avro won&apos;t make that mistake.&lt;/p&gt;</comment>
                            <comment id="12802160" author="philip" created="Tue, 19 Jan 2010 09:35:39 +0000"  >&lt;p&gt;Oy!  So, the patch just uploaded is inconsistent: I thought I was doing 1951, whereas it&apos;s doing 1950 (nowrap is not set).  As far as I can tell, python&apos;s zlib uses 1950 by default.  Passing a negative argument to python&apos;s decompress magically does the right thing, but oy.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[1]doorstop::~(29777)$python
Python 2.5.1 (r251:54863, Feb  6 2009, 19:02:12) 
[GCC 4.0.1 (Apple Inc. build 5465)] on darwin
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt; import zlib
&amp;gt;&amp;gt;&amp;gt; zlib.compress(&quot;foo&quot;)
&apos;x\x9cK\xcb\xcf\x07\x00\x02\x82\x01E&apos;
&amp;gt;&amp;gt;&amp;gt; a = zlib.compress(&quot;foo&quot;)
&amp;gt;&amp;gt;&amp;gt; b = a[2:-4]
&amp;gt;&amp;gt;&amp;gt; zlib.decompress(a)
&apos;foo&apos;
&amp;gt;&amp;gt;&amp;gt; zlib.decompress(b, -15)
&apos;foo&apos;
&amp;gt;&amp;gt;&amp;gt; zlib.decompress(b)
Traceback (most recent call last):
  File &quot;&amp;lt;stdin&amp;gt;&quot;, line 1, in &amp;lt;module&amp;gt;
zlib.error: Error -3 while decompressing data: incorrect header check
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;ll upload a new patch which does set nowrap.&lt;/p&gt;</comment>
                            <comment id="12802169" author="philip" created="Tue, 19 Jan 2010 09:49:01 +0000"  >&lt;p&gt;RFC-1951 for reals, we hope.&lt;/p&gt;

&lt;p&gt;I haven&apos;t had to do anything about the following javadoc note:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;&apos; Note: When using the &apos;nowrap&apos; option it is also necessary to provide an extra &quot;dummy&quot; byte as input. This is required by the ZLIB native library in order to support certain optimizations. &apos;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12802478" author="cutting" created="Tue, 19 Jan 2010 21:28:24 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;can we change the terminology in the spec from &quot;supported codecs&quot; to &quot;required codecs&quot;?  I think what we want to say is that using these names has defined semantics.  Other strings are permitted, but we won&apos;t make any guarantees about what happens then.&lt;/li&gt;
	&lt;li&gt;why isn&apos;t Codec public?&lt;/li&gt;
	&lt;li&gt;write/uncompress are an odd pair of method names.  why not compress/expand or somesuch?&lt;/li&gt;
	&lt;li&gt;i don&apos;t see the point of adviseBufferSize().  why not just initialize compressionBuffer to new ByteArrayOutputStream(buffer.size()) the first time.  ByteArrayOutputSTream will double it if it needs, but it probably won&apos;t, since the output should be substantially smaller than the input.&lt;/li&gt;
	&lt;li&gt;can we rename CodecOption to Codecs or CodecFactory?&lt;/li&gt;
	&lt;li&gt;can we add a static method to define a new Codec?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12802700" author="philip" created="Wed, 20 Jan 2010 06:20:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;can we change the terminology in the spec from &quot;supported codecs&quot; to &quot;required codecs&quot;? I think what we want to say is that using these names has defined semantics. Other strings are permitted, but we won&apos;t make any guarantees about what happens then.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;why isn&apos;t Codec public?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m hesitant to make that API public.  It&apos;s fine for stream-based compression, but I suspect that more awesome compression will come along that will make that API not be reasonable.  I&apos;d rather cross the API bridge when someone requests it, but I could be convinced.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;write/uncompress are an odd pair of method names. why not compress/expand or somesuch?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;compress/decompress it is.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;i don&apos;t see the point of adviseBufferSize(). why not just initialize compressionBuffer to new ByteArrayOutputStream(buffer.size()) the first time. ByteArrayOutputSTream will double it if it needs, but it probably won&apos;t, since the output should be substantially smaller than the input.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fair enough; done.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;can we rename CodecOption to Codecs or CodecFactory?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;CodecFactory it is.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;can we add a static method to define a new Codec?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done.  Though because Codec isn&apos;t public, it&apos;s not of much use.&lt;/p&gt;</comment>
                            <comment id="12802910" author="scott_carey" created="Wed, 20 Jan 2010 17:46:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m hesitant to make that API public. It&apos;s fine for stream-based compression, but I suspect that more awesome compression will come along that will make that API not be reasonable. I&apos;d rather cross the API bridge when someone requests it, but I could be convinced.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree with the caution here for  now.  It would not surprise me if we came to prefer a different API than Streams later.  Streams are convenient but constraining.  I think the first step is to have a basic, common form of compression that all languages should have access to.  We can worry about the API flexibility and customization points after we have  more codec examples to draw from in formulating the common requirements.&lt;/p&gt;</comment>
                            <comment id="12803519" author="cutting" created="Thu, 21 Jan 2010 22:51:03 +0000"  >&lt;p&gt;+1 this looks good.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Does LengthLimitedInputStream need to be public?  If not, let&apos;s keep it package private.&lt;/li&gt;
	&lt;li&gt;RandomData#main() should accept a codec argument, and the generate-interop-data build target can be altered to write a file using deflate too. This could be done as a separate issue if you like.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="12803567" author="philip" created="Fri, 22 Jan 2010 01:30:13 +0000"  >&lt;p&gt;I made LengthLimitedInputStream package-private, filed &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-365&quot; title=&quot;Extend RandomData to understand codecs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-365&quot;&gt;AVRO-365&lt;/a&gt; for the RandomData issue, and committed this.  Thanks for the discussion and reviews, everyone!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12446292">AVRO-366</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12430848" name="AVRO-135.patch.txt" size="34983" author="philip" created="Wed, 20 Jan 2010 06:20:27 +0000"/>
                            <attachment id="12430723" name="AVRO-135.patch.txt" size="34899" author="philip" created="Tue, 19 Jan 2010 09:49:01 +0000"/>
                            <attachment id="12430712" name="AVRO-135.patch.txt" size="34395" author="philip" created="Tue, 19 Jan 2010 08:35:23 +0000"/>
                            <attachment id="12430609" name="AVRO-135.patch.txt" size="25617" author="philip" created="Mon, 18 Jan 2010 06:24:21 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 5 Oct 2009 22:47:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94463</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 1 week, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dygn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79513</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-136] add support for building/releasing python eggs</title>
                <link>https://issues.apache.org/jira/browse/AVRO-136</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Add support for building and releasing python eggs via python&apos;s setuptools.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12437350">AVRO-136</key>
            <summary>add support for building/releasing python eggs</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hammer">Jeff Hammerbacher</assignee>
                                    <reporter username="phunt">Patrick Hunt</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 Oct 2009 06:14:04 +0000</created>
                <updated>Mon, 1 Mar 2010 17:10:28 +0000</updated>
                            <resolved>Tue, 16 Feb 2010 21:25:35 +0000</resolved>
                                    <version>1.1.0</version>
                                    <fixVersion>1.3.0</fixVersion>
                                    <component>python</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12762529" author="phunt" created="Tue, 6 Oct 2009 06:38:02 +0000"  >&lt;p&gt;This patch includes changes to generate both a distutils source package and a setuptools egg&lt;/p&gt;

&lt;p&gt;you can verify the generated egg with:&lt;br/&gt;
PYTHONPATH=avro-1.2.0-py2.6.egg python&lt;br/&gt;
then try &quot;import avro&quot; or &quot;import avro.io&quot;&lt;/p&gt;

&lt;p&gt;see this for general end-user workflow on using the source pkg&lt;br/&gt;
&lt;a href=&quot;http://docs.python.org/distutils/introduction.html#a-simple-example&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://docs.python.org/distutils/introduction.html#a-simple-example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;with the egg it&apos;s just &quot;easy_install &amp;lt;egg&amp;gt;&quot; (which is usually on pypi)&lt;/p&gt;

&lt;p&gt;You&apos;ll need to get an account on pypi if you want to upload the egg/srcdist, here&apos;s the applicable&lt;br/&gt;
section, seems like we&apos;ll have to use item 2 (manual upload) due to the fact that we generate&lt;br/&gt;
the artifacts, vote, then upload&lt;br/&gt;
&lt;a href=&quot;http://wiki.python.org/moin/CheeseShopTutorial#PackageDistributionFiles&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.python.org/moin/CheeseShopTutorial#PackageDistributionFiles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;note: the setup.py in this patch must be updated a bit, for 2 issues:&lt;/p&gt;

&lt;p&gt;1) update the author and author_email, this is displayed on pypi (and I believe tied to the pypi account)&lt;br/&gt;
2) the avro version is included in the setup.py. This will have to be updated on each version change,&lt;br/&gt;
perhaps it&apos;s scriptable?&lt;/p&gt;

&lt;p&gt;also notice that i&apos;ve included odict in the packages (incl license file), but not simplejson - simplejson&lt;br/&gt;
is available on pypi and will be automatically d/l if easy_install is used.&lt;/p&gt;</comment>
                            <comment id="12762764" author="cutting" created="Tue, 6 Oct 2009 20:15:24 +0000"  >&lt;p&gt;When I apply this and try &apos;ant package-py&apos; I get &quot;ImportError: No module named setuptools&quot;.&lt;/p&gt;

&lt;p&gt;Should the build get simplejson, setuptools, etc. from pypi automatically using easy_install?  Should easy_install be an Avro prerequisite?  Or can we fetch it automatically on demand like we do Ivy?&lt;/p&gt;

&lt;p&gt;If there are new prerequisites then they should be added to README.txt.&lt;/p&gt;

&lt;p&gt;&amp;gt; update the author and author_email, this is displayed on pypi&lt;/p&gt;

&lt;p&gt;Ideally these could be &quot;Apache Avro&quot; and &quot;avro-dev@h.a.o&quot;.  In my glance at pypi it looks like multiple users can be permitted to update an egg...&lt;/p&gt;</comment>
                            <comment id="12762772" author="phunt" created="Tue, 6 Oct 2009 21:04:09 +0000"  >&lt;p&gt;Yes, you do need setuptools to be installed. By README.txt, do you mean add a README.txt to src/py &lt;br/&gt;
or add more information to the trunk/README.txt?&lt;/p&gt;

&lt;p&gt;I ask because setuptools isn&apos;t necessary to build/run the py binding, it&apos;s only necessary to package/install.&lt;br/&gt;
(I guess I could say that in the trunk readme)&lt;/p&gt;

&lt;p&gt;As we have both egg and src packaging the end user can either:&lt;br/&gt;
1) use easy_install&lt;br/&gt;
2) get the source package (however) and use the process detailed here:&lt;br/&gt;
&lt;a href=&quot;http://docs.python.org/distutils/introduction.html#a-simple-example&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://docs.python.org/distutils/introduction.html#a-simple-example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;afaik only python would be required for 2) (and simplejson would have to be similarly installed)&lt;/p&gt;

&lt;p&gt;From a developer perspective simplejson is already included in the trunk/lib/py directory so it doesn&apos;t need to be fetched.&lt;/p&gt;


&lt;p&gt;I will update the setup.py author information as you suggest (I&apos;ll take a closer look at pypi account as well)&lt;/p&gt;
</comment>
                            <comment id="12762780" author="cutting" created="Tue, 6 Oct 2009 21:15:37 +0000"  >&lt;p&gt;I meant the existing top-level README.txt.&lt;/p&gt;</comment>
                            <comment id="12778283" author="hammer" created="Mon, 16 Nov 2009 10:16:39 +0000"  >&lt;p&gt;Hey Patrick,&lt;/p&gt;

&lt;p&gt;Are you still planning to work on this patch?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Jeff&lt;/p&gt;</comment>
                            <comment id="12799397" author="phunt" created="Tue, 12 Jan 2010 21:34:41 +0000"  >&lt;p&gt;I&apos;m happy to take another stab at this, however I&apos;m not very familiar with pypi/disttools pkging. Can anyone review what&apos;s&lt;br/&gt;
been done/said so far and let me know if we&apos;re on the right path?&lt;/p&gt;</comment>
                            <comment id="12799451" author="hammer" created="Tue, 12 Jan 2010 23:00:36 +0000"  >&lt;p&gt;Agreed that this would be very useful. I actually have something working in my local repository; I&apos;ll compare to yours and comment when I get a chance. Going to work on interop first though.&lt;/p&gt;</comment>
                            <comment id="12833957" author="urandom" created="Mon, 15 Feb 2010 20:26:26 +0000"  >&lt;p&gt;Here is a setup.py (based on Patrick&apos;s) that will use setuptools if present, and fall-back to distutils if not (distutils is in the standard lib). &lt;/p&gt;

&lt;p&gt;The distutils module is not able to download dependencies so the &lt;tt&gt;install_requires&lt;/tt&gt; keyword will cause a warning, but since simplejson is not a build dependency, there is no harm.&lt;/p&gt;

&lt;p&gt;I didn&apos;t port the ant bits, because I&apos;m not entirely sure why that would be needed, (but I can if need be).&lt;/p&gt;</comment>
                            <comment id="12833993" author="cutting" created="Mon, 15 Feb 2010 21:37:12 +0000"  >&lt;p&gt;Ideally the build would be altered so that a python artifact appears in dist/.  We can then vote on this as a part of the release vote.  After that someone can push the artifact into pypi or wherever.&lt;/p&gt;</comment>
                            <comment id="12834015" author="hammer" created="Mon, 15 Feb 2010 23:04:11 +0000"  >&lt;p&gt;Here&apos;s a patch which updates Eric&apos;s setup.py to use two spaces (instead of four) and reads the Avro version from share/VERSION.txt.&lt;/p&gt;

&lt;p&gt;I have also modified the &quot;dist&quot; target in build.xml to put a .egg file into dist/.&lt;/p&gt;

&lt;p&gt;Anyone care to try it out and +/-1?&lt;/p&gt;</comment>
                            <comment id="12834017" author="cutting" created="Mon, 15 Feb 2010 23:23:44 +0000"  >&lt;p&gt;Here&apos;s a version of the patch that succeeds in running &apos;build.sh clean dist&apos;.  I had to add some licenses to a few files, update the rat-ignores file, fix lang/py/build.xml to fail on error, add a note to README.txt about installing setuptools, etc.&lt;/p&gt;</comment>
                            <comment id="12834021" author="cutting" created="Mon, 15 Feb 2010 23:32:18 +0000"  >&lt;p&gt;When this is committed I think we need to also ignore two files in lang/py: build/ and avro.egg-info.&lt;/p&gt;</comment>
                            <comment id="12834022" author="hammer" created="Mon, 15 Feb 2010 23:37:13 +0000"  >&lt;p&gt;Yes, those are build artifacts.&lt;/p&gt;</comment>
                            <comment id="12834024" author="hammer" created="Mon, 15 Feb 2010 23:41:38 +0000"  >&lt;p&gt;Doug: your patch does not include setup.py. Also, your comment in README.txt is slightly incorrect: the Python implementation can be built and installed without setuptools but cannot be packaged for distribution as an egg without it.&lt;/p&gt;</comment>
                            <comment id="12834027" author="urandom" created="Tue, 16 Feb 2010 00:04:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;Also, your comment in README.txt is slightly incorrect: the Python implementation can be built and installed without setuptools but cannot be packaged for distribution as an egg without it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right. I don&apos;t know if the plan is to distribute the Avro python library as an egg or not, but that would only make it a hard requirement for the person generating the release artifacts. Personally, I prefer &lt;em&gt;not&lt;/em&gt; to install eggs since it complicates viewing the source and renders pydoc unusable.&lt;/p&gt;</comment>
                            <comment id="12834028" author="cutting" created="Tue, 16 Feb 2010 00:11:39 +0000"  >&lt;p&gt;&amp;gt; Doug: your patch does not include setup.py.&lt;/p&gt;

&lt;p&gt;Oops.  New version of patch attached.&lt;/p&gt;

&lt;p&gt;&amp;gt; your comment in README.txt is slightly incorrect [ ... ] &lt;/p&gt;

&lt;p&gt;Comment amended.&lt;/p&gt;
</comment>
                            <comment id="12834054" author="hammer" created="Tue, 16 Feb 2010 03:06:37 +0000"  >&lt;p&gt;This patch works for me and the egg builds nicely. I&apos;m going to commit this tomorrow unless I hear objections. Thanks for cleaning it up, Doug!&lt;/p&gt;</comment>
                            <comment id="12834328" author="urandom" created="Tue, 16 Feb 2010 17:40:26 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;(also, you might want to make setup.py executable when you commit)&lt;/p&gt;</comment>
                            <comment id="12834466" author="hammer" created="Tue, 16 Feb 2010 21:00:27 +0000"  >&lt;p&gt;Made setup.py executable and committed in revision 910690.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12445249">AVRO-309</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12438635">AVRO-163</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12435920" name="AVRO-136.patch" size="7267" author="cutting" created="Tue, 16 Feb 2010 00:11:39 +0000"/>
                            <attachment id="12435918" name="AVRO-136.patch" size="5414" author="cutting" created="Mon, 15 Feb 2010 23:23:44 +0000"/>
                            <attachment id="12435917" name="AVRO-136.patch" size="3025" author="hammer" created="Mon, 15 Feb 2010 23:04:11 +0000"/>
                            <attachment id="12421392" name="AVRO-136.patch" size="4313" author="phunt" created="Tue, 6 Oct 2009 06:38:02 +0000"/>
                            <attachment id="12435903" name="setup.py" size="1445" author="urandom" created="Mon, 15 Feb 2010 20:26:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 6 Oct 2009 20:15:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94464</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 49 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dygv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79514</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
