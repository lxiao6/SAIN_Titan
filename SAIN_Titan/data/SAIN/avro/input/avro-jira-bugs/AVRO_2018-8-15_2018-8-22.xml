<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:27:06 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2018-8-15+AND+created+%3C%3D+2018-8-22+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="5" total="5"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-2211] SchemaBuilder equivalent or other means of schema creation</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2211</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently, the only way to create&#160;a schema is via the Schema.Parse method. We&apos;d like to be able to build a schema programmatically&#8212;would it be possible to&#160;(1)&#160;introduce an analogue to the SchemaBuilder from the Java library or (2)&#160;expose constructors on Schema and its descendants?&lt;/p&gt;

&lt;p&gt;Would be more than happy to contribute work on this given some direction.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13179374">AVRO-2211</key>
            <summary>SchemaBuilder equivalent or other means of schema creation</summary>
                <type id="5" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Wish</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="dstelljes">Dan Stelljes</reporter>
                        <labels>
                    </labels>
                <created>Thu, 16 Aug 2018 14:54:00 +0000</created>
                <updated>Thu, 16 Aug 2018 14:55:20 +0000</updated>
                                                                            <component>csharp</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            22 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3x4bj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2212] GenericData.deepCopyRaw not working with java.lang.BigDecimal</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2212</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;With an&#160;AVDL of:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  @namespace(&lt;span class=&quot;code-quote&quot;&gt;&quot;com.foo&quot;&lt;/span&gt;)
  record SomethingWithDec {
    decimal(8,2) dec;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and the Scala/Java code of:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
object Foo &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; App {
  &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; com.foo.SomethingWithDec
  val x =  SomethingWithDec.newBuilder().setDec(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; java.math.BigDecimal(&lt;span class=&quot;code-quote&quot;&gt;&quot;1234&quot;&lt;/span&gt;))
  val y = SomethingWithDec.newBuilder(x).build()
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I get the exception:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Exception in thread &quot;main&quot; java.lang.ClassCastException: java.math.BigDecimal cannot be cast to java.nio.ByteBuffer
	at org.apache.avro.generic.GenericData.deepCopyRaw(GenericData.java:1089)
	at org.apache.avro.generic.GenericData.deepCopy(GenericData.java:1065)
	at com.foo.SomethingWithDec$Builder.&amp;lt;init&amp;gt;(SomethingWithDec.java:167)
	at com.foo.SomethingWithDec$Builder.&amp;lt;init&amp;gt;(SomethingWithDec.java:150)
	at com.foo.SomethingWithDec.newBuilder(SomethingWithDec.java:135)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I have attached the generated Java class for &lt;tt&gt;SomethingWithDec.&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;This seems related to &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1895&quot; title=&quot;DeepCopy does not work with logical types&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1895&quot;&gt;&lt;del&gt;AVRO-1895&lt;/del&gt;&lt;/a&gt;, but I believe that was meant to have been fixed in 1.8.2.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13179842">AVRO-2212</key>
            <summary>GenericData.deepCopyRaw not working with java.lang.BigDecimal</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="kdrakon">Sean Policarpio</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 Aug 2018 00:04:38 +0000</created>
                <updated>Mon, 29 Oct 2018 04:43:22 +0000</updated>
                                            <version>1.8.2</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="16585307" author="kdrakon" created="Mon, 20 Aug 2018 00:23:35 +0000"  >&lt;p&gt;Was also able to reproduce in Java:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;Scratch {
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) {
        SomethingWithDec x = SomethingWithDec.newBuilder().setDec(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BigDecimal(&lt;span class=&quot;code-quote&quot;&gt;&quot;1234&quot;&lt;/span&gt;)).build();
        SomethingWithDec y = SomethingWithDec.newBuilder(x).build();
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Exception in thread &quot;main&quot; java.lang.ClassCastException: java.math.BigDecimal cannot be cast to java.nio.ByteBuffer
 at org.apache.avro.generic.GenericData.deepCopyRaw(GenericData.java:1089)
 at org.apache.avro.generic.GenericData.deepCopy(GenericData.java:1065)
 at com.foo.SomethingWithDec$Builder.&amp;lt;init&amp;gt;(SomethingWithDec.java:179)
 at com.foo.SomethingWithDec$Builder.&amp;lt;init&amp;gt;(SomethingWithDec.java:150)
 at com.foo.SomethingWithDec.newBuilder(SomethingWithDec.java:144)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="16585310" author="kdrakon" created="Mon, 20 Aug 2018 00:30:09 +0000"  >&lt;p&gt;Just realised in the original Scala version I didn&apos;t call &lt;tt&gt;build&lt;/tt&gt; on &lt;tt&gt;x&lt;/tt&gt;. In any case, this causes the same error in the constructors at &lt;tt&gt;SomethingWithDec.java:135&lt;/tt&gt; and &lt;tt&gt;SomethingWithDec.java:144&lt;/tt&gt;, using the builder or the record to perform a deep copy.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12995012">AVRO-1895</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12936201" name="SomethingWithDec.java" size="8603" author="kdrakon" created="Mon, 20 Aug 2018 00:02:45 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            22 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3x77b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2213] C++ tests fail with boost 1.67+</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2213</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Boost 1.67 and later now returns an error when multiple tests are added with the same name (&lt;a href=&quot;https://www.boost.org/doc/libs/1_67_0/libs/test/doc/html/boost_test/change_log.html).&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://www.boost.org/doc/libs/1_67_0/libs/test/doc/html/boost_test/change_log.html).&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This fails for 3 tests:&lt;/p&gt;

&lt;p&gt;CodecTests.cc:&lt;br/&gt;
Test setup error: boost::unit_test::framework::setup_error: test unit with name &apos;testCodecResolving2&amp;lt;BinaryEncoderResolvingDecoderFactory&amp;gt;_0&apos; registered multiple times&lt;/p&gt;

&lt;p&gt;DataFileTests.cc:&lt;br/&gt;
Test setup error: boost::unit_test::framework::setup_error: test unit with name &apos;DataFileTest__testReadFull&apos; registered multiple times&lt;/p&gt;

&lt;p&gt;unittest.cc:&lt;br/&gt;
Test setup error: boost::unit_test::framework::setup_error: test unit with name &apos;T__test&apos; registered multiple times&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;</description>
                <environment></environment>
        <key id="13179870">AVRO-2213</key>
            <summary>C++ tests fail with boost 1.67+</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="wmatthews">William Matthews</assignee>
                                    <reporter username="wmatthews">William Matthews</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 Aug 2018 06:29:27 +0000</created>
                <updated>Fri, 28 Dec 2018 16:22:30 +0000</updated>
                            <resolved>Tue, 2 Oct 2018 16:00:56 +0000</resolved>
                                    <version>1.8.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>c++</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="16585476" author="githubbot" created="Mon, 20 Aug 2018 06:33:25 +0000"  >&lt;p&gt;wmatthews-google opened a new pull request #327: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2213&quot; title=&quot;C++ tests fail with boost 1.67+&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2213&quot;&gt;&lt;del&gt;AVRO-2213&lt;/del&gt;&lt;/a&gt; C++ tests fail with boost 1.67+&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/327&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/327&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16635736" author="githubbot" created="Tue, 2 Oct 2018 15:55:48 +0000"  >&lt;p&gt;thiru-apache closed pull request #327: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2213&quot; title=&quot;C++ tests fail with boost 1.67+&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2213&quot;&gt;&lt;del&gt;AVRO-2213&lt;/del&gt;&lt;/a&gt; C++ tests fail with boost 1.67+&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/327&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/327&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/c+&lt;ins&gt;/test/CodecTests.cc b/lang/c&lt;/ins&gt;+/test/CodecTests.cc&lt;br/&gt;
index f8bbe84d0..064351b3e 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/test/CodecTests.cc&lt;br/&gt;
+++ b/lang/c++/test/CodecTests.cc&lt;br/&gt;
@@ -1363,9 +1363,17 @@ static const TestData4 data4BinaryOnly[] = {&lt;br/&gt;
 #define COUNTOF&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  sizeof&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; / sizeof(x&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;)&lt;br/&gt;
 #define ENDOF&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;    &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; + COUNTOF&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;-#define ADD_TESTS(testSuite, Factory, testFunc, data)           \&lt;br/&gt;
-testSuite.add(BOOST_PARAM_TEST_CASE(&amp;amp;testFunc&amp;lt;Factory&amp;gt;,         \&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;data, data + COUNTOF(data)))&lt;br/&gt;
+// Boost 1.67 and later expects test cases to have unique names. This dummy&lt;br/&gt;
+// helper functions leads to names which compose &apos;testFunc&apos;, &apos;Factory&apos;, and&lt;br/&gt;
+// &apos;data&apos;.&lt;br/&gt;
+template &amp;lt;typename Test, typename Data&amp;gt;&lt;br/&gt;
+Test testWithData(const Test &amp;amp;test, const Data &amp;amp;data) 
{
+    boost::ignore_unused(data);
+    return test;
+}
&lt;p&gt;+#define ADD_TESTS(testSuite, Factory, testFunc, data) \&lt;br/&gt;
+    testSuite.add(BOOST_PARAM_TEST_CASE(              \&lt;br/&gt;
+        testWithData(&amp;amp;testFunc&amp;lt;Factory&amp;gt;, data), data, data + COUNTOF(data)))&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; struct BinaryEncoderFactory {&lt;br/&gt;
     static EncoderPtr newEncoder(const ValidSchema&amp;amp; schema) {&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/test/DataFileTests.cc b/lang/c&lt;/ins&gt;+/test/DataFileTests.cc&lt;br/&gt;
index 27a7ce9ca..1b1687af5 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/test/DataFileTests.cc&lt;br/&gt;
+++ b/lang/c++/test/DataFileTests.cc&lt;br/&gt;
@@ -498,40 +498,67 @@ void addReaderTests(test_suite* ts, const shared_ptr&amp;lt;DataFileTest&amp;gt;&amp;amp; t)&lt;br/&gt;
 test_suite*&lt;br/&gt;
 init_unit_test_suite( int argc, char* argv[] )&lt;br/&gt;
 {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;test_suite* ts= BOOST_TEST_SUITE(&quot;DataFile tests&quot;);&lt;/li&gt;
	&lt;li&gt;shared_ptr&amp;lt;DataFileTest&amp;gt; t1(new DataFileTest(&quot;test1.df&quot;, sch, isch));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWrite, t1));&lt;/li&gt;
	&lt;li&gt;addReaderTests(ts, t1);&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;shared_ptr&amp;lt;DataFileTest&amp;gt; t2(new DataFileTest(&quot;test2.df&quot;, sch, isch));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWriteGeneric, t2));&lt;/li&gt;
	&lt;li&gt;addReaderTests(ts, t2);&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;shared_ptr&amp;lt;DataFileTest&amp;gt; t3(new DataFileTest(&quot;test3.df&quot;, dsch, dblsch));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWriteDouble, t3));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testReadDouble, t3));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testReadDoubleTwoStep, t3));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testReadDoubleTwoStepProject,&lt;/li&gt;
	&lt;li&gt;t3));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup, t3));&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;shared_ptr&amp;lt;DataFileTest&amp;gt; t4(new DataFileTest(&quot;test4.df&quot;, dsch, dblsch));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testTruncate, t4));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup, t4));&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;shared_ptr&amp;lt;DataFileTest&amp;gt; t5(new DataFileTest(&quot;test5.df&quot;, sch, isch));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWriteGenericByName, t5));&lt;/li&gt;
	&lt;li&gt;addReaderTests(ts, t5);&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;shared_ptr&amp;lt;DataFileTest&amp;gt; t6(new DataFileTest(&quot;test6.df&quot;, dsch, dblsch));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testZip, t6));&lt;/li&gt;
	&lt;li&gt;shared_ptr&amp;lt;DataFileTest&amp;gt; t8(new DataFileTest(&quot;test8.df&quot;, dsch, dblsch));&lt;br/&gt;
+    
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test1.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t1(new DataFileTest(&quot;test1.df&quot;, sch, isch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWrite, t1));
+        addReaderTests(ts, t1);
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test2.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t2(new DataFileTest(&quot;test2.df&quot;, sch, isch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWriteGeneric, t2));
+        addReaderTests(ts, t2);
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test3.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t3(new DataFileTest(&quot;test3.df&quot;, dsch, dblsch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWriteDouble, t3));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testReadDouble, t3));
+        ts-&amp;gt;add(
+            BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testReadDoubleTwoStep, t3));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(
+            &amp;amp;DataFileTest::testReadDoubleTwoStepProject, t3));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup, t3));
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test4.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t4(new DataFileTest(&quot;test4.df&quot;, dsch, dblsch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testTruncate, t4));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup, t4));
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test5.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t5(new DataFileTest(&quot;test5.df&quot;, sch, isch));
+        ts-&amp;gt;add(
+            BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWriteGenericByName, t5));
+        addReaderTests(ts, t5);
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test6.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t6(new DataFileTest(&quot;test6.df&quot;, dsch, dblsch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testZip, t6));
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test8.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t8(new DataFileTest(&quot;test8.df&quot;, dsch, dblsch));
 #ifdef SNAPPY_CODEC_AVAILABLE
-    ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testSnappy, t8));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testSnappy, t8));
 #endif
-    shared_ptr&amp;lt;DataFileTest&amp;gt; t7(new DataFileTest(&quot;test7.df&quot;,fsch,fsch));
-    ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testSchemaReadWrite,t7));
-    ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup,t7));
-
-    return ts;
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test7.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t7(new DataFileTest(&quot;test7.df&quot;, fsch, fsch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testSchemaReadWrite, t7));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup, t7));
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    return 0;&lt;br/&gt;
 }&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/test/unittest.cc b/lang/c&lt;/ins&gt;+/test/unittest.cc&lt;br/&gt;
index 5aef9b75a..e12e6954e 100644&lt;/p&gt;
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/c++/test/unittest.cc&lt;br/&gt;
+++ b/lang/c++/test/unittest.cc&lt;br/&gt;
@@ -767,14 +767,6 @@ struct TestResolution&lt;br/&gt;
     ValidSchema unionTwo_;&lt;br/&gt;
 };&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-&lt;br/&gt;
-template&amp;lt;typename T&amp;gt;&lt;br/&gt;
-void addTestCase(boost::unit_test::test_suite &amp;amp;test) &lt;br/&gt;
-&lt;/p&gt;
{
-    boost::shared_ptr&amp;lt;T&amp;gt; newtest( new T );
-    test.add( BOOST_CLASS_TEST_CASE( &amp;amp;T::test, newtest ));
-}
&lt;p&gt;-&lt;br/&gt;
 boost::unit_test::test_suite*&lt;br/&gt;
 init_unit_test_suite( int argc, char* argv[] ) &lt;/p&gt;
 {
@@ -782,12 +774,18 @@ init_unit_test_suite( int argc, char* argv[] )
 
     test_suite* test= BOOST_TEST_SUITE( &quot;Avro C++ unit test suite&quot; );
 
-    addTestCase&amp;lt;TestEncoding&amp;gt;(*test);
-    addTestCase&amp;lt;TestSchema&amp;gt;(*test);
-    addTestCase&amp;lt;TestNested&amp;gt;(*test);
-    addTestCase&amp;lt;TestGenerated&amp;gt;(*test);
-    addTestCase&amp;lt;TestBadStuff&amp;gt;(*test);
-    addTestCase&amp;lt;TestResolution&amp;gt;(*test);
+    test-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;TestEncoding::test,
+                                    boost::make_shared&amp;lt;TestEncoding&amp;gt;()));
+    test-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;TestSchema::test,
+                                    boost::make_shared&amp;lt;TestSchema&amp;gt;()));
+    test-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;TestNested::test,
+                                    boost::make_shared&amp;lt;TestNested&amp;gt;()));
+    test-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;TestGenerated::test,
+                                    boost::make_shared&amp;lt;TestGenerated&amp;gt;()));
+    test-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;TestBadStuff::test,
+                                    boost::make_shared&amp;lt;TestBadStuff&amp;gt;()));
+    test-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;TestResolution::test,
+                                    boost::make_shared&amp;lt;TestResolution&amp;gt;()));
 
     return test;
 }




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16635741" author="thiru_mg" created="Tue, 2 Oct 2018 16:00:56 +0000"  >&lt;p&gt;Pull request merged:&#160;&lt;a href=&quot;https://github.com/apache/avro/pull/328&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/328&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 20 Aug 2018 06:33:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            15 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3x7dj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2214] Support sync and seek in C++ DataFileReader</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2214</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Java DataFileReader supports sync, seek, pastSync, etc. which allow parallel reads of files, and reasonably efficient &quot;tailing&quot; of files. It would be great if these were supported in C++ too.&lt;/p&gt;

&lt;p&gt;Also, I think this would serve as a bit of a workaround for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2178&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-2178&lt;/a&gt;&#160;(stat a file &amp;amp; see if it has grown, sync/seek, read, repeat).&lt;/p&gt;</description>
                <environment></environment>
        <key id="13179873">AVRO-2214</key>
            <summary>Support sync and seek in C++ DataFileReader</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="wmatthews">William Matthews</assignee>
                                    <reporter username="wmatthews">William Matthews</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 Aug 2018 06:49:15 +0000</created>
                <updated>Fri, 28 Dec 2018 16:22:29 +0000</updated>
                            <resolved>Tue, 2 Oct 2018 15:59:18 +0000</resolved>
                                    <version>1.8.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>c++</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16585494" author="githubbot" created="Mon, 20 Aug 2018 06:54:01 +0000"  >&lt;p&gt;wmatthews-google opened a new pull request #328: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2214&quot; title=&quot;Support sync and seek in C++ DataFileReader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2214&quot;&gt;&lt;del&gt;AVRO-2214&lt;/del&gt;&lt;/a&gt; Support sync and seek in C++ DataFileReader&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/328&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/328&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16635734" author="githubbot" created="Tue, 2 Oct 2018 15:55:31 +0000"  >&lt;p&gt;thiru-apache closed pull request #328: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2214&quot; title=&quot;Support sync and seek in C++ DataFileReader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2214&quot;&gt;&lt;del&gt;AVRO-2214&lt;/del&gt;&lt;/a&gt; Support sync and seek in C++ DataFileReader&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/328&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/328&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/c+&lt;ins&gt;/api/DataFile.hh b/lang/c&lt;/ins&gt;+/api/DataFile.hh&lt;br/&gt;
index bff309770..4236d3537 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/api/DataFile.hh&lt;br/&gt;
+++ b/lang/c++/api/DataFile.hh&lt;br/&gt;
@@ -172,12 +172,14 @@ public:&lt;br/&gt;
  */&lt;br/&gt;
 class AVRO_DECL DataFileReaderBase : boost::noncopyable &lt;/p&gt;
{
     const std::string filename_;
-    const std::auto_ptr&amp;lt;InputStream&amp;gt; stream_;
+    const std::auto_ptr&amp;lt;SeekableInputStream&amp;gt; stream_;
     const DecoderPtr decoder_;
     int64_t objectCount_;
     bool eof_;
     Codec codec_;
-
+    int64_t blockStart_;
+    int64_t blockEnd_;
+    
     ValidSchema readerSchema_;
     ValidSchema dataSchema_;
     DecoderPtr dataDecoder_;
@@ -247,6 +249,29 @@ public:
      * Closes the reader. No further operation is possible on this reader.
      */
     void close();
+
+    /**
+     * Move to a specific, known synchronization point, for example one returned
+     * from tell() after sync().
+     */
+    void seek(int64_t position);
+
+    /**
+     * Move to the next synchronization point after a position. To process a
+     * range of file entires, call this with the starting position, then check
+     * pastSync() with the end point before each use of decoder().
+     */
+    void sync(int64_t position);
+
+    /**
+     * Return true if past the next synchronization point after a position.
+     */
+    bool pastSync(int64_t position);
+
+    /**
+     * Return the last synchronization point before our current position.
+     */
+    int64_t previousSync();
 }
&lt;p&gt;;&lt;/p&gt;

&lt;p&gt; /**&lt;br/&gt;
@@ -330,6 +355,29 @@ public:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Closes the reader. No further operation is possible on this reader.&lt;br/&gt;
      */&lt;br/&gt;
     void close() 
{ return base_-&amp;gt;close(); }
&lt;p&gt;+&lt;br/&gt;
+    /**&lt;br/&gt;
+     * Move to a specific, known synchronization point, for example one returned&lt;br/&gt;
+     * from previousSync().&lt;br/&gt;
+     */&lt;br/&gt;
+    void seek(int64_t position) &lt;/p&gt;
{ base_-&amp;gt;seek(position); }
&lt;p&gt;+&lt;br/&gt;
+    /**&lt;br/&gt;
+     * Move to the next synchronization point after a position. To process a&lt;br/&gt;
+     * range of file entires, call this with the starting position, then check&lt;br/&gt;
+     * pastSync() with the end point before each call to read().&lt;br/&gt;
+     */&lt;br/&gt;
+    void sync(int64_t position) &lt;/p&gt;
{ base_-&amp;gt;sync(position); }
&lt;p&gt;+&lt;br/&gt;
+    /**&lt;br/&gt;
+     * Return true if past the next synchronization point after a position.&lt;br/&gt;
+     */&lt;br/&gt;
+    bool pastSync(int64_t position) &lt;/p&gt;
{ return base_-&amp;gt;pastSync(position); }
&lt;p&gt;+&lt;br/&gt;
+    /**&lt;br/&gt;
+     * Return the last synchronization point before our current position.&lt;br/&gt;
+     */&lt;br/&gt;
+    int64_t previousSync() &lt;/p&gt;
{ return base_-&amp;gt;previousSync(); }
&lt;p&gt; };&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; }   // namespace avro&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/api/Stream.hh b/lang/c&lt;/ins&gt;+/api/Stream.hh&lt;br/&gt;
index 92b2334d2..42ccf0a00 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/api/Stream.hh&lt;br/&gt;
+++ b/lang/c++/api/Stream.hh&lt;br/&gt;
@@ -75,6 +75,31 @@ public:&lt;br/&gt;
     virtual size_t byteCount() const = 0;&lt;br/&gt;
 };&lt;/p&gt;

&lt;p&gt;+/** &lt;br/&gt;
+ * An InputStream which also supports seeking to a specific offset.&lt;br/&gt;
+ */&lt;br/&gt;
+class AVRO_DECL SeekableInputStream : public InputStream {&lt;br/&gt;
+protected:&lt;br/&gt;
+&lt;br/&gt;
+    /**&lt;br/&gt;
+     * An empty constuctor.&lt;br/&gt;
+     */&lt;br/&gt;
+    SeekableInputStream() { }&lt;br/&gt;
+&lt;br/&gt;
+public:&lt;br/&gt;
+    /**&lt;br/&gt;
+     * Destructor.&lt;br/&gt;
+     */&lt;br/&gt;
+    virtual ~SeekableInputStream() { }&lt;br/&gt;
+&lt;br/&gt;
+    /**&lt;br/&gt;
+     * Seek to a specific position in the stream. This may invalidate pointers&lt;br/&gt;
+     * returned from next(). This will also reset byteCount() to the given&lt;br/&gt;
+     * position.&lt;br/&gt;
+     */&lt;br/&gt;
+    virtual void seek(int64_t position) = 0;&lt;br/&gt;
+};&lt;br/&gt;
+&lt;br/&gt;
 /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;A no-copy output stream.&lt;br/&gt;
  */&lt;br/&gt;
@@ -161,8 +186,10 @@ AVRO_DECL std::auto_ptr&amp;lt;OutputStream&amp;gt; fileOutputStream(const char* filename,&lt;/li&gt;
	&lt;li&gt;Returns a new InputStream whose contents come from the given file.&lt;/li&gt;
	&lt;li&gt;Data is read in chunks of given buffer size.&lt;br/&gt;
  */&lt;br/&gt;
-AVRO_DECL std::auto_ptr&amp;lt;InputStream&amp;gt; fileInputStream(const char* filename,&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;size_t bufferSize = 8 * 1024);&lt;br/&gt;
+AVRO_DECL std::auto_ptr&amp;lt;InputStream&amp;gt; fileInputStream(&lt;br/&gt;
+    const char *filename, size_t bufferSize = 8 * 1024);&lt;br/&gt;
+AVRO_DECL std::auto_ptr&amp;lt;SeekableInputStream&amp;gt; fileSeekableInputStream(&lt;br/&gt;
+    const char *filename, size_t bufferSize = 8 * 1024);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Returns a new OutputStream whose contents will be sent to the given&lt;br/&gt;
@@ -177,8 +204,8 @@ AVRO_DECL std::auto_ptr&amp;lt;OutputStream&amp;gt; ostreamOutputStream(std::ostream&amp;amp; os,&lt;/li&gt;
	&lt;li&gt;std::istream. The std::istream object should outlive the returned&lt;/li&gt;
	&lt;li&gt;InputStream.&lt;br/&gt;
  */&lt;br/&gt;
-AVRO_DECL std::auto_ptr&amp;lt;InputStream&amp;gt; istreamInputStream(std::istream&amp;amp; in,&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;size_t bufferSize = 8 * 1024);&lt;br/&gt;
+AVRO_DECL std::auto_ptr&amp;lt;InputStream&amp;gt; istreamInputStream(&lt;br/&gt;
+    std::istream &amp;amp;in, size_t bufferSize = 8 * 1024);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; /** A convenience class for reading from an InputStream */&lt;br/&gt;
 struct StreamReader &lt;/p&gt;
{
diff --git a/lang/c++/impl/DataFile.cc b/lang/c++/impl/DataFile.cc
index ee8f62c6a..181689da0 100644
--- a/lang/c++/impl/DataFile.cc
+++ b/lang/c++/impl/DataFile.cc
@@ -249,8 +249,9 @@ void DataFileWriterBase::setMetadata(const string&amp;amp; key, const string&amp;amp; value)
 }

&lt;p&gt; DataFileReaderBase::DataFileReaderBase(const char* filename) :&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;filename_(filename), stream_(fileInputStream(filename)),&lt;/li&gt;
	&lt;li&gt;decoder_(binaryDecoder()), objectCount_(0), eof_(false)&lt;br/&gt;
+    filename_(filename), stream_(fileSeekableInputStream(filename)),&lt;br/&gt;
+    decoder_(binaryDecoder()), objectCount_(0), eof_(false), blockStart_(-1),&lt;br/&gt;
+    blockEnd_(-1)
 {
     readHeader();
 }
&lt;p&gt;@@ -295,7 +296,7 @@ std::ostream&amp;amp; operator &amp;lt;&amp;lt; (std::ostream&amp;amp; os, const DataFileSync&amp;amp; s)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; bool DataFileReaderBase::hasMore()&lt;br/&gt;
 {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (eof_) {&lt;br/&gt;
+    if (eof_) 
{
         return false;
     } else if (objectCount_ != 0) {&lt;br/&gt;
         return true;&lt;br/&gt;
@@ -358,6 +359,7 @@ auto_ptr&amp;lt;InputStream&amp;gt; boundedInputStream(InputStream&amp;amp; in, size_t limit)&lt;br/&gt;
 bool DataFileReaderBase::readDataBlock()&lt;br/&gt;
 {&lt;br/&gt;
     decoder_-&amp;gt;init(*stream_);&lt;br/&gt;
+    blockStart_ = stream_-&amp;gt;byteCount();&lt;br/&gt;
     const uint8_t* p = 0;&lt;br/&gt;
     size_t n = 0;&lt;br/&gt;
     if (! stream_-&amp;gt;next(&amp;amp;p, &amp;amp;n)) {&lt;br/&gt;
@@ -369,7 +371,8 @@ bool DataFileReaderBase::readDataBlock()&lt;br/&gt;
     int64_t byteCount;&lt;br/&gt;
     avro::decode(*decoder_, byteCount);&lt;br/&gt;
     decoder_-&amp;gt;init(*stream_);&lt;br/&gt;
-&lt;br/&gt;
+    blockEnd_ = stream_-&amp;gt;byteCount() + byteCount;&lt;br/&gt;
+    &lt;br/&gt;
     auto_ptr&amp;lt;InputStream&amp;gt; st = boundedInputStream(*stream_, static_cast&amp;lt;size_t&amp;gt;(byteCount));&lt;br/&gt;
     if (codec_ == NULL_CODEC) {
         dataDecoder_-&amp;gt;init(*st);
@@ -489,6 +492,73 @@ void DataFileReaderBase::readHeader()
     }&lt;br/&gt;
 &lt;br/&gt;
     avro::decode(*decoder_, sync_);&lt;br/&gt;
+    decoder_-&amp;gt;init(*stream_);&lt;br/&gt;
+    blockStart_ = stream_-&amp;gt;byteCount();&lt;br/&gt;
+}&lt;br/&gt;
+&lt;br/&gt;
+void DataFileReaderBase::seek(int64_t position) {&lt;br/&gt;
+    if (!eof_) {
+        dataDecoder_-&amp;gt;init(*dataStream_);
+        drain(*dataStream_);
+    }&lt;br/&gt;
+    decoder_-&amp;gt;init(*stream_);&lt;br/&gt;
+    stream_-&amp;gt;seek(position);&lt;br/&gt;
+    eof_ = false;&lt;br/&gt;
+    readDataBlock();&lt;br/&gt;
+}&lt;br/&gt;
+&lt;br/&gt;
+void DataFileReaderBase::sync(int64_t position) {&lt;br/&gt;
+    if (!eof_) {+        dataDecoder_-&amp;gt;init(*dataStream_);+        drain(*dataStream_);+    }&lt;br/&gt;
+    decoder_-&amp;gt;init(*stream_);&lt;br/&gt;
+    stream_-&amp;gt;seek(position);&lt;br/&gt;
+    eof_ = false;&lt;br/&gt;
+    DataFileSync sync_buffer;&lt;br/&gt;
+    const uint8_t *p = 0;&lt;br/&gt;
+    size_t n = 0;&lt;br/&gt;
+    int i = 0;&lt;br/&gt;
+    while (i &amp;lt; DataFileSync::static_size) {&lt;br/&gt;
+        if (n == 0 &amp;amp;&amp;amp; !stream_-&amp;gt;next(&amp;amp;p, &amp;amp;n)) {
+            eof_ = true;
+            return;
+        }&lt;br/&gt;
+        int len =&lt;br/&gt;
+            std::min(static_cast&amp;lt;size_t&amp;gt;(DataFileSync::static_size - i), n);&lt;br/&gt;
+        memcpy(&amp;amp;sync_buffer&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;, p, len);&lt;br/&gt;
+        p += len;&lt;br/&gt;
+        n -= len;&lt;br/&gt;
+        i += len;&lt;br/&gt;
+    }&lt;br/&gt;
+    for (;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; {&lt;br/&gt;
+        int j = 0;&lt;br/&gt;
+        for (; j &amp;lt; DataFileSync::static_size; ++j) {&lt;br/&gt;
+            if (sync_&lt;span class=&quot;error&quot;&gt;&amp;#91;j&amp;#93;&lt;/span&gt; != sync_buffer&lt;span class=&quot;error&quot;&gt;&amp;#91;(i + j) % DataFileSync::static_size&amp;#93;&lt;/span&gt;) {
+                break;
+            }&lt;br/&gt;
+        }&lt;br/&gt;
+        if (j == DataFileSync::static_size) {
+            // Found the sync marker!
+            break;
+        }&lt;br/&gt;
+        if (n == 0 &amp;amp;&amp;amp; !stream_-&amp;gt;next(&amp;amp;p, &amp;amp;n)) {+            eof_ = true;+            return;+        }&lt;br/&gt;
+        sync_buffer&lt;span class=&quot;error&quot;&gt;&amp;#91;i++ % DataFileSync::static_size&amp;#93;&lt;/span&gt; = *p++;&lt;br/&gt;
+        --n;&lt;br/&gt;
+    }&lt;br/&gt;
+    stream_-&amp;gt;backup&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;br/&gt;
+    readDataBlock();&lt;br/&gt;
+}&lt;br/&gt;
+&lt;br/&gt;
+bool DataFileReaderBase::pastSync(int64_t position) {
+  return !hasMore() || blockStart_ &amp;gt;= position + DataFileSync::static_size;
+}&lt;br/&gt;
+&lt;br/&gt;
+int64_t DataFileReaderBase::previousSync() {
+  return blockStart_;
 }&lt;br/&gt;
 &lt;br/&gt;
 }   // namespace avro&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/impl/FileStream.cc b/lang/c&lt;/ins&gt;+/impl/FileStream.cc&lt;br/&gt;
index 39c5af23c..63699682f 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/impl/FileStream.cc&lt;br/&gt;
+++ b/lang/c++/impl/FileStream.cc&lt;br/&gt;
@@ -42,7 +42,7 @@ namespace avro {&lt;br/&gt;
 namespace {&lt;br/&gt;
 struct BufferCopyIn {&lt;br/&gt;
     virtual ~BufferCopyIn() { }&lt;br/&gt;
-    virtual void seek(size_t len) = 0;&lt;br/&gt;
+    virtual void seek(ssize_t len) = 0;&lt;br/&gt;
     virtual bool read(uint8_t* b, size_t toRead, size_t&amp;amp; actual) = 0;&lt;br/&gt;
 &lt;br/&gt;
 };&lt;br/&gt;
@@ -61,7 +61,7 @@ struct FileBufferCopyIn : public BufferCopyIn {&lt;br/&gt;
         ::CloseHandle(h_);&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
-    void seek(size_t len) {&lt;br/&gt;
+    void seek(ssize_t len) {&lt;br/&gt;
         if (::SetFilePointer(h_, len, NULL, FILE_CURRENT) != INVALID_SET_FILE_POINTER) {
             throw Exception(boost::format(&quot;Cannot skip file: %1%&quot;) % ::GetLastError());
         }&lt;br/&gt;
@@ -90,7 +90,7 @@ struct FileBufferCopyIn : public BufferCopyIn {&lt;br/&gt;
         ::close(fd_);&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
-    void seek(size_t len) {&lt;br/&gt;
+    void seek(ssize_t len) {&lt;br/&gt;
         off_t r = ::lseek(fd_, len, SEEK_CUR);&lt;br/&gt;
         if (r == static_cast&amp;lt;off_t&amp;gt;(-1)) {&lt;br/&gt;
             throw Exception(boost::format(&quot;Cannot skip file: %1%&quot;) %&lt;br/&gt;
@@ -116,7 +116,7 @@ struct IStreamBufferCopyIn : public BufferCopyIn {&lt;br/&gt;
     IStreamBufferCopyIn(istream&amp;amp; is) : is_(is) {&lt;br/&gt;
     }&lt;br/&gt;
 &lt;br/&gt;
-    void seek(size_t len) {&lt;br/&gt;
+    void seek(ssize_t len) {&lt;br/&gt;
         if (! is_.seekg(len, std::ios_base::cur)) {
             throw Exception(&quot;Cannot skip stream&quot;);
         }&lt;br/&gt;
@@ -135,7 +135,7 @@ struct IStreamBufferCopyIn : public BufferCopyIn {&lt;br/&gt;
 &lt;br/&gt;
 }&lt;br/&gt;
 &lt;br/&gt;
-class BufferCopyInInputStream : public InputStream {&lt;br/&gt;
+class BufferCopyInInputStream : public SeekableInputStream {&lt;br/&gt;
     const size_t bufferSize_;&lt;br/&gt;
     uint8_t* const buffer_;&lt;br/&gt;
     auto_ptr&amp;lt;BufferCopyIn&amp;gt; in_;&lt;br/&gt;
@@ -188,6 +188,13 @@ class BufferCopyInInputStream : public InputStream {         return false;     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+    void seek(int64_t position) &lt;/p&gt;
{
+      // BufferCopyIn::seek is relative to byteCount_, whereas position is
+      // absolute.
+      in_-&amp;gt;seek(position - byteCount_ - available_);
+      byteCount_ = position;
+      available_ = 0;
+    }

&lt;p&gt; public:&lt;br/&gt;
     BufferCopyInInputStream(auto_ptr&amp;lt;BufferCopyIn&amp;gt;&amp;amp; in, size_t bufferSize) :&lt;br/&gt;
@@ -327,7 +334,16 @@ auto_ptr&amp;lt;InputStream&amp;gt; fileInputStream(const char* filename,&lt;br/&gt;
     size_t bufferSize)&lt;/p&gt;
 {
     auto_ptr&amp;lt;BufferCopyIn&amp;gt; in(new FileBufferCopyIn(filename));
-    return auto_ptr&amp;lt;InputStream&amp;gt;( new BufferCopyInInputStream(in, bufferSize));
+    return auto_ptr&amp;lt;InputStream&amp;gt;(
+        new BufferCopyInInputStream(in, bufferSize));
+}
&lt;p&gt;+&lt;br/&gt;
+auto_ptr&amp;lt;SeekableInputStream&amp;gt; fileSeekableInputStream(const char* filename,&lt;br/&gt;
+    size_t bufferSize)&lt;br/&gt;
+&lt;/p&gt;
{
+    auto_ptr&amp;lt;BufferCopyIn&amp;gt; in(new FileBufferCopyIn(filename));
+    return auto_ptr&amp;lt;SeekableInputStream&amp;gt;(
+        new BufferCopyInInputStream(in, bufferSize));
 }

&lt;p&gt; auto_ptr&amp;lt;InputStream&amp;gt; istreamInputStream(istream&amp;amp; is,&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/test/CodecTests.cc b/lang/c&lt;/ins&gt;+/test/CodecTests.cc&lt;br/&gt;
index f8bbe84d0..064351b3e 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/test/CodecTests.cc&lt;br/&gt;
+++ b/lang/c++/test/CodecTests.cc&lt;br/&gt;
@@ -1363,9 +1363,17 @@ static const TestData4 data4BinaryOnly[] = {&lt;br/&gt;
 #define COUNTOF&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  sizeof&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; / sizeof(x&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;)&lt;br/&gt;
 #define ENDOF&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;    &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; + COUNTOF&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/error.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;-#define ADD_TESTS(testSuite, Factory, testFunc, data)           \&lt;br/&gt;
-testSuite.add(BOOST_PARAM_TEST_CASE(&amp;amp;testFunc&amp;lt;Factory&amp;gt;,         \&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;data, data + COUNTOF(data)))&lt;br/&gt;
+// Boost 1.67 and later expects test cases to have unique names. This dummy&lt;br/&gt;
+// helper functions leads to names which compose &apos;testFunc&apos;, &apos;Factory&apos;, and&lt;br/&gt;
+// &apos;data&apos;.&lt;br/&gt;
+template &amp;lt;typename Test, typename Data&amp;gt;&lt;br/&gt;
+Test testWithData(const Test &amp;amp;test, const Data &amp;amp;data) 
{
+    boost::ignore_unused(data);
+    return test;
+}
&lt;p&gt;+#define ADD_TESTS(testSuite, Factory, testFunc, data) \&lt;br/&gt;
+    testSuite.add(BOOST_PARAM_TEST_CASE(              \&lt;br/&gt;
+        testWithData(&amp;amp;testFunc&amp;lt;Factory&amp;gt;, data), data, data + COUNTOF(data)))&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; struct BinaryEncoderFactory {&lt;br/&gt;
     static EncoderPtr newEncoder(const ValidSchema&amp;amp; schema) {&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/test/DataFileTests.cc b/lang/c&lt;/ins&gt;+/test/DataFileTests.cc&lt;br/&gt;
index 27a7ce9ca..8d8c7b08e 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/test/DataFileTests.cc&lt;br/&gt;
+++ b/lang/c++/test/DataFileTests.cc&lt;br/&gt;
@@ -16,6 +16,8 @@&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;limitations under the License.&lt;br/&gt;
  */&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+#include &amp;lt;boost/random/mersenne_twister.hpp&amp;gt;&lt;br/&gt;
+#include &amp;lt;boost/random/uniform_int_distribution.hpp&amp;gt;&lt;br/&gt;
 #include &amp;lt;boost/test/included/unit_test_framework.hpp&amp;gt;&lt;br/&gt;
 #include &amp;lt;boost/test/unit_test.hpp&amp;gt;&lt;br/&gt;
 #include &amp;lt;boost/filesystem.hpp&amp;gt;&lt;br/&gt;
@@ -340,6 +342,97 @@ class DataFileTest &lt;/p&gt;
{
         BOOST_CHECK_EQUAL(i, count);
     }

&lt;p&gt;+    void testReaderSyncSeek() {&lt;br/&gt;
+        std::vector&amp;lt;int64_t&amp;gt; sync_points;&lt;br/&gt;
+        avro::DataFileReader&amp;lt;ComplexInteger&amp;gt; df(filename, writerSchema);&lt;br/&gt;
+        for (int64_t prev = 0; prev != df.previousSync(); df.sync(prev)) &lt;/p&gt;
{
+            prev = df.previousSync();
+            sync_points.push_back(prev);
+        }
&lt;p&gt;+        std::set&amp;lt;pair&amp;lt;int64_t, int64_t&amp;gt; &amp;gt; actual;&lt;br/&gt;
+        int num = 0;&lt;br/&gt;
+        for (int i = sync_points.size() - 2; i &amp;gt;= 0; --i) {&lt;br/&gt;
+            df.seek(sync_points&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;);&lt;br/&gt;
+            ComplexInteger ci;&lt;br/&gt;
+            // Subtract DataFileSync::static_size here because sync and pastSync&lt;br/&gt;
+            // expect a point &lt;b&gt;at or before&lt;/b&gt; the sync marker, whereas seek&lt;br/&gt;
+            // expects the point right &lt;b&gt;after&lt;/b&gt; the sync marker.&lt;br/&gt;
+            while (!df.pastSync(sync_points&lt;span class=&quot;error&quot;&gt;&amp;#91;i + 1&amp;#93;&lt;/span&gt; -&lt;br/&gt;
+                                avro::DataFileSync::static_size)) &lt;/p&gt;
{
+                BOOST_CHECK(df.read(ci));
+                ++num;
+                actual.insert(std::make_pair(ci.re, ci.im));
+            }
&lt;p&gt;+        }&lt;br/&gt;
+        df.close();&lt;br/&gt;
+        // We read &apos;count&apos; total objects.&lt;br/&gt;
+        BOOST_CHECK_EQUAL(num, count);&lt;br/&gt;
+        // We read &apos;count&apos; distinct objects.&lt;br/&gt;
+        BOOST_CHECK_EQUAL(actual.size(), count);&lt;br/&gt;
+        // They were the same objects initially written.&lt;br/&gt;
+        int64_t re = 3;&lt;br/&gt;
+        int64_t im = 5;&lt;br/&gt;
+        for (int i = 0; i &amp;lt; count; ++i, re *= im, im += 3) &lt;/p&gt;
{
+            actual.insert(std::make_pair(re, im));
+        }
&lt;p&gt;+        BOOST_CHECK_EQUAL(actual.size(), count);&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
+    void testReaderSyncDiscovery() {&lt;br/&gt;
+        std::set&amp;lt;int64_t&amp;gt; sync_points_syncing;&lt;br/&gt;
+        std::set&amp;lt;int64_t&amp;gt; sync_points_reading;&lt;br/&gt;
+        {&lt;br/&gt;
+            avro::DataFileReader&amp;lt;ComplexInteger&amp;gt; df(filename, writerSchema);&lt;br/&gt;
+            for (int64_t prev = 0; prev != df.previousSync(); df.sync(prev)) &lt;/p&gt;
{
+                prev = df.previousSync();
+                sync_points_syncing.insert(prev);
+            }
&lt;p&gt;+            df.close();&lt;br/&gt;
+        }&lt;br/&gt;
+        {&lt;br/&gt;
+            avro::DataFileReader&amp;lt;ComplexInteger&amp;gt; df(filename, writerSchema);&lt;br/&gt;
+            sync_points_reading.insert(df.previousSync());&lt;br/&gt;
+            ComplexInteger ci;&lt;br/&gt;
+            while (df.read(ci)) &lt;/p&gt;
{
+                sync_points_reading.insert(df.previousSync());
+            }
&lt;p&gt;+            sync_points_reading.insert(df.previousSync());&lt;br/&gt;
+            df.close();&lt;br/&gt;
+        }&lt;br/&gt;
+        BOOST_CHECK(sync_points_syncing == sync_points_reading);&lt;br/&gt;
+        // Just to make sure we&apos;re actually finding a reasonable number of&lt;br/&gt;
+        // splits.. rather than bugs like only find the first split.&lt;br/&gt;
+        BOOST_CHECK_GT(sync_points_syncing.size(), 10);&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
+    // This is a direct port of testSplits() from&lt;br/&gt;
+    // lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java.&lt;br/&gt;
+    void testReaderSplits() {&lt;br/&gt;
+        boost::mt19937 random(static_cast&amp;lt;uint32_t&amp;gt;(time(0)));&lt;br/&gt;
+        avro::DataFileReader&amp;lt;ComplexInteger&amp;gt; df(filename, writerSchema);&lt;br/&gt;
+        std::ifstream just_for_length(&lt;br/&gt;
+            filename, std::ifstream::ate | std::ifstream::binary);&lt;br/&gt;
+        int length = just_for_length.tellg();&lt;br/&gt;
+        int splits = 10;&lt;br/&gt;
+        int end = length;      // end of split&lt;br/&gt;
+        int remaining = end;   // bytes remaining&lt;br/&gt;
+        int actual_count = 0;  // count of entries&lt;br/&gt;
+        while (remaining &amp;gt; 0) {&lt;br/&gt;
+            int start =&lt;br/&gt;
+                std::max(0, end - boost::random::uniform_int_distribution&amp;lt;&amp;gt;(&lt;br/&gt;
+                                      0, 2 * length / splits)(random));&lt;br/&gt;
+            df.sync(start);  // count entries in split&lt;br/&gt;
+            while (!df.pastSync(end)) &lt;/p&gt;
{
+                ComplexInteger ci;
+                df.read(ci);
+                actual_count++;
+            }
&lt;p&gt;+            remaining -= end - start;&lt;br/&gt;
+            end = start;&lt;br/&gt;
+        }&lt;br/&gt;
+        BOOST_CHECK_EQUAL(actual_count, count);&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
     void testReadDouble() &lt;/p&gt;
{
         avro::DataFileReader&amp;lt;ComplexDouble&amp;gt; df(filename, writerSchema);
         int i = 0;
@@ -492,46 +585,98 @@ void addReaderTests(test_suite* ts, const shared_ptr&amp;lt;DataFileTest&amp;gt;&amp;amp; t)
     ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testReaderGenericProjection,
         t));
     ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup, t));
-
 }

&lt;p&gt; test_suite*&lt;br/&gt;
-init_unit_test_suite( int argc, char* argv[] )&lt;br/&gt;
+init_unit_test_suite(int argc, char *argv[])&lt;br/&gt;
 {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;test_suite* ts= BOOST_TEST_SUITE(&quot;DataFile tests&quot;);&lt;/li&gt;
	&lt;li&gt;shared_ptr&amp;lt;DataFileTest&amp;gt; t1(new DataFileTest(&quot;test1.df&quot;, sch, isch));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWrite, t1));&lt;/li&gt;
	&lt;li&gt;addReaderTests(ts, t1);&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;shared_ptr&amp;lt;DataFileTest&amp;gt; t2(new DataFileTest(&quot;test2.df&quot;, sch, isch));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWriteGeneric, t2));&lt;/li&gt;
	&lt;li&gt;addReaderTests(ts, t2);&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;shared_ptr&amp;lt;DataFileTest&amp;gt; t3(new DataFileTest(&quot;test3.df&quot;, dsch, dblsch));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWriteDouble, t3));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testReadDouble, t3));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testReadDoubleTwoStep, t3));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testReadDoubleTwoStepProject,&lt;/li&gt;
	&lt;li&gt;t3));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup, t3));&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;shared_ptr&amp;lt;DataFileTest&amp;gt; t4(new DataFileTest(&quot;test4.df&quot;, dsch, dblsch));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testTruncate, t4));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup, t4));&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;shared_ptr&amp;lt;DataFileTest&amp;gt; t5(new DataFileTest(&quot;test5.df&quot;, sch, isch));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWriteGenericByName, t5));&lt;/li&gt;
	&lt;li&gt;addReaderTests(ts, t5);&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;shared_ptr&amp;lt;DataFileTest&amp;gt; t6(new DataFileTest(&quot;test6.df&quot;, dsch, dblsch));&lt;/li&gt;
	&lt;li&gt;ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testZip, t6));&lt;/li&gt;
	&lt;li&gt;shared_ptr&amp;lt;DataFileTest&amp;gt; t8(new DataFileTest(&quot;test8.df&quot;, dsch, dblsch));&lt;br/&gt;
+    
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test1.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t1(new DataFileTest(&quot;test1.df&quot;, sch, isch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWrite, t1));
+        addReaderTests(ts, t1);
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test2.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t2(new DataFileTest(&quot;test2.df&quot;, sch, isch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWriteGeneric, t2));
+        addReaderTests(ts, t2);
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test3.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t3(new DataFileTest(&quot;test3.df&quot;, dsch, dblsch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWriteDouble, t3));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testReadDouble, t3));
+        ts-&amp;gt;add(
+            BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testReadDoubleTwoStep, t3));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(
+            &amp;amp;DataFileTest::testReadDoubleTwoStepProject, t3));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup, t3));
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test4.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t4(new DataFileTest(&quot;test4.df&quot;, dsch, dblsch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testTruncate, t4));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup, t4));
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test5.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t5(new DataFileTest(&quot;test5.df&quot;, sch, isch));
+        ts-&amp;gt;add(
+            BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWriteGenericByName, t5));
+        addReaderTests(ts, t5);
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test6.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t6(new DataFileTest(&quot;test6.df&quot;, dsch, dblsch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testZip, t6));
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test8.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t8(new DataFileTest(&quot;test8.df&quot;, dsch, dblsch));
 #ifdef SNAPPY_CODEC_AVAILABLE
-    ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testSnappy, t8));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testSnappy, t8));
 #endif
-    shared_ptr&amp;lt;DataFileTest&amp;gt; t7(new DataFileTest(&quot;test7.df&quot;,fsch,fsch));
-    ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testSchemaReadWrite,t7));
-    ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup,t7));
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test7.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t7(new DataFileTest(&quot;test7.df&quot;, fsch, fsch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testSchemaReadWrite, t7));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup, t7));
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test9.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t9(new DataFileTest(&quot;test9.df&quot;, sch, sch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWrite, t9));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testReaderSyncSeek, t9));
+        //ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup, t9));
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test10.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t(new DataFileTest(&quot;test10.df&quot;, sch, sch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWrite, t));
+        ts-&amp;gt;add(
+            BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testReaderSyncDiscovery, t));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup, t));
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }
&lt;p&gt;+    &lt;/p&gt;
{
+        test_suite *ts = BOOST_TEST_SUITE(&quot;DataFile tests: test11.df&quot;);
+        shared_ptr&amp;lt;DataFileTest&amp;gt; t(new DataFileTest(&quot;test11.df&quot;, sch, sch));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testWrite, t));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testReaderSplits, t));
+        ts-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;DataFileTest::testCleanup, t));
+        boost::unit_test::framework::master_test_suite().add(ts);
+    }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return ts;&lt;br/&gt;
+    return 0;&lt;br/&gt;
 }&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/test/unittest.cc b/lang/c&lt;/ins&gt;+/test/unittest.cc&lt;br/&gt;
index 5aef9b75a..e12e6954e 100644
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/c++/test/unittest.cc&lt;br/&gt;
+++ b/lang/c++/test/unittest.cc&lt;br/&gt;
@@ -767,14 +767,6 @@ struct TestResolution&lt;br/&gt;
     ValidSchema unionTwo_;&lt;br/&gt;
 };&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-&lt;br/&gt;
-template&amp;lt;typename T&amp;gt;&lt;br/&gt;
-void addTestCase(boost::unit_test::test_suite &amp;amp;test) &lt;br/&gt;
-&lt;/p&gt;
{
-    boost::shared_ptr&amp;lt;T&amp;gt; newtest( new T );
-    test.add( BOOST_CLASS_TEST_CASE( &amp;amp;T::test, newtest ));
-}
&lt;p&gt;-&lt;br/&gt;
 boost::unit_test::test_suite*&lt;br/&gt;
 init_unit_test_suite( int argc, char* argv[] ) &lt;/p&gt;
 {
@@ -782,12 +774,18 @@ init_unit_test_suite( int argc, char* argv[] )
 
     test_suite* test= BOOST_TEST_SUITE( &quot;Avro C++ unit test suite&quot; );
 
-    addTestCase&amp;lt;TestEncoding&amp;gt;(*test);
-    addTestCase&amp;lt;TestSchema&amp;gt;(*test);
-    addTestCase&amp;lt;TestNested&amp;gt;(*test);
-    addTestCase&amp;lt;TestGenerated&amp;gt;(*test);
-    addTestCase&amp;lt;TestBadStuff&amp;gt;(*test);
-    addTestCase&amp;lt;TestResolution&amp;gt;(*test);
+    test-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;TestEncoding::test,
+                                    boost::make_shared&amp;lt;TestEncoding&amp;gt;()));
+    test-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;TestSchema::test,
+                                    boost::make_shared&amp;lt;TestSchema&amp;gt;()));
+    test-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;TestNested::test,
+                                    boost::make_shared&amp;lt;TestNested&amp;gt;()));
+    test-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;TestGenerated::test,
+                                    boost::make_shared&amp;lt;TestGenerated&amp;gt;()));
+    test-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;TestBadStuff::test,
+                                    boost::make_shared&amp;lt;TestBadStuff&amp;gt;()));
+    test-&amp;gt;add(BOOST_CLASS_TEST_CASE(&amp;amp;TestResolution::test,
+                                    boost::make_shared&amp;lt;TestResolution&amp;gt;()));
 
     return test;
 }




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16635735" author="jira-bot" created="Tue, 2 Oct 2018 15:55:40 +0000"  >&lt;p&gt;Commit 3efbd4c1a5d81966ab5dd01b394c4b0a188bf871 in avro&apos;s branch refs/heads/master from Thiruvalluvan M G&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=3efbd4c&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=3efbd4c&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Merge pull request #328 from wmatthews-google/avro-2214-support-seek&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2214&quot; title=&quot;Support sync and seek in C++ DataFileReader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2214&quot;&gt;&lt;del&gt;AVRO-2214&lt;/del&gt;&lt;/a&gt; Support sync and seek in C++ DataFileReader&lt;/p&gt;</comment>
                            <comment id="16635739" author="thiru_mg" created="Tue, 2 Oct 2018 15:59:18 +0000"  >&lt;p&gt;Merged pull request&#160;&lt;a href=&quot;https://github.com/apache/avro/pull/328&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/328&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12613112">AVRO-1182</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 20 Aug 2018 06:54:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            15 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3x7e7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2215] Add Java support to convert to Apache Arrow</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2215</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It would be great if Avro can add support to allow convert data to/from Apache Arrow format. This is available for Parquet format, I wonder if this is doable for Avro and if there is any plan for this. In our use case, we are mainly targeting for Java convert.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13180092">AVRO-2215</key>
            <summary>Add Java support to convert to Apache Arrow</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="vagarychen">Chen Liang</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 Aug 2018 23:28:53 +0000</created>
                <updated>Mon, 20 Aug 2018 23:28:53 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            21 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3x8q7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
