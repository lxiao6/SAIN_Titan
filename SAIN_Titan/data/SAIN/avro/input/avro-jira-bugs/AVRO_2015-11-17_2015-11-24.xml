<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:22:40 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2015-11-17+AND+created+%3C%3D+2015-11-24+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="1" total="1"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1760] Thread scalability problem with the use of SynchronizedMap</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1760</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;While running Adam Genomics (which uses Avro) on Apache Spark, we discovered that threads (tasks in Spark Context) block in Avro while executing the getDefaultValue(Field field) method in &lt;a href=&quot;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericData.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericData.java&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12915465">AVRO-1760</key>
            <summary>Thread scalability problem with the use of SynchronizedMap</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tomwhite">Tom White</assignee>
                                    <reporter username="mulugeta">Mulugeta Mammo</reporter>
                        <labels>
                            <label>patch</label>
                            <label>performance</label>
                    </labels>
                <created>Mon, 23 Nov 2015 18:12:39 +0000</created>
                <updated>Mon, 1 Feb 2016 14:56:01 +0000</updated>
                            <resolved>Mon, 18 Jan 2016 10:54:47 +0000</resolved>
                                    <version>1.7.4</version>
                    <version>1.7.5</version>
                    <version>1.7.6</version>
                    <version>1.7.7</version>
                    <version>1.8.0</version>
                    <version>1.8.1</version>
                    <version>1.9.0</version>
                                    <fixVersion>1.8.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="15022661" author="mulugeta" created="Mon, 23 Nov 2015 18:25:07 +0000"  >&lt;p&gt;&amp;#8212; &lt;a href=&quot;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericData.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericData.java&lt;/a&gt;        2015-11-19 13:53:10.238342446 -0800&lt;br/&gt;
+++ avro/lang/java/avro/src/main/java/org/apache/avro/generic/GenericData.java  2015-11-18 15:10:01.217569133 -0800&lt;br/&gt;
@@ -23,7 +23,6 @@&lt;br/&gt;
 import java.util.AbstractList;&lt;br/&gt;
 import java.util.Arrays;&lt;br/&gt;
 import java.util.Collection;&lt;br/&gt;
-import java.util.Collections;&lt;br/&gt;
 import java.util.HashMap;&lt;br/&gt;
 import java.util.IdentityHashMap;&lt;br/&gt;
 import java.util.LinkedHashMap;&lt;br/&gt;
@@ -31,6 +30,7 @@&lt;br/&gt;
 import java.util.Iterator;&lt;br/&gt;
 import java.util.List;&lt;br/&gt;
 import java.util.Map;&lt;br/&gt;
+import java.util.concurrent.ConcurrentHashMap;&lt;/p&gt;

&lt;p&gt; import org.apache.avro.AvroRuntimeException;&lt;br/&gt;
 import org.apache.avro.AvroTypeException;&lt;br/&gt;
@@ -969,7 +969,7 @@&lt;br/&gt;
   }&lt;/p&gt;

&lt;p&gt;   private final Map&amp;lt;Field, Object&amp;gt; defaultValueCache&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;= Collections.synchronizedMap(new WeakHashMap&amp;lt;Field, Object&amp;gt;());&lt;br/&gt;
+    = new ConcurrentHashMap&amp;lt;Field, Object&amp;gt;(new WeakHashMap&amp;lt;Field, Object&amp;gt;());&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the default value of the given field, if any.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15022673" author="mulugeta" created="Mon, 23 Nov 2015 18:30:56 +0000"  >&lt;p&gt;Patch File.&lt;/p&gt;</comment>
                            <comment id="15022741" author="mulugeta" created="Mon, 23 Nov 2015 18:59:52 +0000"  >&lt;p&gt;document describes the issue and the performance gain after applying the patch.&lt;/p&gt;</comment>
                            <comment id="15022769" author="mulugeta" created="Mon, 23 Nov 2015 19:08:59 +0000"  >&lt;p&gt;Patch is available.&lt;/p&gt;</comment>
                            <comment id="15025699" author="rdblue" created="Tue, 24 Nov 2015 23:28:12 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mulugeta&quot; class=&quot;user-hover&quot; rel=&quot;mulugeta&quot;&gt;Mulugeta Mammo&lt;/a&gt;, thanks for reporting the problem. Nice looking doc to point out the difference, too!&lt;/p&gt;

&lt;p&gt;I had a look at the patch and I don&apos;t think we can merge it as-is. While it certainly does fix the performance problem, it introduces a memory leak because the cache you&apos;re changing is no longer a WeakHashMap. The constructor for ConcurrentHashMap that you use copies the contents of the other map instead of what I think you intended, using the other map for internal storage like the synchronizedMap factory method does. So this patch would cause Avro to keep strong references to fields that never get removed.&lt;/p&gt;

&lt;p&gt;Luckily, I think we already have a solution from &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-607&quot; title=&quot;SpecificData.getSchema not thread-safe&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-607&quot;&gt;&lt;del&gt;AVRO-607&lt;/del&gt;&lt;/a&gt;. That issue also requires a weak identity concurrent map and I built one a few months ago that is waiting for review. If you don&apos;t mind, could you review &lt;a href=&quot;https://github.com/apache/avro/pull/30&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;that patch&lt;/a&gt; and make sure that fixes this as well? Once we get that in, we can use the same class to fix this problem.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;, could you have a look as well?&lt;/p&gt;</comment>
                            <comment id="15025782" author="mulugeta" created="Wed, 25 Nov 2015 00:15:03 +0000"  >&lt;p&gt;Great! I&apos;ll check that and get back to you.&lt;/p&gt;</comment>
                            <comment id="15032691" author="mulugeta" created="Mon, 30 Nov 2015 23:11:24 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdblue&quot; class=&quot;user-hover&quot; rel=&quot;rdblue&quot;&gt;Ryan Blue&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I checked WeakIdentityConcurrentMap and it doesn&apos;t solve the issue. Threads block at org.apache.avro.util.WeakIdentityMap.reap() (see attached). ConcurrentHashMap experiences no blocking.&lt;/p&gt;

&lt;p&gt;Please let me know if you would like to fix the issue or go with ConcurrentHashMap (with no copying). Also, do we have data on the performance of a weak hashmap over strong hashmap?&lt;/p&gt;

&lt;p&gt;Best,&lt;/p&gt;</comment>
                            <comment id="15033431" author="tomwhite" created="Tue, 1 Dec 2015 09:48:31 +0000"  >&lt;p&gt;How about seeing if Guava&apos;s thread-safe maps help here? (See Doug&apos;s comment, &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-607?focusedCommentId=12895846&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12895846&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-607?focusedCommentId=12895846&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12895846&lt;/a&gt;.) If they do, then we can shade Guava to avoid JAR conflict issues. &lt;/p&gt;</comment>
                            <comment id="15033676" author="zolyfarkas" created="Tue, 1 Dec 2015 13:32:45 +0000"  >&lt;p&gt;Guava Cache scalability is not exactly stellar, see &lt;a href=&quot;https://github.com/google/guava/issues/1634&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/google/guava/issues/1634&lt;/a&gt; for more detail.&lt;/p&gt;

&lt;p&gt;Try to use a backport of JDK 1.8 ConcurrentHashMap (compute* methods)&lt;br/&gt;
or something like: &lt;a href=&quot;https://github.com/zolyfarkas/spf4j/blob/master/spf4j-core/src/main/java/org/spf4j/concurrent/UnboundedLoadingCache.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/zolyfarkas/spf4j/blob/master/spf4j-core/src/main/java/org/spf4j/concurrent/UnboundedLoadingCache.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For your benchmarks use JMH (&lt;a href=&quot;http://openjdk.java.net/projects/code-tools/jmh/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://openjdk.java.net/projects/code-tools/jmh/&lt;/a&gt;) or something similar... will increase the probability that you will make the right choice.&lt;/p&gt;</comment>
                            <comment id="15034310" author="rdblue" created="Tue, 1 Dec 2015 18:34:45 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mulugeta&quot; class=&quot;user-hover&quot; rel=&quot;mulugeta&quot;&gt;Mulugeta Mammo&lt;/a&gt;, could you run your test with the guava cache to see if it fixes the performance bug?&lt;/p&gt;

&lt;p&gt;I think we can also modify the cache from PR #30 to avoid so many calls to the reap method. There&apos;s not a correctness problem if we remove the calls to reap in put, get, and remove because they all have strong references to the key, so it can&apos;t have been garbage collected. Limiting the reap calls to just size, values, keySet, etc. would probably fix the problem. If guava doesn&apos;t fix the problem, then maybe we could fix it with this class after all.&lt;/p&gt;</comment>
                            <comment id="15035053" author="mulugeta" created="Wed, 2 Dec 2015 01:18:35 +0000"  >&lt;p&gt;guav&apos;s com.google.collect.MapMaker with weakkeys works fine with no threads blocking. patch and data attached.&lt;/p&gt;</comment>
                            <comment id="15035706" author="tomwhite" created="Wed, 2 Dec 2015 12:15:42 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mulugeta&quot; class=&quot;user-hover&quot; rel=&quot;mulugeta&quot;&gt;Mulugeta Mammo&lt;/a&gt;. I&apos;ve extended your patch to shade Guava.&lt;/p&gt;</comment>
                            <comment id="15093034" author="rdblue" created="Tue, 12 Jan 2016 00:59:19 +0000"  >&lt;p&gt;I&apos;m a little uncomfortable shading all of guava, but this came up on &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1781&quot; title=&quot;Schema.parse is not thread safe&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1781&quot;&gt;&lt;del&gt;AVRO-1781&lt;/del&gt;&lt;/a&gt; as well. For that issue, I tried to minimize the parts of guava we pull in (and fixed licensing as well). I think that will probably be what we end up with and I&apos;ll update the patch to depend on that once it is in.&lt;/p&gt;</comment>
                            <comment id="15098006" author="tomwhite" created="Thu, 14 Jan 2016 11:17:37 +0000"  >&lt;p&gt;New patch now that &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1781&quot; title=&quot;Schema.parse is not thread safe&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1781&quot;&gt;&lt;del&gt;AVRO-1781&lt;/del&gt;&lt;/a&gt; is in.&lt;/p&gt;</comment>
                            <comment id="15102715" author="rdblue" created="Fri, 15 Jan 2016 23:49:47 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;I was initially concerned about not allowing null values in the weak-keys identity hashmap, but the JSON blob must always be non-null and NullNode is checked explicitly. I&apos;m confident that the values are never null.&lt;/p&gt;</comment>
                            <comment id="15102871" author="mulugeta" created="Sat, 16 Jan 2016 01:22:35 +0000"  >&lt;p&gt;added performance comparison document.&lt;/p&gt;</comment>
                            <comment id="15105103" author="jira-bot" created="Mon, 18 Jan 2016 10:52:48 +0000"  >&lt;p&gt;Commit 1725220 from tomwhite@apache.org in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1725220&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1725220&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1760&quot; title=&quot;Thread scalability problem with the use of SynchronizedMap&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1760&quot;&gt;&lt;del&gt;AVRO-1760&lt;/del&gt;&lt;/a&gt;. Java: Thread scalability problem with the use of SynchronizedMap&lt;/p&gt;</comment>
                            <comment id="15105104" author="jira-bot" created="Mon, 18 Jan 2016 10:53:39 +0000"  >&lt;p&gt;Commit 1725222 from tomwhite@apache.org in branch &apos;avro/branches/branch-1.8&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1725222&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1725222&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1760&quot; title=&quot;Thread scalability problem with the use of SynchronizedMap&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1760&quot;&gt;&lt;del&gt;AVRO-1760&lt;/del&gt;&lt;/a&gt;. Java: Thread scalability problem with the use of SynchronizedMap&lt;/p&gt;</comment>
                            <comment id="15105108" author="tomwhite" created="Mon, 18 Jan 2016 10:54:47 +0000"  >&lt;p&gt;I committed this. Thanks Mulugeta and Ryan!&lt;/p&gt;</comment>
                            <comment id="15105184" author="hudson" created="Mon, 18 Jan 2016 11:45:16 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #570 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/570/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/570/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1760&quot; title=&quot;Thread scalability problem with the use of SynchronizedMap&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1760&quot;&gt;&lt;del&gt;AVRO-1760&lt;/del&gt;&lt;/a&gt;. Java: Thread scalability problem with the use of SynchronizedMap (tomwhite: rev 1725220)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericData.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12929229">AVRO-1781</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12782262" name="AVRO-1760.patch" size="1307" author="tomwhite" created="Thu, 14 Jan 2016 11:17:37 +0000"/>
                            <attachment id="12775267" name="AVRO-1760.patch" size="3258" author="tomwhite" created="Wed, 2 Dec 2015 12:15:42 +0000"/>
                            <attachment id="12775211" name="AVRO-1760.patch" size="956" author="mulugeta" created="Wed, 2 Dec 2015 04:48:26 +0000"/>
                            <attachment id="12782662" name="AVRO-1760.pdf" size="984695" author="mulugeta" created="Sat, 16 Jan 2016 01:22:35 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 24 Nov 2015 23:28:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310250" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10430"><![CDATA[Patch]]></customfieldvalue>
    <customfieldvalue key="10431"><![CDATA[Important]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 1 week ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2ot6f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
