<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:17:45 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2012-9-26+AND+created+%3C%3D+2012-10-3+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="4" total="4"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1174] AvroC 1.7.2 Fixing VS2008 Build</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1174</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;This patch fixes some minor issues which block AvroC 1.7.2 to build with VS2008 (on a non-english Windows XP).&lt;/p&gt;</description>
                <environment>&lt;p&gt;Windows XP, VS2008, non-english Windows&lt;/p&gt;</environment>
        <key id="12609353">AVRO-1174</key>
            <summary>AvroC 1.7.2 Fixing VS2008 Build</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sl.sy.ifm">Stefan Langer</assignee>
                                    <reporter username="sl.sy.ifm">Stefan Langer</reporter>
                        <labels>
                    </labels>
                <created>Thu, 27 Sep 2012 06:21:17 +0000</created>
                <updated>Mon, 10 Dec 2012 17:57:36 +0000</updated>
                            <resolved>Fri, 30 Nov 2012 09:52:59 +0000</resolved>
                                    <version>1.7.2</version>
                                    <fixVersion>1.7.3</fixVersion>
                                    <component>c</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13464491" author="sl.sy.ifm" created="Thu, 27 Sep 2012 06:25:10 +0000"  >&lt;p&gt;I haven&apos;t tested this changes on any other build-environment, but I tried to do the changes multi platform aware.&lt;/p&gt;</comment>
                            <comment id="13464915" author="cutting" created="Thu, 27 Sep 2012 17:48:03 +0000"  >&lt;p&gt;+1 With this patch, tests still pass for me on Ubuntu 12.04.&lt;/p&gt;</comment>
                            <comment id="13507226" author="brucem" created="Fri, 30 Nov 2012 09:52:59 +0000"  >&lt;p&gt;Fixed in r1415563.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12609032">AVRO-1173</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12546817" name="patch_win_vs2008_172.patch" size="1404" author="sl.sy.ifm" created="Thu, 27 Sep 2012 06:22:19 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 27 Sep 2012 17:48:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>249196</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 8 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0a5nz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>57191</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1175] BinaryData keeps a thread local reference after completing a compare, preventing compared arrays from being GC&apos;d</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1175</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;BinaryData holds on to BinaryDecoders as thread local variables (so it doesn&apos;t have to make new ones for each compare?).  When a compare is completed, the BinaryDecoder still keeps a reference to the ByteArrayByteSource, which stops its underlying byte array from being garbage collected.&lt;/p&gt;

&lt;p&gt;This is causing an OutOfMemoryError in reducers when shuffling with MR2.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12609469">AVRO-1175</key>
            <summary>BinaryData keeps a thread local reference after completing a compare, preventing compared arrays from being GC&apos;d</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="sandyr">Sandy Ryza</reporter>
                        <labels>
                    </labels>
                <created>Thu, 27 Sep 2012 23:16:04 +0000</created>
                <updated>Mon, 10 Dec 2012 17:57:35 +0000</updated>
                            <resolved>Wed, 28 Nov 2012 22:56:27 +0000</resolved>
                                    <version>1.7.2</version>
                                    <fixVersion>1.7.3</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13465229" author="cutting" created="Thu, 27 Sep 2012 23:48:02 +0000"  >&lt;p&gt;I don&apos;t yet see how this could cause an OutOfMemoryError.  This will leak at most two buffers per live thread.  Once a thread dies, all ThreadLocal values should be collectable.  Do you see more live instances of BinaryData.Decoders than there are live threads?&lt;/p&gt;</comment>
                            <comment id="13465233" author="sandyr" created="Fri, 28 Sep 2012 00:00:01 +0000"  >&lt;p&gt;It came up with only two buffers being leaked.  The map keys were about 300 megabytes each, so about 600 megabytes weren&apos;t accounted for.&lt;/p&gt;</comment>
                            <comment id="13465234" author="sandyr" created="Fri, 28 Sep 2012 00:00:29 +0000"  >&lt;p&gt;*sorry, reduce keys&lt;/p&gt;</comment>
                            <comment id="13465240" author="tlipcon" created="Fri, 28 Sep 2012 00:14:07 +0000"  >&lt;p&gt;Seems that even if the keys themselves are small, they&apos;re in the middle of a big byte buffer. So the decoder holding the reference to the byte array in a ThreadLocal is a no-no. Why not add:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
  decoders.b1.set(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, 0);
  decoders.b2.set(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, 0);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;since there&apos;s otherwise no reason to hold onto the buffers in the threadlocal?&lt;/p&gt;</comment>
                            <comment id="13465246" author="cutting" created="Fri, 28 Sep 2012 00:29:36 +0000"  >&lt;p&gt;300MB buffers!  Wow.&lt;/p&gt;

&lt;p&gt;Looking at the code, there are a lot of pointers to those buffers, and clearing them all for every call to compare() is tricky and can only slow things.  So perhaps a good way to fix this might be to add a BinaryData.Comparator class that holds the cached decoders.  Then we can allocate an instance of this in the reducer and better control its lifecycle.  Does that sound reasonable?&lt;/p&gt;</comment>
                            <comment id="13465251" author="cutting" created="Fri, 28 Sep 2012 00:38:28 +0000"  >&lt;p&gt;Todd, I think the BinaryDecoder itself has a pointer to the buffer too that we&apos;d need to clear too.  Also, BufferAccessor doesn&apos;t yet have a set() method.  So the change is a bit more complicated and tricky to test whether all the pointers have been cleared.&lt;/p&gt;

&lt;p&gt;A different API might make this simpler, but I agree that we should probably fix existing API too.&lt;/p&gt;</comment>
                            <comment id="13465342" author="cutting" created="Fri, 28 Sep 2012 04:32:45 +0000"  >&lt;p&gt;I can put together a patch for this, but not until early next week.&lt;/p&gt;</comment>
                            <comment id="13465348" author="sandyr" created="Fri, 28 Sep 2012 04:49:31 +0000"  >&lt;p&gt;You might have already figured this out, but I took another look, and the reducer uses BinaryData.compare through AvroKeyComparator (which implements RawComparator).  So that could just wrap a BinaryData.Comparator?&lt;/p&gt;</comment>
                            <comment id="13465757" author="sandyr" created="Fri, 28 Sep 2012 17:22:47 +0000"  >&lt;p&gt;Looking again, it seems like the merging code expects the comparator to be stateless, and creating a new comparator each time the merger is done with a segment would require some heavy rearranging.  To get a around this, the AvroKeyComparator could create a new BinaryData.Comparator for each compare, but that would defeat the original purpose of the caching?  Any guidance on what can/should be done on the map reduce side, Todd?&lt;/p&gt;</comment>
                            <comment id="13465831" author="tlipcon" created="Fri, 28 Sep 2012 19:05:29 +0000"  >&lt;p&gt;Hmm, looking at the MR code, it appears like we usually call functions like JobConf.getOutputKeyComparator() which make a new instance. So, if the comparator had some kind of deinit() function, we could probably figure out where to call it. But making it part of the comparator (stateful) instead of a threadlocal seems better all around.&lt;/p&gt;

&lt;p&gt;We do have other examples of stateful comparators: WritableComparator itself uses a DataInputBuffer.&lt;/p&gt;</comment>
                            <comment id="13465899" author="sandyr" created="Fri, 28 Sep 2012 20:59:16 +0000"  >&lt;p&gt;I talked to Todd about this and I don&apos;t think it&apos;s that simple.  The merger tries to free segments when it&apos;s done with them but might need the comparator for merging other segments.  So we could still face the OOME if the fetcher tries to bring in more data in between when a segment is closed and the merge is completed/Comparator dereferenced.&lt;/p&gt;</comment>
                            <comment id="13470712" author="cutting" created="Fri, 5 Oct 2012 22:07:39 +0000"  >&lt;p&gt;Here&apos;s a patch that I believe clears pointers to the buffer after each call to compare().  After studying Scott&apos;s BufferAccessor and ByteSource stuff I think we can simply set the pointers directly in the BinaryDecoder and that no others are retained.&lt;/p&gt;</comment>
                            <comment id="13470713" author="cutting" created="Fri, 5 Oct 2012 22:08:09 +0000"  >&lt;p&gt;Sandy, can you verify whether this helps things?  Thanks!&lt;/p&gt;</comment>
                            <comment id="13506021" author="cutting" created="Wed, 28 Nov 2012 22:56:27 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12548053" name="AVRO-1175.patch" size="4362" author="cutting" created="Fri, 5 Oct 2012 22:07:39 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 27 Sep 2012 23:48:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>244107</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 8 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05h5r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29877</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1176] ResolvingDecoder fails to resolve or parse schemas</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1176</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;We have encountered a number of problems using ResolvingDecoder in the C++ project that we can trace to&lt;/p&gt;

&lt;p&gt;1. Incorrectly swapped reader/writer arguments passed to ResolvingGrammarGenerator::generate()&lt;br/&gt;
2. Using the wrong tree in ResolvingGrammarGenerator::generate() to generate the backup parsing stack&lt;br/&gt;
3. A decoder has no &quot;hook&quot; into the generated codec_traits decode methods for Specific that advances the resolved parse tree through the Symbol::sSkipStart nodes to ignore extra or unknown fields in the writer&apos;s data.&lt;br/&gt;
4. A resolving decoder can generate a valid decoded object even if there are garbage characters at the end of the input stream if those characters appear in a field that the reader schema is unaware of&lt;/p&gt;

&lt;p&gt;Reader/Writer schemas that fail to parse properly below. First example is the writer adding a field to a record that is inside an array&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;Added field to record inside array&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{
    std::string readerString(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Outer\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;outerArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;array\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;items\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;InArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner1\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}},{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner2\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}}]}}}]}&quot;&lt;/span&gt;);
    std::string writerString(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Outer\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;outerArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;array\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;items\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;InArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner1\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}},{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner2\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}},{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;third\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner3\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}}]}}}]}&quot;&lt;/span&gt;);
    std::stringstream readerStream(readerString);
    std::stringstream writerStream(writerString);
    
    avro::ValidSchema readerSchema;
    avro::ValidSchema writerSchema;
    
    avro::compileJsonSchema(readerStream, readerSchema);
    avro::compileJsonSchema(writerStream, writerSchema);
    
    avro::DecoderPtr decoder = avro::resolvingDecoder(writerSchema, readerSchema, avro::jsonDecoder(writerSchema));
    struct Outer &lt;span class=&quot;code-keyword&quot;&gt;outer&lt;/span&gt;;
    
    std::stringstream jsonStream(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;outerArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;here is a string field\&lt;span class=&quot;code-quote&quot;&gt;&quot;},\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;here is another string field\&lt;span class=&quot;code-quote&quot;&gt;&quot;},\&quot;&lt;/span&gt;third\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;:3}},{\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;cool\&lt;span class=&quot;code-quote&quot;&gt;&quot;},\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;beans\&lt;span class=&quot;code-quote&quot;&gt;&quot;},\&quot;&lt;/span&gt;third\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;:4}}]}&quot;&lt;/span&gt;);
    std::auto_ptr&amp;lt;avro::InputStream&amp;gt; input = avro::istreamInputStream(jsonStream);

    decoder-&amp;gt;init(*input);
    avro::decode(*decoder, &lt;span class=&quot;code-keyword&quot;&gt;outer&lt;/span&gt;);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;Additional array of writer-only record&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{
    std::string readerString(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;OuterExtra\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;extraArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;array\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;items\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;InArrayExtraArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner1\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}},{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner2\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}}]}}}]}&quot;&lt;/span&gt;);
    std::string writerString(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;OuterExtra\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;extraArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;array\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;items\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;InArrayExtraArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner1\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}},{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner2\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}},{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;innerArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;array\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;items\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner3\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}}}]}}}]}&quot;&lt;/span&gt;);
    std::stringstream readerStream(readerString);
    std::stringstream writerStream(writerString);
    
    avro::ValidSchema readerSchema;
    avro::ValidSchema writerSchema;
    
    avro::compileJsonSchema(readerStream, readerSchema);
    avro::compileJsonSchema(writerStream, writerSchema);
    
    avro::DecoderPtr decoder = avro::resolvingDecoder(writerSchema, readerSchema, avro::jsonDecoder(writerSchema));
    struct Outer &lt;span class=&quot;code-keyword&quot;&gt;outer&lt;/span&gt;;
    
    std::stringstream jsonStream(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;extraArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;here is a string field\&lt;span class=&quot;code-quote&quot;&gt;&quot;},\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;here is another string field\&lt;span class=&quot;code-quote&quot;&gt;&quot;},\&quot;&lt;/span&gt;innerArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;:1},{\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;:2},{\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;:3}]},{\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;second item in array\&lt;span class=&quot;code-quote&quot;&gt;&quot;},\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;inner2 field of 2\&lt;span class=&quot;code-quote&quot;&gt;&quot;},\&quot;&lt;/span&gt;innerArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;:4},{\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;:5}]},{\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;third item in array\&lt;span class=&quot;code-quote&quot;&gt;&quot;},\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;inner2 field of 3\&lt;span class=&quot;code-quote&quot;&gt;&quot;},\&quot;&lt;/span&gt;innerArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;:6}]}]}&quot;&lt;/span&gt;);
    std::auto_ptr&amp;lt;avro::InputStream&amp;gt; input = avro::istreamInputStream(jsonStream);

    decoder-&amp;gt;init(*input);
    avro::decode(*decoder, &lt;span class=&quot;code-keyword&quot;&gt;outer&lt;/span&gt;);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;Multiple nesting of unknown records&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{
    std::string readerString(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;CombinationExtra\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;outerAsField\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;OuterExtra\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;extraArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;array\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;items\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;InArrayExtraArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner1\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}},{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner2\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}}]}}}]}}]}&quot;&lt;/span&gt;);
    std::string writerString(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;CombinationExtra\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;outerAsField\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;OuterExtra\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;extraArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;array\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;items\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;InArrayExtraArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner1\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}},{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner2\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}},{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;innerArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;array\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;items\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner3\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}}}]}}}]}}]}&quot;&lt;/span&gt;);
    std::stringstream readerStream(readerString);
    std::stringstream writerStream(writerString);
    
    avro::ValidSchema readerSchema;
    avro::ValidSchema writerSchema;
    
    avro::compileJsonSchema(readerStream, readerSchema);
    avro::compileJsonSchema(writerStream, writerSchema);
    
    avro::DecoderPtr decoder = avro::resolvingDecoder(writerSchema, readerSchema, avro::jsonDecoder(writerSchema));
    struct Outer &lt;span class=&quot;code-keyword&quot;&gt;outer&lt;/span&gt;;
    
    std::stringstream jsonStream(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;outerAsField\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;extraArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;here is a string field\&lt;span class=&quot;code-quote&quot;&gt;&quot;},\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;here is another string field\&lt;span class=&quot;code-quote&quot;&gt;&quot;},\&quot;&lt;/span&gt;innerArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;:1},{\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;:2},{\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;:3}]}]}}&quot;&lt;/span&gt;);
    std::auto_ptr&amp;lt;avro::InputStream&amp;gt; input = avro::istreamInputStream(jsonStream);

    decoder-&amp;gt;init(*input);
    avro::decode(*decoder, &lt;span class=&quot;code-keyword&quot;&gt;outer&lt;/span&gt;);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The following will generate a proper object according to the reader schema and completely ignores the extraneous characters at the end of the stream.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;Garbage after appended field of new record&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{
    std::string readerString(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;InArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner1\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}},{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner2\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}}]}&quot;&lt;/span&gt;);
    std::string writerString(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;InArray\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner1\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}},{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner2\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}},{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;third\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Inner3\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}}]}&quot;&lt;/span&gt;);
    std::stringstream readerStream(readerString);
    std::stringstream writerStream(writerString);
    
    avro::ValidSchema readerSchema;
    avro::ValidSchema writerSchema;
    
    avro::compileJsonSchema(readerStream, readerSchema);
    avro::compileJsonSchema(writerStream, writerSchema);
    
    avro::DecoderPtr decoder = avro::resolvingDecoder(writerSchema, readerSchema, avro::jsonDecoder(writerSchema));
    struct Outer &lt;span class=&quot;code-keyword&quot;&gt;outer&lt;/span&gt;;
    
    std::stringstream jsonStream(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;first\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;here is a string field\&lt;span class=&quot;code-quote&quot;&gt;&quot;},\&quot;&lt;/span&gt;second\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;here is another string field\&lt;span class=&quot;code-quote&quot;&gt;&quot;},\&quot;&lt;/span&gt;third\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;number\&lt;span class=&quot;code-quote&quot;&gt;&quot;:3} GARBAGE_HERE}&quot;&lt;/span&gt;);
    std::auto_ptr&amp;lt;avro::InputStream&amp;gt; input = avro::istreamInputStream(jsonStream);

    decoder-&amp;gt;init(*input);
    avro::decode(*decoder, &lt;span class=&quot;code-keyword&quot;&gt;outer&lt;/span&gt;);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12609633">AVRO-1176</key>
            <summary>ResolvingDecoder fails to resolve or parse schemas</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thiru_mg">Thiruvalluvan M. G.</assignee>
                                    <reporter username="kehli">Keh-Li Sheng</reporter>
                        <labels>
                            <label>patch</label>
                    </labels>
                <created>Sat, 29 Sep 2012 05:47:46 +0000</created>
                <updated>Thu, 3 Jan 2019 02:12:10 +0000</updated>
                            <resolved>Thu, 3 Jan 2019 02:12:10 +0000</resolved>
                                    <version>1.7.0</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>c++</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13466117" author="kehli" created="Sat, 29 Sep 2012 05:50:56 +0000"  >&lt;p&gt;Included patch fixes issue with ResolvingDecoder as documented in description. Corrects the argument swap/inversion and also adds a call into the ResolvingDecoder during Specific decodes that allow the resolved parse stack to advance properly&lt;/p&gt;</comment>
                            <comment id="13466120" author="kehli" created="Sat, 29 Sep 2012 05:55:57 +0000"  >&lt;p&gt;We are looking for a review of this patch and inclusion in the next release. If there is a better place to implement the skip call in the resolving decoder, then I am fine with a different solution that achieves the same result (ie. the resolved parse tree needs to advance the writer schema parse tree via Symbol::sSkipStart processing)&lt;/p&gt;

&lt;p&gt;Also, the C++ code base would benefit from a significant amount of source code documentation. Although large portions appear to be derived from the Java source, it is different in significant ways.&lt;/p&gt;</comment>
                            <comment id="13467105" author="cutting" created="Mon, 1 Oct 2012 19:01:54 +0000"  >&lt;p&gt;Thanks for the contribution!&lt;/p&gt;

&lt;p&gt;I&apos;m not familiar with the C++ implementation so will leave detailed review of your patch to others.  However if it does fix the problems you cite above it would be good to add test cases that detect each of these so that they stay fixed.&lt;/p&gt;

&lt;p&gt;Also, if you have the time, any improvements to the C++ documentation would be very welcome.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13581751" author="cutting" created="Tue, 19 Feb 2013 23:30:55 +0000"  >&lt;p&gt;This needs some tests, as existing tests pass without the patch.  Also, we shouldn&apos;t add comments about problems that have been fixed.&lt;/p&gt;</comment>
                            <comment id="16732590" author="jira-bot" created="Thu, 3 Jan 2019 02:11:32 +0000"  >&lt;p&gt;Commit e61751efd9f72cc299fce55c16e1d15e2ee1addc in avro&apos;s branch refs/heads/master from Thiruvalluvan M. G.&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=e61751e&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=e61751e&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Merge pull request #419 from thiru-apache/&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1176&quot; title=&quot;ResolvingDecoder fails to resolve or parse schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1176&quot;&gt;&lt;del&gt;AVRO-1176&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Added a method in decoder and related classes to drain residue bytes &#8230;&lt;/p&gt;</comment>
                            <comment id="16732591" author="thiru_mg" created="Thu, 3 Jan 2019 02:12:10 +0000"  >&lt;p&gt;Merged Pull Request&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12547095" name="AVRO-1176.patch" size="6032" author="kehli" created="Sat, 29 Sep 2012 05:50:56 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 1 Oct 2012 19:01:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>249195</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0a5nj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>57189</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1177] IPC interoperability problems with handshake</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1177</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I tried to get a simple echo service working using Java (client) to Ruby (server).&lt;/p&gt;

&lt;p&gt;The service should be called repeatedly in a loop. I tried several things, but the best result I got was that it would work once, then raising this exception on the ruby side:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;lib/ruby/gems/1.9.1/gems/avro-1.7.2/lib/avro/io.rb:46:in `byte!&apos;: undefined method `unpack&apos; for nil:NilClass (NoMethodError)
from lib/ruby/gems/1.9.1/gems/avro-1.7.2/lib/avro/io.rb:63:in `read_long&apos;
from lib/ruby/gems/1.9.1/gems/avro-1.7.2/lib/avro/io.rb:380:in `read_union&apos;
from lib/ruby/gems/1.9.1/gems/avro-1.7.2/lib/avro/io.rb:316:in `read_data&apos;
from lib/ruby/gems/1.9.1/gems/avro-1.7.2/lib/avro/io.rb:391:in `block in read_record&apos;
from lib/ruby/gems/1.9.1/gems/avro-1.7.2/lib/avro/io.rb:389:in `each&apos;
from lib/ruby/gems/1.9.1/gems/avro-1.7.2/lib/avro/io.rb:389:in `read_record&apos;
from lib/ruby/gems/1.9.1/gems/avro-1.7.2/lib/avro/io.rb:317:in `read_data&apos;
from lib/ruby/gems/1.9.1/gems/avro-1.7.2/lib/avro/io.rb:282:in `read&apos;
from lib/ruby/gems/1.9.1/gems/avro-1.7.2/lib/avro/ipc.rb:309:in `process_handshake&apos;
from lib/ruby/gems/1.9.1/gems/avro-1.7.2/lib/avro/ipc.rb:253:in `respond&apos;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;On investigation, I found out that the ruby Responder expects a handshake on every request whereas the Java Requestor just sends a handshake the first time around.&lt;/p&gt;

&lt;p&gt;I quickly hacked up Ruby support for multiple calls on the same connection similar to what the Java code does.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12609727">AVRO-1177</key>
            <summary>IPC interoperability problems with handshake</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mintman">Georg Franz</assignee>
                                    <reporter username="mintman">Georg Franz</reporter>
                        <labels>
                            <label>patch</label>
                    </labels>
                <created>Mon, 1 Oct 2012 08:50:19 +0000</created>
                <updated>Mon, 10 Dec 2012 17:57:38 +0000</updated>
                            <resolved>Wed, 28 Nov 2012 22:47:22 +0000</resolved>
                                    <version>1.7.2</version>
                                    <fixVersion>1.7.3</fixVersion>
                                    <component>ruby</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13470444" author="cutting" created="Fri, 5 Oct 2012 16:46:02 +0000"  >&lt;p&gt;The patch looks reasonable to me (not a Ruby hacker).&lt;/p&gt;

&lt;p&gt;Note that this bug does not exist for http-based RPC, only for socket.  So using HTTP is a workaround.&lt;/p&gt;

&lt;p&gt;It would be good to have a test for this bug.  The share/test/interop/bin/test_rpc_interop.sh currently makes HTTP-based RPC calls between Java, Ruby and Python, but it only makes one call per client and server instantiation.  So we could change the rpcsend and rpcreceive commands in Java, Ruby and Python to accept a parameter naming the number of times the client should send the request and the server should respond before exiting, and the Ruby and Python versions to accept &apos;avro:&quot; uri&apos;s to indicate simple socket connections (Java already does this).  Finally, test_rpc_interop.sh would be changed to pass &apos;2&apos; for this parameter, to test that repeated requests are processed correctly, and to use &quot;avro:&quot; uris in addition to &quot;http:&quot; uris.  Phew!  That&apos;s a fair amount of work.&lt;/p&gt;</comment>
                            <comment id="13470466" author="cutting" created="Fri, 5 Oct 2012 17:07:21 +0000"  >&lt;p&gt;This passes existing tests for me.&lt;/p&gt;

&lt;p&gt;Can someone familiar with Ruby please review it?&lt;/p&gt;

&lt;p&gt;Unless someone objects, I&apos;ll commit this in a few days.&lt;/p&gt;</comment>
                            <comment id="13506007" author="cutting" created="Wed, 28 Nov 2012 22:47:22 +0000"  >&lt;p&gt;I committed this.  Thanks, Georg!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12547200" name="avro_ruby_ipc.diff" size="1937" author="mintman" created="Mon, 1 Oct 2012 08:50:49 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 5 Oct 2012 16:46:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>243913</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 8 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04vev:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26354</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
