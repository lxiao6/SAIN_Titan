<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:16:26 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2011-11-28+AND+created+%3C%3D+2011-12-6+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="10" total="10"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-961] avrocat/avropipe to use stdin when no file specified</title>
                <link>https://issues.apache.org/jira/browse/AVRO-961</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently, when using avrocat or avropipe in a pipe, you have to specify /dev/stdin explicitly.&lt;br/&gt;
It would be nice if it defaulted to /dev/stdin when no file was specified.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Linux x86_64&lt;br/&gt;
avro-c 1.6.1&lt;/p&gt;</environment>
        <key id="12532864">AVRO-961</key>
            <summary>avrocat/avropipe to use stdin when no file specified</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.svg">Trivial</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="mic159">Michael Cooper</reporter>
                        <labels>
                            <label>avro</label>
                            <label>avrocat</label>
                            <label>avropipe</label>
                            <label>c</label>
                    </labels>
                <created>Mon, 28 Nov 2011 06:26:21 +0000</created>
                <updated>Wed, 15 Feb 2012 00:46:30 +0000</updated>
                            <resolved>Tue, 20 Dec 2011 02:13:50 +0000</resolved>
                                    <version>1.6.1</version>
                                    <fixVersion>1.6.2</fixVersion>
                                    <component>c</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13158212" author="mic159" created="Mon, 28 Nov 2011 06:28:34 +0000"  >&lt;p&gt;Here is a patch.&lt;/p&gt;</comment>
                            <comment id="13168640" author="dcreager" created="Tue, 13 Dec 2011 19:28:53 +0000"  >&lt;p&gt;The previous patch won&apos;t work on Windows systems, since there isn&apos;t a /dev/stdin file to open.  This patch updates the I/O reader classes to take in an already-open FILE pointer.  This lets avrocat and avropipe pass in the stdin FILE pointer directly, which should work on just about every system.&lt;/p&gt;</comment>
                            <comment id="13169113" author="mic159" created="Wed, 14 Dec 2011 06:35:27 +0000"  >&lt;p&gt;looks good to me.&lt;/p&gt;

&lt;p&gt;Slight issue: There appears to be spaces instead of tabs in io.c:avro_writer_t_ and io.c:_avro_reader_file_t&lt;/p&gt;</comment>
                            <comment id="13172850" author="dcreager" created="Tue, 20 Dec 2011 02:07:49 +0000"  >&lt;p&gt;Good catch!  Thanks for that.&lt;/p&gt;</comment>
                            <comment id="13172860" author="dcreager" created="Tue, 20 Dec 2011 02:13:50 +0000"  >&lt;p&gt;Committed to SVN&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12508022" name="0001-AVRO-961.-C-avrocat-pipe-use-stdin-when-no-file-is-s.patch" size="8285" author="dcreager" created="Tue, 20 Dec 2011 02:07:49 +0000"/>
                            <attachment id="12505297" name="avrocat.patch" size="897" author="mic159" created="Mon, 28 Nov 2011 06:29:08 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Dec 2011 19:28:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>218597</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 5 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3jb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80335</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>avrocat avropipe avro-c</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-962] Avro maven plugin does not support String type override in IDLProtocolMojo.java</title>
                <link>https://issues.apache.org/jira/browse/AVRO-962</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;This following line needs to added to IDLProtocolMojo.java&lt;/p&gt;

&lt;p&gt;      SpecificCompiler compiler = new SpecificCompiler(protocol);&lt;br/&gt;
+     compiler.setStringType(StringType.valueOf(stringType));&lt;br/&gt;
      compiler.compileToDestination(null, outputDirectory);&lt;/p&gt;</description>
                <environment></environment>
        <key id="12532934">AVRO-962</key>
            <summary>Avro maven plugin does not support String type override in IDLProtocolMojo.java</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gffletch">George Fletcher</assignee>
                                    <reporter username="gffletch">George Fletcher</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Nov 2011 17:17:42 +0000</created>
                <updated>Wed, 15 Feb 2012 00:46:31 +0000</updated>
                            <resolved>Mon, 5 Dec 2011 23:24:56 +0000</resolved>
                                    <version>1.6.1</version>
                                    <fixVersion>1.6.2</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13159330" author="gffletch" created="Tue, 29 Nov 2011 16:02:47 +0000"  >&lt;p&gt;Added support for specifying the &quot;string type&quot; for IDL files (*.avdl). Two of the IDL files used in the test suite were *.avdl formatted (social.avdl and avroTrace.avdl). This required changes to the test code as the pom.xml for avro-ipc specifies the &quot;string type&quot; as String.&lt;/p&gt;</comment>
                            <comment id="13163166" author="cutting" created="Mon, 5 Dec 2011 23:24:56 +0000"  >&lt;p&gt;I committed this.  Thanks for finding and fixing this problem!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12505499" name="avro-jira-962.patch" size="17439" author="gffletch" created="Tue, 29 Nov 2011 17:11:16 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 5 Dec 2011 23:24:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>218666</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 7 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3jr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80337</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-963] Allow compiler&apos;s template directory to be overridden in Maven plugins</title>
                <link>https://issues.apache.org/jira/browse/AVRO-963</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It is currently not possible to override the location of the velocity templates except via overriding a system property which requires a maven command line option. Allow for the location of the templates to be specified via a configuration parameter in the avro maven plugin.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12532977">AVRO-963</key>
            <summary>Allow compiler&apos;s template directory to be overridden in Maven plugins</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gffletch">George Fletcher</assignee>
                                    <reporter username="gffletch">George Fletcher</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Nov 2011 20:29:54 +0000</created>
                <updated>Thu, 17 May 2012 19:15:27 +0000</updated>
                            <resolved>Mon, 5 Dec 2011 23:35:12 +0000</resolved>
                                    <version>1.6.1</version>
                                    <fixVersion>1.6.2</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13158741" author="gffletch" created="Mon, 28 Nov 2011 20:42:22 +0000"  >&lt;p&gt;It&apos;s pretty straight forward to leverage the SpecificCompiler.java setTemplateDir() method via a configuration parameter. However, this still requires the templates to be part of the java class path. Is that acceptable?&lt;/p&gt;

&lt;p&gt;For example in the *Mojo.java files...&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;/**
*
* Override the &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; location &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the velocity templates
* @parameter
*/
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; templateDir = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;

@Override
&lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void doCompile (...) {
    ...

    SpecificCompiler compiler = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SpecificCompiler(protocol);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.templateDir != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        compiler.setTemplateDir(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.templateDir);
    }
    compiler.setStringType(StringType.valueOf(stringType));
    compiler.compileToDestination(src, outputDirectory);

    ...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13159372" author="gffletch" created="Tue, 29 Nov 2011 17:09:55 +0000"  >&lt;p&gt;Added a &apos;templateDirectory&apos; configuration parameter for the avro-maven-plugin that allows the default template directory to be overridden.&lt;/p&gt;</comment>
                            <comment id="13163174" author="cutting" created="Mon, 5 Dec 2011 23:35:12 +0000"  >&lt;p&gt;I committed this.  Thanks, George!&lt;/p&gt;</comment>
                            <comment id="13168662" author="scott_carey" created="Tue, 13 Dec 2011 19:58:58 +0000"  >&lt;p&gt;This is great!  I&apos;ll be using it soon.&lt;/p&gt;</comment>
                            <comment id="13277944" author="ekohlwey" created="Thu, 17 May 2012 16:32:40 +0000"  >&lt;p&gt;Has anyone tried this? Putting the velocity templates in /src/resources/... doesn&apos;t seem to actually get them on the &lt;b&gt;plugin&lt;/b&gt; classpath. Or perhaps I&apos;m doing something wrong...&lt;/p&gt;</comment>
                            <comment id="13277958" author="ekohlwey" created="Thu, 17 May 2012 16:43:30 +0000"  >&lt;p&gt;*edit- just to clarify, I&apos;m putting the templates in ${project.basedir}/src/main/resources/...&lt;/p&gt;</comment>
                            <comment id="13278114" author="ekohlwey" created="Thu, 17 May 2012 19:15:05 +0000"  >&lt;p&gt;Here&apos;s a better patch with a test included.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12505498" name="avro-jira-963.patch" size="2941" author="gffletch" created="Tue, 29 Nov 2011 17:10:20 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 5 Dec 2011 23:35:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>218709</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 36 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3jz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80338</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-964] Provide clone() method for generated avro-specific objects</title>
                <link>https://issues.apache.org/jira/browse/AVRO-964</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It would be great to provide a generated clone() method for avro-specific objects like it is done for equals(), toString() and hashCode() methods.&lt;br/&gt;
Due to object re-usage in Hadoop, it is often necessary to clone objects because they have to be processed all together after e.g. Reducer input has been read. &lt;/p&gt;

&lt;p&gt;Currently I see two ad-hoc options to deal with it:&lt;br/&gt;
1) Create potentially lots of tedious code to clone objects manually. This method is error-prone, since it&apos;s easy to forget cloning of some fields after schema evolution&lt;br/&gt;
2) Use DatumWriter and DatumReader to serialize/deserialize objects. This method works extremely slow (in my experiments 30-40 times slower than method #1.&lt;/p&gt;

&lt;p&gt;So neither of methods is sufficiently good, on the other hand adding a generated clone() method should be not that complicated.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12533093">AVRO-964</key>
            <summary>Provide clone() method for generated avro-specific objects</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="detonator413">Vyacheslav Zholudev</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Nov 2011 10:12:00 +0000</created>
                <updated>Thu, 1 Dec 2011 15:33:33 +0000</updated>
                                            <version>1.7.0</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13159308" author="jbaldassari" created="Tue, 29 Nov 2011 15:16:59 +0000"  >&lt;p&gt;When you say &lt;em&gt;clone&lt;/em&gt;, are you referring to a shallow copy or a deep copy of the object?  Have you seen &lt;tt&gt;org.apache.avro.generic.GenericData#deepCopy(Schema, Object)&lt;/tt&gt;?  This may do what you need.&lt;/p&gt;</comment>
                            <comment id="13159318" author="detonator413" created="Tue, 29 Nov 2011 15:46:52 +0000"  >&lt;p&gt;I was referring to a deep copy. I haven&apos;t seen such a method, now I see it and that&apos;s better than method #2.&lt;br/&gt;
However, it works 10 to 20 times slower than custom copying (method #1) in my tests. (method #2 works 40-50 times slower)&lt;br/&gt;
I see that the equals() method is implemented also using SpecificData, but would it be feasible to generate custom code for deep copying in order to improve performance?&lt;/p&gt;</comment>
                            <comment id="13159322" author="detonator413" created="Tue, 29 Nov 2011 15:52:58 +0000"  >&lt;p&gt;Oops, equals(), toString() and hashCode() using SpecificData, but you were referring to GenericData and I made some test also with GenericData.&lt;/p&gt;</comment>
                            <comment id="13159363" author="detonator413" created="Tue, 29 Nov 2011 17:00:05 +0000"  >&lt;p&gt;One additional comment: I also can&apos;t cast to a specific avro object since GenericData$Record is returned by deep copy (in my case since the root element is record)&lt;/p&gt;</comment>
                            <comment id="13159411" author="jbaldassari" created="Tue, 29 Nov 2011 18:06:54 +0000"  >&lt;p&gt;In that case there is one other option.  If you have a specific record, and you want to create a deep copy of it, you can use the Avro Builder API.  For example, let&apos;s say you have a specific record of type &lt;tt&gt;MyRecord&lt;/tt&gt; that you want to clone.  You can accomplish that in the following way using the Builder API:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-comment&quot;&gt;// Read in a MyRecord instance or initialize a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; one:
&lt;/span&gt;MyRecord myRecord = ... 

&lt;span class=&quot;code-comment&quot;&gt;// Copy myRecord by creating a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MyRecord.Builder, initializing it with the existing MyRecord instance, and then building it:
&lt;/span&gt;MyRecord myRecordCopy = MyRecord.newBuilder(myRecord).build();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Under the hood the Builder uses &lt;tt&gt;GenericData.deepCopy(Schema, Object)&lt;/tt&gt;, so performance will be similar to your previous tests.  If performance is an issue then you may need to dig into the code and see if there are any ways to make this faster.  I did spend quite some time profiling the Builder code and &lt;tt&gt;GenericData.deepCopy(Schema, Object)&lt;/tt&gt;, and I think most of the easy performance fixes have been implemented.  If I remember correctly, the biggest remaining bottleneck is the Schema.hashCode() method.  Please see &lt;tt&gt;org.apache.avro.specific.TestSpecificRecordBuilder&lt;/tt&gt; in the &lt;tt&gt;avro-ipc&lt;/tt&gt; project for more examples and some basic performance tests that you can run/profile.&lt;/p&gt;

&lt;p&gt;It may be possible to generate a record-specific version of deepCopy for each record type that would be faster than the generic implementation.  I would encourage you to give it a try if you have some time to work on it.&lt;/p&gt;</comment>
                            <comment id="13160055" author="detonator413" created="Wed, 30 Nov 2011 13:53:31 +0000"  >&lt;p&gt;Thanks for information. I would like to give it a try. A record-specific version of deepCopy should be generated into an avro-specific class, right?&lt;br/&gt;
P.S. Performance-wise, we were okayish even with serialization/deserialization &amp;#8211; I kust thought that it would be natural to have a specific deepCopy method generated for each record at least since an avro schema has enough information anyways.  &lt;/p&gt;</comment>
                            <comment id="13160951" author="jbaldassari" created="Thu, 1 Dec 2011 15:33:33 +0000"  >&lt;p&gt;OK, then it sounds like either the serialization/deserialization method or the Builder method will work for you in the short term.  If you want to work on a copy/deepClone method for the generated code, check out the &lt;tt&gt;record.vm&lt;/tt&gt; Velocity template under &lt;tt&gt;lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/classic/&lt;/tt&gt;.  That would definitely need to be updated, and I would imagine that you would also want to add some code to &lt;tt&gt;org.apache.avro.specific.SpecificRecordBase&lt;/tt&gt; and possibly &lt;tt&gt;org.apache.avro.SpecificData&lt;/tt&gt;.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Nov 2011 15:16:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>218821</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 8 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3k7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80339</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-965] Enhance the IDL parser to allow properties for protocols and messages</title>
                <link>https://issues.apache.org/jira/browse/AVRO-965</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Enhance the IDL parser to support arbitrary properties for protocol and message types. This will allow for attaching metadata to a protocol or message and can be used for versioning and in some cases language annotations.&lt;/p&gt;

&lt;p&gt;This was partly discussed as part of JIRA ticket 886&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-886&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-886&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12533187">AVRO-965</key>
            <summary>Enhance the IDL parser to allow properties for protocols and messages</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gffletch">George Fletcher</assignee>
                                    <reporter username="gffletch">George Fletcher</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Nov 2011 20:33:25 +0000</created>
                <updated>Wed, 15 Feb 2012 00:46:29 +0000</updated>
                            <resolved>Fri, 9 Dec 2011 20:41:48 +0000</resolved>
                                    <version>1.6.1</version>
                                    <fixVersion>1.6.2</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13162844" author="gffletch" created="Mon, 5 Dec 2011 15:54:06 +0000"  >&lt;p&gt;So I&apos;ve been working on a patch for this enhancement and have it working for Protocols and mostly working for Messages. However, I&apos;ve run into an issue with the IDL parser. Basically, the IDL parser assumes that any properties (@...) only apply to named schemas. Any help here greatly appreciated.&lt;/p&gt;

&lt;p&gt;Here is the design I&apos;ve been working from for this patch...&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Add the private Property class from Schema.java to Protocol.java&lt;/li&gt;
	&lt;li&gt;Add getProp, addProp, and props methods to both Protocol and Message classes&lt;/li&gt;
	&lt;li&gt;Add the hashcode of the Props set when comparing for equality&lt;/li&gt;
	&lt;li&gt;Parse the json format
	&lt;ul&gt;
		&lt;li&gt;Protocol: find all &quot;textual&quot;, &quot;value&quot; child nodes that are not reserved and add them as properties&lt;/li&gt;
		&lt;li&gt;Message: find all &quot;textual, &quot;value&quot; child nodes that are not reserved and add them as properties. Required changing the constructor to accept a Map&amp;lt;String,String&amp;gt; of properties.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Parse the IDL format
	&lt;ul&gt;
		&lt;li&gt;Protocol: Add all properties other than namespace to the Protocol property set&lt;/li&gt;
		&lt;li&gt;Message: NOT WORKING&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Update tests to work with the above changes&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13163020" author="cutting" created="Mon, 5 Dec 2011 20:32:15 +0000"  >&lt;p&gt;&amp;gt; Add the private Property class from Schema.java to Protocol.java&lt;/p&gt;

&lt;p&gt;I think you mean Props, not Property, is that right?  If so, you might just remove the &apos;private&apos; keyword so it becomes package-private.  I don&apos;t think we need to make this public in the API.&lt;/p&gt;

&lt;p&gt;&amp;gt; Message: NOT WORKING&lt;/p&gt;

&lt;p&gt;In idl.jj, can&apos;t you simply modify MessageDeclaration to collect properties the same way that FieldDeclaration does?&lt;/p&gt;

&lt;p&gt;Other than that it sounds like you have a good plan.&lt;/p&gt;</comment>
                            <comment id="13163813" author="gffletch" created="Tue, 6 Dec 2011 20:36:20 +0000"  >&lt;p&gt;You are correct. I meant Props not Property&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I&apos;ll refactor to just reference Schema.Props in Protocol.java.&lt;/p&gt;

&lt;p&gt;I tried modifying MessageDeclaration like this&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Message MessageDeclaration(Protocol p):
{
  &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; msgDoc;
  &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; name;
  Schema request;
  Schema response;
  &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; oneWay = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
  List&amp;lt;Schema&amp;gt; errorSchemata = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Schema&amp;gt;();
  errorSchemata.add(Protocol.SYSTEM_ERROR);
  Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, JsonNode&amp;gt; props = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, JsonNode&amp;gt;();
  Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; propMap = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;();
}
{
  msgDoc = MessageDocumentation()
  ( SchemaProperty(props) )*
  response = ResultType()
  name = Identifier()
  request = FormalParameters()
  [ &lt;span class=&quot;code-quote&quot;&gt;&quot;oneway&quot;&lt;/span&gt; {oneWay = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;; } | &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt;&quot;&lt;/span&gt; ErrorList(errorSchemata) ]
  &lt;span class=&quot;code-quote&quot;&gt;&quot;;&quot;&lt;/span&gt;
  {
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; key : props.keySet())
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (props.get(key).isTextual()) {    &lt;span class=&quot;code-comment&quot;&gt;// ignore other non-textual
&lt;/span&gt;        propMap.put(key, getTextProp(key, props, token));
      }
    ...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, the issue isn&apos;t in parsing the MessageDeclaration but rather when the parser is processing the NamedSchemaDeclaration. In this case, the NamedSchemaDeclaration matches because of the @propName() construct but then expects the resulting object to be a named schema and not a message declaration. It seems like I&apos;d need to modify NamedSchemaDeclaration but I didn&apos;t want to start down that path as that seems like a bigger change than necessary.&lt;/p&gt;</comment>
                            <comment id="13163820" author="cutting" created="Tue, 6 Dec 2011 20:49:06 +0000"  >&lt;p&gt;The properties might be instead parsed in ProtocolBody.  E.g. that might look something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-quote&quot;&gt;&quot;{&quot;&lt;/span&gt;
    &amp;lt;IMPORT&amp;gt; ... {  .... }
    |
    ( SchemaProperty(props) )*
    ( NamedSchemaDeclaration(props) { ... } | MessageDeclaration(props) {  ... }
&lt;span class=&quot;code-quote&quot;&gt;&quot;}&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Does that make sense?&lt;/p&gt;</comment>
                            <comment id="13163933" author="gffletch" created="Tue, 6 Dec 2011 22:36:45 +0000"  >&lt;p&gt;Yes, let me try that and see how it goes. Thanks!&lt;/p&gt;</comment>
                            <comment id="13164508" author="gffletch" created="Wed, 7 Dec 2011 16:45:17 +0000"  >&lt;p&gt;Initial patch submission. IDL parser changed to support properties on Protocols and Messages.&lt;/p&gt;</comment>
                            <comment id="13164510" author="gffletch" created="Wed, 7 Dec 2011 16:47:14 +0000"  >&lt;p&gt;The attached file has tests for arbitrary properties on Protocols and Messages. All tests are passing.&lt;/p&gt;

&lt;p&gt;Thanks Doug, that suggestion worked!&lt;/p&gt;</comment>
                            <comment id="13164511" author="gffletch" created="Wed, 7 Dec 2011 16:48:01 +0000"  >&lt;p&gt;Initial patch submission.&lt;/p&gt;</comment>
                            <comment id="13164725" author="cutting" created="Wed, 7 Dec 2011 21:32:06 +0000"  >&lt;p&gt;Looks great!  Here&apos;s an updated patch with some minor changes, including:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;wrapped lines that exceeded 80 columns&lt;/li&gt;
	&lt;li&gt;deprecate rather than remove old Protocol#addMessage signature so that this change is back-compatible.&lt;/li&gt;
	&lt;li&gt;factor props.clear() in idl.jj&lt;/li&gt;
	&lt;li&gt;update idl documentation&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If there are no objections I&apos;ll commit this version soon.&lt;/p&gt;</comment>
                            <comment id="13166539" author="cutting" created="Fri, 9 Dec 2011 20:41:49 +0000"  >&lt;p&gt;I committed this.  Thanks, George!&lt;/p&gt;</comment>
                            <comment id="13167319" author="gffletch" created="Mon, 12 Dec 2011 02:47:13 +0000"  >&lt;p&gt;Thanks so much Doug!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12506519" name="AVRO-965.patch" size="18937" author="cutting" created="Wed, 7 Dec 2011 21:32:06 +0000"/>
                            <attachment id="12506482" name="avro-jira-965.patch" size="20833" author="gffletch" created="Wed, 7 Dec 2011 16:45:16 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 5 Dec 2011 20:32:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>218915</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 7 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3kf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80340</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-966] Bug in GenericData#resolveUnion when resolving union of null and array</title>
                <link>https://issues.apache.org/jira/browse/AVRO-966</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I have a simple avro schema from which I generate an avro specific object:&lt;br/&gt;
{{&lt;br/&gt;
{&quot;type&quot;: &quot;record&quot;,&lt;br/&gt;
  &quot;name&quot;: &quot;org.company.Test&quot;,&lt;br/&gt;
  &quot;fields&quot;: [&lt;br/&gt;
    { &quot;name&quot;: &quot;arr&quot;,&quot;type&quot;: [&quot;null&quot;, &lt;/p&gt;
{&quot;type&quot;: &quot;array&quot;,&quot;items&quot;: &quot;float&quot; }
&lt;p&gt;], &quot;default&quot;: null }&lt;br/&gt;
  ]&lt;br/&gt;
}&lt;br/&gt;
}}&lt;br/&gt;
Then a simple piece of code to reproduce a bug:&lt;br/&gt;
{{&lt;br/&gt;
  Test test = new Test();&lt;br/&gt;
  List&amp;lt;Float&amp;gt; list = new ArrayList&amp;lt;Float&amp;gt;();&lt;br/&gt;
  list.add(1.1f);&lt;br/&gt;
  list.add(2.2f);&lt;br/&gt;
  test.setArr(list);&lt;/p&gt;


&lt;p&gt;  DataFileWriter&amp;lt;Test&amp;gt; myWriter = new DataFileWriter&amp;lt;Test&amp;gt;(new ReflectDatumWriter(test.getSchema()));&lt;br/&gt;
  File f = new File(&quot;/tmp/test.avro&quot;);&lt;br/&gt;
  myWriter.create(test.getSchema(), f);&lt;br/&gt;
  myWriter.append(test);&lt;br/&gt;
  myWriter.close();&lt;br/&gt;
}}&lt;/p&gt;

&lt;p&gt;I get an exception:&lt;br/&gt;
{{&lt;br/&gt;
Exception in thread &quot;main&quot; org.apache.avro.file.DataFileWriter$AppendWriteException: org.apache.avro.UnresolvedUnionException: Not in union [&quot;null&quot;,&lt;/p&gt;
{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:&quot;float&quot;}
&lt;p&gt;]: &lt;span class=&quot;error&quot;&gt;&amp;#91;1.1, 2.2&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.avro.file.DataFileWriter.append(DataFileWriter.java:261)&lt;br/&gt;
        &amp;lt;my code&amp;gt;&lt;br/&gt;
Caused by: org.apache.avro.UnresolvedUnionException: Not in union [&quot;null&quot;,&lt;/p&gt;
{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:&quot;float&quot;}
&lt;p&gt;]: &lt;span class=&quot;error&quot;&gt;&amp;#91;1.1, 2.2&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.avro.generic.GenericData.resolveUnion(GenericData.java:549)&lt;br/&gt;
	at org.apache.avro.generic.GenericDatumWriter.resolveUnion(GenericDatumWriter.java:137)&lt;br/&gt;
	at org.apache.avro.generic.GenericDatumWriter.write(GenericDatumWriter.java:70)&lt;br/&gt;
	at org.apache.avro.reflect.ReflectDatumWriter.write(ReflectDatumWriter.java:102)&lt;br/&gt;
	at org.apache.avro.generic.GenericDatumWriter.writeRecord(GenericDatumWriter.java:105)&lt;br/&gt;
	at org.apache.avro.generic.GenericDatumWriter.write(GenericDatumWriter.java:65)&lt;br/&gt;
	at org.apache.avro.reflect.ReflectDatumWriter.write(ReflectDatumWriter.java:102)&lt;br/&gt;
	at org.apache.avro.generic.GenericDatumWriter.write(GenericDatumWriter.java:57)&lt;br/&gt;
	at org.apache.avro.file.DataFileWriter.append(DataFileWriter.java:255)&lt;br/&gt;
}}&lt;/p&gt;

&lt;p&gt;My investigation showed that in &lt;tt&gt;GenericData#resolveUnion&lt;/tt&gt; method &lt;tt&gt;getSchemaName()&lt;/tt&gt; is called. And the latter method when checks whether &lt;tt&gt;datum&lt;/tt&gt; is a record, succeeds. Why it happens boils down to the fact that in &lt;tt&gt;ReflectData#createSchema&lt;/tt&gt; an &quot;if&quot;-body under case &lt;tt&gt;(type instanceof ParameterizedType)&lt;/tt&gt; is not executed.&lt;/p&gt;

&lt;p&gt;I can supply more details if needed. Or explain in a clear way if I didn&apos;t manage to.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12533284">AVRO-966</key>
            <summary>Bug in GenericData#resolveUnion when resolving union of null and array</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="detonator413">Vyacheslav Zholudev</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 Nov 2011 13:26:33 +0000</created>
                <updated>Wed, 15 Feb 2012 00:46:24 +0000</updated>
                            <resolved>Wed, 7 Dec 2011 23:16:27 +0000</resolved>
                                    <version>1.6.1</version>
                                    <fixVersion>1.6.2</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13163755" author="cutting" created="Tue, 6 Dec 2011 19:17:01 +0000"  >&lt;p&gt;Here&apos;s a patch that should fix this.&lt;/p&gt;</comment>
                            <comment id="13163756" author="cutting" created="Tue, 6 Dec 2011 19:17:47 +0000"  >&lt;p&gt;Unless there are objections I will commit this soon.&lt;/p&gt;</comment>
                            <comment id="13164272" author="detonator413" created="Wed, 7 Dec 2011 10:35:17 +0000"  >&lt;p&gt;It still fails for bytes. I attached a patch with an added unit test.&lt;br/&gt;
I propose to change an order of checking in GenericData.getSchemaName(...). Thus isArray() and isBytes() will be executed only once unlike the case when a check would be done in isRecord(). On the downside, isRecord() method would return incorrect values for some schemata. In this case it would be good to create a unit test that breaks. &lt;/p&gt;</comment>
                            <comment id="13164679" author="cutting" created="Wed, 7 Dec 2011 20:27:37 +0000"  >&lt;p&gt;I would rather make isRecord() correct, as it may be used elsewhere.  Also, when folks have very large unions, where the performance of getSchemaName() is most critical, they usually have lots of records, since only a single instance of any unnamed type is allowed in a union, while many records are permitted, so I&apos;d rather not move the record test down in GenericData#resolveUnion().&lt;/p&gt;

&lt;p&gt;Here&apos;s a version that fixes ReflectData#isRecord() for ByteBuffer by fixing getSchema(), so that performance is not affected.  I also improved the fix for arrays to only check for Collection, since that&apos;s the only case that creates problems for getSchema(), and throw an exception in getSchema() if a Collection is passed to better detect such problems in the future.&lt;/p&gt;

&lt;p&gt;I&apos;ll commit this version, okay?&lt;/p&gt;</comment>
                            <comment id="13164684" author="detonator413" created="Wed, 7 Dec 2011 20:40:17 +0000"  >&lt;p&gt;Sounds convincing. Thanks for the patch!&lt;/p&gt;</comment>
                            <comment id="13164826" author="cutting" created="Wed, 7 Dec 2011 23:16:27 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                            <comment id="13169214" author="himanshu.mishra" created="Wed, 14 Dec 2011 09:00:53 +0000"  >&lt;p&gt;It fails in case of a &quot;map&quot; too&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12506425" name="AVRO-966-2.patch" size="2347" author="detonator413" created="Wed, 7 Dec 2011 10:35:17 +0000"/>
                            <attachment id="12506508" name="AVRO-966.patch" size="1854" author="cutting" created="Wed, 7 Dec 2011 20:27:37 +0000"/>
                            <attachment id="12506293" name="AVRO-966.patch" size="1340" author="cutting" created="Tue, 6 Dec 2011 19:17:00 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 6 Dec 2011 19:17:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>219012</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 6 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3kn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80341</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-967] Bug in GenericData#resolveUnion when resolving union of null and array</title>
                <link>https://issues.apache.org/jira/browse/AVRO-967</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I have a simple avro schema from which I generate an avro specific object:&lt;br/&gt;
{{&lt;br/&gt;
{&quot;type&quot;: &quot;record&quot;,&lt;br/&gt;
  &quot;name&quot;: &quot;org.company.Test&quot;,&lt;br/&gt;
  &quot;fields&quot;: [&lt;br/&gt;
    { &quot;name&quot;: &quot;arr&quot;,&quot;type&quot;: [&quot;null&quot;, &lt;/p&gt;
{&quot;type&quot;: &quot;array&quot;,&quot;items&quot;: &quot;float&quot; }
&lt;p&gt;], &quot;default&quot;: null }&lt;br/&gt;
  ]&lt;br/&gt;
}&lt;br/&gt;
}}&lt;br/&gt;
Then a simple piece of code to reproduce a bug:&lt;br/&gt;
{{&lt;br/&gt;
  Test test = new Test();&lt;br/&gt;
  List&amp;lt;Float&amp;gt; list = new ArrayList&amp;lt;Float&amp;gt;();&lt;br/&gt;
  list.add(1.1f);&lt;br/&gt;
  list.add(2.2f);&lt;br/&gt;
  test.setArr(list);&lt;/p&gt;


&lt;p&gt;  DataFileWriter&amp;lt;Test&amp;gt; myWriter = new DataFileWriter&amp;lt;Test&amp;gt;(new ReflectDatumWriter(test.getSchema()));&lt;br/&gt;
  File f = new File(&quot;/tmp/test.avro&quot;);&lt;br/&gt;
  myWriter.create(test.getSchema(), f);&lt;br/&gt;
  myWriter.append(test);&lt;br/&gt;
  myWriter.close();&lt;br/&gt;
}}&lt;/p&gt;

&lt;p&gt;I get an exception:&lt;br/&gt;
{{&lt;br/&gt;
Exception in thread &quot;main&quot; org.apache.avro.file.DataFileWriter$AppendWriteException: org.apache.avro.UnresolvedUnionException: Not in union [&quot;null&quot;,&lt;/p&gt;
{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:&quot;float&quot;}
&lt;p&gt;]: &lt;span class=&quot;error&quot;&gt;&amp;#91;1.1, 2.2&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.avro.file.DataFileWriter.append(DataFileWriter.java:261)&lt;br/&gt;
        &amp;lt;my code&amp;gt;&lt;br/&gt;
Caused by: org.apache.avro.UnresolvedUnionException: Not in union [&quot;null&quot;,&lt;/p&gt;
{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:&quot;float&quot;}
&lt;p&gt;]: &lt;span class=&quot;error&quot;&gt;&amp;#91;1.1, 2.2&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.apache.avro.generic.GenericData.resolveUnion(GenericData.java:549)&lt;br/&gt;
	at org.apache.avro.generic.GenericDatumWriter.resolveUnion(GenericDatumWriter.java:137)&lt;br/&gt;
	at org.apache.avro.generic.GenericDatumWriter.write(GenericDatumWriter.java:70)&lt;br/&gt;
	at org.apache.avro.reflect.ReflectDatumWriter.write(ReflectDatumWriter.java:102)&lt;br/&gt;
	at org.apache.avro.generic.GenericDatumWriter.writeRecord(GenericDatumWriter.java:105)&lt;br/&gt;
	at org.apache.avro.generic.GenericDatumWriter.write(GenericDatumWriter.java:65)&lt;br/&gt;
	at org.apache.avro.reflect.ReflectDatumWriter.write(ReflectDatumWriter.java:102)&lt;br/&gt;
	at org.apache.avro.generic.GenericDatumWriter.write(GenericDatumWriter.java:57)&lt;br/&gt;
	at org.apache.avro.file.DataFileWriter.append(DataFileWriter.java:255)&lt;br/&gt;
}}&lt;/p&gt;

&lt;p&gt;My investigation showed that in &lt;tt&gt;GenericData#resolveUnion&lt;/tt&gt; method &lt;tt&gt;getSchemaName()&lt;/tt&gt; is called. And the latter method when checks whether &lt;tt&gt;datum&lt;/tt&gt; is a record, succeeds. Why it happens boils down to the fact that in &lt;tt&gt;ReflectData#createSchema&lt;/tt&gt; an &quot;if&quot;-body under case &lt;tt&gt;(type instanceof ParameterizedType)&lt;/tt&gt; is not executed.&lt;/p&gt;

&lt;p&gt;I can supply more details if needed. Or explain in a clear way if I didn&apos;t manage to.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12533285">AVRO-967</key>
            <summary>Bug in GenericData#resolveUnion when resolving union of null and array</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="detonator413">Vyacheslav Zholudev</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 Nov 2011 13:26:34 +0000</created>
                <updated>Wed, 15 Feb 2012 00:49:23 +0000</updated>
                            <resolved>Wed, 30 Nov 2011 13:38:34 +0000</resolved>
                                    <version>1.6.1</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13160048" author="detonator413" created="Wed, 30 Nov 2011 13:38:34 +0000"  >&lt;p&gt;Don&apos;t know how this duplicate was create, but it is of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-966&quot; title=&quot;Bug in GenericData#resolveUnion when resolving union of null and array&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-966&quot;&gt;&lt;del&gt;AVRO-966&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>219013</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 8 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3kv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80342</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-968] Avro C - avro_value_cmp_fast() may return garbage value for AVRO_STRING comparison</title>
                <link>https://issues.apache.org/jira/browse/AVRO-968</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Compiler shows a warning that variables may be used uninitialized in avro_value_cmp_fast():&lt;/p&gt;

&lt;p&gt;/home/user/avro-trunk/lang/c/src/value.c: In function &apos;avro_value_cmp_fast&apos;:&lt;br/&gt;
/home/user/avro-trunk/lang/c/src/value.c:387:13: warning: &apos;size2&apos; may be used uninitialized in this function &lt;span class=&quot;error&quot;&gt;&amp;#91;-Wuninitialized&amp;#93;&lt;/span&gt;&lt;br/&gt;
/home/user/avro-trunk/lang/c/src/value.c:387:13: warning: &apos;size1&apos; may be used uninitialized in this function &lt;span class=&quot;error&quot;&gt;&amp;#91;-Wuninitialized&amp;#93;&lt;/span&gt;&lt;br/&gt;
/home/user/avro-trunk/lang/c/src/value.c:388:11: warning: &apos;buf1&apos; may be used uninitialized in this function &lt;span class=&quot;error&quot;&gt;&amp;#91;-Wuninitialized&amp;#93;&lt;/span&gt;&lt;br/&gt;
/home/user/avro-trunk/lang/c/src/value.c:388:11: warning: &apos;buf2&apos; may be used uninitialized in this function &lt;span class=&quot;error&quot;&gt;&amp;#91;-Wuninitialized&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Examining the file shows that the warnings are real, and the variables size1, buf1, size2, buf2 should be loaded before they are used. The simple fix is to copy matching code from the function avro_value_equal_fast(). I will attach that code in an upcoming patch. &lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Vivek&lt;/p&gt;</description>
                <environment>&lt;p&gt;All. Currently using gcc 4.6.1 on Ubuntu 11.10.&lt;/p&gt;</environment>
        <key id="12533567">AVRO-968</key>
            <summary>Avro C - avro_value_cmp_fast() may return garbage value for AVRO_STRING comparison</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dcreager">Douglas Creager</assignee>
                                    <reporter username="vnadkarni">Vivek Nadkarni</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Dec 2011 02:51:49 +0000</created>
                <updated>Wed, 15 Feb 2012 00:46:32 +0000</updated>
                            <resolved>Tue, 24 Jan 2012 14:07:52 +0000</resolved>
                                    <version>1.6.1</version>
                    <version>1.6.2</version>
                    <version>1.7.0</version>
                                    <fixVersion>1.6.2</fixVersion>
                    <fixVersion>1.7.0</fixVersion>
                                    <component>c</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="86400">24h</timeoriginalestimate>
                            <timeestimate seconds="86400">24h</timeestimate>
                                        <comments>
                            <comment id="13161381" author="vnadkarni" created="Fri, 2 Dec 2011 02:57:18 +0000"  >&lt;p&gt;Patch to fix &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-968&quot; title=&quot;Avro C - avro_value_cmp_fast() may return garbage value for AVRO_STRING comparison&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-968&quot;&gt;&lt;del&gt;AVRO-968&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13161382" author="vnadkarni" created="Fri, 2 Dec 2011 02:58:49 +0000"  >&lt;p&gt;This patch fixes the warnings in the compile. &lt;/p&gt;</comment>
                            <comment id="13161386" author="vnadkarni" created="Fri, 2 Dec 2011 03:01:07 +0000"  >&lt;p&gt;On a related note, I see significant duplicated code in avro_value_equal_fast() and avro_value_cmp_fast(). Couldn&apos;t avro_value_equal_fast() be rewritten more simply as&lt;/p&gt;

&lt;p&gt;int avro_value_equal_fast( avro_value_t *val1, avro_value_t *val2)&lt;br/&gt;
{&lt;br/&gt;
    return ( avro_value_cmp_fast( val1, val2 ) == 0 );&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Vivek&lt;/p&gt;</comment>
                            <comment id="13168621" author="dcreager" created="Tue, 13 Dec 2011 19:05:36 +0000"  >&lt;p&gt;Here&apos;s an updated version that includes a test case.&lt;/p&gt;</comment>
                            <comment id="13168656" author="dcreager" created="Tue, 13 Dec 2011 19:52:43 +0000"  >&lt;p&gt;Also, there is a difference between _cmp and _equal.  You can&apos;t do an arbitrary comparison of map values using _cmp or _cmp_fast, since the spec doesn&apos;t define a sort order for them.  But you can compare them for equality, by checking that the set of keys is identical, and that each key maps to equal values.&lt;/p&gt;

&lt;p&gt;That said, there&apos;s still some refactoring that we could do there.&lt;/p&gt;</comment>
                            <comment id="13191626" author="cutting" created="Mon, 23 Jan 2012 23:37:42 +0000"  >&lt;p&gt;This issue can be resolved as fixed, right?&lt;/p&gt;</comment>
                            <comment id="13191680" author="vnadkarni" created="Tue, 24 Jan 2012 00:24:50 +0000"  >&lt;p&gt;Yes you can mark this issue resolved as fixed, once the updated patch that Douglas Creager provided is committed to Subversion.&lt;/p&gt;</comment>
                            <comment id="13192163" author="dcreager" created="Tue, 24 Jan 2012 14:07:52 +0000"  >&lt;p&gt;Yeah, I committed the patch a few weeks ago.  Wasn&apos;t sure if we needed to discuss the refactoring that you suggested.  We can open up another issue for that if we choose to do that.  Closing!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12507223" name="0001-AVRO-968.-C-Fixed-avro_value_cmp-on-string-values.patch" size="5931" author="dcreager" created="Tue, 13 Dec 2011 19:05:36 +0000"/>
                            <attachment id="12505846" name="AVRO-968.patch" size="473" author="vnadkarni" created="Fri, 2 Dec 2011 02:57:18 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Dec 2011 19:05:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>219295</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3l3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80343</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fix uninitialized variable warning in value.c, by initializing the variables properly. </customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-969] Make possible usage of SpecificDatumWriter in avro-mapred</title>
                <link>https://issues.apache.org/jira/browse/AVRO-969</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I realized that ReflectDatumWriter is always used when running mapred job (in AvroOutputFormat.java). Sometimes it leads to bugs like in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-966&quot; title=&quot;Bug in GenericData#resolveUnion when resolving union of null and array&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-966&quot;&gt;&lt;del&gt;AVRO-966&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
Why not just provide a property like &lt;tt&gt;WRITER_IS_REFLECT = &quot;avro.map.writer.is.reflect&quot;;&lt;/tt&gt; to make a decision which DatumWriter should be used. &lt;br/&gt;
I created a small patch to solve this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;avro-mapred.patch&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Index: lang/java/mapred/src/main/java/org/apache/avro/mapred/AvroJob.java
===================================================================
--- lang/java/mapred/src/main/java/org/apache/avro/mapred/AvroJob.java  (revision 1209417)
+++ lang/java/mapred/src/main/java/org/apache/avro/mapred/AvroJob.java  (revision )
@@ -53,6 +53,8 @@
   &lt;span class=&quot;code-comment&quot;&gt;/** The configuration key &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; reflection-based map output representation. */&lt;/span&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; MAP_OUTPUT_IS_REFLECT = &lt;span class=&quot;code-quote&quot;&gt;&quot;avro.map.output.is.reflect&quot;&lt;/span&gt;;
 
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; WRITER_IS_REFLECT = &lt;span class=&quot;code-quote&quot;&gt;&quot;avro.map.writer.is.reflect&quot;&lt;/span&gt;;
+
   &lt;span class=&quot;code-comment&quot;&gt;/** Configure a job&apos;s map input schema. */&lt;/span&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void setInputSchema(JobConf job, Schema s) {
     job.set(INPUT_SCHEMA, s.toString());
Index: lang/java/mapred/src/main/java/org/apache/avro/mapred/AvroOutputFormat.java
===================================================================
--- lang/java/mapred/src/main/java/org/apache/avro/mapred/AvroOutputFormat.java (revision 1209417)
+++ lang/java/mapred/src/main/java/org/apache/avro/mapred/AvroOutputFormat.java (revision )
@@ -23,6 +23,7 @@
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.Map;
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.net.URLDecoder;
 
+&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.specific.SpecificDatumWriter;
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.NullWritable;
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.FileSystem;
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.Path;
@@ -102,8 +103,9 @@
       ? AvroJob.getMapOutputSchema(job)
       : AvroJob.getOutputSchema(job);
 
-    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; DataFileWriter&amp;lt;T&amp;gt; writer =
-      &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DataFileWriter&amp;lt;T&amp;gt;(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReflectDatumWriter&amp;lt;T&amp;gt;());
+    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; DataFileWriter&amp;lt;T&amp;gt; writer = job.getBoolean(AvroJob.WRITER_IS_REFLECT, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;) ?
+      &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DataFileWriter&amp;lt;T&amp;gt;(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReflectDatumWriter&amp;lt;T&amp;gt;()) :
+      &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DataFileWriter&amp;lt;T&amp;gt;(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SpecificDatumWriter&amp;lt;T&amp;gt;());
     
     configureDataFileWriter(writer, job);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Does it make sense? &lt;/p&gt;</description>
                <environment></environment>
        <key id="12533602">AVRO-969</key>
            <summary>Make possible usage of SpecificDatumWriter in avro-mapred</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="detonator413">Vyacheslav Zholudev</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Dec 2011 11:53:41 +0000</created>
                <updated>Tue, 6 Dec 2011 19:51:04 +0000</updated>
                                            <version>1.6.1</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13161577" author="detonator413" created="Fri, 2 Dec 2011 12:38:09 +0000"  >&lt;p&gt;Now that TestReflectJob test passes:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;Bar.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Index: lang/java/mapred/src/main/java/org/apache/avro/mapred/AvroJob.java
===================================================================
--- lang/java/mapred/src/main/java/org/apache/avro/mapred/AvroJob.java	(revision 1209417)
+++ lang/java/mapred/src/main/java/org/apache/avro/mapred/AvroJob.java	(revision )
@@ -53,6 +53,8 @@
   &lt;span class=&quot;code-comment&quot;&gt;/** The configuration key &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; reflection-based map output representation. */&lt;/span&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; MAP_OUTPUT_IS_REFLECT = &lt;span class=&quot;code-quote&quot;&gt;&quot;avro.map.output.is.reflect&quot;&lt;/span&gt;;
 
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; WRITER_IS_REFLECT = &lt;span class=&quot;code-quote&quot;&gt;&quot;avro.map.writer.is.reflect&quot;&lt;/span&gt;;
+
   &lt;span class=&quot;code-comment&quot;&gt;/** Configure a job&apos;s map input schema. */&lt;/span&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void setInputSchema(JobConf job, Schema s) {
     job.set(INPUT_SCHEMA, s.toString());
@@ -117,6 +119,7 @@
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void setReflect(JobConf job) {
     setInputReflect(job);
     setMapOutputReflect(job);
+    setWriterReflect(job);
   }
   
   &lt;span class=&quot;code-comment&quot;&gt;/** Indicate that a job&apos;s input data should use reflect representation.*/&lt;/span&gt;
@@ -129,6 +132,10 @@
     job.setBoolean(MAP_OUTPUT_IS_REFLECT, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
   }
 
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void setWriterReflect(JobConf job) {
+    job.setBoolean(WRITER_IS_REFLECT, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
+  }
+
   &lt;span class=&quot;code-comment&quot;&gt;/** Return a job&apos;s output key schema. */&lt;/span&gt;
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; Schema getOutputSchema(Configuration job) {
     &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; Schema.parse(job.get(OUTPUT_SCHEMA));
Index: lang/java/mapred/src/main/java/org/apache/avro/mapred/AvroOutputFormat.java
===================================================================
--- lang/java/mapred/src/main/java/org/apache/avro/mapred/AvroOutputFormat.java	(revision 1209417)
+++ lang/java/mapred/src/main/java/org/apache/avro/mapred/AvroOutputFormat.java	(revision )
@@ -23,6 +23,7 @@
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.Map;
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.net.URLDecoder;
 
+&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.specific.SpecificDatumWriter;
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.NullWritable;
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.FileSystem;
 &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.Path;
@@ -102,8 +103,9 @@
       ? AvroJob.getMapOutputSchema(job)
       : AvroJob.getOutputSchema(job);
 
-    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; DataFileWriter&amp;lt;T&amp;gt; writer =
-      &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DataFileWriter&amp;lt;T&amp;gt;(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReflectDatumWriter&amp;lt;T&amp;gt;());
+    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; DataFileWriter&amp;lt;T&amp;gt; writer = job.getBoolean(AvroJob.WRITER_IS_REFLECT, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;) ?
+      &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DataFileWriter&amp;lt;T&amp;gt;(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReflectDatumWriter&amp;lt;T&amp;gt;()) :
+      &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DataFileWriter&amp;lt;T&amp;gt;(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SpecificDatumWriter&amp;lt;T&amp;gt;());
     
     configureDataFileWriter(writer, job);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13163006" author="cutting" created="Mon, 5 Dec 2011 20:22:58 +0000"  >&lt;p&gt;ReflectDatumWriter should be able to correctly write a superset of the types that SpecificDatumWriter can write, so this property should not be needed.  That said, it might be good to be able to override the DatumWriter and/or DatumReader classes used by Avro&apos;s mapred API.  This might permit, e.g., ThriftDatumWriter to be used.  So the patch that might be best is to switch to using an &quot;avro.input.datumReader&quot;, &quot;avro.map_output.datumWriter&quot;, and avro.output.datumWriter&quot; properties that name classes whose constructor accepts a schema parameter.&lt;/p&gt;</comment>
                            <comment id="13163727" author="detonator413" created="Tue, 6 Dec 2011 18:25:01 +0000"  >&lt;p&gt;Yes, it should, but it does not for me (see &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-966&quot; title=&quot;Bug in GenericData#resolveUnion when resolving union of null and array&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-966&quot;&gt;&lt;del&gt;AVRO-966&lt;/del&gt;&lt;/a&gt;) - can somebody confirm that it is a bug or my misusage of avro specific objects? &lt;br/&gt;
Also I thought that using SpecificDatumWriter rather than ReflectDatumWriter might be more efficient for specific objects since generated methods can be used instead of reflection.&lt;/p&gt;</comment>
                            <comment id="13163776" author="cutting" created="Tue, 6 Dec 2011 19:51:04 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-966&quot; title=&quot;Bug in GenericData#resolveUnion when resolving union of null and array&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-966&quot;&gt;&lt;del&gt;AVRO-966&lt;/del&gt;&lt;/a&gt; is a bug.  I supplied a patch there.&lt;/p&gt;

&lt;p&gt;SpecificDatumWriter might be a bit more efficient.  Reflection is not in general used for specific objects though, even when ReflectDatumReader is used.  Rather ReflectDatumReader detects the specific object and uses SpecificDatumReader, but that detection adds a small cost.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 5 Dec 2011 20:22:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>219330</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 7 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3lb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80344</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-970] (Java) Allow users to implement their own Codecs</title>
                <link>https://issues.apache.org/jira/browse/AVRO-970</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently the base class for all codecs (Codec) is not public which makes it&lt;br/&gt;
impossible to write own codecs.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12533640">AVRO-970</key>
            <summary>(Java) Allow users to implement their own Codecs</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="syshex">Rui Pereira</assignee>
                                    <reporter username="nimmervoll">Peter Nimmervoll</reporter>
                        <labels>
                            <label>codec</label>
                    </labels>
                <created>Fri, 2 Dec 2011 15:24:56 +0000</created>
                <updated>Wed, 27 Feb 2013 00:54:02 +0000</updated>
                            <resolved>Fri, 18 Jan 2013 21:16:37 +0000</resolved>
                                    <version>1.7.3</version>
                                    <fixVersion>1.7.4</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13163140" author="cutting" created="Mon, 5 Dec 2011 23:00:59 +0000"  >&lt;p&gt;I think this was kept private originally out of concern that the API might not be stable.  But CodecFactory is public, so it doesn&apos;t make much sense for Codec to be private.  I&apos;m +1 for making this change.  Would you like to provide a patch?  Should we add a test that implements a Codec in a different package, perhaps one that just performs a bitwise-NOT of the data?&lt;/p&gt;</comment>
                            <comment id="13509380" author="syshex" created="Tue, 4 Dec 2012 00:38:48 +0000"  >&lt;p&gt;Performed modifications as specified in the previous comment. Had to modify the three implementations of Codec in order to allow extend and override of new method signatures. Added JUnit test and Custom codec implementation in test subpackage.&lt;/p&gt;

&lt;p&gt;Hope everything is fine, please review patch.&lt;/p&gt;</comment>
                            <comment id="13537419" author="cutting" created="Thu, 20 Dec 2012 22:00:01 +0000"  >&lt;p&gt;We ought to remove the javadoc comment in Codec.java that states it&apos;s an internal API.  Other than that this looks good to me.&lt;/p&gt;

&lt;p&gt;Unless someone objects, I&apos;ll commit this soon.&lt;/p&gt;</comment>
                            <comment id="13538113" author="syshex" created="Fri, 21 Dec 2012 14:58:56 +0000"  >&lt;p&gt;Same as before but without the javadoc comment in Codec.java that stated it&apos;s an internal API&lt;/p&gt;</comment>
                            <comment id="13557614" author="cutting" created="Fri, 18 Jan 2013 21:16:37 +0000"  >&lt;p&gt;I committed this.  Thanks, Rui!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12555863" name="AVRO-970.patch" size="9855" author="syshex" created="Tue, 4 Dec 2012 00:39:37 +0000"/>
                            <attachment id="12562086" name="AVRO-970.patch1" size="9931" author="syshex" created="Fri, 21 Dec 2012 14:58:56 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 5 Dec 2011 23:00:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>219367</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 1 week, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3lj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80345</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Made Codec public in order to allow custom implementations.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
