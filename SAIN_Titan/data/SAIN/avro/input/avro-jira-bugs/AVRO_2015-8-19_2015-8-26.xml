<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:22:16 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2015-8-19+AND+created+%3C%3D+2015-8-26+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="3" total="3"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1719] Avro fails to build against Boost 1.59.0</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1719</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Avro fails to build on OS X with Boost 1.59.0, dying on errors about undeclared BOOST_ identifiers.&lt;/p&gt;

&lt;p&gt;Build logs are here: &lt;a href=&quot;https://gist.github.com/anonymous/03736608223d42f45ab1#file-02-make-L180&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gist.github.com/anonymous/03736608223d42f45ab1#file-02-make-L180&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Homebrew is tracking packages which fail to build against Boost 1.59.0 at &lt;a href=&quot;https://github.com/Homebrew/homebrew/pull/42960&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Homebrew/homebrew/pull/42960&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12857106">AVRO-1719</key>
            <summary>Avro fails to build against Boost 1.59.0</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="Romain-Geissler-1A">Romain Geissler</assignee>
                                    <reporter username="tdsmith">Tim Smith</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Aug 2015 04:21:42 +0000</created>
                <updated>Fri, 13 Oct 2017 00:53:12 +0000</updated>
                            <resolved>Sun, 4 Sep 2016 00:04:23 +0000</resolved>
                                    <version>1.7.7</version>
                                    <fixVersion>1.7.8</fixVersion>
                    <fixVersion>1.8.2</fixVersion>
                                    <component>build</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="14703321" author="tdsmith" created="Wed, 19 Aug 2015 16:42:53 +0000"  >&lt;p&gt;BOOST_MESSAGE and BOOST_CHECKPOINT were deprecated in 1.35: &lt;a href=&quot;http://www.boost.org/doc/libs/1_35_0/libs/test/doc/components/test_tools/reference/deprecated.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.boost.org/doc/libs/1_35_0/libs/test/doc/components/test_tools/reference/deprecated.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14723990" author="githubbot" created="Mon, 31 Aug 2015 20:33:06 +0000"  >&lt;p&gt;GitHub user Romain-Geissler-1A opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/51&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/51&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1719&quot; title=&quot;Avro fails to build against Boost 1.59.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1719&quot;&gt;&lt;del&gt;AVRO-1719&lt;/del&gt;&lt;/a&gt; Fix test when using Boost &amp;gt;= 1.59.&lt;/p&gt;

&lt;p&gt;    JIRA reference: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1719&quot; title=&quot;Avro fails to build against Boost 1.59.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1719&quot;&gt;&lt;del&gt;AVRO-1719&lt;/del&gt;&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1719&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1719&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Hi&lt;/p&gt;

&lt;p&gt;    BOOST_CHECKPOINT and BOOST_MESSAGE have been deprecated for years, and have been removed in Boost 1.59. BOOST_TEST_CHECKPOINT and BOOST_TEST_MESSAGE should be used instead.&lt;/p&gt;

&lt;p&gt;    I used branch 1.7 as the merge branch since that&apos;s branch we are using in my company, but seeing your history you are about to release 1.8.0. This patch applies fine on this branch as well.&lt;/p&gt;

&lt;p&gt;    Ok for merge ?&lt;/p&gt;

&lt;p&gt;    Cheers,&lt;br/&gt;
    Romain&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/Romain-Geissler-1A/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/Romain-Geissler-1A/avro&lt;/a&gt; bugfix/boost-test-1.59&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/51.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/51.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #51&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 640321ff3f19a8b2f42c55606d7c9d84c948c241&lt;br/&gt;
Author: Romain Geissler &amp;lt;romain.geissler@amadeus.com&amp;gt;&lt;br/&gt;
Date:   2015-08-31T20:27:17Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1719&quot; title=&quot;Avro fails to build against Boost 1.59.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1719&quot;&gt;&lt;del&gt;AVRO-1719&lt;/del&gt;&lt;/a&gt; Fix test when using Boost &amp;gt;= 1.59.&lt;/p&gt;

&lt;p&gt;    BOOST_CHECKPOINT and BOOST_MESSAGE have been deprecated for years,&lt;br/&gt;
    BOOST_TEST_CHECKPOINT and BOOST_TEST_MESSAGE should be used instead.&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="14724909" author="romain-geissler-1a" created="Tue, 1 Sep 2015 07:39:03 +0000"  >&lt;p&gt;Hi Avro maintainers,&lt;/p&gt;

&lt;p&gt;I have just the pull request &lt;a href=&quot;https://github.com/apache/avro/pull/51&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/51&lt;/a&gt; to fix this compilation issue with recent Boost.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Romain&lt;/p&gt;</comment>
                            <comment id="14725448" author="thiru_mg" created="Tue, 1 Sep 2015 14:07:00 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Looks good to me.&lt;/p&gt;</comment>
                            <comment id="15362480" author="busbey" created="Tue, 5 Jul 2016 13:25:45 +0000"  >&lt;p&gt;I&apos;ve just escalated this to blocker for 1.8.2. It would be helpful if one of the C++ maintainers can confirm that I&apos;m correct that this is safe to include in maintenance releases.&lt;/p&gt;</comment>
                            <comment id="15461913" author="jira-bot" created="Sun, 4 Sep 2016 00:01:49 +0000"  >&lt;p&gt;Commit 749934f3cd13c413e293815e7f64848a688a6e60 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Romain-Geissler-1A&quot; class=&quot;user-hover&quot; rel=&quot;Romain-Geissler-1A&quot;&gt;Romain Geissler&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=749934f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=749934f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1719&quot; title=&quot;Avro fails to build against Boost 1.59.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1719&quot;&gt;&lt;del&gt;AVRO-1719&lt;/del&gt;&lt;/a&gt;: C++: Fix tests with Boost &amp;gt;= 1.59.&lt;/p&gt;

&lt;p&gt;BOOST_CHECKPOINT and BOOST_MESSAGE have been deprecated for years,&lt;br/&gt;
BOOST_TEST_CHECKPOINT and BOOST_TEST_MESSAGE should be used instead.&lt;/p&gt;</comment>
                            <comment id="15461915" author="rdblue" created="Sun, 4 Sep 2016 00:02:45 +0000"  >&lt;p&gt;I committed this. It should be safe because it only affects test code.&lt;/p&gt;</comment>
                            <comment id="15462601" author="githubbot" created="Sun, 4 Sep 2016 09:09:22 +0000"  >&lt;p&gt;Github user Romain-Geissler-1A closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/51&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/51&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="16202883" author="jira-bot" created="Fri, 13 Oct 2017 00:53:12 +0000"  >&lt;p&gt;Commit 402888c48d67dade7dae8a69e5f62ddfcfd59474 in avro&apos;s branch refs/heads/branch-1.7 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Romain-Geissler-1A&quot; class=&quot;user-hover&quot; rel=&quot;Romain-Geissler-1A&quot;&gt;Romain Geissler&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=402888c&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=402888c&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1719&quot; title=&quot;Avro fails to build against Boost 1.59.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1719&quot;&gt;&lt;del&gt;AVRO-1719&lt;/del&gt;&lt;/a&gt;: C++: Fix tests with Boost &amp;gt;= 1.59.&lt;/p&gt;

&lt;p&gt;BOOST_CHECKPOINT and BOOST_MESSAGE have been deprecated for years,&lt;br/&gt;
BOOST_TEST_CHECKPOINT and BOOST_TEST_MESSAGE should be used instead.&lt;/p&gt;

&lt;p&gt;(cherry picked from commit 749934f3cd13c413e293815e7f64848a688a6e60)&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12990761">AVRO-1885</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 31 Aug 2015 20:33:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_12311020" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>External issue URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[https://github.com/Homebrew/homebrew/pull/42960]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 14 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2j33r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1720] Add an avro-tool to count records in an avro file</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1720</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;If you&apos;re dealing with bigger avro files (&amp;gt;100MB) it would be nice to have a way to quickly count the amount of records contained within that file.&lt;/p&gt;

&lt;p&gt;With the current state of avro-tools the only way to achieve this (to my current knowledge) is to dump the data to json and count the amount of records. For bigger files this might take a while due to the serialization overhead and since every record needs to be looked at.&lt;/p&gt;

&lt;p&gt;I added a new tool which is optimized for counting records, it does not serialize the records and reads only the block count for each block.&lt;/p&gt;

&lt;div class=&quot;panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;Naive benchmark&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;panelContent&quot;&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;# the input file had a size of ~300MB
$ du -sh sample.avro 
323M    sample.avro

# using the new count tool
$ time java -jar avro-tools.jar count sample.avro
331439

real    0m4.670s
user    0m6.167s
sys 0m0.513s

# the current way of counting records
$ time java -jar avro-tools.jar tojson sample.avro | wc
331439 54904484 1838231743

real    0m52.760s
user    1m42.317s
sys 0m3.209s

# the overhead of wc is rather minor
$ time java -jar avro-tools.jar tojson sample.avro &amp;gt; /dev/null

real    0m47.834s
user    0m53.317s
sys 0m1.194s
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This tool uses the HDFS API to handle files from any supported filesystem. I added the unit tests to the already existing TestDataFileTools since it provided convenient utility functions which I could reuse for my test scenarios.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12858275">AVRO-1720</key>
            <summary>Add an avro-tool to count records in an avro file</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jwoschitz">Janosch Woschitz</reporter>
                        <labels>
                            <label>starter</label>
                    </labels>
                <created>Mon, 24 Aug 2015 11:54:30 +0000</created>
                <updated>Fri, 21 Jul 2017 10:50:07 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>4</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="14709807" author="busbey" created="Mon, 24 Aug 2015 18:30:11 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;+      &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+        &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (streamReader.nextBlock() != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
+          count += streamReader.getBlockCount();
+        }
+      } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (NoSuchElementException e) {
+        &lt;span class=&quot;code-comment&quot;&gt;// no op
&lt;/span&gt;+      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;what throws this?&lt;/p&gt;</comment>
                            <comment id="14710008" author="jwoschitz" created="Mon, 24 Aug 2015 20:32:55 +0000"  >&lt;p&gt;This exception gets thrown within &lt;a href=&quot;https://github.com/apache/avro/blob/eb31746cd5efd5e2c9c57780a651afaccd5cfe06/lang/java/avro/src/main/java/org/apache/avro/file/DataFileStream.java#L243&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;DataFileStream:nextBlock&lt;/a&gt;. It is the actual abort condition for this while loop.&lt;br/&gt;
The loop could be expressed as well like this:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;      try {
        while (true) {
          streamReader.nextBlock()
          count += streamReader.getBlockCount();
        }
      } catch (NoSuchElementException e) {
        // no op
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The exception gets always thrown if the filestream reaches the end of a file. The DataFileStream class contains also the method &quot;hasNextBlock&quot; which does not throw an exception (returns boolean instead) but unfortunately this method is only exposed on package level (in org.apache.avro.file).&lt;/p&gt;

&lt;p&gt;I did not want to change the visibility of DataFileStream methods for this tool therefore I used this workaround.&lt;/p&gt;</comment>
                            <comment id="14710990" author="nielsbasjes" created="Tue, 25 Aug 2015 09:30:26 +0000"  >&lt;p&gt;I had a quick look and the &apos;nextBlock&apos; starts with &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ByteBuffer nextBlock() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!hasNext())
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; NoSuchElementException();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So effectively your code now uses &lt;tt&gt;hasNext&lt;/tt&gt; which is public and you could rewrite this as a simple &lt;tt&gt;while (hasNext())&lt;/tt&gt;.&lt;br/&gt;
Yet I also see that the &lt;tt&gt;hasNext&lt;/tt&gt; calls &lt;tt&gt;block.decompressUsing(codec);&lt;/tt&gt; which (looking at the rest of the surrounding code) seems like a needless operation to simply obtain the number of records.&lt;br/&gt;
At this point (without trying it out) it seems to me that making the hasNextBlock() public would seem logical to me (because the nextBlock() is already public) and may possibly lead to some additional performance (no more decompressing) when only counting the records.&lt;/p&gt;</comment>
                            <comment id="14711019" author="jwoschitz" created="Tue, 25 Aug 2015 09:52:12 +0000"  >&lt;p&gt;Hi Niels, &lt;/p&gt;

&lt;p&gt;I think as well it would be good to make &lt;tt&gt;hasNextBlock&lt;/tt&gt; public, I was not aware of the potential performance improvement though. I will add a separate patch which includes this change as well.&lt;/p&gt;

&lt;p&gt;Unfortunately just &lt;tt&gt;while (hasNext())&lt;/tt&gt; is not sufficient enough since the &lt;tt&gt;nextBlock&lt;/tt&gt; method also contains the logic to skip over to next block immediately. It just calls &lt;tt&gt;hasNext&lt;/tt&gt; as sanity check.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ByteBuffer nextBlock() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!hasNext())
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; NoSuchElementException();
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (blockRemaining != blockCount)
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Not at block start.&quot;&lt;/span&gt;);
    blockRemaining = 0; &lt;span class=&quot;code-comment&quot;&gt;// &amp;lt;- skip to next block
&lt;/span&gt;    datumIn = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;; 
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; blockBuffer;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14711047" author="nielsbasjes" created="Tue, 25 Aug 2015 10:20:06 +0000"  >&lt;p&gt;Ok, apparently this is more complex than it seems.&lt;/p&gt;

&lt;p&gt;Please make sure the unit test includes the situation where there is at least a &apos;second block&apos; in the test file.&lt;br/&gt;
The current test file you (re)used seems to only have 10 records in a single block.&lt;/p&gt;</comment>
                            <comment id="14711208" author="jwoschitz" created="Tue, 25 Aug 2015 12:51:38 +0000"  >&lt;p&gt;I tried to change the visibility of the &lt;tt&gt;hasNextBlock&lt;/tt&gt; method but unfortunately this was not sufficient enough since the DataFileStream does not provide a real iterator functionality for blocks. &lt;/p&gt;

&lt;p&gt;The &lt;tt&gt;nextBlock&lt;/tt&gt; method just forwards to the next block but does not initializes it.&lt;/p&gt;

&lt;p&gt;The loop would have looked like this:&lt;br/&gt;
&lt;tt&gt;code&lt;/tt&gt;&lt;br/&gt;
    count += streamReader.getBlockCount();&lt;br/&gt;
    while (streamReader.hasNext() &amp;amp;&amp;amp; streamReader.hasNextBlock()) &lt;/p&gt;
{
      streamReader.nextBlock();
      count += streamReader.getBlockCount();
    }
&lt;p&gt;&lt;tt&gt;code&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;Therefore I decided against exposing &lt;tt&gt;hasNextBlock&lt;/tt&gt; method as public and left the code of the counter tool like it was before but I added an explanatory comment and an additional unit test which covers the scenario with multiple blocks.&lt;/p&gt;

&lt;p&gt;The alternative would be a bigger refactoring of DataFileStream and the classes which are already using the public &lt;tt&gt;nextBlock&lt;/tt&gt; method. I refrained from doing that since I think this does not fit the scope of this ticket.&lt;/p&gt;</comment>
                            <comment id="14723296" author="jwoschitz" created="Mon, 31 Aug 2015 10:57:57 +0000"  >&lt;p&gt;Maybe it got lost in my last message: I incorporated your proposed changes and uploaded a new patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1720&quot; title=&quot;Add an avro-tool to count records in an avro file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1720&quot;&gt;AVRO-1720&lt;/a&gt;-with-extended-unittests.patch).&lt;/p&gt;

&lt;p&gt;It would be great if you could take a look upon this and decide how to proceed.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="15496800" author="cutting" created="Fri, 16 Sep 2016 16:52:10 +0000"  >&lt;p&gt;The need for an improved nextBlock() API is also mentioned in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1917&quot; title=&quot;DataFileStream Skips Blocks with hasNext and nextBlock calls&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1917&quot;&gt;AVRO-1917&lt;/a&gt;.  Maybe we should commit this tool as-is, then separately work on improving that API?  This issue would then help to test back-compatibility of an API improvement.  Once the API is improved, we can update this tool to take advantage of that.&lt;/p&gt;</comment>
                            <comment id="16096128" author="jwoschitz" created="Fri, 21 Jul 2017 10:50:07 +0000"  >&lt;p&gt;Just as a follow-up since there seems to be not much progress on this ticket: for the moment I made a separate binary available which allows efficient and convenient counting of records contained in a single avro file or in a folder containing several avro files.&lt;/p&gt;

&lt;p&gt;The binaries, documentation and source are available here: &lt;a href=&quot;https://github.com/jwoschitz/avrocount&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/jwoschitz/avrocount&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This project tries to fill this gap (at least) until a similar functionality is provided by avro-tools. Over time there were also several improvements to this project in comparison to the original patch.&lt;/p&gt;

&lt;p&gt;It would be great if these improvements would also find a way back into the Apache Avro project in the longterm. Until then this project can be used in addition to the currently existing avro-tools.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="13005183">AVRO-1917</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12752230" name="AVRO-1720-with-extended-unittests.patch" size="7153" author="jwoschitz" created="Tue, 25 Aug 2015 12:51:38 +0000"/>
                            <attachment id="12752001" name="AVRO-1720.patch" size="4697" author="jwoschitz" created="Mon, 24 Aug 2015 11:57:21 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 Aug 2015 18:30:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 26 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2ja67:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1721] Should LogicalTypes introduce schema (in)compatibility and canonical parsing form changes?</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1721</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;During a recent spike of integrating LogcialTypes into our Avro&lt;br/&gt;
wrapper we encountered the the following questions.&lt;/p&gt;

&lt;p&gt;1. Is the addition/removal of a logical to a schema element a backward&lt;br/&gt;
breaking change?&lt;br/&gt;
2. Should the canonical parsing form include logical type information?&lt;/p&gt;

&lt;p&gt;I understand that the underlying base Avro types are not changing with&lt;br/&gt;
the introduction of LogicalTypes. The raw serialized data will be the&lt;br/&gt;
same. However the client code dependent on the deserialization may be&lt;br/&gt;
subject to breakage.&lt;/p&gt;

&lt;p&gt;Let me elaborate on these.&lt;/p&gt;

&lt;p&gt;1. Is the addition/removal of a logical to a schema element a backward&lt;br/&gt;
breaking change?&lt;/p&gt;

&lt;p&gt;Take for example the UUID logical type. At least in the case of&lt;br/&gt;
GenericData, if I change a schema element from a string to a UUID and&lt;br/&gt;
I have Converters turned on, existing client code that is expecting a&lt;br/&gt;
String to be returned will now have a runtime exception when an&lt;br/&gt;
instance of UUID is suddenly returned.&lt;/p&gt;

&lt;p&gt;From the client&apos;s perspective I&apos;ve just change the underlying type of&lt;br/&gt;
the element.&lt;/p&gt;

&lt;p&gt;2. Should the canonical parsing form (CPF) include logical type information?&lt;/p&gt;

&lt;p&gt;If the answer to #1 is yes, then the CPF should also include the&lt;br/&gt;
logical type information.&lt;/p&gt;

&lt;p&gt;We were wondering if there might be a slightly less strict form of&lt;br/&gt;
schema &quot;normalization&quot; and fingerprinting. Currently the&lt;br/&gt;
fingerprinting process is based on the CPF. It would be interesting to&lt;br/&gt;
introduce the &quot;Normal Parsing Form&quot; (NPF) which retains all the&lt;br/&gt;
optional information contained within a schema, but in a normal or&lt;br/&gt;
regular way. That way a fingerprint could be determined without having&lt;br/&gt;
to script possibly important information, like the LogicalType info.&lt;/p&gt;

&lt;p&gt;Interested in your thoughts on these questions.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12858422">AVRO-1721</key>
            <summary>Should LogicalTypes introduce schema (in)compatibility and canonical parsing form changes?</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="bob.cotton@gmail.com">Bob Cotton</reporter>
                        <labels>
                    </labels>
                <created>Mon, 24 Aug 2015 22:01:51 +0000</created>
                <updated>Fri, 23 Mar 2018 13:14:16 +0000</updated>
                                            <version>1.8.0</version>
                                                    <component>spec</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="14739724" author="rdblue" created="Thu, 10 Sep 2015 22:18:24 +0000"  >&lt;p&gt;Thanks for raising this for discussion! I think the answer to #1 is that it is not a breaking change to add or remove a logical type. I&apos;m basing that on how the specific library currently works: it adds java-class properties that change the in-memory representation, but this isn&apos;t considered part of the canonical parsing form. I think that logical types should work the same way. You can optionally use them and they do have an effect on the objects you get back, but they are just a convenient way to have a better representation.&lt;/p&gt;</comment>
                            <comment id="14739877" author="cutting" created="Thu, 10 Sep 2015 23:56:15 +0000"  >&lt;p&gt;We distinguish between changes that break an implementation versus changes that break binary compatibility between implementations.  We (reluctantly) permit incompatible changes to implementations in minor releases, but would require a major release to break binary compatibility (and might never actually do this).&lt;/p&gt;

&lt;p&gt;Logical types are optional hints to implementations and do not affect the encoding, only the in-memory representation of some implementations.  So incompatible changes to logical type handling might be made in minor releases, but not point (bugfix) releases.&lt;/p&gt;

&lt;p&gt;However the case you mention, adding a UUID logical type to a schema causing a change in the runtime type, doesn&apos;t seem like an incompatibility.  An incompatible change causes an un-altered application to break.  If you alter the schema then that&apos;s a change to the application.  It would be an incompatible change if there were already UUID logical types in use within applications and the runtime behavior were altered to represent them differently.&lt;/p&gt;</comment>
                            <comment id="16180991" author="bigandy" created="Tue, 26 Sep 2017 15:59:06 +0000"  >&lt;p&gt;Hey Ryan, &lt;/p&gt;

&lt;p&gt;I&apos;m not sure we can ignore logical types such as decimal, that contain scale and precision information. If this information changes then the in-memory representation is just plain wrong. e.g. if you serialise &quot;new BigDecimal(&quot;1.2345&quot;)&quot; with scale=4 and then deserialize with a read schema that has a scale of 3, then the result is &quot;new BigDecimal(&quot;12.345&quot;)&quot; i.e. the wrong value! &lt;/p&gt;

&lt;p&gt;So, while I&apos;m not sure at this time what the right approach is, I don&apos;t think we can ignore logical types that store additional state from compatibility and canonicals.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="13147467">AVRO-2164</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="13103040">AVRO-2078</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12843185">AVRO-1695</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12844407">AVRO-1702</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12709140">AVRO-1497</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 10 Sep 2015 22:18:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 16 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2jb2n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
