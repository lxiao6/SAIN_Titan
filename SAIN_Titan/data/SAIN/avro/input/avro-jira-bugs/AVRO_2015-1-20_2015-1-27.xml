<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:21:23 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2015-1-20+AND+created+%3C%3D+2015-1-27+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="3" total="3"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1633] Add additional setXxx(Builder) method to make user code more readable.</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1633</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The currently generated code contains these two methods for the Builder instances (code sample was simplified):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Request.Builder setConnection(NetworkConnection value)
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Request.Builder setConnectionBuilder(NetworkConnection.Builder value)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My proposal: Add in addition the method:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Request.Builder setConnection(NetworkConnection.Builder value)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Advantage:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;You can do &lt;tt&gt;.setConnection(something)&lt;/tt&gt; and pass either a &lt;tt&gt;NetworkConnection&lt;/tt&gt; or a &lt;tt&gt;NetworkConnection.Builder&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;User code becomes a bit more readable.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Disadvantages:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Explicitly setting a &lt;tt&gt;null&lt;/tt&gt; will trigger a &quot;Multiple implementations&quot; error and as such will need an explicit typecast.
	&lt;ul&gt;
		&lt;li&gt;&lt;em&gt;This may be considered breaking backward compatibility!&lt;/em&gt;&lt;br/&gt;
To solve this you must do either this:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;.setConnection((NetworkConnection)&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or this &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;NetworkConnection nc = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
...
.setConnection(nc)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12768631">AVRO-1633</key>
            <summary>Add additional setXxx(Builder) method to make user code more readable.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="nielsbasjes">Niels Basjes</assignee>
                                    <reporter username="nielsbasjes">Niels Basjes</reporter>
                        <labels>
                    </labels>
                <created>Tue, 20 Jan 2015 09:51:02 +0000</created>
                <updated>Mon, 1 Feb 2016 14:46:02 +0000</updated>
                            <resolved>Tue, 18 Aug 2015 11:50:45 +0000</resolved>
                                    <version>1.8.0</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="14283647" author="nielsbasjes" created="Tue, 20 Jan 2015 09:52:20 +0000"  >&lt;p&gt;The patch that implements the proposal.&lt;/p&gt;</comment>
                            <comment id="14283654" author="nielsbasjes" created="Tue, 20 Jan 2015 10:00:47 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;,&lt;br/&gt;
Please classify this as either &lt;em&gt;wanted&lt;/em&gt; or &lt;em&gt;unwanted&lt;/em&gt; because of this backward compatibility point when setting a &apos;null&apos; directly.&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                            <comment id="14286318" author="cutting" created="Wed, 21 Jan 2015 21:35:39 +0000"  >&lt;p&gt;I don&apos;t see the advantage of this overloading.  The builder is a different type than the instance: builders and instances cannot be used interchangeably, so I see no advantage to the API making them appear interchangeable.&lt;/p&gt;</comment>
                            <comment id="14521500" author="nielsbasjes" created="Thu, 30 Apr 2015 13:38:59 +0000"  >&lt;p&gt;For me having such polymorphism in the API makes the API easier to use and increases code readability.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12693275" name="AVRO-1633-2015-01-20-v1.patch" size="1200" author="nielsbasjes" created="Tue, 20 Jan 2015 09:52:20 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 21 Jan 2015 21:35:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 38 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i24jzb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1634] Clear all fields / Reset all fields to default value on Record template</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1634</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;As a developer, &lt;br/&gt;
it would be nice to have a feature, API which will expose the functionality of clearing all fields on Record or set them to default value if the attribute has default value, so that the consumers do not have to write custom methods for the use case described before.&lt;/p&gt;

&lt;p&gt;Also when a Builder pattern is used for creating Objects from Record, builders can be re-used, thus reducing heap memory usage.&lt;/p&gt;

&lt;p&gt;Discussion around same topic can be found in &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/avro-user/201501.mbox/%3CCALEq1Z8M8m1JH=tuiAkTjJUteqBGh-FQTB0uPP4hu_PKsc-QAg@mail.gmail.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;archives &lt;/a&gt;&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12768737">AVRO-1634</key>
            <summary>Clear all fields / Reset all fields to default value on Record template</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="maulik.gandhi">Maulik Gandhi</reporter>
                        <labels>
                    </labels>
                <created>Tue, 20 Jan 2015 18:34:15 +0000</created>
                <updated>Tue, 20 Jan 2015 18:38:51 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="14284178" author="maulik.gandhi" created="Tue, 20 Jan 2015 18:38:51 +0000"  >&lt;ul&gt;
	&lt;li&gt;I was thinking of making a change in Velocity template: &lt;a href=&quot;https://github.com/apache/avro/blob/branch-1.7/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/classic/record.vm&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Record &lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;I will post a patch, once I have things working on.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i24kmf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1635] C++ schema aware encoders throw tr1::bad_weak_ptr exception for recursive schema</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1635</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Encoding an object with a recursive schema fails when using a jsonEncoder or a validatingEncoder. Here is an example:&lt;/p&gt;

&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;terminate called after throwing an instance of &apos;boost::exception_detail::clone_impl&amp;lt;boost::exception_detail::error_info_injector&amp;lt;boost::bad_weak_ptr&amp;gt; &amp;gt;&apos;
  what():  tr1::bad_weak_ptr
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;container.json&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{
  &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;Container&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;doc&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;Container to demonstrate the weak_ptr exception.&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [{
    &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;field&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: {
      &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&quot;&lt;/span&gt;,
      &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
      &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [{
        &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;value&quot;&lt;/span&gt;,
        &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: [
          &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;,
          {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;map&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;values&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&quot;&lt;/span&gt;}
        ]
      }]
    }
  }]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;example.cc&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;#include &amp;lt;fstream&amp;gt;

#include &amp;lt;avro/&lt;span class=&quot;code-object&quot;&gt;Compiler&lt;/span&gt;.hh&amp;gt;
#include &amp;lt;avro/Encoder.hh&amp;gt;
#include &amp;lt;avro/Stream.hh&amp;gt;
#include &amp;lt;avro/ValidSchema.hh&amp;gt;

#include &lt;span class=&quot;code-quote&quot;&gt;&quot;container.hh&quot;&lt;/span&gt;

&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;
main()
{
    std::ifstream ifs(&lt;span class=&quot;code-quote&quot;&gt;&quot;container.json&quot;&lt;/span&gt;);
    avro::ValidSchema schema;
    avro::compileJsonSchema(ifs, schema);

    std::auto_ptr&amp;lt;avro::OutputStream&amp;gt; out = avro::memoryOutputStream();

    &lt;span class=&quot;code-comment&quot;&gt;// Either one fails, here we use the jsonEncoder
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// avro::EncoderPtr encoder = avro::jsonEncoder(schema);
&lt;/span&gt;    avro::EncoderPtr encoder = avro::validatingEncoder(schema, avro::binaryEncoder());
    
    &lt;span class=&quot;code-comment&quot;&gt;// An encoder that doesn&apos;t know the schema works fine
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// avro::EncoderPtr encoder = avro::binaryEncoder();
&lt;/span&gt;
    encoder-&amp;gt;init(*out);

    Container container;
    std::map&amp;lt;std::string, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; &amp;gt; object;

    &lt;span class=&quot;code-comment&quot;&gt;// Note that it doesn&lt;span class=&quot;code-quote&quot;&gt;&apos;t fail &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we don&apos;&lt;/span&gt;t insert a value into the map
&lt;/span&gt;    object[&lt;span class=&quot;code-quote&quot;&gt;&quot;a&quot;&lt;/span&gt;].value.set_string(&lt;span class=&quot;code-quote&quot;&gt;&quot;x&quot;&lt;/span&gt;);

    container.field.value.set_map(object);
    avro::encode(*encoder, container);

    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; 0;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment>&lt;p&gt;Ubuntu 12.04, gcc 4.6.4&lt;/p&gt;</environment>
        <key id="12769338">AVRO-1635</key>
            <summary>C++ schema aware encoders throw tr1::bad_weak_ptr exception for recursive schema</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="wmatthews">William Matthews</assignee>
                                    <reporter username="Heye">Heye V&#246;cking</reporter>
                        <labels>
                            <label>avro</label>
                            <label>c++</label>
                            <label>encode</label>
                            <label>recursive</label>
                            <label>schema</label>
                    </labels>
                <created>Thu, 22 Jan 2015 15:39:53 +0000</created>
                <updated>Fri, 28 Dec 2018 16:22:30 +0000</updated>
                            <resolved>Tue, 2 Oct 2018 17:45:03 +0000</resolved>
                                    <version>1.7.7</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>c++</component>
                        <due></due>
                            <votes>3</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="14721910" author="peter_liu" created="Mon, 31 Aug 2015 03:11:24 +0000"  >&lt;p&gt;I can reproduce this, but does Avro support recursive schema? &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdblue&quot; class=&quot;user-hover&quot; rel=&quot;rdblue&quot;&gt;Ryan Blue&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14723220" author="heye" created="Mon, 31 Aug 2015 08:52:24 +0000"  >&lt;p&gt;I think I could use this schema without problems using the Java libraries. However, since we moved away from using avro now, I didn&apos;t investigate further into this.&lt;/p&gt;</comment>
                            <comment id="14723412" author="zolyfarkas" created="Mon, 31 Aug 2015 13:45:02 +0000"  >&lt;p&gt;java has/had an bug with recursive schema&apos;s which I resolved, you might be hitting something similar:&lt;/p&gt;

&lt;p&gt;See details:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1667&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1667&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14731201" author="rdblue" created="Fri, 4 Sep 2015 18:27:21 +0000"  >&lt;p&gt;Yes, recursive schemas are supported.&lt;/p&gt;</comment>
                            <comment id="15308957" author="tupty" created="Wed, 1 Jun 2016 00:27:15 +0000"  >&lt;p&gt;I wanted to provide a data point, since this started biting me.  I am seeing this issue with a recursive schema on Ubuntu 14.04, g++4.8.4 with Avro 1.8.0 when using the jsonEncoder, but I have &lt;b&gt;not&lt;/b&gt; been seeing it with a validatingEncoder.&lt;/p&gt;</comment>
                            <comment id="16407081" author="githubbot" created="Tue, 20 Mar 2018 21:26:25 +0000"  >&lt;p&gt;wmatthews-google opened a new pull request #301: Fix &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1635&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1635&lt;/a&gt;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/301&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/301&lt;/a&gt;&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Use indirect symbols to &quot;own&quot; the production needed for records (so that weak_ptrs have something to point to)&lt;/li&gt;
	&lt;li&gt;Use a stack instead of a counter for the number of items in a repeated symbol&lt;/li&gt;
	&lt;li&gt;A handful of tests.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16416185" author="wmatthews" created="Tue, 27 Mar 2018 20:30:57 +0000"  >&lt;p&gt;Just wanted to follow up here, since there hasn&apos;t been any activity on&#160;&lt;a href=&quot;https://github.com/apache/avro/pull/301&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/301&lt;/a&gt;. Am I missing some steps in the contribution process? (sorry, it&apos;s my first time)&lt;/p&gt;</comment>
                            <comment id="16571131" author="githubbot" created="Tue, 7 Aug 2018 05:35:56 +0000"  >&lt;p&gt;wmatthews-google commented on issue #301: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1635&quot; title=&quot;C++ schema aware encoders throw tr1::bad_weak_ptr exception for recursive schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1635&quot;&gt;&lt;del&gt;AVRO-1635&lt;/del&gt;&lt;/a&gt; C++ schema aware encoders throw tr1::bad_weak_ptr exception for recursive schema&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/301#issuecomment-410938744&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/301#issuecomment-410938744&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Hi! I wanted to follow up on this. I&apos;d be happy to restructure the code if that&apos;d help get this in. Please let me know!&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16635887" author="githubbot" created="Tue, 2 Oct 2018 17:44:19 +0000"  >&lt;p&gt;thiru-apache closed pull request #301: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1635&quot; title=&quot;C++ schema aware encoders throw tr1::bad_weak_ptr exception for recursive schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1635&quot;&gt;&lt;del&gt;AVRO-1635&lt;/del&gt;&lt;/a&gt; C++ schema aware encoders throw tr1::bad_weak_ptr exception for recursive schema&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/301&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/301&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/c+&lt;ins&gt;/impl/parsing/JsonCodec.cc b/lang/c&lt;/ins&gt;+/impl/parsing/JsonCodec.cc&lt;br/&gt;
index ead44cab5..a7663a9e0 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/impl/parsing/JsonCodec.cc&lt;br/&gt;
+++ b/lang/c++/impl/parsing/JsonCodec.cc&lt;br/&gt;
@@ -106,7 +106,7 @@ ProductionPtr JsonGrammarGenerator::doGenerate(const NodePtr&amp;amp; n,&lt;br/&gt;
             reverse(result-&amp;gt;begin(), result-&amp;gt;end());&lt;/p&gt;

&lt;p&gt;             m&lt;span class=&quot;error&quot;&gt;&amp;#91;n&amp;#93;&lt;/span&gt; = result;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return result;&lt;br/&gt;
+            return make_shared&amp;lt;Production&amp;gt;(1, Symbol::indirect(result));&lt;br/&gt;
         }&lt;br/&gt;
     case AVRO_ENUM:
         &lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {@@ -363,6 +363,7 @@ template &amp;lt;typename P&amp;gt; size_t JsonDecoder&amp;lt;P&amp;gt;}&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
	&lt;li&gt;parser_.setRepeatCount(1);&lt;br/&gt;
+    parser_.nextRepeatCount(1);&lt;br/&gt;
     return 1;&lt;br/&gt;
 }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -419,6 +420,7 @@ template &amp;lt;typename P&amp;gt;&lt;br/&gt;
 size_t JsonDecoder&amp;lt;P&amp;gt;::mapStart()&lt;/p&gt;
 {
     parser_.advance(Symbol::sMapStart);
+    parser_.pushRepeatCount(0);
     expect(JsonParser::tkObjectStart);
     return mapNext();
 }
&lt;p&gt;@@ -433,7 +435,7 @@ size_t JsonDecoder&amp;lt;P&amp;gt;::mapNext()&lt;br/&gt;
         parser_.advance(Symbol::sMapEnd);&lt;br/&gt;
         return 0;&lt;br/&gt;
     }&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;parser_.setRepeatCount(1);&lt;br/&gt;
+    parser_.nextRepeatCount(1);&lt;br/&gt;
     return 1;&lt;br/&gt;
 }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -624,6 +626,7 @@ template&amp;lt;typename P, typename F&amp;gt;&lt;br/&gt;
 void JsonEncoder&amp;lt;P, F&amp;gt;::arrayStart()&lt;/p&gt;
 {
     parser_.advance(Symbol::sArrayStart);
+    parser_.pushRepeatCount(0);
     out_.arrayStart();
 }

&lt;p&gt;@@ -639,6 +642,7 @@ template&amp;lt;typename P, typename F&amp;gt;&lt;br/&gt;
 void JsonEncoder&amp;lt;P, F&amp;gt;::mapStart()&lt;/p&gt;
 {
     parser_.advance(Symbol::sMapStart);
+    parser_.pushRepeatCount(0);
     out_.objectStart();
 }

&lt;p&gt;@@ -653,7 +657,7 @@ void JsonEncoder&amp;lt;P, F&amp;gt;::mapEnd()&lt;br/&gt;
 template&amp;lt;typename P, typename F&amp;gt;&lt;br/&gt;
 void JsonEncoder&amp;lt;P, F&amp;gt;::setItemCount(size_t count)&lt;/p&gt;
 {
-    parser_.setRepeatCount(count);
+    parser_.nextRepeatCount(count);
 }

&lt;p&gt; template&amp;lt;typename P, typename F&amp;gt;&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/impl/parsing/ResolvingDecoder.cc b/lang/c&lt;/ins&gt;+/impl/parsing/ResolvingDecoder.cc&lt;br/&gt;
index e0d25edfd..08518d93e 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/impl/parsing/ResolvingDecoder.cc&lt;br/&gt;
+++ b/lang/c++/impl/parsing/ResolvingDecoder.cc&lt;br/&gt;
@@ -327,7 +327,7 @@ ProductionPtr ResolvingGrammarGenerator::doGenerate2(&lt;br/&gt;
                 m&lt;span class=&quot;error&quot;&gt;&amp;#91;key&amp;#93;&lt;/span&gt; = ProductionPtr();&lt;br/&gt;
                 ProductionPtr result = resolveRecords(writer, reader, m, m2);&lt;br/&gt;
                 m&lt;span class=&quot;error&quot;&gt;&amp;#91;key&amp;#93;&lt;/span&gt; = result;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return result;&lt;br/&gt;
+		return make_shared&amp;lt;Production&amp;gt;(1, Symbol::indirect(result));&lt;br/&gt;
             }&lt;br/&gt;
             break;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -636,11 +636,10 @@ size_t ResolvingDecoderImpl&amp;lt;P&amp;gt;::arrayStart()&lt;br/&gt;
 {&lt;br/&gt;
     parser_.advance(Symbol::sArrayStart);&lt;br/&gt;
     size_t result = base_-&amp;gt;arrayStart();&lt;br/&gt;
+    parser_.pushRepeatCount(result);&lt;br/&gt;
     if (result == 0) &lt;/p&gt;
{
         parser_.popRepeater();
         parser_.advance(Symbol::sArrayEnd);
-    }
&lt;p&gt; else &lt;/p&gt;
{
-        parser_.setRepeatCount(result);
     }&lt;br/&gt;
     return result;&lt;br/&gt;
 }&lt;br/&gt;
@@ -650,11 +649,10 @@ size_t ResolvingDecoderImpl&amp;lt;P&amp;gt;::arrayNext()&lt;br/&gt;
 {&lt;br/&gt;
     parser_.processImplicitActions();&lt;br/&gt;
     size_t result = base_-&amp;gt;arrayNext();&lt;br/&gt;
+    parser_.nextRepeatCount(result);&lt;br/&gt;
     if (result == 0) {
         parser_.popRepeater();
         parser_.advance(Symbol::sArrayEnd);
-    } else {-        parser_.setRepeatCount(result);     }
&lt;p&gt;     return result;&lt;br/&gt;
 }&lt;br/&gt;
@@ -667,7 +665,7 @@ size_t ResolvingDecoderImpl&amp;lt;P&amp;gt;::skipArray()&lt;br/&gt;
     if (n == 0) &lt;/p&gt;
{
         parser_.pop();
     } else {
-        parser_.setRepeatCount(n);
+        parser_.pushRepeatCount(n);
         parser_.skip(*base_);
     }&lt;br/&gt;
     parser_.advance(Symbol::sArrayEnd);&lt;br/&gt;
@@ -679,11 +677,10 @@ size_t ResolvingDecoderImpl&amp;lt;P&amp;gt;::mapStart()&lt;br/&gt;
 {&lt;br/&gt;
     parser_.advance(Symbol::sMapStart);&lt;br/&gt;
     size_t result = base_-&amp;gt;mapStart();&lt;br/&gt;
+    parser_.pushRepeatCount(result);&lt;br/&gt;
     if (result == 0) {
         parser_.popRepeater();
         parser_.advance(Symbol::sMapEnd);
-    } else {
-        parser_.setRepeatCount(result);
     }&lt;br/&gt;
     return result;&lt;br/&gt;
 }&lt;br/&gt;
@@ -693,11 +690,10 @@ size_t ResolvingDecoderImpl&amp;lt;P&amp;gt;::mapNext()&lt;br/&gt;
 {&lt;br/&gt;
     parser_.processImplicitActions();&lt;br/&gt;
     size_t result = base_-&amp;gt;mapNext();&lt;br/&gt;
+    parser_.nextRepeatCount(result);&lt;br/&gt;
     if (result == 0) {
         parser_.popRepeater();
         parser_.advance(Symbol::sMapEnd);
-    } else {-        parser_.setRepeatCount(result);     }&lt;br/&gt;
     return result;&lt;br/&gt;
 }&lt;br/&gt;
@@ -710,7 +706,7 @@ size_t ResolvingDecoderImpl&amp;lt;P&amp;gt;::skipMap()&lt;br/&gt;
     if (n == 0) {         parser_.pop();     }
&lt;p&gt; else &lt;/p&gt;
{
-        parser_.setRepeatCount(n);
+        parser_.pushRepeatCount(n);
         parser_.skip(*base_);
     }
&lt;p&gt;     parser_.advance(Symbol::sMapEnd);&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/impl/parsing/Symbol.hh b/lang/c&lt;/ins&gt;+/impl/parsing/Symbol.hh&lt;br/&gt;
index 291175291..33c71f639 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/impl/parsing/Symbol.hh&lt;br/&gt;
+++ b/lang/c++/impl/parsing/Symbol.hh&lt;br/&gt;
@@ -42,7 +42,7 @@ class Symbol;&lt;/p&gt;

&lt;p&gt; typedef std::vector&amp;lt;Symbol&amp;gt; Production;&lt;br/&gt;
 typedef boost::shared_ptr&amp;lt;Production&amp;gt; ProductionPtr;&lt;br/&gt;
-typedef boost::tuple&amp;lt;size_t, bool, ProductionPtr, ProductionPtr&amp;gt; RepeaterInfo;&lt;br/&gt;
+typedef boost::tuple&amp;lt;std::stack&amp;lt;ssize_t&amp;gt;, bool, ProductionPtr, ProductionPtr&amp;gt; RepeaterInfo;&lt;br/&gt;
 typedef boost::tuple&amp;lt;ProductionPtr, ProductionPtr&amp;gt; RootInfo;&lt;/p&gt;

&lt;p&gt; class Symbol {&lt;br/&gt;
@@ -206,15 +206,14 @@ public:&lt;/p&gt;

&lt;p&gt;     static Symbol repeater(const ProductionPtr&amp;amp; p,&lt;br/&gt;
                            bool isArray) &lt;/p&gt;
{
-        size_t s = 0;
-        return Symbol(sRepeater, boost::make_tuple(s, isArray, p, p));
+        return repeater(p, p, isArray);
     }

&lt;p&gt;     static Symbol repeater(const ProductionPtr&amp;amp; read,&lt;br/&gt;
                            const ProductionPtr&amp;amp; skip,&lt;br/&gt;
                            bool isArray) &lt;/p&gt;
{
-        size_t s = 0;
-        return Symbol(sRepeater, boost::make_tuple(s, isArray, read, skip));
+        std::stack&amp;lt;ssize_t&amp;gt; s;
+        return Symbol(sRepeater, RepeaterInfo(s, isArray, read, skip));
     }

&lt;p&gt;     static Symbol defaultStartAction(boost::shared_ptr&amp;lt;std::vector&amp;lt;uint8_t&amp;gt; &amp;gt; bb)&lt;br/&gt;
@@ -425,6 +424,8 @@ public:&lt;br/&gt;
     Symbol::Kind advance(Symbol::Kind k) {&lt;br/&gt;
         for (; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; {&lt;br/&gt;
             Symbol&amp;amp; s = parsingStack.top();&lt;br/&gt;
+//            std::cout &amp;lt;&amp;lt; &quot;advance: &quot; &amp;lt;&amp;lt; Symbol::toString(s.kind())&lt;br/&gt;
+//                      &amp;lt;&amp;lt; &quot; looking for &quot; &amp;lt;&amp;lt; Symbol::toString(k) &amp;lt;&amp;lt; &apos;\n&apos;;&lt;br/&gt;
             if (s.kind() == k) {&lt;br/&gt;
                 parsingStack.pop();&lt;br/&gt;
                 return k;&lt;br/&gt;
@@ -454,7 +455,16 @@ public:&lt;br/&gt;
                 case Symbol::sRepeater:&lt;br/&gt;
                     {&lt;br/&gt;
                         RepeaterInfo *p = s.extrap&amp;lt;RepeaterInfo&amp;gt;();&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;--boost::tuples::get&amp;lt;0&amp;gt;(*p);&lt;br/&gt;
+                        std::stack&amp;lt;ssize_t&amp;gt;&amp;amp; ns = boost::tuples::get&amp;lt;0&amp;gt;(*p);&lt;br/&gt;
+                        if (ns.empty()) 
{
+                            throw Exception(
+                                &quot;Empty item count stack in repeater advance&quot;);
+                        }
&lt;p&gt;+			if (ns.top() == 0) &lt;/p&gt;
{
+                            throw Exception(
+                                &quot;Zero item count in repeater advance&quot;);
+                        }
&lt;p&gt;+                        --ns.top();&lt;br/&gt;
                         append(boost::tuples::get&amp;lt;2&amp;gt;(*p));&lt;br/&gt;
                     }&lt;br/&gt;
                     continue;&lt;br/&gt;
@@ -500,6 +510,7 @@ public:&lt;br/&gt;
         }&lt;br/&gt;
         while (parsingStack.size() &amp;gt;= sz) {&lt;br/&gt;
             Symbol&amp;amp; t = parsingStack.top();&lt;br/&gt;
+	    // std::cout &amp;lt;&amp;lt; &quot;skip: &quot; &amp;lt;&amp;lt; Symbol::toString(t.kind()) &amp;lt;&amp;lt; &apos;\n&apos;;&lt;br/&gt;
             switch (t.kind()) {&lt;br/&gt;
             case Symbol::sNull:&lt;br/&gt;
                 d.decodeNull();&lt;br/&gt;
@@ -529,13 +540,14 @@ public:&lt;br/&gt;
                 {&lt;br/&gt;
                     parsingStack.pop();&lt;br/&gt;
                     size_t n = d.skipArray();&lt;br/&gt;
+		    processImplicitActions();&lt;br/&gt;
                     assertMatch(Symbol::sRepeater, parsingStack.top().kind());&lt;br/&gt;
                     if (n == 0) &lt;/p&gt;
{
                         break;
                     }&lt;br/&gt;
                     Symbol&amp;amp; t = parsingStack.top();&lt;br/&gt;
                     RepeaterInfo *p = t.extrap&amp;lt;RepeaterInfo&amp;gt;();&lt;br/&gt;
-                    boost::tuples::get&amp;lt;0&amp;gt;(*p) = n;&lt;br/&gt;
+                    boost::tuples::get&amp;lt;0&amp;gt;(*p).push&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;br/&gt;
                     continue;&lt;br/&gt;
                 }&lt;br/&gt;
             case Symbol::sArrayEnd:&lt;br/&gt;
@@ -544,13 +556,14 @@ public:&lt;br/&gt;
                 {&lt;br/&gt;
                     parsingStack.pop();&lt;br/&gt;
                     size_t n = d.skipMap();&lt;br/&gt;
+		    processImplicitActions();&lt;br/&gt;
+                    assertMatch(Symbol::sRepeater, parsingStack.top().kind());&lt;br/&gt;
                     if (n == 0) {                         break;                     }&lt;/li&gt;
	&lt;li&gt;assertMatch(Symbol::sRepeater, parsingStack.top().kind());&lt;br/&gt;
                     Symbol&amp;amp; t = parsingStack.top();&lt;br/&gt;
                     RepeaterInfo *p = t.extrap&amp;lt;RepeaterInfo&amp;gt;();&lt;/li&gt;
	&lt;li&gt;boost::tuples::get&amp;lt;0&amp;gt;(*p) = n;&lt;br/&gt;
+                    boost::tuples::get&amp;lt;0&amp;gt;(*p).push&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;br/&gt;
                     continue;&lt;br/&gt;
                 }&lt;br/&gt;
             case Symbol::sMapEnd:&lt;br/&gt;
@@ -576,15 +589,22 @@ public:&lt;br/&gt;
             case Symbol::sRepeater:&lt;br/&gt;
                 {&lt;br/&gt;
                     RepeaterInfo *p = t.extrap&amp;lt;RepeaterInfo&amp;gt;();&lt;/li&gt;
	&lt;li&gt;if (boost::tuples::get&amp;lt;0&amp;gt;(*p) == 0) {&lt;/li&gt;
	&lt;li&gt;boost::tuples::get&amp;lt;0&amp;gt;(*p) =&lt;/li&gt;
	&lt;li&gt;boost::tuples::get&amp;lt;1&amp;gt;(*p) ? d.arrayNext() :&lt;/li&gt;
	&lt;li&gt;d.mapNext();&lt;br/&gt;
+                    std::stack&amp;lt;ssize_t&amp;gt;&amp;amp; ns = boost::tuples::get&amp;lt;0&amp;gt;(*p);&lt;br/&gt;
+                    if (ns.empty()) 
{
+                        throw Exception(
+                            &quot;Empty item count stack in repeater skip&quot;);
+                    }
&lt;p&gt;+                    ssize_t&amp;amp; n = ns.top();&lt;br/&gt;
+                    if (n == 0) &lt;/p&gt;
{
+                        n = boost::tuples::get&amp;lt;1&amp;gt;(*p) ? d.arrayNext()
+                                                      : d.mapNext();
                     }&lt;/li&gt;
	&lt;li&gt;if (boost::tuples::get&amp;lt;0&amp;gt;(*p) != 0) {&lt;/li&gt;
	&lt;li&gt;--boost::tuples::get&amp;lt;0&amp;gt;(*p);&lt;br/&gt;
+                    if (n != 0) 
{
+                        --n;
                         append(boost::tuples::get&amp;lt;3&amp;gt;(*p));
                         continue;
+                    }
&lt;p&gt; else &lt;/p&gt;
{
+                        ns.pop();
                     }
&lt;p&gt;                 }&lt;br/&gt;
                 break;&lt;br/&gt;
@@ -685,23 +705,40 @@ public:&lt;br/&gt;
         return result;&lt;br/&gt;
     }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;void setRepeatCount(size_t n) {&lt;br/&gt;
+    void pushRepeatCount(size_t n) {&lt;br/&gt;
+	processImplicitActions();&lt;br/&gt;
         Symbol&amp;amp; s = parsingStack.top();&lt;br/&gt;
         assertMatch(Symbol::sRepeater, s.kind());&lt;/li&gt;
	&lt;li&gt;size_t&amp;amp; nn = boost::tuples::get&amp;lt;0&amp;gt;(*s.extrap&amp;lt;RepeaterInfo&amp;gt;());&lt;/li&gt;
	&lt;li&gt;if (nn != 0) 
{
-            throw Exception(&quot;Wrong number of items&quot;);
-        }&lt;/li&gt;
	&lt;li&gt;nn = n;&lt;br/&gt;
+	RepeaterInfo *p = s.extrap&amp;lt;RepeaterInfo&amp;gt;();&lt;br/&gt;
+        std::stack&amp;lt;ssize_t&amp;gt; &amp;amp;nn = boost::tuples::get&amp;lt;0&amp;gt;(*p);&lt;br/&gt;
+        nn.push&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
+    void nextRepeatCount(size_t n) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+	processImplicitActions();+        Symbol&amp;amp; s = parsingStack.top();+        assertMatch(Symbol}&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     void popRepeater() {&lt;br/&gt;
         processImplicitActions();&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;const Symbol&amp;amp; s = parsingStack.top();&lt;br/&gt;
+        Symbol&amp;amp; s = parsingStack.top();&lt;br/&gt;
         assertMatch(Symbol::sRepeater, s.kind());&lt;/li&gt;
	&lt;li&gt;if (boost::tuples::get&amp;lt;0&amp;gt;(*s.extrap&amp;lt;RepeaterInfo&amp;gt;()) != 0) {&lt;/li&gt;
	&lt;li&gt;throw Exception(&quot;Incorrect number of items&quot;);&lt;br/&gt;
+	RepeaterInfo *p = s.extrap&amp;lt;RepeaterInfo&amp;gt;();&lt;br/&gt;
+        std::stack&amp;lt;ssize_t&amp;gt; &amp;amp;ns = boost::tuples::get&amp;lt;0&amp;gt;(*p);&lt;br/&gt;
+        if (ns.empty()) 
{
+            throw Exception(&quot;Incorrect number of items (empty)&quot;);
+        }
&lt;p&gt;+        if (ns.top() &amp;gt; 0) &lt;/p&gt;
{
+            throw Exception(&quot;Incorrect number of items (non-zero)&quot;);
         }
&lt;p&gt;+        ns.pop();&lt;br/&gt;
         parsingStack.pop();&lt;br/&gt;
     }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -778,9 +815,9 @@ inline std::ostream&amp;amp; operator&amp;lt;&amp;lt;(std::ostream&amp;amp; os, const Symbol s)&lt;/p&gt;
             {
                 const RepeaterInfo&amp;amp; ri = *s.extrap&amp;lt;RepeaterInfo&amp;gt;();
                 os &amp;lt;&amp;lt; &apos;(&apos; &amp;lt;&amp;lt; Symbol::toString(s.kind())
-                    &amp;lt;&amp;lt; boost::tuples::get&amp;lt;2&amp;gt;(ri)
-                    &amp;lt;&amp;lt; boost::tuples::get&amp;lt;3&amp;gt;(ri)
-                    &amp;lt;&amp;lt; &apos;)&apos;;
+                   &amp;lt;&amp;lt; &apos; &apos; &amp;lt;&amp;lt; *boost::tuples::get&amp;lt;2&amp;gt;(ri)
+                   &amp;lt;&amp;lt; &apos; &apos; &amp;lt;&amp;lt; *boost::tuples::get&amp;lt;3&amp;gt;(ri)
+                   &amp;lt;&amp;lt; &apos;)&apos;;
             }
&lt;p&gt;             break;&lt;br/&gt;
         case Symbol::sIndirect:&lt;br/&gt;
@@ -789,6 +826,25 @@ inline std::ostream&amp;amp; operator&amp;lt;&amp;lt;(std::ostream&amp;amp; os, const Symbol s)&lt;br/&gt;
                 &amp;lt;&amp;lt; *s.extra&amp;lt;boost::shared_ptr&amp;lt;Production&amp;gt; &amp;gt;() &amp;lt;&amp;lt; &apos;)&apos;;&lt;br/&gt;
             }&lt;br/&gt;
             break;&lt;br/&gt;
+        case Symbol::sAlternative:&lt;br/&gt;
+            {&lt;br/&gt;
+                os &amp;lt;&amp;lt; &apos;(&apos; &amp;lt;&amp;lt; Symbol::toString(s.kind());&lt;br/&gt;
+                for (std::vector&amp;lt;ProductionPtr&amp;gt;::const_iterator it =&lt;br/&gt;
+                         s.extrap&amp;lt;std::vector&amp;lt;ProductionPtr&amp;gt; &amp;gt;()-&amp;gt;begin();&lt;br/&gt;
+                     it != s.extrap&amp;lt;std::vector&amp;lt;ProductionPtr&amp;gt; &amp;gt;()-&amp;gt;end();&lt;br/&gt;
+                     ++it) &lt;/p&gt;
{
+                    os &amp;lt;&amp;lt; &apos; &apos; &amp;lt;&amp;lt; **it;
+                }
&lt;p&gt;+                os &amp;lt;&amp;lt; &apos;)&apos;;&lt;br/&gt;
+            }&lt;br/&gt;
+            break;&lt;br/&gt;
+        case Symbol::sSymbolic:&lt;br/&gt;
+            &lt;/p&gt;
{
+              os &amp;lt;&amp;lt; &apos;(&apos; &amp;lt;&amp;lt; Symbol::toString(s.kind())
+                 &amp;lt;&amp;lt; &apos; &apos; &amp;lt;&amp;lt; s.extra&amp;lt;boost::weak_ptr&amp;lt;Production&amp;gt; &amp;gt;().lock()
+                 &amp;lt;&amp;lt; &apos;)&apos;;
+          }
&lt;p&gt;+          break;&lt;br/&gt;
         default:&lt;br/&gt;
             os &amp;lt;&amp;lt; Symbol::toString(s.kind());&lt;br/&gt;
             break;&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/impl/parsing/ValidatingCodec.cc b/lang/c&lt;/ins&gt;+/impl/parsing/ValidatingCodec.cc&lt;br/&gt;
index a401afc6f..eecc393e2 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/impl/parsing/ValidatingCodec.cc&lt;br/&gt;
+++ b/lang/c++/impl/parsing/ValidatingCodec.cc&lt;br/&gt;
@@ -103,7 +103,7 @@ ProductionPtr ValidatingGrammarGenerator::doGenerate(const NodePtr&amp;amp; n,&lt;br/&gt;
             reverse(result-&amp;gt;begin(), result-&amp;gt;end());&lt;/p&gt;

&lt;p&gt;             m&lt;span class=&quot;error&quot;&gt;&amp;#91;n&amp;#93;&lt;/span&gt; = result;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return result;&lt;br/&gt;
+            return make_shared&amp;lt;Production&amp;gt;(1, Symbol::indirect(result));&lt;br/&gt;
         }&lt;br/&gt;
     case AVRO_ENUM:&lt;br/&gt;
         {&lt;br/&gt;
@@ -311,11 +311,10 @@ size_t ValidatingDecoder&amp;lt;P&amp;gt;::arrayStart()
 &lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {     parser.advance(Symbol}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;@@ -341,7 +339,7 @@ size_t ValidatingDecoder&amp;lt;P&amp;gt;::skipArray()&lt;br/&gt;
     if (n == 0) &lt;/p&gt;
{
         parser.pop();
     } else {
-        parser.setRepeatCount(n);
+        parser.pushRepeatCount(n);
         parser.skip(*base);
     }&lt;br/&gt;
     parser.advance(Symbol::sArrayEnd);&lt;br/&gt;
@@ -353,11 +351,10 @@ size_t ValidatingDecoder&amp;lt;P&amp;gt;::mapStart()&lt;br/&gt;
 {&lt;br/&gt;
     parser.advance(Symbol::sMapStart);&lt;br/&gt;
     size_t result = base-&amp;gt;mapStart();&lt;br/&gt;
+    parser.pushRepeatCount(result);&lt;br/&gt;
     if (result == 0) {
         parser.popRepeater();
         parser.advance(Symbol::sMapEnd);
-    } else {
-        parser.setRepeatCount(result);
     }&lt;br/&gt;
     return result;&lt;br/&gt;
 }&lt;br/&gt;
@@ -366,11 +363,10 @@ template &amp;lt;typename P&amp;gt;&lt;br/&gt;
 size_t ValidatingDecoder&amp;lt;P&amp;gt;::mapNext()&lt;br/&gt;
 {&lt;br/&gt;
     size_t result = base-&amp;gt;mapNext();&lt;br/&gt;
+    parser.nextRepeatCount(result);&lt;br/&gt;
     if (result == 0) {
         parser.popRepeater();
         parser.advance(Symbol::sMapEnd);
-    } else {-        parser.setRepeatCount(result);     }&lt;br/&gt;
     return result;&lt;br/&gt;
 }&lt;br/&gt;
@@ -383,7 +379,7 @@ size_t ValidatingDecoder&amp;lt;P&amp;gt;::skipMap()&lt;br/&gt;
     if (n == 0) {         parser.pop();     }
&lt;p&gt; else &lt;/p&gt;
{
-        parser.setRepeatCount(n);
+        parser.pushRepeatCount(n);
         parser.skip(*base);
     }
&lt;p&gt;     parser.advance(Symbol::sMapEnd);&lt;br/&gt;
@@ -518,6 +514,7 @@ template&amp;lt;typename P&amp;gt;&lt;br/&gt;
 void ValidatingEncoder&amp;lt;P&amp;gt;::arrayStart()&lt;/p&gt;
 {
     parser_.advance(Symbol::sArrayStart);
+    parser_.pushRepeatCount(0);
     base_-&amp;gt;arrayStart();
 }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -533,6 +530,7 @@ template&amp;lt;typename P&amp;gt;&lt;br/&gt;
 void ValidatingEncoder&amp;lt;P&amp;gt;::mapStart()&lt;/p&gt;
 {
     parser_.advance(Symbol::sMapStart);
+    parser_.pushRepeatCount(0);
     base_-&amp;gt;mapStart();
 }

&lt;p&gt;@@ -547,7 +545,7 @@ void ValidatingEncoder&amp;lt;P&amp;gt;::mapEnd()&lt;br/&gt;
 template&amp;lt;typename P&amp;gt;&lt;br/&gt;
 void ValidatingEncoder&amp;lt;P&amp;gt;::setItemCount(size_t count)&lt;/p&gt;
 {
-    parser_.setRepeatCount(count);
+    parser_.nextRepeatCount(count);
     base_-&amp;gt;setItemCount(count);
 }

&lt;p&gt;diff --git a/lang/c+&lt;ins&gt;/test/CodecTests.cc b/lang/c&lt;/ins&gt;+/test/CodecTests.cc&lt;br/&gt;
index f8bbe84d0..e49881e5f 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/test/CodecTests.cc&lt;br/&gt;
+++ b/lang/c++/test/CodecTests.cc&lt;br/&gt;
@@ -1070,6 +1070,64 @@ static const TestData data[] = {&lt;br/&gt;
       &quot;&lt;/p&gt;
{\&quot;name\&quot;:\&quot;car\&quot;, \&quot;type\&quot;:\&quot;Lisp\&quot;}
&lt;p&gt;,&quot;&lt;br/&gt;
       &quot;&lt;/p&gt;
{\&quot;name\&quot;:\&quot;cdr\&quot;, \&quot;type\&quot;:\&quot;Lisp\&quot;}
&lt;p&gt;]}]}]}&quot;,&lt;br/&gt;
       &quot;U2U1S10U0N&quot;, 1},&lt;br/&gt;
+    { &quot;{&quot;  // &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1635&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1635&lt;/a&gt;&lt;br/&gt;
+      &quot;  \&quot;name\&quot;: \&quot;Container\&quot;,&quot;&lt;br/&gt;
+      &quot;  \&quot;type\&quot;: \&quot;record\&quot;,&quot;&lt;br/&gt;
+      &quot;  \&quot;fields\&quot;: [{&quot;&lt;br/&gt;
+      &quot;    \&quot;name\&quot;: \&quot;field\&quot;,&quot;&lt;br/&gt;
+      &quot;    \&quot;type\&quot;: {&quot;&lt;br/&gt;
+      &quot;      \&quot;name\&quot;: \&quot;Object\&quot;,&quot;&lt;br/&gt;
+      &quot;      \&quot;type\&quot;: \&quot;record\&quot;,&quot;&lt;br/&gt;
+      &quot;      \&quot;fields\&quot;: [{&quot;&lt;br/&gt;
+      &quot;        \&quot;name\&quot;: \&quot;value\&quot;,&quot;&lt;br/&gt;
+      &quot;        \&quot;type\&quot;: [&quot;&lt;br/&gt;
+      &quot;          \&quot;string\&quot;,&quot;&lt;br/&gt;
+      &quot;          &lt;/p&gt;
{\&quot;type\&quot;: \&quot;map\&quot;, \&quot;values\&quot;: \&quot;Object\&quot;}
&lt;p&gt;&quot;&lt;br/&gt;
+      &quot;        ]&quot;&lt;br/&gt;
+      &quot;      }]&quot;&lt;br/&gt;
+      &quot;    }&quot;&lt;br/&gt;
+      &quot;  }]&quot;&lt;br/&gt;
+      &quot;}&quot;,&lt;br/&gt;
+      &quot;U1{c1sK1U0S1c2sK2U1{c2sK4U1{c1sK6U1{}}sK5U1{}}sK3U0S3}&quot;, 5},&lt;br/&gt;
+    { &quot;{&quot;&lt;br/&gt;
+      &quot;  \&quot;name\&quot;: \&quot;Container\&quot;,&quot;&lt;br/&gt;
+      &quot;  \&quot;type\&quot;: \&quot;record\&quot;,&quot;&lt;br/&gt;
+      &quot;  \&quot;fields\&quot;: [{&quot;&lt;br/&gt;
+      &quot;    \&quot;name\&quot;: \&quot;tree_A\&quot;,&quot;&lt;br/&gt;
+      &quot;    \&quot;type\&quot;: {&quot;&lt;br/&gt;
+      &quot;      \&quot;name\&quot;: \&quot;ArrayTree\&quot;,&quot;&lt;br/&gt;
+      &quot;      \&quot;type\&quot;: \&quot;record\&quot;,&quot;&lt;br/&gt;
+      &quot;      \&quot;fields\&quot;: [&lt;/p&gt;
{&quot;
+      &quot;        \&quot;name\&quot;: \&quot;label\&quot;,&quot;
+      &quot;        \&quot;type\&quot;: \&quot;long\&quot;&quot;
+      &quot;      }
&lt;p&gt;, {&quot;&lt;br/&gt;
+      &quot;        \&quot;name\&quot;: \&quot;children\&quot;,&quot;&lt;br/&gt;
+      &quot;        \&quot;type\&quot;: {&quot;&lt;br/&gt;
+      &quot;          \&quot;type\&quot;: \&quot;array\&quot;,&quot;&lt;br/&gt;
+      &quot;          \&quot;items\&quot;: {&quot;&lt;br/&gt;
+      &quot;            \&quot;name\&quot;: \&quot;MapTree\&quot;,&quot;&lt;br/&gt;
+      &quot;            \&quot;type\&quot;: \&quot;record\&quot;,&quot;&lt;br/&gt;
+      &quot;            \&quot;fields\&quot;: [&lt;/p&gt;
{&quot;
+      &quot;              \&quot;name\&quot;: \&quot;label\&quot;,&quot;
+      &quot;              \&quot;type\&quot;: \&quot;int\&quot;&quot;
+      &quot;            }
&lt;p&gt;, {&quot;&lt;br/&gt;
+      &quot;              \&quot;name\&quot;: \&quot;children\&quot;,&quot;&lt;br/&gt;
+      &quot;              \&quot;type\&quot;: &lt;/p&gt;
{&quot;
+      &quot;                \&quot;type\&quot;: \&quot;map\&quot;,&quot;
+      &quot;                \&quot;values\&quot;: \&quot;ArrayTree\&quot;&quot;
+      &quot;              }
&lt;p&gt;&quot;&lt;br/&gt;
+      &quot;            }]&quot;&lt;br/&gt;
+      &quot;          }&quot;&lt;br/&gt;
+      &quot;        }&quot;&lt;br/&gt;
+      &quot;      }]&quot;&lt;br/&gt;
+      &quot;    }&quot;&lt;br/&gt;
+      &quot;  }, &lt;/p&gt;
{&quot;
+      &quot;    \&quot;name\&quot;: \&quot;tree_B\&quot;,&quot;
+      &quot;    \&quot;type\&quot;: \&quot;MapTree\&quot;&quot;
+      &quot;  }
&lt;p&gt;]&quot;&lt;br/&gt;
+      &quot;}&quot;,&lt;br/&gt;
+      &quot;L[c1sI{c1sK3L[]c2sK4L[c1sI{c1sK6L&lt;span class=&quot;error&quot;&gt;&amp;#91;c2sI{}sI{}&amp;#93;&lt;/span&gt;}]sK5L[]}]I&lt;/p&gt;
{c2sK1L[]sK2L[]}
&lt;p&gt;&quot;,&lt;br/&gt;
+      7},&lt;br/&gt;
 };&lt;/p&gt;

&lt;p&gt; static const TestData2 data2[] = {&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/test/unittest.cc b/lang/c&lt;/ins&gt;+/test/unittest.cc&lt;br/&gt;
index 5aef9b75a..44d347930 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/test/unittest.cc&lt;br/&gt;
+++ b/lang/c++/test/unittest.cc&lt;br/&gt;
@@ -29,6 +29,9 @@&lt;br/&gt;
 #include &quot;Parser.hh&quot;&lt;br/&gt;
 #include &quot;Compiler.hh&quot;&lt;br/&gt;
 #include &quot;SchemaResolution.hh&quot;&lt;br/&gt;
+#include &quot;Stream.hh&quot;&lt;br/&gt;
+#include &quot;Encoder.hh&quot;&lt;br/&gt;
+#include &quot;Decoder.hh&quot;&lt;br/&gt;
 #include &quot;buffer/BufferStream.hh&quot;&lt;br/&gt;
 #include &quot;buffer/BufferPrint.hh&quot;&lt;/p&gt;

&lt;p&gt;@@ -477,72 +480,179 @@ struct TestNested&lt;br/&gt;
     void createSchema() &lt;/p&gt;
     {
         std::cout &amp;lt;&amp;lt; &quot;TestNested\n&quot;;
-        RecordSchema rec(&quot;LongList&quot;);
-        rec.addField(&quot;value&quot;, LongSchema());
+        RecordSchema rec(&quot;LongListContainer&quot;);
+
+        RecordSchema list(&quot;LongList&quot;);
+        list.addField(&quot;value&quot;, LongSchema());
         UnionSchema next;
         next.addType(NullSchema());
-        next.addType(SymbolicSchema(Name(&quot;LongList&quot;), rec.root()));
-        rec.addField(&quot;next&quot;, next);
-        rec.addField(&quot;end&quot;, BoolSchema());
-
+        next.addType(SymbolicSchema(Name(&quot;LongList&quot;), list.root()));
+        list.addField(&quot;next&quot;, next);
+        list.addField(&quot;end&quot;, BoolSchema());
+        rec.addField(&quot;list&quot;, list);
+
+        RecordSchema arrayTree(&quot;ArrayTree&quot;);
+        arrayTree.addField(&quot;label&quot;, StringSchema());
+        arrayTree.addField(&quot;children&quot;, ArraySchema(
+            SymbolicSchema(Name(&quot;ArrayTree&quot;), arrayTree.root())));
+        rec.addField(&quot;array_tree&quot;, arrayTree);
+        
         schema_.setSchema(rec);
         schema_.toJson(std::cout);
         schema_.toFlatList(std::cout);
     }

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;InputBuffer serializeNoRecurse()&lt;/li&gt;
	&lt;li&gt;{&lt;br/&gt;
+    InputBuffer serializeNoRecurse() {&lt;br/&gt;
         std::cout &amp;lt;&amp;lt; &quot;No recurse\n&quot;;&lt;br/&gt;
         Serializer&amp;lt;ValidatingWriter&amp;gt; s(schema_);&lt;br/&gt;
         s.writeRecord();&lt;/li&gt;
	&lt;li&gt;s.writeLong(1);&lt;/li&gt;
	&lt;li&gt;s.writeUnion(0);&lt;/li&gt;
	&lt;li&gt;s.writeNull();&lt;/li&gt;
	&lt;li&gt;s.writeBool(true);&lt;br/&gt;
+        
{
+            s.writeRecord();
+            s.writeLong(1);
+            s.writeUnion(0);
+            s.writeNull();
+            s.writeBool(true);
+            s.writeRecordEnd();
+        }
&lt;p&gt;+        &lt;/p&gt;
{
+            s.writeRecord();
+            s.writeString(&quot;hello world&quot;);
+            s.writeArrayEnd();
+            s.writeRecordEnd();
+        }
&lt;p&gt;         s.writeRecordEnd();&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         return s.buffer();&lt;br/&gt;
     }&lt;/p&gt;

&lt;p&gt;+    static void encodeNoRecurse(Encoder &amp;amp;e)&lt;br/&gt;
+    &lt;/p&gt;
{
+        std::cout &amp;lt;&amp;lt; &quot;Encode no recurse\n&quot;;
+        e.encodeLong(1);
+        e.encodeUnionIndex(0);
+        e.encodeNull();
+        e.encodeBool(true);
+
+        e.encodeString(&quot;hello world&quot;);
+        e.arrayStart();
+        e.arrayEnd();
+    }
&lt;p&gt;+&lt;br/&gt;
     InputBuffer serializeRecurse()&lt;br/&gt;
     {&lt;br/&gt;
         std::cout &amp;lt;&amp;lt; &quot;Recurse\n&quot;;&lt;br/&gt;
         Serializer&amp;lt;ValidatingWriter&amp;gt; s(schema_);&lt;br/&gt;
         s.writeRecord();&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;s.writeLong(1);&lt;/li&gt;
	&lt;li&gt;s.writeUnion(1);&lt;br/&gt;
         {&lt;br/&gt;
             s.writeRecord();&lt;/li&gt;
	&lt;li&gt;s.writeLong(2);&lt;br/&gt;
+            s.writeLong(1);&lt;br/&gt;
             s.writeUnion(1);&lt;br/&gt;
             {&lt;br/&gt;
                 s.writeRecord();&lt;/li&gt;
	&lt;li&gt;s.writeLong(3);&lt;/li&gt;
	&lt;li&gt;s.writeUnion(0);&lt;/li&gt;
	&lt;li&gt;{&lt;/li&gt;
	&lt;li&gt;s.writeNull();&lt;br/&gt;
+                s.writeLong(2);&lt;br/&gt;
+                s.writeUnion(1);&lt;br/&gt;
+                
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+                    s.writeRecord();+                    s.writeLong(3);+                    s.writeUnion(0);+                    { s.writeNull(); }+                    s.writeBool(false);+                    s.writeRecordEnd();                 }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;                 s.writeBool(false);&lt;br/&gt;
                 s.writeRecordEnd();&lt;br/&gt;
             }&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;s.writeBool(false);&lt;br/&gt;
+            s.writeBool(true);&lt;br/&gt;
+            s.writeRecordEnd();&lt;br/&gt;
+        }&lt;br/&gt;
+        {&lt;br/&gt;
+            s.writeRecord();&lt;br/&gt;
+            s.writeString(&quot;a&quot;);&lt;br/&gt;
+            s.writeArrayBlock(2);&lt;br/&gt;
+            
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+                s.writeRecord();+                s.writeString(&amp;quot;aa&amp;quot;);+                s.writeArrayBlock(1);+                {
+                    s.writeRecord();
+                    s.writeString(&quot;aaa&quot;);
+                    s.writeArrayEnd();
+                    s.writeRecordEnd();
+                }+                s.writeArrayEnd();+                s.writeRecordEnd();+            }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+            &lt;/p&gt;
{
+                s.writeRecord();
+                s.writeString(&quot;ab&quot;);
+                s.writeArrayEnd();
+                s.writeRecordEnd();
+            }
&lt;p&gt;+            s.writeArrayEnd();&lt;br/&gt;
             s.writeRecordEnd();&lt;br/&gt;
-&lt;br/&gt;
         }&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;s.writeBool(true);&lt;br/&gt;
         s.writeRecordEnd();&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         return s.buffer();&lt;br/&gt;
     }&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;void readRecord(Parser&amp;lt;ValidatingReader&amp;gt; &amp;amp;p)&lt;br/&gt;
+    static void encodeRecurse(Encoder &amp;amp;e)&lt;br/&gt;
+    {&lt;br/&gt;
+        std::cout &amp;lt;&amp;lt; &quot;Encode recurse\n&quot;;&lt;br/&gt;
+        e.encodeLong(1);&lt;br/&gt;
+        e.encodeUnionIndex(1);&lt;br/&gt;
+        {&lt;br/&gt;
+            e.encodeLong(2);&lt;br/&gt;
+            e.encodeUnionIndex(1);&lt;br/&gt;
+            
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+                e.encodeLong(3);+                e.encodeUnionIndex(0);+                {
+                    e.encodeNull();
+                }+                e.encodeBool(false);+            }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+            e.encodeBool(false);&lt;br/&gt;
+        }&lt;br/&gt;
+        e.encodeBool(true);&lt;br/&gt;
+&lt;br/&gt;
+        e.encodeString(&quot;a&quot;);&lt;br/&gt;
+        e.arrayStart();&lt;br/&gt;
+	e.setItemCount(2);&lt;br/&gt;
+        &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+            e.encodeString(&amp;quot;aa&amp;quot;);+            e.arrayStart();+	    e.setItemCount(1);+            {
+                e.encodeString(&quot;aaa&quot;);
+                e.arrayStart();
+                e.arrayEnd();
+            }+            e.arrayEnd();+        }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+        &lt;/p&gt;
{
+            e.encodeString(&quot;ab&quot;);
+            e.arrayStart();
+            e.arrayEnd();
+        }
&lt;p&gt;+        e.arrayEnd();&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
+    void readRecord(Parser&amp;lt;ValidatingReader&amp;gt; &amp;amp;p) &lt;/p&gt;
{
+        p.readRecord();
+        readListRecord(p);
+        readArrayRecord(p);
+        p.readRecordEnd();
+    }
&lt;p&gt;+  &lt;br/&gt;
+    void readListRecord(Parser&amp;lt;ValidatingReader&amp;gt; &amp;amp;p) &lt;br/&gt;
     {&lt;br/&gt;
         p.readRecord();&lt;br/&gt;
         int64_t val = p.readLong();&lt;br/&gt;
         std::cout &amp;lt;&amp;lt; &quot;longval = &quot; &amp;lt;&amp;lt; val &amp;lt;&amp;lt; &apos;\n&apos;;&lt;br/&gt;
         int64_t path = p.readUnion();&lt;br/&gt;
         if (path == 1) &lt;/p&gt;
{
-            readRecord(p);
+            readListRecord(p);
         }
&lt;p&gt;         else &lt;/p&gt;
{
             p.readNull();
@@ -552,12 +662,60 @@ struct TestNested
         p.readRecordEnd();
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+    void readArrayRecord(Parser&amp;lt;ValidatingReader&amp;gt; &amp;amp;p)&lt;br/&gt;
+    {&lt;br/&gt;
+        p.readRecord();&lt;br/&gt;
+        std::string label;&lt;br/&gt;
+        p.readString(label);&lt;br/&gt;
+        std::cout &amp;lt;&amp;lt; &quot;label = &quot; &amp;lt;&amp;lt; label &amp;lt;&amp;lt; &apos;\n&apos;;&lt;br/&gt;
+        for (int64_t bs = p.readArrayBlockSize(); bs &amp;gt; 0;&lt;br/&gt;
+             bs = p.readArrayBlockSize()) {&lt;br/&gt;
+            for (int64_t i = 0; i &amp;lt; bs; ++i) &lt;/p&gt;
{
+                readArrayRecord(p);
+            }
&lt;p&gt;+        }&lt;br/&gt;
+        p.readRecordEnd();&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
     void validatingParser(InputBuffer &amp;amp;buf) &lt;/p&gt;
     {
         Parser&amp;lt;ValidatingReader&amp;gt; p(schema_, buf);
         readRecord(p);
     }

&lt;p&gt;+    void decodeListRecord(Decoder&amp;amp; d)&lt;br/&gt;
+    {&lt;br/&gt;
+        int64_t val = d.decodeLong();&lt;br/&gt;
+        std::cout &amp;lt;&amp;lt; &quot;longval = &quot; &amp;lt;&amp;lt; val &amp;lt;&amp;lt; &apos;\n&apos;;&lt;br/&gt;
+        int64_t path = d.decodeUnionIndex();&lt;br/&gt;
+        if (path == 1) &lt;/p&gt;
{
+            decodeListRecord(d);
+        }
&lt;p&gt;+        else &lt;/p&gt;
{
+          d.decodeNull();
+        }
&lt;p&gt;+        bool b = d.decodeBool();&lt;br/&gt;
+        std::cout &amp;lt;&amp;lt; &quot;bval = &quot; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; &apos;\n&apos;;      &lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
+    void decodeArrayRecord(Decoder&amp;amp; d)&lt;br/&gt;
+    {&lt;br/&gt;
+      std::string label = d.decodeString();&lt;br/&gt;
+      std::cout &amp;lt;&amp;lt; &quot;label = &quot; &amp;lt;&amp;lt; label &amp;lt;&amp;lt; &apos;\n&apos;;&lt;br/&gt;
+      for (int64_t bs = d.arrayStart(); bs &amp;gt; 0; bs = d.arrayNext()) {&lt;br/&gt;
+	std::cout &amp;lt;&amp;lt; &quot;array block size = &quot; &amp;lt;&amp;lt; bs &amp;lt;&amp;lt; &apos;\n&apos;;&lt;br/&gt;
+        for (int64_t i = 0; i &amp;lt; bs; ++i) &lt;/p&gt;
{
+          decodeArrayRecord(d);
+        }
&lt;p&gt;+      }&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
+    void runDecoder(Decoder&amp;amp; d)&lt;br/&gt;
+    &lt;/p&gt;
{
+      decodeListRecord(d);
+      decodeArrayRecord(d);
+    }
&lt;p&gt;+  &lt;br/&gt;
     void testToScreen() &lt;/p&gt;
{
         InputBuffer buf1 = serializeNoRecurse();
         InputBuffer buf2 = serializeRecurse();
@@ -565,6 +723,7 @@ struct TestNested
         std::cout &amp;lt;&amp;lt; buf2;
     }

&lt;p&gt;+    // Tests for Serializer + Parser&lt;br/&gt;
     void testParseNoRecurse() &lt;/p&gt;
{
         std::cout &amp;lt;&amp;lt; &quot;ParseNoRecurse\n&quot;;
         InputBuffer buf = serializeNoRecurse();
@@ -579,6 +738,50 @@ struct TestNested
         validatingParser(buf);
     }

&lt;p&gt;+    // Tests for encode + decode&lt;br/&gt;
+    void runEncodeDecode(Encoder &amp;amp;e, Decoder &amp;amp;d, void (*encode_fn)(Encoder &amp;amp;))&lt;br/&gt;
+    &lt;/p&gt;
{
+	std::auto_ptr&amp;lt;OutputStream&amp;gt; out = memoryOutputStream();
+	e.init(*out);
+	encode_fn(e);
+	std::auto_ptr&amp;lt;InputStream&amp;gt; in = memoryInputStream(*out);
+	d.init(*in);
+        runDecoder(d);
+    }
&lt;p&gt;+&lt;br/&gt;
+    void testDecodeNoRecurse()&lt;br/&gt;
+    &lt;/p&gt;
{
+        std::cout &amp;lt;&amp;lt; &quot;DecodeNoRecurse\n&quot;;
+	runEncodeDecode(*validatingEncoder(schema_, binaryEncoder()),
+			*validatingDecoder(schema_, binaryDecoder()),
+			encodeNoRecurse);
+	
+    }
&lt;p&gt;+&lt;br/&gt;
+    void testDecodeRecurse()&lt;br/&gt;
+    &lt;/p&gt;
{
+        std::cout &amp;lt;&amp;lt; &quot;DecodeRecurse\n&quot;;
+	runEncodeDecode(*validatingEncoder(schema_, binaryEncoder()),
+			*validatingDecoder(schema_, binaryDecoder()),
+			encodeRecurse);
+    }
&lt;p&gt;+&lt;br/&gt;
+  void testDecodeNoRecurseJson()&lt;br/&gt;
+    &lt;/p&gt;
{
+        std::cout &amp;lt;&amp;lt; &quot;DecodeNoRecurseJson\n&quot;;
+ 	runEncodeDecode(*jsonEncoder(schema_),
+			*jsonDecoder(schema_),
+			encodeNoRecurse);
+	
+    }
&lt;p&gt;+&lt;br/&gt;
+    void testDecodeRecurseJson()&lt;br/&gt;
+    &lt;/p&gt;
{
+        std::cout &amp;lt;&amp;lt; &quot;DecodeRecurseJson\n&quot;;
+	runEncodeDecode(*jsonEncoder(schema_),
+			*jsonDecoder(schema_),
+			encodeRecurse);
+    }

&lt;p&gt;     void test() &lt;/p&gt;
{
         createSchema();
@@ -587,6 +790,10 @@ struct TestNested
         testParseNoRecurse();
         testParseRecurse();
 
+        testDecodeNoRecurse();
+        testDecodeRecurse();
+        testDecodeNoRecurseJson();
+        testDecodeRecurseJson();
     }

&lt;p&gt;     ValidSchema schema_;&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16635888" author="jira-bot" created="Tue, 2 Oct 2018 17:44:22 +0000"  >&lt;p&gt;Commit 390a85409006f829d4d3564c2308c06ade211920 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=wdm81&quot; class=&quot;user-hover&quot; rel=&quot;wdm81&quot;&gt;William Matthews&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=390a854&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=390a854&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Fix &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1635&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1635&lt;/a&gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Use indirect symbols to &quot;own&quot; the production needed for records (so that weak_ptrs have something to point to)&lt;/li&gt;
	&lt;li&gt;Use a stack instead of a counter for the number of items in a repeated symbol&lt;/li&gt;
	&lt;li&gt;A handful of tests.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16635889" author="jira-bot" created="Tue, 2 Oct 2018 17:44:24 +0000"  >&lt;p&gt;Commit 389231ef31b02d444a73105ea4d6b5e0cbaac1d4 in avro&apos;s branch refs/heads/master from Thiruvalluvan M G&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=389231e&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=389231e&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Merge pull request #301 from wmatthews-google/fix-issue-1635&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1635&quot; title=&quot;C++ schema aware encoders throw tr1::bad_weak_ptr exception for recursive schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1635&quot;&gt;&lt;del&gt;AVRO-1635&lt;/del&gt;&lt;/a&gt; C++ schema aware encoders throw tr1::bad_weak_ptr exception for recursive schema&lt;/p&gt;</comment>
                            <comment id="16635890" author="thiru_mg" created="Tue, 2 Oct 2018 17:45:03 +0000"  >&lt;p&gt;Pull request merged: &lt;a href=&quot;https://github.com/apache/avro/pull/301.&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/301.&lt;/a&gt;&#160;Thank you &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=wmatthews&quot; class=&quot;user-hover&quot; rel=&quot;wmatthews&quot;&gt;William Matthews&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 31 Aug 2015 03:11:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            15 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i24o9r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>c++ avro encoder</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
