<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:18:00 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2012-11-27+AND+created+%3C%3D+2012-12-4+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="2" total="2"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1212] Protocol schema generated from reflection does not support @Union with collections</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1212</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;An interface using &lt;tt&gt;@Union&lt;/tt&gt; for collections (Map, List, Java array) like this one:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; P0 {
    @Union({&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;.&lt;span class=&quot;code-keyword&quot;&gt;class,&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.class}) List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; foo(@Union({&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.&lt;span class=&quot;code-keyword&quot;&gt;class,&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.class}) List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Number&lt;/span&gt;&amp;gt; l);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;will produce the following schema where the lists have been erased by the component unions:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-javascript&quot;&gt;{
  &lt;span class=&quot;code-quote&quot;&gt;&quot;protocol&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;P0&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt; : &quot;&quot;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;types&quot;&lt;/span&gt; : [ {
    &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;Number&lt;/span&gt;&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;java.lang&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt; : [ ]
  } ],
  &lt;span class=&quot;code-quote&quot;&gt;&quot;messages&quot;&lt;/span&gt; : {
    &lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt; : {
      &lt;span class=&quot;code-quote&quot;&gt;&quot;request&quot;&lt;/span&gt; : [ {
        &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;l&quot;&lt;/span&gt;,
        &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : [ &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt; ]
      } ],
      &lt;span class=&quot;code-quote&quot;&gt;&quot;response&quot;&lt;/span&gt; : [ &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt; ]
    }
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;instead of:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-javascript&quot;&gt;{
  &lt;span class=&quot;code-quote&quot;&gt;&quot;protocol&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;P0X&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt; : &quot;&quot;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;types&quot;&lt;/span&gt; : [ {
    &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;java.lang&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt; : [ ]
  }, {
    &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;Number&lt;/span&gt;&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;java.lang&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt; : [ ]
  } ],
  &lt;span class=&quot;code-quote&quot;&gt;&quot;messages&quot;&lt;/span&gt; : {
    &lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt; : {
      &lt;span class=&quot;code-quote&quot;&gt;&quot;request&quot;&lt;/span&gt; : [ {
        &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;l&quot;&lt;/span&gt;,
        &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : {
          &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;array&quot;&lt;/span&gt;,
          &lt;span class=&quot;code-quote&quot;&gt;&quot;items&quot;&lt;/span&gt; : [ &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt; ],
          &lt;span class=&quot;code-quote&quot;&gt;&quot;java-class&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;java.util.List&quot;&lt;/span&gt;
        }
      } ],
      &lt;span class=&quot;code-quote&quot;&gt;&quot;response&quot;&lt;/span&gt; : {
        &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;array&quot;&lt;/span&gt;,
        &lt;span class=&quot;code-quote&quot;&gt;&quot;items&quot;&lt;/span&gt; : [ &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt; ],
        &lt;span class=&quot;code-quote&quot;&gt;&quot;java-class&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;java.util.List&quot;&lt;/span&gt;
      }
    }
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This leads to exceptions when writing a response like List&amp;lt;R1|R2&amp;gt;:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;org.apache.avro.UnresolvedUnionException: Not in union [{&quot;type&quot;:&quot;record&quot;,&quot;name&quot;:&quot;R1&quot;},{&quot;type&quot;:&quot;record&quot;,&quot;name&quot;:&quot;R2&quot;}]: [R1@19f03d7]
	at org.apache.avro.generic.GenericData.resolveUnion(GenericData.java:542) ~[avro-1.7.2.jar:1.7.2]
	at org.apache.avro.generic.GenericDatumWriter.resolveUnion(GenericDatumWriter.java:137) ~[avro-1.7.2.jar:1.7.2]
	at org.apache.avro.generic.GenericDatumWriter.write(GenericDatumWriter.java:70) ~[avro-1.7.2.jar:1.7.2]
	at org.apache.avro.reflect.ReflectDatumWriter.write(ReflectDatumWriter.java:104) ~[avro-1.7.2.jar:1.7.2]
	at org.apache.avro.generic.GenericDatumWriter.write(GenericDatumWriter.java:57) ~[avro-1.7.2.jar:1.7.2]
	at org.apache.avro.ipc.generic.GenericResponder.writeResponse(GenericResponder.java:58) ~[avro-ipc-1.7.2.jar:1.7.2]
	at org.apache.avro.ipc.Responder.respond(Responder.java:164) [avro-ipc-1.7.2.jar:1.7.2]
	at org.apache.avro.ipc.Responder.respond(Responder.java:99) [avro-ipc-1.7.2.jar:1.7.2]
	at org.apache.avro.ipc.ResponderServlet.doPost(ResponderServlet.java:48) [avro-ipc-1.7.2.jar:1.7.2]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727) [servlet-api-2.5-20081211.jar:na]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820) [servlet-api-2.5-20081211.jar:na]
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511) [jetty-6.1.26.jar:6.1.26]
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:401) [jetty-6.1.26.jar:6.1.26]
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766) [jetty-6.1.26.jar:6.1.26]
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152) [jetty-6.1.26.jar:6.1.26]
	at org.mortbay.jetty.Server.handle(Server.java:322) [jetty-6.1.26.jar:6.1.26]
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542) [jetty-6.1.26.jar:6.1.26]
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:945) [jetty-6.1.26.jar:6.1.26]
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756) [jetty-6.1.26.jar:6.1.26]
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218) [jetty-6.1.26.jar:6.1.26]
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404) [jetty-6.1.26.jar:6.1.26]
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410) [jetty-6.1.26.jar:6.1.26]
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582) [jetty-util-6.1.26.jar:6.1.26]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12618104">AVRO-1212</key>
            <summary>Protocol schema generated from reflection does not support @Union with collections</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="yabon">S&#233;bastien Launay</reporter>
                        <labels>
                    </labels>
                <created>Thu, 29 Nov 2012 01:43:17 +0000</created>
                <updated>Fri, 30 Nov 2012 00:34:14 +0000</updated>
                                            <version>1.7.2</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13506167" author="yabon" created="Thu, 29 Nov 2012 02:34:58 +0000"  >&lt;p&gt;Patch fixing the issue by:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;converting annotated List and Java array to ARRAY type with union component type&lt;/li&gt;
	&lt;li&gt;converting annotated Map to MAP type with union value type&lt;/li&gt;
	&lt;li&gt;detecting double &amp;#64;Union to prevent issues&lt;/li&gt;
	&lt;li&gt;test cases to reproduce the issue and detect future regressions&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Note that:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;it is not possible to define a union of Map or List with that approach&lt;/li&gt;
	&lt;li&gt;annotating nested List/Map/Array with &amp;#64;Union will only be used for the leaf components&lt;/li&gt;
	&lt;li&gt;@Nullable on the other hand will be applied to the collection (to keep things backward compatible)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Patch is attached but can be found here:&lt;br/&gt;
&lt;a href=&quot;https://github.com/slaunay/avro/commits/fix/AVRO-1212-union-collections&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/slaunay/avro/commits/fix/AVRO-1212-union-collections&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13506838" author="cutting" created="Thu, 29 Nov 2012 21:39:54 +0000"  >&lt;p&gt;I worry that this approach is confusing.  When I look at the example it looks like an error: you&apos;ve got code that returns an array that&apos;s declared as a union of primitives.&lt;/p&gt;

&lt;p&gt;A simpler more direct approach might be to add a new annotation that, in effect, casts a Java type to an arbitrary Avro Schema.&lt;/p&gt;

&lt;p&gt;This might look like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; P0 {
  @AvroSchema(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;array\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;items\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[\&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;]&quot;&lt;/span&gt;) 
    List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; foo(@Avro([\&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;\&quot;&lt;/span&gt;,\&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;\&quot;&lt;/span&gt;]&quot;) List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Number&lt;/span&gt;&amp;gt; l);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Or we might define more specific annotations, like ArrayOfUnion and MapOfUnion so you could do something like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; P0 {
  @ArrayOfUnion({&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.class, &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.class})
    List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; foo(@Union({&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.class, &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.class}) List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Number&lt;/span&gt;&amp;gt; l);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is more limited in its expressive power, but does away with those ugly backslashes and gets some compile-type checking.&lt;/p&gt;

&lt;p&gt;Either of those seem much clearer to me.&lt;/p&gt;</comment>
                            <comment id="13506982" author="yabon" created="Fri, 30 Nov 2012 00:34:14 +0000"  >&lt;p&gt;Unfortunately it&apos;s not possible to annotate the parameterized type only the whole return type, that&apos;s why I went with this approach.&lt;br/&gt;
I agree this is a bit confusing and not applied like &amp;#64;Nullable but we need at least to throw an exception when parsing that configuration (&amp;#64;Union on a collection/Java array).&lt;/p&gt;

&lt;p&gt;I am wondering how to express combination of Map/Array with annotations, I was thinking of going recursive with:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; P0 {
  @Collection(@Union{&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.class, &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.class}) &lt;span class=&quot;code-comment&quot;&gt;// value=... is used implicitly
&lt;/span&gt;    List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; foo();
  @Collection(@Union{&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.class, &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.class}) &lt;span class=&quot;code-comment&quot;&gt;// value=... is used implicitly
&lt;/span&gt;    Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; bar();
  @Collection(of=@Collection(@Union{&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.class, &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.class})) &lt;span class=&quot;code-comment&quot;&gt;// use either value= or of=
&lt;/span&gt;    Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;[]&amp;gt; baz();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;but recursive annotation definition is not allowed in Java today.&lt;/p&gt;

&lt;p&gt;The &lt;tt&gt;Map&lt;/tt&gt; use case is still a bit confusing because it only applies to the value type but having &lt;tt&gt;MapOf&lt;/tt&gt; and &lt;tt&gt;ArrayOf&lt;/tt&gt; does not sound DRY to me (and might require checking for avoiding misuse like using Avro type ARRAY for a Map).&lt;/p&gt;

&lt;p&gt;Maybe only a single parameterize is allowed and for more complex use case (that looks like a code smell though) one must create a record like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; P0 {
  @CollectionOf(@Union{&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.class, &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.class})
    List&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; foo();
  @CollectionOf(@Union{&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.class, &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.class})
    Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; bar();
  Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, IntegerOrLong[]&amp;gt; baz();
}

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;IntegerOrLong {
  @Union{&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.class, &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.class}
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; value;
  ...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;this will requires @Union annotation to be used on fields (valid use case I think) and I guess will not consume more bytes.&lt;/p&gt;

&lt;p&gt;What do you think?&lt;/p&gt;

&lt;p&gt;In the meantime, I think I found a workaround for my initial issue by using the &lt;tt&gt;@Union&lt;/tt&gt; annotation on an abstract class rather than on the method:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; P0 {
  &lt;span class=&quot;code-comment&quot;&gt;// List&amp;lt;? &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Message&amp;gt; foo(); does not work but that&apos;s another story
&lt;/span&gt;  List&amp;lt;Message&amp;gt; foo(); &lt;span class=&quot;code-comment&quot;&gt;// works
&lt;/span&gt;}

@Union{MessageA.class, MessageB.class}
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;Message {
  ...
}
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;MessageA &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Message {
  ...
}
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;MessageB &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Message {
  ...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I like the &lt;tt&gt;&amp;#64;AvroSchema&lt;/tt&gt; though, it can be quite handy if you need full control.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12555298" name="AVRO-1212-union-with-collections-2012-11-28.patch" size="11901" author="yabon" created="Thu, 29 Nov 2012 02:35:14 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 29 Nov 2012 21:39:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>292711</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 8 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0sbgf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>163332</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1213] Update to latest release of Jetty</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1213</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The compile scoped dependency on jetty servlet-api in the IPC pom file can be problematic if using Avro in a webapp environment. Would it be possible to make this dependency either optional or provided? Or maybe Avro modularize into sub-modules in such a way that desired features can be assembled piecemeal?&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12618292">AVRO-1213</key>
            <summary>Update to latest release of Jetty</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dkulp">Daniel Kulp</assignee>
                                    <reporter username="saden1">Sharmarke Aden</reporter>
                        <labels>
                    </labels>
                <created>Fri, 30 Nov 2012 09:04:00 +0000</created>
                <updated>Fri, 17 Nov 2017 09:44:53 +0000</updated>
                            <resolved>Fri, 17 Nov 2017 09:33:05 +0000</resolved>
                                    <version>1.7.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>3</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="13507478" author="cutting" created="Fri, 30 Nov 2012 17:35:15 +0000"  >&lt;p&gt;Optional sounds reasonable to me.  It&apos;s hard to use a servlet without having that provided and we shouldn&apos;t mandate a particular source for the servlet api.&lt;/p&gt;

&lt;p&gt;And shouldn&apos;t the other Jetty dependencies be for tests only?&lt;/p&gt;</comment>
                            <comment id="13507574" author="scott_carey" created="Fri, 30 Nov 2012 19:18:00 +0000"  >&lt;p&gt;Optional is OK for now for Jetty, and Netty.  The use can choose which they want.  Optional may require changing avro-tools&apos; pom to declare those, and we&apos;ll need to document the change.  I&apos;d say it would need to wait until 1.8.0 because upgrading would break current projects, and there is a work-around for users now to exclude jetty and/or the servlet downstream dependencies in their pom.&lt;/p&gt;

&lt;p&gt;Longer term, we could break up IPC into more modules, one for HTTP RPC and another for socket, since the two have very different downstream dependencies.&lt;/p&gt;</comment>
                            <comment id="13507712" author="saden1" created="Fri, 30 Nov 2012 22:23:36 +0000"  >&lt;p&gt;Doug,&lt;/p&gt;

&lt;p&gt;I wasn&apos;t really sure in what capacity Jetty is used but looking at IPC code it looks like those jetty dependencies are needed down stream by those wishing to use IPC. &lt;/p&gt;


&lt;p&gt;Scott, &lt;/p&gt;

&lt;p&gt;I think you are right on them money. Ultimately what you want to do is break the IPC into Jetty and Netty sub-modules so they can become optional and allow of future growth with respect to adding new Server implementations (i.e. tomcat, vert.x, NodeJS, etc).&lt;/p&gt;</comment>
                            <comment id="13678919" author="scott_carey" created="Sun, 9 Jun 2013 03:10:55 +0000"  >&lt;p&gt;Netty also now has HTTP support, so we may be able to consolidate significantly and use it for both.&lt;/p&gt;</comment>
                            <comment id="15260627" author="chengas123" created="Wed, 27 Apr 2016 18:01:18 +0000"  >&lt;p&gt;The version of Jetty used is ancient (8 years old!!) This dependency in Avro IPC is causing me major problems because it&apos;s pulling in such an old version of the servlet API. We should really upgrade to a newer version like org.eclipse.jetty:jetty-server:9.3.8.v20160314. Or just drop the jetty server and use the netty server since there&apos;s no real need for two of them and it just adds overhead to maintain two implementations.&lt;/p&gt;</comment>
                            <comment id="15260631" author="rdblue" created="Wed, 27 Apr 2016 18:04:37 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ben%40benmccann.com&quot; class=&quot;user-hover&quot; rel=&quot;ben@benmccann.com&quot;&gt;Ben McCann&lt;/a&gt;, that sounds fine to me. What is the benefit of having both? Should we update the Netty version?&lt;/p&gt;</comment>
                            <comment id="16159099" author="githubbot" created="Fri, 8 Sep 2017 18:50:29 +0000"  >&lt;p&gt;GitHub user dkulp opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/244&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/244&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1213&quot; title=&quot;Update to latest release of Jetty&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1213&quot;&gt;&lt;del&gt;AVRO-1213&lt;/del&gt;&lt;/a&gt; Update to latest release of Jetty&lt;/p&gt;

&lt;p&gt;    This updates the Jetty dependency to the latest Jetty release. &lt;/p&gt;

&lt;p&gt;    Note: this does not address the Jetty vs. Netty thing or updates to the latest Netty.  I hope to tackle that soon, but the netty update is huge/hard with a much larger impact. &lt;/p&gt;

&lt;p&gt;    The API signatures do change slightly, but that is obviously required due to the org.mortbay -&amp;gt; org.eclipse change.  However, getting onto the supported version of Jetty (with the latest security updates and fixes) is important.  &lt;/p&gt;




&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/dkulp/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/dkulp/avro&lt;/a&gt; JETTY&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/244.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/244.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #244&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit b9ea20ba5700a7df60411a7bd62406f5c4beab42&lt;br/&gt;
Author: Daniel Kulp &amp;lt;dkulp@apache.org&amp;gt;&lt;br/&gt;
Date:   2017-09-08T17:18:33Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1213&quot; title=&quot;Update to latest release of Jetty&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1213&quot;&gt;&lt;del&gt;AVRO-1213&lt;/del&gt;&lt;/a&gt; Update to latest release of Jetty&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="16256695" author="jira-bot" created="Fri, 17 Nov 2017 09:14:33 +0000"  >&lt;p&gt;Commit 3af404efb31a1dc2fd720384ef9a3f7326c2d303 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dkulp&quot; class=&quot;user-hover&quot; rel=&quot;dkulp&quot;&gt;Daniel Kulp&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=3af404e&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=3af404e&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1213&quot; title=&quot;Update to latest release of Jetty&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1213&quot;&gt;&lt;del&gt;AVRO-1213&lt;/del&gt;&lt;/a&gt; Update to latest release of Jetty&lt;/p&gt;

&lt;p&gt;Closes #244&lt;/p&gt;

&lt;p&gt;Signed-off-by: sacharya &amp;lt;suraj@apache.org&amp;gt;&lt;br/&gt;
Signed-off-by: Nandor Kollar &amp;lt;nkollar@apache.org&amp;gt;&lt;br/&gt;
Signed-off-by: Anna Szonyi &amp;lt;szonyi@cloudera.com&amp;gt;&lt;/p&gt;</comment>
                            <comment id="16256696" author="githubbot" created="Fri, 17 Nov 2017 09:14:58 +0000"  >&lt;p&gt;Github user asfgit closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/244&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/244&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="16256724" author="nkollar" created="Fri, 17 Nov 2017 09:32:57 +0000"  >&lt;p&gt;Committed to trunk, thanks Daniel for fixing this!&lt;/p&gt;</comment>
                            <comment id="16256740" author="nkollar" created="Fri, 17 Nov 2017 09:44:53 +0000"  >&lt;p&gt;Actually the PR just updates the Jetty version, doesn&apos;t address the other (breaking up IPC module into Jetty and Netty sub-modules). Created &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2106&quot; title=&quot;Revisit dependencies on Jetty, servlet-api, and Netty&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2106&quot;&gt;AVRO-2106&lt;/a&gt; for this.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="13119166">AVRO-2106</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 30 Nov 2012 17:35:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>292923</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 9 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0sgfb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164138</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Jetty version was updated from 2.5-20081211 to 9.4.6.v20170531. This is a breaking change due to package name change in Jetty, which leads to interface change in Avro. The type of constructor parameters in HttpServer.java changed.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
