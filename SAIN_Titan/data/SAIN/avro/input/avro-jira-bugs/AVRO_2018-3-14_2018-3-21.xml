<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:26:21 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2018-3-14+AND+created+%3C%3D+2018-3-21+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="3" total="3"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-2159] Naming Limitations of Schemas in Stricter Reference Contexts</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2159</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;(Excuse the lengthiness of this ticket description - it was initially written as an email that became too long. Feel free to correct any misguided reasoning.)&lt;/p&gt;

&lt;p&gt;I&apos;ve come to realize that there are some undesirable constraints on how avro schemas can be used in Java code generation and IDL, that only appear as minor annoyances when you use schemas generically. In particular, I&apos;m focused on cases where it&apos;s desirable to use two schemas that have the same name in some context.&lt;br/&gt;
 &#160;&lt;br/&gt;
 &lt;b&gt;Issue:&lt;/b&gt;&lt;br/&gt;
 Suppose I&apos;m writing an application that publishes a many different kinds of data somewhere, with each type of data having its own schema. And then suppose that a some number of those schemas would like to share some kind of common schema, to start with.&lt;br/&gt;
 &#160;&lt;br/&gt;
 If I do this, and I happen to be using Java code generation to manage schemas, I&apos;ll soon find difficulty in two directions:&lt;br/&gt;
 &#160;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I would find it difficult to upgrade the data shared among all of these external schemas by way of the common schema, without upgrading all of those schemas at the same time. The problem here being that neither Java&apos;s classpath nor an IDL protocol can support the way avro&apos;s name field maps as a class name onto the classpath or a reference name onto a protocol&apos;s symbols.&lt;br/&gt;
 &#160;&lt;br/&gt;
 The intermediate step of the application being partially migrated between version 1 and version 2 of&#160;a common schema has no representation in either of these contexts. Using a different name becomes a very annoying option in many cases, since it is an incompatible change (or with aliases, it&apos;s at least not consistently compatible across implementations).&lt;/li&gt;
	&lt;li&gt;I would find it difficult to migrate away from the external schemas using that shared schema, for the same reasons listed above.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In IDL (without code generation), these issues can usually be avoided by creating a second protocol, and in generic avro, the issues would be avoided by using&#160;a different schema parser or schema builder.&lt;br/&gt;
 &#160;&lt;br/&gt;
 &lt;b&gt;Analysis:&lt;/b&gt;&lt;br/&gt;
 At first glance, it is tempting to blame the name-matching requirement for schema resolution as a culprit - and it may be correct in many cases that requiring schemas have compatible structure is all that is needed.&lt;br/&gt;
 &#160;&lt;br/&gt;
 However, the way I see it is that the name-matching requirement for schema resolution is there to ensure that there is &lt;em&gt;the intent for two schemas to resolve with each other&lt;/em&gt;, and the rest of the checks are just there to make sure that such an intent can be reasonably carried out.&lt;br/&gt;
 &#160;&lt;br/&gt;
 The difficulty from either the two examples above happens not because of a lack of pre-determined intent for schemas to resolve, but rather the inability to simultaneously supply a unique reference for each of the schemas, while intending that the correct groups of schemas can resolve.&lt;br/&gt;
 &#160;&lt;br/&gt;
 Thus, the way to avoid these issues so far has been to create a new reference context, and the severity of the issue in each case corresponds to the difficulty of creating a new reference context:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;For generic schemas, create a new parser or schema builder &lt;span class=&quot;error&quot;&gt;&amp;#91;easy - minorly annoying&amp;#93;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;For IDL, create a new protocol &lt;span class=&quot;error&quot;&gt;&amp;#91;minorly annoying - somewhat annoying&amp;#93;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;For Java code generation, create a new classpath &lt;span class=&quot;error&quot;&gt;&amp;#91;very annoying (Java 9) - impossible&amp;#93;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Based on that, I understand a schema&apos;s name as expressing two overlapping meanings:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the intent to be able to resolve with other schemas with the same name (let&apos;s call this the&#160;&lt;tt&gt;resolveName&lt;/tt&gt;)&lt;/li&gt;
	&lt;li&gt;the ability to be uniquely referenced from some context (let&apos;s call this the&#160;&lt;tt&gt;referenceName&lt;/tt&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&#160;&lt;br/&gt;
 If these two meanings were able to be specified independently, I think that schemas would be much easier to use in contexts where references are more limited.&lt;br/&gt;
 &#160;&lt;br/&gt;
 &lt;b&gt;Speculative Solutions:&lt;/b&gt;&lt;br/&gt;
 Minimally, I think it&apos;s reasonable to create at least one new field to separate the meaning of a schema&apos;s&#160;&lt;tt&gt;referenceName&lt;/tt&gt;&#160;from its&#160;&lt;tt&gt;resolveName&lt;/tt&gt;, and use the old&#160;name&#160;field to compatibly handle missing values. Then other tools that don&apos;t immediately apply schema resolution, can optionally upgrade to support using the&#160;&lt;tt&gt;referenceName&lt;/tt&gt;&#160;instead of the&#160;&lt;tt&gt;resolveName&lt;/tt&gt;.&lt;br/&gt;
 &#160;&lt;br/&gt;
 Beyond that, having&#160;&lt;tt&gt;name&lt;/tt&gt;&#160;continue to mean&#160;&lt;tt&gt;resolveName&lt;/tt&gt; would mean that old avro implementations would be able to treat newer schemas as valid and resolve against them correctly. So I think it&apos;s reasonable to say that&#160;&lt;tt&gt;referenceName&lt;/tt&gt;&#160;should be the new field introduced (not necessarily with that name).&lt;br/&gt;
 &#160;&lt;br/&gt;
 Assuming I&apos;ve made no mistakes up until this point, there are some remaining questions:&lt;br/&gt;
 &#160;&lt;br/&gt;
 1. How should this appear in IDL? There are two solutions that come to mind, using the existing intuition of how annotations work:&lt;br/&gt;
 &#160;&lt;br/&gt;
 &#160; a. Declared as:&#160;&lt;tt&gt;@ref(&quot;UserV2&quot;) record User {&lt;/tt&gt;}&lt;br/&gt;
 &#160; &#160; &#160; Used as:&#160;&lt;tt&gt;@ref(&quot;UserV2&quot;) User user;&lt;/tt&gt;&lt;br/&gt;
 &#160;&lt;br/&gt;
 &#160; &#160; &#160; - Can be quite verbose&lt;br/&gt;
 &#160; &#160; &#160; - The annotated type (&lt;tt&gt;User&lt;/tt&gt;) only really exists as a placeholder&lt;br/&gt;
 &#160; &#160; &#160; - Requires a new error message for when a type is used but needs a reference name.&lt;/p&gt;

&lt;p&gt;&#160; b. Declared as:&#160;&lt;tt&gt;@name(&quot;User&quot;) record UserV2 {&lt;/tt&gt;}&lt;br/&gt;
 &#160; &#160; &#160; Used as:&#160;&lt;tt&gt;UserV2 user;&lt;/tt&gt;&lt;br/&gt;
 &#160;&lt;br/&gt;
 &#160; &#160; &#160; - Relies on a weird intuition of how a &quot;type name&quot; maps to a raw schema. Normally, the type name becomes the schema&apos;s&#160;name&#160;field, but when the&#160;&lt;tt&gt;name&lt;/tt&gt;&#160;field is specified by annotation, the type name just becomes the&#160;&lt;tt&gt;referenceName&lt;/tt&gt;&#160;field.&lt;br/&gt;
 &#160; &#160; &#160; - Requires more work to change the implementation of type annotations, since&#160;&lt;tt&gt;name&lt;/tt&gt;&#160;is normally a reserved field.&lt;br/&gt;
 &#160; &#160; &#160; - Matches the current intuition that two schemas resolve only if their&#160;&lt;tt&gt;name&lt;/tt&gt;&#160;fields match, and that type names are always used for references.&lt;br/&gt;
 &#160;&lt;br/&gt;
 2. How should the &lt;tt&gt;namespace&lt;/tt&gt; field be handled?&lt;/p&gt;

&lt;p&gt;Should both names share the &lt;tt&gt;namespace&lt;/tt&gt; field and act like the name field does now (where any name that contains a dot is assumed to specify the full name)? Or should reference names ignore the &lt;tt&gt;namespace&lt;/tt&gt; field (and maybe have one of their own)?&lt;br/&gt;
 &#160;&lt;br/&gt;
 3. If avro parsers are changed to be use&#160;&lt;tt&gt;referenceName&lt;/tt&gt;&#160;instead of&#160;&lt;tt&gt;name&lt;/tt&gt;, when present, how much concern is there about old parsers not being able to parse the new&#160;&lt;tt&gt;referenceName&lt;/tt&gt;&#160;field if they are used sparingly (only generated when necessary)?&lt;/p&gt;</description>
                <environment></environment>
        <key id="13145257">AVRO-2159</key>
            <summary>Naming Limitations of Schemas in Stricter Reference Contexts</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="howellbridger">Bridger Howell</reporter>
                        <labels>
                    </labels>
                <created>Thu, 15 Mar 2018 03:11:17 +0000</created>
                <updated>Sun, 30 Dec 2018 05:23:19 +0000</updated>
                                                                            <component>spec</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            44 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3rbpb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2160] Json to Avro with non required value and union schema failing</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2160</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I am trying to convert this string:&lt;/p&gt;

&lt;p&gt;str&#160;str4&lt;/p&gt;

&lt;p&gt;using this schema:&lt;/p&gt;

&lt;p&gt;{&quot;type&quot;:&quot;record&quot;, &quot;namespace&quot;:&quot;foo&quot;,&quot;name&quot;:&quot;Person&quot;,&quot;fields&quot;:[&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
{&quot;name&quot;:&quot;lastname&quot;,&quot;type&quot;: [&quot;null&quot;,&quot;string&quot;], &quot;default&quot;:null}

&lt;p&gt;,{&quot;name&quot;:&quot;firstname&quot;,&quot;type&quot;:&quot;string&quot;},&lt;/p&gt;
{&quot;name&quot;:&quot;age&quot;,&quot;type&quot;:[&quot;null&quot;,&quot;int&quot;], &quot;default&quot;:null}
&lt;p&gt;]}&lt;/p&gt;

&lt;p&gt;I get this error&#160;&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;#ff0000&quot;&gt;com.syapse.messagePublisher.publisher.AvroEncodeException: Expected field name not found: lastnamein{&quot;firstname&quot;:&quot;John&quot;,&quot;age&quot;:{&quot;int&quot;:35}}&lt;/font&gt;at com.syapse.messagePublisher.publisher.AvroEncoder.convertJsonToAvro(AvroEncoder.java:78)&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;Although this should give me the correct syntax for a non required filed.&lt;/p&gt;

&lt;p&gt;Note that it works for&#160;&lt;/p&gt;

&lt;p&gt;{&quot;lastname&quot;:&lt;br class=&quot;atl-forced-newline&quot; /&gt;&lt;/p&gt;
{&quot;string&quot; : &quot;Doe&quot;}

&lt;p&gt;,&quot;firstname&quot;:&quot;John&quot;,&quot;age&quot;:{&quot;int&quot;:36}}&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;What am I missing ( using Abro 1.8.2)&lt;/p&gt;

&lt;p&gt;here is my code:&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] convertJsonToAvro(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] data, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; schemaStr) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; AvroEncodeException {

InputStream input = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;

DataFileWriter&amp;lt;GenericRecord&amp;gt; writer = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;

ByteArrayOutputStream output = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;

&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
Schema schema = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Parser().parse(schemaStr);
DatumReader&amp;lt;GenericRecord&amp;gt; reader = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericDatumReader&amp;lt;GenericRecord&amp;gt;(schema);
input = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayInputStream(data);
DataInputStream din = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DataInputStream(input);
output = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream();
writer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DataFileWriter&amp;lt;GenericRecord&amp;gt;(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericDatumWriter&amp;lt;GenericRecord&amp;gt;());
writer.create(schema, output);
Decoder decoder = DecoderFactory.get().jsonDecoder(schema, din);
GenericRecord datum = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) {
&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
datum = reader.read(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, decoder);
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (EOFException eofe) {
&lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
}
writer.append(datum);
}
writer.flush();
writer.close();
&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; output.toByteArray();
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (AvroTypeException e) {
&lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AvroEncodeException(e.getMessage() + &lt;span class=&quot;code-quote&quot;&gt;&quot;in&quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;(data));
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e1) {
&lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AvroEncodeException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Error decoding Json &quot;&lt;/span&gt; + e1.getMessage());
} &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
input.close();
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
}
}

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&#160;&lt;/p&gt;</description>
                <environment></environment>
        <key id="13145492">AVRO-2160</key>
            <summary>Json to Avro with non required value and union schema failing</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="Prevost">Lydie</reporter>
                        <labels>
                            <label>java</label>
                    </labels>
                <created>Thu, 15 Mar 2018 21:24:19 +0000</created>
                <updated>Fri, 21 Dec 2018 18:12:08 +0000</updated>
                                            <version>1.8.2</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="16726953" author="unchuckable" created="Fri, 21 Dec 2018 18:12:08 +0000"  >&lt;p&gt;Hi, Lydie,&lt;/p&gt;

&lt;p&gt;while I cannot quite make sense of your input data &quot;str&#160;str4&quot;, I assume that the problem you describe is one I&apos;ve seen other people make. When instantiating a json decoder, you need to supply the schema that the data was WRITTEN with, not the schema you want to read data with. The default value (&quot;null&quot;) is used when the field does not exist in the writer&apos;s schema, but does in the reader&apos;s. If your input data does not contain the field &quot;lastname&quot;, then the writer schema needs to reflect that. In avro, there is no such thing as &quot;not required fields&quot;. There are fields that are &quot;union {null, something}&quot;, but those need to be specified when using the GenericDatumReader if I am not mistaken.&lt;/p&gt;

&lt;p&gt;If you want to read json data with &quot;non-required fields&quot;, you will need to write your own reader (tho that&apos;s not too hard) that forgoes the ability of schema evolution but might be more flexible in the handling of &quot;non-required&quot;/defaultable fields.&lt;/p&gt;

&lt;p&gt;That said, I&apos;d say your behaviour is not a bug, therefore, I&apos;d suggest closing this ticket.&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;

&lt;p&gt;Martin&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 21 Dec 2018 18:12:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3rd5j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2161] Upgrade C# Unit Tests to NUnit 3.x</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2161</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Before we can upgrade the C# project to .NET Core (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2112&quot; title=&quot;c# (.net) port to .NET Standard 2.0 and nuget (package) dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2112&quot;&gt;&lt;del&gt;AVRO-2112&lt;/del&gt;&lt;/a&gt;), we must first upgrade our dependencies to versions that also run on .NET Core. NUnit is one of the dependencies that we must upgrade.&lt;/p&gt;

&lt;p&gt;NUnit 3.x will &lt;a href=&quot;https://github.com/nunit/docs/wiki/.NET-Core-and-.NET-Standard&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;run on .NET Core&lt;/a&gt;. There many changes we must make in the &lt;a href=&quot;https://github.com/nunit/docs/wiki/Breaking-Changes#nunit-30&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;migration from NUnit 2.x to 3.x&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since this is more than a simple update to a new version of the library, I believe we should tackle this separate from other big migration tasks, like the migration to .NET Core.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13145959">AVRO-2161</key>
            <summary>Upgrade C# Unit Tests to NUnit 3.x</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="blachniet">Brian Lachniet</reporter>
                        <labels>
                    </labels>
                <created>Sat, 17 Mar 2018 14:57:46 +0000</created>
                <updated>Sat, 12 Jan 2019 11:32:30 +0000</updated>
                            <resolved>Sat, 12 Jan 2019 11:32:30 +0000</resolved>
                                    <version>1.8.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>csharp</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16403477" author="blachniet" created="Sat, 17 Mar 2018 15:14:56 +0000"  >&lt;p&gt;GitHub Pull Request #299:&#160;&lt;a href=&quot;https://github.com/apache/avro/pull/299&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/299&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="16491613" author="githubbot" created="Sat, 26 May 2018 10:50:39 +0000"  >&lt;p&gt;blachniet commented on issue #299: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2161&quot; title=&quot;Upgrade C# Unit Tests to NUnit 3.x&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2161&quot;&gt;&lt;del&gt;AVRO-2161&lt;/del&gt;&lt;/a&gt;: Upgrade to NUnit 3&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/299#issuecomment-392253384&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/299#issuecomment-392253384&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Closing in favor of #307 &lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16491614" author="githubbot" created="Sat, 26 May 2018 10:50:40 +0000"  >&lt;p&gt;blachniet closed pull request #299: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2161&quot; title=&quot;Upgrade C# Unit Tests to NUnit 3.x&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2161&quot;&gt;&lt;del&gt;AVRO-2161&lt;/del&gt;&lt;/a&gt;: Upgrade to NUnit 3&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/299&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/299&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/csharp/.gitignore b/lang/csharp/.gitignore&lt;br/&gt;
index b8e088c61..944e701cc 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/.gitignore&lt;br/&gt;
+++ b/lang/csharp/.gitignore&lt;br/&gt;
@@ -17,6 +17,9 @@&lt;br/&gt;
 /*.user&lt;br/&gt;
 /*.suo&lt;br/&gt;
 /_ReSharper.Avro&lt;br/&gt;
+/.vs&lt;br/&gt;
+obj/&lt;br/&gt;
+&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;
	&lt;ol&gt;
		&lt;li&gt;Ignore Visual Studio temporary files, build results, and&lt;/li&gt;
		&lt;li&gt;files generated by popular Visual Studio add-ons.&lt;/li&gt;
	&lt;/ol&gt;
	&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;diff --git a/lang/csharp/Avro.nunit b/lang/csharp/Avro.nunit&lt;br/&gt;
deleted file mode 100644&lt;br/&gt;
index 7cbd7993c..000000000&lt;br/&gt;
&amp;#8212; a/lang/csharp/Avro.nunit&lt;br/&gt;
+++ /dev/null&lt;br/&gt;
@@ -1,35 +0,0 @@&lt;br/&gt;
&lt;del&gt;&#65279;&amp;lt;!&lt;/del&gt;-&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;- Licensed to the Apache Software Foundation (ASF) under one&lt;/li&gt;
	&lt;li&gt;- or more contributor license agreements.  See the NOTICE file&lt;/li&gt;
	&lt;li&gt;- distributed with this work for additional information&lt;/li&gt;
	&lt;li&gt;- regarding copyright ownership.  The ASF licenses this file&lt;/li&gt;
	&lt;li&gt;- to you under the Apache License, Version 2.0 (the&lt;/li&gt;
	&lt;li&gt;- &quot;License&quot;); you may not use this file except in compliance&lt;/li&gt;
	&lt;li&gt;- with the License.  You may obtain a copy of the License at&lt;/li&gt;
	&lt;li&gt;-&lt;/li&gt;
	&lt;li&gt;-   &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;-&lt;/li&gt;
	&lt;li&gt;- Unless required by applicable law or agreed to in writing,&lt;/li&gt;
	&lt;li&gt;- software distributed under the License is distributed on an&lt;/li&gt;
	&lt;li&gt;- &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY&lt;/li&gt;
	&lt;li&gt;- KIND, either express or implied.  See the License for the&lt;/li&gt;
	&lt;li&gt;- specific language governing permissions and limitations&lt;/li&gt;
	&lt;li&gt;- under the License.&lt;/li&gt;
	&lt;li&gt;--&amp;gt;&lt;br/&gt;
-&amp;lt;NUnitProject&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Settings activeconfig=&quot;Release&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Config name=&quot;Debug&quot; binpathtype=&quot;Auto&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;assembly path=&quot;build/test/Debug/Avro.test.dll&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;assembly path=&quot;build/test/Debug/Avro.dll&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;assembly path=&quot;lib/main/Castle.Core.dll&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;assembly path=&quot;lib/main/Newtonsoft.Json.dll&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;assembly path=&quot;lib/test/nunit.framework.dll&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/Config&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Config name=&quot;Release&quot; binpathtype=&quot;Auto&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;assembly path=&quot;build/test/Release/Avro.test.dll&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;assembly path=&quot;build/test/Release/Avro.dll&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;assembly path=&quot;lib/main/Castle.Core.dll&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;assembly path=&quot;lib/main/Newtonsoft.Json.dll&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;assembly path=&quot;lib/test/nunit.framework.dll&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/Config&amp;gt;&lt;br/&gt;
-&amp;lt;/NUnitProject&amp;gt;&lt;br/&gt;
diff --git a/lang/csharp/README b/lang/csharp/README&lt;br/&gt;
index 34909dd7e..5d422b117 100644
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/csharp/README&lt;br/&gt;
+++ b/lang/csharp/README&lt;br/&gt;
@@ -3,9 +3,9 @@&lt;br/&gt;
 a. Windows&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; Prerequisites&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Microsoft Visual C# Express 2010&lt;br/&gt;
+    Microsoft Visual Studio Community 2017&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-To build open Avro.sln solution in VC# Express 2010 and build from there.&lt;br/&gt;
+To build, open Avro.sln solution in Microsoft Visual Studio Community 2017 and build from there.&lt;/p&gt;

&lt;p&gt; b. Linux&lt;/p&gt;

&lt;p&gt;@@ -17,6 +17,7 @@ follow the procedure described at &lt;a href=&quot;http://badgerports.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://badgerports.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; To build issue the command:&lt;br/&gt;
 $ cd lang/csharp&lt;br/&gt;
+$ mono nuget.exe restore&lt;/p&gt;

&lt;p&gt; then&lt;/p&gt;

&lt;p&gt;@@ -30,10 +31,13 @@ Note: In Ubuntu 12.04 (Precise Pangolin), please omit TARGETFRAMEWORKVERSION arg&lt;/p&gt;

&lt;p&gt; 2. Unit tests&lt;/p&gt;

&lt;p&gt;-This is a common procedure for both Windows and Linux.&lt;br/&gt;
+a. Windows&lt;br/&gt;
+&lt;br/&gt;
+Open Avro.sln in Microsoft Visual Studio Community 2017. Run tests from the Test Explorer pane.&lt;br/&gt;
+&lt;br/&gt;
+b. Linux&lt;/p&gt;

&lt;p&gt;-To run unit-tests, please install NUnit 2.5 or above. From within the NUnit&lt;br/&gt;
-GUI, open the project Avro.nunit and run the tests.&lt;br/&gt;
+$ mono nunit3-console.exe ./build/test/Release/Avro.test.dll&lt;/p&gt;

&lt;p&gt; 3. Notes&lt;/p&gt;

&lt;p&gt;diff --git a/lang/csharp/lib/test/nunit.framework.dll b/lang/csharp/lib/test/nunit.framework.dll&lt;br/&gt;
deleted file mode 100644&lt;br/&gt;
index 639dbb0dc..000000000&lt;br/&gt;
Binary files a/lang/csharp/lib/test/nunit.framework.dll and /dev/null differ&lt;br/&gt;
diff --git a/lang/csharp/src/apache/test/Avro.test.csproj b/lang/csharp/src/apache/test/Avro.test.csproj&lt;br/&gt;
index 841f4f2df..0a0fbf6ba 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/test/Avro.test.csproj&lt;br/&gt;
+++ b/lang/csharp/src/apache/test/Avro.test.csproj&lt;br/&gt;
@@ -1,4 +1,4 @@&lt;br/&gt;
-&#65279;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;br/&gt;
+&#65279;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;br/&gt;
 &amp;lt;!--&lt;br/&gt;
    Licensed to the Apache Software Foundation (ASF) under one or more&lt;br/&gt;
    contributor license agreements.  See the NOTICE file distributed with&lt;br/&gt;
@@ -14,155 +14,163 @@&lt;br/&gt;
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
    See the License for the specific language governing permissions and&lt;br/&gt;
    limitations under the License.&lt;br/&gt;
---&amp;gt;&lt;br/&gt;
-&amp;lt;Project ToolsVersion=&quot;4.0&quot; DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&amp;gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&amp;lt;PropertyGroup&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&amp;gt;Debug&amp;lt;/Configuration&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&amp;gt;AnyCPU&amp;lt;/Platform&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;ProductVersion&amp;gt;8.0.30703&amp;lt;/ProductVersion&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;SchemaVersion&amp;gt;2.0&amp;lt;/SchemaVersion&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;ProjectGuid&amp;gt;
{911D56AB-587B-4E5F-B5EA-D47D8A46F1FA}&amp;lt;/ProjectGuid&amp;gt;&lt;br/&gt;
-    &amp;lt;OutputType&amp;gt;Library&amp;lt;/OutputType&amp;gt;&lt;br/&gt;
-    &amp;lt;AppDesignerFolder&amp;gt;Properties&amp;lt;/AppDesignerFolder&amp;gt;&lt;br/&gt;
-    &amp;lt;RootNamespace&amp;gt;Avro.test&amp;lt;/RootNamespace&amp;gt;&lt;br/&gt;
-    &amp;lt;AssemblyName&amp;gt;Avro.test&amp;lt;/AssemblyName&amp;gt;&lt;br/&gt;
+--&amp;gt;&lt;br/&gt;
+&amp;lt;Project ToolsVersion=&quot;4.0&quot; DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&amp;gt;&lt;br/&gt;
+  &amp;lt;PropertyGroup&amp;gt;&lt;br/&gt;
+    &amp;lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&amp;gt;Debug&amp;lt;/Configuration&amp;gt;&lt;br/&gt;
+    &amp;lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&amp;gt;AnyCPU&amp;lt;/Platform&amp;gt;&lt;br/&gt;
+    &amp;lt;ProductVersion&amp;gt;8.0.30703&amp;lt;/ProductVersion&amp;gt;&lt;br/&gt;
+    &amp;lt;SchemaVersion&amp;gt;2.0&amp;lt;/SchemaVersion&amp;gt;&lt;br/&gt;
+    &amp;lt;ProjectGuid&amp;gt;{911D56AB-587B-4E5F-B5EA-D47D8A46F1FA}
&lt;p&gt;&amp;lt;/ProjectGuid&amp;gt;&lt;br/&gt;
+    &amp;lt;OutputType&amp;gt;Library&amp;lt;/OutputType&amp;gt;&lt;br/&gt;
+    &amp;lt;AppDesignerFolder&amp;gt;Properties&amp;lt;/AppDesignerFolder&amp;gt;&lt;br/&gt;
+    &amp;lt;RootNamespace&amp;gt;Avro.test&amp;lt;/RootNamespace&amp;gt;&lt;br/&gt;
+    &amp;lt;AssemblyName&amp;gt;Avro.test&amp;lt;/AssemblyName&amp;gt;&lt;br/&gt;
     &amp;lt;TargetFrameworkVersion Condition=&quot; &apos;$(TargetFrameworkVersion)&apos; == &apos;&apos; &quot;&amp;gt;v3.5&amp;lt;/TargetFrameworkVersion&amp;gt;&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;FileAlignment&amp;gt;512&amp;lt;/FileAlignment&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;FileUpgradeFlags&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/FileUpgradeFlags&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;OldToolsVersion&amp;gt;3.5&amp;lt;/OldToolsVersion&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;UpgradeBackupLocation /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;PublishUrl&amp;gt;publish\&amp;lt;/PublishUrl&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Install&amp;gt;true&amp;lt;/Install&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;InstallFrom&amp;gt;Disk&amp;lt;/InstallFrom&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;UpdateEnabled&amp;gt;false&amp;lt;/UpdateEnabled&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;UpdateMode&amp;gt;Foreground&amp;lt;/UpdateMode&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;UpdateInterval&amp;gt;7&amp;lt;/UpdateInterval&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;UpdateIntervalUnits&amp;gt;Days&amp;lt;/UpdateIntervalUnits&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;UpdatePeriodically&amp;gt;false&amp;lt;/UpdatePeriodically&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;UpdateRequired&amp;gt;false&amp;lt;/UpdateRequired&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;MapFileExtensions&amp;gt;true&amp;lt;/MapFileExtensions&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;ApplicationRevision&amp;gt;0&amp;lt;/ApplicationRevision&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;ApplicationVersion&amp;gt;1.0.0.%2a&amp;lt;/ApplicationVersion&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;IsWebBootstrapper&amp;gt;false&amp;lt;/IsWebBootstrapper&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;UseApplicationTrust&amp;gt;false&amp;lt;/UseApplicationTrust&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;BootstrapperEnabled&amp;gt;true&amp;lt;/BootstrapperEnabled&amp;gt;&lt;br/&gt;
+    &amp;lt;FileAlignment&amp;gt;512&amp;lt;/FileAlignment&amp;gt;&lt;br/&gt;
+    &amp;lt;FileUpgradeFlags&amp;gt;&lt;br/&gt;
+    &amp;lt;/FileUpgradeFlags&amp;gt;&lt;br/&gt;
+    &amp;lt;OldToolsVersion&amp;gt;3.5&amp;lt;/OldToolsVersion&amp;gt;&lt;br/&gt;
+    &amp;lt;UpgradeBackupLocation /&amp;gt;&lt;br/&gt;
+    &amp;lt;PublishUrl&amp;gt;publish\&amp;lt;/PublishUrl&amp;gt;&lt;br/&gt;
+    &amp;lt;Install&amp;gt;true&amp;lt;/Install&amp;gt;&lt;br/&gt;
+    &amp;lt;InstallFrom&amp;gt;Disk&amp;lt;/InstallFrom&amp;gt;&lt;br/&gt;
+    &amp;lt;UpdateEnabled&amp;gt;false&amp;lt;/UpdateEnabled&amp;gt;&lt;br/&gt;
+    &amp;lt;UpdateMode&amp;gt;Foreground&amp;lt;/UpdateMode&amp;gt;&lt;br/&gt;
+    &amp;lt;UpdateInterval&amp;gt;7&amp;lt;/UpdateInterval&amp;gt;&lt;br/&gt;
+    &amp;lt;UpdateIntervalUnits&amp;gt;Days&amp;lt;/UpdateIntervalUnits&amp;gt;&lt;br/&gt;
+    &amp;lt;UpdatePeriodically&amp;gt;false&amp;lt;/UpdatePeriodically&amp;gt;&lt;br/&gt;
+    &amp;lt;UpdateRequired&amp;gt;false&amp;lt;/UpdateRequired&amp;gt;&lt;br/&gt;
+    &amp;lt;MapFileExtensions&amp;gt;true&amp;lt;/MapFileExtensions&amp;gt;&lt;br/&gt;
+    &amp;lt;ApplicationRevision&amp;gt;0&amp;lt;/ApplicationRevision&amp;gt;&lt;br/&gt;
+    &amp;lt;ApplicationVersion&amp;gt;1.0.0.%2a&amp;lt;/ApplicationVersion&amp;gt;&lt;br/&gt;
+    &amp;lt;IsWebBootstrapper&amp;gt;false&amp;lt;/IsWebBootstrapper&amp;gt;&lt;br/&gt;
+    &amp;lt;UseApplicationTrust&amp;gt;false&amp;lt;/UseApplicationTrust&amp;gt;&lt;br/&gt;
+    &amp;lt;BootstrapperEnabled&amp;gt;true&amp;lt;/BootstrapperEnabled&amp;gt;&lt;br/&gt;
     &amp;lt;TargetFrameworkProfile /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/PropertyGroup&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;PropertyGroup Condition=&quot; &apos;$(Configuration)|$(Platform)&apos; == &apos;Debug|AnyCPU&apos; &quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;DebugSymbols&amp;gt;true&amp;lt;/DebugSymbols&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;DebugType&amp;gt;full&amp;lt;/DebugType&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Optimize&amp;gt;false&amp;lt;/Optimize&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;OutputPath&amp;gt;..\..\..\build\test\Debug\&amp;lt;/OutputPath&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;DefineConstants&amp;gt;DEBUG;TRACE&amp;lt;/DefineConstants&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;ErrorReport&amp;gt;prompt&amp;lt;/ErrorReport&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;WarningLevel&amp;gt;4&amp;lt;/WarningLevel&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;GenerateSerializationAssemblies&amp;gt;Off&amp;lt;/GenerateSerializationAssemblies&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/PropertyGroup&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;PropertyGroup Condition=&quot; &apos;$(Configuration)|$(Platform)&apos; == &apos;Release|AnyCPU&apos; &quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;DebugType&amp;gt;none&amp;lt;/DebugType&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Optimize&amp;gt;true&amp;lt;/Optimize&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;OutputPath&amp;gt;..\..\..\build\test\Release\&amp;lt;/OutputPath&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;DefineConstants&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/DefineConstants&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;ErrorReport&amp;gt;prompt&amp;lt;/ErrorReport&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;WarningLevel&amp;gt;4&amp;lt;/WarningLevel&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;GenerateSerializationAssemblies&amp;gt;Off&amp;lt;/GenerateSerializationAssemblies&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/PropertyGroup&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;ItemGroup&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Reference Include=&quot;Castle.Core, Version=3.2.0.0, Culture=neutral, PublicKeyToken=407dd0808d44fbdc, processorArchitecture=MSIL&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;SpecificVersion&amp;gt;False&amp;lt;/SpecificVersion&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;HintPath&amp;gt;..\..\..\..\..\lang\csharp\lib\main\Castle.Core.dll&amp;lt;/HintPath&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/Reference&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Reference Include=&quot;nunit.framework, Version=2.5.7.10213, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77, processorArchitecture=MSIL&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;SpecificVersion&amp;gt;False&amp;lt;/SpecificVersion&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;HintPath&amp;gt;..\..\..\lib\test\nunit.framework.dll&amp;lt;/HintPath&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/Reference&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Reference Include=&quot;System&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Reference Include=&quot;System.Core&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Reference Include=&quot;System.Xml.Linq&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Reference Include=&quot;System.Data.DataSetExtensions&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Reference Include=&quot;System.Data&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Reference Include=&quot;System.Xml&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/ItemGroup&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;ItemGroup&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;CodGen\CodeGenTest.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;File\FileTests.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Generic\GenericTests.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;IO\BinaryCodecTests.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\All.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\AllCallback.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\AllEnum.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\AllTestRecord.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\AllTestRecordPartial.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\FixedTest.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\Kind.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\Mail.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\MailCallback.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\MD5.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\Message.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\Simple.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\SimpleCallback.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\TestError.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\TestRecord.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\TestRecordExtensions.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\TestRecordWithUnion.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\HttpClientServerTest.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\LocalTransceiverTest.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\MailResponder.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\SerializationTest.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\SocketServerConcurrentExecutionTest.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\SocketServerTest.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\SocketServerWithCallbacksTest.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Ipc\SocketTransceiverWhenServerStopsTest.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Properties\AssemblyInfo.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Protocol\ProtocolTest.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Schema\AliasTest.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Schema\SchemaNormalizationTests.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Schema\SchemaTests.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Specific\SpecificTests.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Utils\CaseFinder.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Compile Include=&quot;Utils\CaseFinderTests.cs&quot; /&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/ItemGroup&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;ItemGroup&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;ProjectReference Include=&quot;..\ipc\Avro.ipc.csproj&quot;&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;Project&amp;gt;
{3b05043a-dc6c-49b6-85bf-9ab055d0b414}&amp;lt;/Project&amp;gt;&lt;br/&gt;
-      &amp;lt;Name&amp;gt;Avro.ipc&amp;lt;/Name&amp;gt;&lt;br/&gt;
-    &amp;lt;/ProjectReference&amp;gt;&lt;br/&gt;
-    &amp;lt;ProjectReference Include=&quot;..\main\Avro.main.csproj&quot;&amp;gt;&lt;br/&gt;
-      &amp;lt;Project&amp;gt;{A0A5CA3C-F58C-4D07-98B0-2C7B62AB20F0}&amp;lt;/Project&amp;gt;&lt;br/&gt;
-      &amp;lt;Name&amp;gt;Avro.main&amp;lt;/Name&amp;gt;&lt;br/&gt;
-    &amp;lt;/ProjectReference&amp;gt;&lt;br/&gt;
-  &amp;lt;/ItemGroup&amp;gt;&lt;br/&gt;
-  &amp;lt;ItemGroup&amp;gt;&lt;br/&gt;
-    &amp;lt;BootstrapperPackage Include=&quot;.NETFramework,Version=v3.5&quot;&amp;gt;&lt;br/&gt;
-      &amp;lt;Visible&amp;gt;False&amp;lt;/Visible&amp;gt;&lt;br/&gt;
-      &amp;lt;ProductName&amp;gt;Microsoft .NET Framework 4 %28x86 and x64%29&amp;lt;/ProductName&amp;gt;&lt;br/&gt;
-      &amp;lt;Install&amp;gt;true&amp;lt;/Install&amp;gt;&lt;br/&gt;
-    &amp;lt;/BootstrapperPackage&amp;gt;&lt;br/&gt;
-    &amp;lt;BootstrapperPackage Include=&quot;Microsoft.Net.Framework.3.5.SP1&quot;&amp;gt;&lt;br/&gt;
-      &amp;lt;Visible&amp;gt;False&amp;lt;/Visible&amp;gt;&lt;br/&gt;
-      &amp;lt;ProductName&amp;gt;.NET Framework 3.5 SP1&amp;lt;/ProductName&amp;gt;&lt;br/&gt;
-      &amp;lt;Install&amp;gt;false&amp;lt;/Install&amp;gt;&lt;br/&gt;
-    &amp;lt;/BootstrapperPackage&amp;gt;&lt;br/&gt;
-    &amp;lt;BootstrapperPackage Include=&quot;Microsoft.Windows.Installer.3.1&quot;&amp;gt;&lt;br/&gt;
-      &amp;lt;Visible&amp;gt;False&amp;lt;/Visible&amp;gt;&lt;br/&gt;
-      &amp;lt;ProductName&amp;gt;Windows Installer 3.1&amp;lt;/ProductName&amp;gt;&lt;br/&gt;
-      &amp;lt;Install&amp;gt;true&amp;lt;/Install&amp;gt;&lt;br/&gt;
-    &amp;lt;/BootstrapperPackage&amp;gt;&lt;br/&gt;
-  &amp;lt;/ItemGroup&amp;gt;&lt;br/&gt;
-  &amp;lt;ItemGroup&amp;gt;&lt;br/&gt;
-    &amp;lt;EmbeddedResource Include=&quot;..\..\..\..\..\share\test\schemas\mail.avpr&quot;&amp;gt;&lt;br/&gt;
-      &amp;lt;Link&amp;gt;Ipc\mail.avpr&amp;lt;/Link&amp;gt;&lt;br/&gt;
-    &amp;lt;/EmbeddedResource&amp;gt;&lt;br/&gt;
-  &amp;lt;/ItemGroup&amp;gt;&lt;br/&gt;
-  &amp;lt;ItemGroup /&amp;gt;&lt;br/&gt;
-  &amp;lt;Import Project=&quot;$(MSBuildToolsPath)\Microsoft.CSharp.targets&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;NuGetPackageImportStamp&amp;gt;&lt;br/&gt;
+    &amp;lt;/NuGetPackageImportStamp&amp;gt;&lt;br/&gt;
+  &amp;lt;/PropertyGroup&amp;gt;&lt;br/&gt;
+  &amp;lt;PropertyGroup Condition=&quot; &apos;$(Configuration)|$(Platform)&apos; == &apos;Debug|AnyCPU&apos; &quot;&amp;gt;&lt;br/&gt;
+    &amp;lt;DebugSymbols&amp;gt;true&amp;lt;/DebugSymbols&amp;gt;&lt;br/&gt;
+    &amp;lt;DebugType&amp;gt;full&amp;lt;/DebugType&amp;gt;&lt;br/&gt;
+    &amp;lt;Optimize&amp;gt;false&amp;lt;/Optimize&amp;gt;&lt;br/&gt;
+    &amp;lt;OutputPath&amp;gt;..\..\..\build\test\Debug\&amp;lt;/OutputPath&amp;gt;&lt;br/&gt;
+    &amp;lt;DefineConstants&amp;gt;DEBUG;TRACE&amp;lt;/DefineConstants&amp;gt;&lt;br/&gt;
+    &amp;lt;ErrorReport&amp;gt;prompt&amp;lt;/ErrorReport&amp;gt;&lt;br/&gt;
+    &amp;lt;WarningLevel&amp;gt;4&amp;lt;/WarningLevel&amp;gt;&lt;br/&gt;
+    &amp;lt;GenerateSerializationAssemblies&amp;gt;Off&amp;lt;/GenerateSerializationAssemblies&amp;gt;&lt;br/&gt;
+  &amp;lt;/PropertyGroup&amp;gt;&lt;br/&gt;
+  &amp;lt;PropertyGroup Condition=&quot; &apos;$(Configuration)|$(Platform)&apos; == &apos;Release|AnyCPU&apos; &quot;&amp;gt;&lt;br/&gt;
+    &amp;lt;DebugType&amp;gt;none&amp;lt;/DebugType&amp;gt;&lt;br/&gt;
+    &amp;lt;Optimize&amp;gt;true&amp;lt;/Optimize&amp;gt;&lt;br/&gt;
+    &amp;lt;OutputPath&amp;gt;..\..\..\build\test\Release\&amp;lt;/OutputPath&amp;gt;&lt;br/&gt;
+    &amp;lt;DefineConstants&amp;gt;&lt;br/&gt;
+    &amp;lt;/DefineConstants&amp;gt;&lt;br/&gt;
+    &amp;lt;ErrorReport&amp;gt;prompt&amp;lt;/ErrorReport&amp;gt;&lt;br/&gt;
+    &amp;lt;WarningLevel&amp;gt;4&amp;lt;/WarningLevel&amp;gt;&lt;br/&gt;
+    &amp;lt;GenerateSerializationAssemblies&amp;gt;Off&amp;lt;/GenerateSerializationAssemblies&amp;gt;&lt;br/&gt;
+  &amp;lt;/PropertyGroup&amp;gt;&lt;br/&gt;
+  &amp;lt;ItemGroup&amp;gt;&lt;br/&gt;
+    &amp;lt;Reference Include=&quot;Castle.Core, Version=3.2.0.0, Culture=neutral, PublicKeyToken=407dd0808d44fbdc, processorArchitecture=MSIL&quot;&amp;gt;&lt;br/&gt;
+      &amp;lt;SpecificVersion&amp;gt;False&amp;lt;/SpecificVersion&amp;gt;&lt;br/&gt;
+      &amp;lt;HintPath&amp;gt;..\..\..\..\..\lang\csharp\lib\main\Castle.Core.dll&amp;lt;/HintPath&amp;gt;&lt;br/&gt;
+    &amp;lt;/Reference&amp;gt;&lt;br/&gt;
+    &amp;lt;Reference Include=&quot;System&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Reference Include=&quot;System.Core&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Reference Include=&quot;System.Xml.Linq&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Reference Include=&quot;System.Data.DataSetExtensions&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Reference Include=&quot;System.Data&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Reference Include=&quot;System.Xml&quot; /&amp;gt;&lt;br/&gt;
+  &amp;lt;/ItemGroup&amp;gt;&lt;br/&gt;
+  &amp;lt;ItemGroup&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;CodGen\CodeGenTest.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;File\FileTests.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Generic\GenericTests.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;IO\BinaryCodecTests.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\All.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\AllCallback.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\AllEnum.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\AllTestRecord.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\AllTestRecordPartial.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\FixedTest.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\Kind.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\Mail.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\MailCallback.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\MD5.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\Message.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\Simple.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\SimpleCallback.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\TestError.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\TestRecord.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\TestRecordExtensions.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\GeneratedFiles\org\apache\avro\test\TestRecordWithUnion.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\HttpClientServerTest.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\LocalTransceiverTest.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\MailResponder.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\SerializationTest.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\SocketServerConcurrentExecutionTest.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\SocketServerTest.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\SocketServerWithCallbacksTest.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Ipc\SocketTransceiverWhenServerStopsTest.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Properties\AssemblyInfo.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Protocol\ProtocolTest.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Schema\AliasTest.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Schema\SchemaNormalizationTests.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Schema\SchemaTests.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Specific\SpecificTests.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Utils\CaseFinder.cs&quot; /&amp;gt;&lt;br/&gt;
+    &amp;lt;Compile Include=&quot;Utils\CaseFinderTests.cs&quot; /&amp;gt;&lt;br/&gt;
+  &amp;lt;/ItemGroup&amp;gt;&lt;br/&gt;
+  &amp;lt;ItemGroup&amp;gt;&lt;br/&gt;
+    &amp;lt;ProjectReference Include=&quot;..\ipc\Avro.ipc.csproj&quot;&amp;gt;&lt;br/&gt;
+      &amp;lt;Project&amp;gt;{3b05043a-dc6c-49b6-85bf-9ab055d0b414}
&lt;p&gt;&amp;lt;/Project&amp;gt;&lt;br/&gt;
+      &amp;lt;Name&amp;gt;Avro.ipc&amp;lt;/Name&amp;gt;&lt;br/&gt;
+    &amp;lt;/ProjectReference&amp;gt;&lt;br/&gt;
+    &amp;lt;ProjectReference Include=&quot;..\main\Avro.main.csproj&quot;&amp;gt;&lt;br/&gt;
+      &amp;lt;Project&amp;gt;&lt;/p&gt;
{A0A5CA3C-F58C-4D07-98B0-2C7B62AB20F0}
&lt;p&gt;&amp;lt;/Project&amp;gt;&lt;br/&gt;
+      &amp;lt;Name&amp;gt;Avro.main&amp;lt;/Name&amp;gt;&lt;br/&gt;
+    &amp;lt;/ProjectReference&amp;gt;&lt;br/&gt;
+  &amp;lt;/ItemGroup&amp;gt;&lt;br/&gt;
+  &amp;lt;ItemGroup&amp;gt;&lt;br/&gt;
+    &amp;lt;BootstrapperPackage Include=&quot;.NETFramework,Version=v3.5&quot;&amp;gt;&lt;br/&gt;
+      &amp;lt;Visible&amp;gt;False&amp;lt;/Visible&amp;gt;&lt;br/&gt;
+      &amp;lt;ProductName&amp;gt;Microsoft .NET Framework 4 %28x86 and x64%29&amp;lt;/ProductName&amp;gt;&lt;br/&gt;
+      &amp;lt;Install&amp;gt;true&amp;lt;/Install&amp;gt;&lt;br/&gt;
+    &amp;lt;/BootstrapperPackage&amp;gt;&lt;br/&gt;
+    &amp;lt;BootstrapperPackage Include=&quot;Microsoft.Net.Framework.3.5.SP1&quot;&amp;gt;&lt;br/&gt;
+      &amp;lt;Visible&amp;gt;False&amp;lt;/Visible&amp;gt;&lt;br/&gt;
+      &amp;lt;ProductName&amp;gt;.NET Framework 3.5 SP1&amp;lt;/ProductName&amp;gt;&lt;br/&gt;
+      &amp;lt;Install&amp;gt;false&amp;lt;/Install&amp;gt;&lt;br/&gt;
+    &amp;lt;/BootstrapperPackage&amp;gt;&lt;br/&gt;
+    &amp;lt;BootstrapperPackage Include=&quot;Microsoft.Windows.Installer.3.1&quot;&amp;gt;&lt;br/&gt;
+      &amp;lt;Visible&amp;gt;False&amp;lt;/Visible&amp;gt;&lt;br/&gt;
+      &amp;lt;ProductName&amp;gt;Windows Installer 3.1&amp;lt;/ProductName&amp;gt;&lt;br/&gt;
+      &amp;lt;Install&amp;gt;true&amp;lt;/Install&amp;gt;&lt;br/&gt;
+    &amp;lt;/BootstrapperPackage&amp;gt;&lt;br/&gt;
+  &amp;lt;/ItemGroup&amp;gt;&lt;br/&gt;
+  &amp;lt;ItemGroup&amp;gt;&lt;br/&gt;
+    &amp;lt;EmbeddedResource Include=&quot;..\..\..\..\..\share\test\schemas\mail.avpr&quot;&amp;gt;&lt;br/&gt;
+      &amp;lt;Link&amp;gt;Ipc\mail.avpr&amp;lt;/Link&amp;gt;&lt;br/&gt;
+    &amp;lt;/EmbeddedResource&amp;gt;&lt;br/&gt;
+  &amp;lt;/ItemGroup&amp;gt;&lt;br/&gt;
+  &amp;lt;ItemGroup&amp;gt;&lt;br/&gt;
+    &amp;lt;Service Include=&quot;&lt;/p&gt;
{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}
&lt;p&gt;&quot; /&amp;gt;&lt;br/&gt;
+  &amp;lt;/ItemGroup&amp;gt;&lt;br/&gt;
+  &amp;lt;ItemGroup&amp;gt;&lt;br/&gt;
+    &amp;lt;PackageReference Include=&quot;nunit&quot;&amp;gt;&lt;br/&gt;
+      &amp;lt;Version&amp;gt;3.10.1&amp;lt;/Version&amp;gt;&lt;br/&gt;
+    &amp;lt;/PackageReference&amp;gt;&lt;br/&gt;
+    &amp;lt;PackageReference Include=&quot;nunit3testadapter&quot;&amp;gt;&lt;br/&gt;
+      &amp;lt;Version&amp;gt;3.10.0&amp;lt;/Version&amp;gt;&lt;br/&gt;
+    &amp;lt;/PackageReference&amp;gt;&lt;br/&gt;
+  &amp;lt;/ItemGroup&amp;gt;&lt;br/&gt;
+  &amp;lt;Import Project=&quot;$(MSBuildToolsPath)\Microsoft.CSharp.targets&quot; /&amp;gt;&lt;br/&gt;
   &amp;lt;!-- To modify your build process, add your task inside one of the targets below and uncomment it. &lt;br/&gt;
        Other similar extension points exist, see Microsoft.Common.targets.&lt;br/&gt;
   &amp;lt;Target Name=&quot;BeforeBuild&quot;&amp;gt;&lt;br/&gt;
   &amp;lt;/Target&amp;gt;&lt;br/&gt;
   &amp;lt;Target Name=&quot;AfterBuild&quot;&amp;gt;&lt;br/&gt;
   &amp;lt;/Target&amp;gt;&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;--&amp;gt;&lt;br/&gt;
+  --&amp;gt;&lt;br/&gt;
 &amp;lt;/Project&amp;gt;&lt;br/&gt;
\ No newline at end of file&lt;br/&gt;
diff --git a/lang/csharp/src/apache/test/CodGen/CodeGenTest.cs b/lang/csharp/src/apache/test/CodGen/CodeGenTest.cs&lt;br/&gt;
index c5428b31e..93dca8da4 100644
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/csharp/src/apache/test/CodGen/CodeGenTest.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/test/CodGen/CodeGenTest.cs&lt;br/&gt;
@@ -1,4 +1,4 @@&lt;br/&gt;
-&#65279;/**&lt;br/&gt;
+/**&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;Licensed to the Apache Software Foundation (ASF) under one&lt;/li&gt;
	&lt;li&gt;or more contributor license agreements.  See the NOTICE file&lt;/li&gt;
	&lt;li&gt;distributed with this work for additional information&lt;br/&gt;
@@ -48,7 +48,7 @@ class CodeGenTest
 			&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: { &amp;quot;&amp;quot;name&amp;quot;&amp;quot; }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt; 		]&lt;br/&gt;
 }&lt;br/&gt;
-&quot;, new object[] &lt;/p&gt;
{&quot;com.base.ClassKeywords&quot;, typeof(int), typeof(long), typeof(bool), typeof(double), typeof(float), typeof(byte[]), typeof(string),typeof(object),&quot;com.base.class&quot;, &quot;com.base.static&quot;})]&lt;br/&gt;
+&quot;, new object[] {&quot;com.base.ClassKeywords&quot;, typeof(int), typeof(long), typeof(bool), typeof(double), typeof(float), typeof(byte[]), typeof(string),typeof(object),&quot;com.base.class&quot;, &quot;com.base.static&quot;}
&lt;p&gt;, TestName = &quot;TestCodeGen0&quot;)]&lt;br/&gt;
         [TestCase(@&quot;&lt;/p&gt;
{
 &quot;&quot;type&quot;&quot; : &quot;&quot;record&quot;&quot;,
 &quot;&quot;name&quot;&quot; : &quot;&quot;SchemaObject&quot;&quot;,
@@ -67,7 +67,7 @@ class CodeGenTest
 		}
&lt;p&gt; 	]&lt;br/&gt;
 }&lt;br/&gt;
-&quot;, new object[] &lt;/p&gt;
{ &quot;schematest.SchemaObject&quot;, typeof(IList&amp;lt;object&amp;gt;) })]&lt;br/&gt;
+&quot;, new object[] { &quot;schematest.SchemaObject&quot;, typeof(IList&amp;lt;object&amp;gt;) }
&lt;p&gt;, TestName = &quot;TestCodeGen1&quot;)]&lt;br/&gt;
         public static void TestCodeGen(string str, object[] result)&lt;br/&gt;
         {&lt;br/&gt;
             Schema schema = Schema.Parse(str);&lt;br/&gt;
@@ -112,7 +112,7 @@ private static CompilerResults GenerateAssembly(CodeGen schema)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;             var comparam = new CompilerParameters(new string[] &lt;/p&gt;
{ &quot;mscorlib.dll&quot; });&lt;br/&gt;
             comparam.ReferencedAssemblies.Add(&quot;System.dll&quot;);&lt;br/&gt;
-            comparam.ReferencedAssemblies.Add(&quot;Avro.dll&quot;);&lt;br/&gt;
+            comparam.ReferencedAssemblies.Add(Path.Combine(TestContext.CurrentContext.TestDirectory, &quot;Avro.dll&quot;));&lt;br/&gt;
             comparam.GenerateInMemory = true;&lt;br/&gt;
             var ccp = new CSharpCodeProvider();&lt;br/&gt;
             var units = new[] { compileUnit };&lt;br/&gt;
diff --git a/lang/csharp/src/apache/test/File/FileTests.cs b/lang/csharp/src/apache/test/File/FileTests.cs&lt;br/&gt;
index b3dbfb28f..0d7433a8b 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/test/File/FileTests.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/test/File/FileTests.cs&lt;br/&gt;
@@ -1,4 +1,4 @@&lt;br/&gt;
-&#65279;/**&lt;br/&gt;
+/**&lt;br/&gt;
  * Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
  * or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
  * distributed with this work for additional information&lt;br/&gt;
@@ -40,15 +40,15 @@ public class FileTests&lt;br/&gt;
         /// &amp;lt;param name=&quot;schemaStr&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;recs&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;br/&gt;
         /// &amp;lt;param name=&quot;codecType&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;br/&gt;
-        [TestCase(specificSchema, new object[] { new object[] { &quot;John&quot;, 23 } }, Codec.Type.Deflate)]&lt;br/&gt;
-        [TestCase(specificSchema, new object[] { new object[] { &quot;Jane&quot;, 23 } }, Codec.Type.Deflate)]&lt;br/&gt;
-        [TestCase(specificSchema, new object[] { new object[] { &quot;John&quot;, 23 }, new object[] { &quot;Jane&quot;, 99 }, new object[] { &quot;Jeff&quot;, 88 } }, Codec.Type.Deflate)]&lt;br/&gt;
+        [TestCase(specificSchema, new object[] { new object[] { &quot;John&quot;, 23 } }, Codec.Type.Deflate, TestName = &quot;TestSpecificData0&quot;)]&lt;br/&gt;
+        [TestCase(specificSchema, new object[] { new object[] { &quot;Jane&quot;, 23 } }, Codec.Type.Deflate, TestName = &quot;TestSpecificData1&quot;)]&lt;br/&gt;
+        [TestCase(specificSchema, new object[] { new object[] { &quot;John&quot;, 23 }, new object[] { &quot;Jane&quot;, 99 }, new object[] { &quot;Jeff&quot;, 88 } }, Codec.Type.Deflate, TestName = &quot;TestSpecificData2&quot;)]&lt;br/&gt;
         [TestCase(specificSchema, new object[] { new object[] {&quot;John&quot;, 23}, new object[] { &quot;Jane&quot;, 99 }, new object[] { &quot;Jeff&quot;, 88 },&lt;br/&gt;
                                                  new object[] {&quot;James&quot;, 13}, new object[] { &quot;June&quot;, 109 }, new object[] { &quot;Lloyd&quot;, 18 },&lt;br/&gt;
-                                                 new object[] {&quot;Jenny&quot;, 3}, new object[] { &quot;Bob&quot;, 9 }, new object[] { null, 48 }}, Codec.Type.Deflate)]&lt;br/&gt;
-        [TestCase(specificSchema, new object[] { new object[] { &quot;John&quot;, 23 } }, Codec.Type.Null)]&lt;br/&gt;
-        [TestCase(specificSchema, new object[] { new object[] { &quot;Jane&quot;, 23 } }, Codec.Type.Null)]&lt;br/&gt;
-        [TestCase(specificSchema, new object[] { new object[] { &quot;John&quot;, 23 }, new object[] { &quot;Jane&quot;, 99 }, new object[] { &quot;Jeff&quot;, 88 } }, Codec.Type.Null)]&lt;br/&gt;
+                                                 new object[] {&quot;Jenny&quot;, 3}, new object[] { &quot;Bob&quot;, 9 }, new object[] { null, 48 }}, Codec.Type.Deflate, TestName = &quot;TestSpecificData3&quot;)]&lt;br/&gt;
+        [TestCase(specificSchema, new object[] { new object[] { &quot;John&quot;, 23 } }, Codec.Type.Null, TestName = &quot;TestSpecificData4&quot;)]&lt;br/&gt;
+        [TestCase(specificSchema, new object[] { new object[] { &quot;Jane&quot;, 23 } }, Codec.Type.Null, TestName = &quot;TestSpecificData5&quot;)]&lt;br/&gt;
+        [TestCase(specificSchema, new object[] { new object[] { &quot;John&quot;, 23 }, new object[] { &quot;Jane&quot;, 99 }, new object[] { &quot;Jeff&quot;, 88 } }, Codec.Type.Null, TestName = &quot;TestSpecificData6&quot;)]&lt;br/&gt;
         [TestCase(specificSchema, new object[] { new object[] {&quot;John&quot;, 23}, new object[] { &quot;Jane&quot;, 99 }, new object[] { &quot;Jeff&quot;, 88 },&lt;br/&gt;
                                                  new object[] {&quot;James&quot;, 13}, new object[] { &quot;June&quot;, 109 }, new object[] { &quot;Lloyd&quot;, 18 },&lt;br/&gt;
                                                  new object[] {&quot;Jamie&quot;, 53}, new object[] { &quot;Fanessa&quot;, 101 }, new object[] { &quot;Kan&quot;, 18 },&lt;br/&gt;
@@ -59,7 +59,7 @@ public class FileTests&lt;br/&gt;
                                                  new object[] {&quot;Ernie&quot;, 43}, new object[] { &quot;Joel&quot;, 99 }, new object[] { &quot;Dan&quot;, 78 },&lt;br/&gt;
                                                  new object[] {&quot;Dave&quot;, 103}, new object[] { &quot;Hillary&quot;, 79 }, new object[] { &quot;Grant&quot;, 88 },&lt;br/&gt;
                                                  new object[] {&quot;JJ&quot;, 14}, new object[] { &quot;Bill&quot;, 90 }, new object[] { &quot;Larry&quot;, 4 },&lt;br/&gt;
-                                                 new object[] {&quot;Jenny&quot;, 3}, new object[] { &quot;Bob&quot;, 9 }, new object[] { null, 48 }}, Codec.Type.Null)]&lt;br/&gt;
+                                                 new object[] {&quot;Jenny&quot;, 3}, new object[] { &quot;Bob&quot;, 9 }, new object[] { null, 48 }}, Codec.Type.Null, TestName = &quot;TestSpecificData7&quot;)]&lt;br/&gt;
         public void TestSpecificData(string schemaStr, object[] recs, Codec.Type codecType)&lt;br/&gt;
         {&lt;br/&gt;
             // create and write out&lt;br/&gt;
diff --git a/lang/csharp/src/apache/test/Generic/GenericTests.cs b/lang/csharp/src/apache/test/Generic/GenericTests.cs&lt;br/&gt;
index 19951fd0b..25450e381 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/test/Generic/GenericTests.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/test/Generic/GenericTests.cs&lt;br/&gt;
@@ -1,4 +1,4 @@&lt;br/&gt;
-&#65279;/**&lt;br/&gt;
+/**&lt;br/&gt;
  * Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
  * or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
  * distributed with this work for additional information&lt;br/&gt;
@@ -121,11 +121,17 @@ public void TestUnion_record(string unionSchema, string recordSchema, object[] v&lt;br/&gt;
         [TestCase(&quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;symbols\&quot;: [\&quot;s1\&quot;, \&quot;s2\&quot;], \&quot;name\&quot;: \&quot;e\&quot;}, \&amp;quot;string\&amp;quot;&amp;#93;&lt;/span&gt;&quot;,&lt;br/&gt;
             &quot;{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;symbols\&quot;: [\&quot;s1\&quot;, \&quot;s2\&quot;], \&quot;name\&quot;: \&quot;e\&quot;}&quot;, &quot;s2&quot;)]&lt;br/&gt;
         [TestCase(&quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;symbols\&quot;: [\&quot;s1\&quot;, \&quot;s2\&quot;], \&quot;name\&quot;: \&quot;e\&quot;}, \&amp;quot;string\&amp;quot;&amp;#93;&lt;/span&gt;&quot;,&lt;br/&gt;
-            &quot;{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;symbols\&quot;: [\&quot;s1\&quot;, \&quot;s2\&quot;], \&quot;name\&quot;: \&quot;e\&quot;}&quot;, &quot;s3&quot;,&lt;br/&gt;
-            ExpectedException = typeof(AvroException))]&lt;br/&gt;
-        public void TestUnion_enum(string unionSchema, string enumSchema, string value)&lt;br/&gt;
+            &quot;{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;symbols\&quot;: [\&quot;s1\&quot;, \&quot;s2\&quot;], \&quot;name\&quot;: \&quot;e\&quot;}&quot;, &quot;s3&quot;, typeof(AvroException))]&lt;br/&gt;
+        public void TestUnion_enum(string unionSchema, string enumSchema, string value, Type expectedExceptionType = null)&lt;br/&gt;
         {&lt;br/&gt;
-            test(unionSchema, mkEnum(enumSchema, value));&lt;br/&gt;
+            if (expectedExceptionType != null)&lt;br/&gt;
+            {&lt;br/&gt;
+                Assert.Throws(expectedExceptionType, () =&amp;gt; { test(unionSchema, mkEnum(enumSchema, value)); });&lt;br/&gt;
+            }&lt;br/&gt;
+            else&lt;br/&gt;
+            {
+                test(unionSchema, mkEnum(enumSchema, value));
+            }&lt;br/&gt;
         }&lt;br/&gt;
 &lt;br/&gt;
 &lt;br/&gt;
@@ -139,14 +145,19 @@ public void TestUnion_map(string unionSchema, string mapSchema, object[] value)&lt;br/&gt;
         [TestCase(&quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;size\&quot;: 2, \&quot;name\&quot;: \&quot;f\&quot;}, \&amp;quot;string\&amp;quot;&amp;#93;&lt;/span&gt;&quot;,&lt;br/&gt;
             &quot;{\&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;size\&quot;: 2, \&quot;name\&quot;: \&quot;f\&quot;}&quot;, new byte[] { 1, 2 })]&lt;br/&gt;
         [TestCase(&quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;size\&quot;: 2, \&quot;name\&quot;: \&quot;f\&quot;}, \&amp;quot;string\&amp;quot;&amp;#93;&lt;/span&gt;&quot;,&lt;br/&gt;
-            &quot;{\&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;size\&quot;: 2, \&quot;name\&quot;: \&quot;f\&quot;}&quot;, new byte[] { 1, 2, 3 },&lt;br/&gt;
-            ExpectedException = typeof(AvroException))]&lt;br/&gt;
+            &quot;{\&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;size\&quot;: 2, \&quot;name\&quot;: \&quot;f\&quot;}&quot;, new byte[] { 1, 2, 3 }, typeof(AvroException))]&lt;br/&gt;
         [TestCase(&quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;size\&quot;: 2, \&quot;name\&quot;: \&quot;f\&quot;}, \&amp;quot;string\&amp;quot;&amp;#93;&lt;/span&gt;&quot;,&lt;br/&gt;
-            &quot;{\&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;size\&quot;: 3, \&quot;name\&quot;: \&quot;f\&quot;}&quot;, new byte[] { 1, 2, 3 },&lt;br/&gt;
-            ExpectedException = typeof(AvroException))]&lt;br/&gt;
-        public void TestUnion_fixed(string unionSchema, string fixedSchema, byte[] value)&lt;br/&gt;
+            &quot;{\&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;size\&quot;: 3, \&quot;name\&quot;: \&quot;f\&quot;}&quot;, new byte[] { 1, 2, 3 }, typeof(AvroException))]&lt;br/&gt;
+        public void TestUnion_fixed(string unionSchema, string fixedSchema, byte[] value, Type expectedExceptionType = null)&lt;br/&gt;
         {&lt;br/&gt;
-            test(unionSchema, mkFixed(fixedSchema, value));&lt;br/&gt;
+            if (expectedExceptionType != null)&lt;br/&gt;
+            {&lt;br/&gt;
+                Assert.Throws(expectedExceptionType, () =&amp;gt; { test(unionSchema, mkFixed(fixedSchema, value)); });&lt;br/&gt;
+            }&lt;br/&gt;
+            else&lt;br/&gt;
+            {
+                test(unionSchema, mkFixed(fixedSchema, value));
+            }&lt;br/&gt;
         }&lt;br/&gt;
 &lt;br/&gt;
         public void TestResolution&amp;lt;T, S&amp;gt;(string writerSchema, T actual, string readerSchema, S expected)&lt;br/&gt;
@@ -300,89 +311,124 @@ private static void testResolutionMismatch&amp;lt;T&amp;gt;(string writerSchema, T value, stri&lt;br/&gt;
             deserialize&amp;lt;object&amp;gt;(ms, ws, Schema.Parse(readerSchema));&lt;br/&gt;
         }&lt;br/&gt;
 &lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;boolean&amp;quot;, true, &amp;quot;null&amp;quot;, ExpectedException = typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;int&amp;quot;, 10, &amp;quot;boolean&amp;quot;, ExpectedException = typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;int&amp;quot;, 10, &amp;quot;string&amp;quot;, ExpectedException = typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;int&amp;quot;, 10, &amp;quot;bytes&amp;quot;, ExpectedException = typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;boolean&amp;quot;, true, &amp;quot;null&amp;quot;, typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;int&amp;quot;, 10, &amp;quot;boolean&amp;quot;, typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;int&amp;quot;, 10, &amp;quot;string&amp;quot;, typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;int&amp;quot;, 10, &amp;quot;bytes&amp;quot;, typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
         [TestCase(&quot;int&quot;, 10, &quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;r\&quot;,\&quot;fields\&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;name\&quot;:\&quot;f\&quot;, \&quot;type\&quot;:\&quot;int\&quot;}&amp;#93;&lt;/span&gt;}&quot;,&lt;br/&gt;
-            ExpectedException = typeof(AvroException))]&lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;int&amp;quot;, 10, &amp;quot;{\&quot;type\&quot;:\&quot;enum\&quot;,\&quot;name\&quot;:\&quot;e\&quot;,\&quot;symbols\&quot;:[\&quot;s\&quot;, \&quot;t\&quot;]}&amp;quot;, ExpectedException = typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;int&amp;quot;, 10, &amp;quot;{\&quot;type\&quot;:\&quot;array\&quot;,\&quot;items\&quot;:\&quot;int\&quot;}&amp;quot;, ExpectedException = typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;int&amp;quot;, 10, &amp;quot;{\&quot;type\&quot;:\&quot;map\&quot;,\&quot;values\&quot;:\&quot;int\&quot;}&amp;quot;, ExpectedException = typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
-        [TestCase(&quot;int&quot;, 10, &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;\&amp;quot;string\&amp;quot;, \&amp;quot;bytes\&amp;quot;&amp;#93;&lt;/span&gt;&quot;, ExpectedException = typeof(AvroException))]&lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;int&amp;quot;, 10, &amp;quot;{\&quot;type\&quot;:\&quot;fixed\&quot;,\&quot;name\&quot;:\&quot;f\&quot;,\&quot;size\&quot;:2}&amp;quot;, ExpectedException = typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
+            typeof(AvroException))]&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;int&amp;quot;, 10, &amp;quot;{\&quot;type\&quot;:\&quot;enum\&quot;,\&quot;name\&quot;:\&quot;e\&quot;,\&quot;symbols\&quot;:[\&quot;s\&quot;, \&quot;t\&quot;]}&amp;quot;, typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;int&amp;quot;, 10, &amp;quot;{\&quot;type\&quot;:\&quot;array\&quot;,\&quot;items\&quot;:\&quot;int\&quot;}&amp;quot;, typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;int&amp;quot;, 10, &amp;quot;{\&quot;type\&quot;:\&quot;map\&quot;,\&quot;values\&quot;:\&quot;int\&quot;}&amp;quot;, typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        [TestCase(&quot;int&quot;, 10, &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;\&amp;quot;string\&amp;quot;, \&amp;quot;bytes\&amp;quot;&amp;#93;&lt;/span&gt;&quot;, typeof(AvroException))]&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;int&amp;quot;, 10, &amp;quot;{\&quot;type\&quot;:\&quot;fixed\&quot;,\&quot;name\&quot;:\&quot;f\&quot;,\&quot;size\&quot;:2}&amp;quot;, typeof(AvroException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;array\&quot;,\&quot;items\&quot;:\&quot;int\&quot;}&quot;, new int[] { 10 },&lt;br/&gt;
-            &quot;\&quot;boolean\&quot;&quot;, ExpectedException = typeof(AvroException))]&lt;br/&gt;
+            &quot;\&quot;boolean\&quot;&quot;, typeof(AvroException))]&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;array\&quot;,\&quot;items\&quot;:\&quot;int\&quot;}&quot;, new int[] { 10 },&lt;br/&gt;
-            &quot;{\&quot;type\&quot;:\&quot;array\&quot;,\&quot;items\&quot;:\&quot;string\&quot;}&quot;, ExpectedException = typeof(AvroException))]&lt;br/&gt;
-        [TestCase(&quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;\&amp;quot;int\&amp;quot;, \&amp;quot;boolean\&amp;quot;&amp;#93;&lt;/span&gt;&quot;, 10, &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;\&amp;quot;string\&amp;quot;, \&amp;quot;bytes\&amp;quot;&amp;#93;&lt;/span&gt;&quot;, ExpectedException = typeof(AvroException))]&lt;br/&gt;
-        [TestCase(&quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;\&amp;quot;int\&amp;quot;, \&amp;quot;boolean\&amp;quot;&amp;#93;&lt;/span&gt;&quot;, 10, &quot;\&quot;string\&quot;&quot;, ExpectedException = typeof(AvroException))]&lt;br/&gt;
-        public void TestResolutionMismatch_simple(string writerSchema, object value, string readerSchema)&lt;br/&gt;
+            &quot;{\&quot;type\&quot;:\&quot;array\&quot;,\&quot;items\&quot;:\&quot;string\&quot;}&quot;, typeof(AvroException))]&lt;br/&gt;
+        [TestCase(&quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;\&amp;quot;int\&amp;quot;, \&amp;quot;boolean\&amp;quot;&amp;#93;&lt;/span&gt;&quot;, 10, &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;\&amp;quot;string\&amp;quot;, \&amp;quot;bytes\&amp;quot;&amp;#93;&lt;/span&gt;&quot;, typeof(AvroException))]&lt;br/&gt;
+        [TestCase(&quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;\&amp;quot;int\&amp;quot;, \&amp;quot;boolean\&amp;quot;&amp;#93;&lt;/span&gt;&quot;, 10, &quot;\&quot;string\&quot;&quot;, typeof(AvroException))]&lt;br/&gt;
+        public void TestResolutionMismatch_simple(string writerSchema, object value, string readerSchema, Type expectedExceptionType = null)&lt;br/&gt;
         {&lt;br/&gt;
-            testResolutionMismatch(writerSchema, value, readerSchema);&lt;br/&gt;
+            if (expectedExceptionType != null)&lt;br/&gt;
+            {&lt;br/&gt;
+                Assert.Throws(expectedExceptionType, () =&amp;gt; { testResolutionMismatch(writerSchema, value, readerSchema); });&lt;br/&gt;
+            }&lt;br/&gt;
+            else&lt;br/&gt;
+            {
+                testResolutionMismatch(writerSchema, value, readerSchema);
+            }&lt;br/&gt;
         }&lt;br/&gt;
 &lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;r\&quot;,\&quot;fields\&quot;:&quot; +&lt;br/&gt;
             &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;name\&quot;:\&quot;f1\&quot;,\&quot;type\&quot;:[\&quot;int\&quot;, \&quot;null\&quot;]},{\&quot;name\&quot;:\&quot;f2\&quot;,\&quot;type\&quot;:\&quot;int\&quot;}&amp;#93;&lt;/span&gt;}&quot;,&lt;br/&gt;
             new object[] { &quot;f1&quot;, 101, &quot;f2&quot;, 100 }, &quot;int&quot;,&lt;br/&gt;
-            ExpectedException = typeof(AvroException), Description = &quot;Non-record schema&quot;)]&lt;br/&gt;
+            typeof(AvroException), Description = &quot;Non-record schema&quot;)]&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;r\&quot;,\&quot;fields\&quot;:&quot; +&lt;br/&gt;
             &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;name\&quot;:\&quot;f1\&quot;,\&quot;type\&quot;:[\&quot;int\&quot;, \&quot;null\&quot;]},{\&quot;name\&quot;:\&quot;f2\&quot;,\&quot;type\&quot;:\&quot;int\&quot;}&amp;#93;&lt;/span&gt;}&quot;,&lt;br/&gt;
             new object[] { &quot;f1&quot;, 101, &quot;f2&quot;, 100 },&lt;br/&gt;
             &quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;s\&quot;,\&quot;fields\&quot;:&quot; +&lt;br/&gt;
             &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;name\&quot;:\&quot;f2\&quot;,\&quot;type\&quot;:\&quot;int\&quot;}&amp;#93;&lt;/span&gt;}&quot;,&lt;br/&gt;
-            ExpectedException = typeof(AvroException), Description = &quot;Name mismatch&quot;)]&lt;br/&gt;
+            typeof(AvroException), Description = &quot;Name mismatch&quot;)]&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;r\&quot;,\&quot;fields\&quot;:&quot; +&lt;br/&gt;
             &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;name\&quot;:\&quot;f1\&quot;,\&quot;type\&quot;:[\&quot;int\&quot;, \&quot;null\&quot;]},{\&quot;name\&quot;:\&quot;f2\&quot;,\&quot;type\&quot;:\&quot;int\&quot;}&amp;#93;&lt;/span&gt;}&quot;,&lt;br/&gt;
             new object[] { &quot;f1&quot;, 101, &quot;f2&quot;, 100 },&lt;br/&gt;
             &quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;r\&quot;,\&quot;fields\&quot;:&quot; +&lt;br/&gt;
             &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;name\&quot;:\&quot;f2\&quot;,\&quot;type\&quot;:\&quot;string\&quot;}&amp;#93;&lt;/span&gt;}&quot;,&lt;br/&gt;
-            ExpectedException = typeof(AvroException), Description = &quot;incompatible field&quot;)]&lt;br/&gt;
+            typeof(AvroException), Description = &quot;incompatible field&quot;)]&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;r\&quot;,\&quot;fields\&quot;:&quot; +&lt;br/&gt;
             &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;name\&quot;:\&quot;f1\&quot;,\&quot;type\&quot;:[\&quot;int\&quot;, \&quot;null\&quot;]},{\&quot;name\&quot;:\&quot;f2\&quot;,\&quot;type\&quot;:\&quot;int\&quot;}&amp;#93;&lt;/span&gt;}&quot;,&lt;br/&gt;
             new object[] { &quot;f1&quot;, 101, &quot;f2&quot;, 100 },&lt;br/&gt;
             &quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;r\&quot;,\&quot;fields\&quot;:&quot; +&lt;br/&gt;
             &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;name\&quot;:\&quot;f3\&quot;,\&quot;type\&quot;:\&quot;string\&quot;}&amp;#93;&lt;/span&gt;}&quot;,&lt;br/&gt;
-            ExpectedException = typeof(AvroException), Description = &quot;new field without default&quot;)]&lt;br/&gt;
-        public void TestResolutionMismatch_record(string ws, object[] actual, string rs)&lt;br/&gt;
+            typeof(AvroException), Description = &quot;new field without default&quot;)]&lt;br/&gt;
+        public void TestResolutionMismatch_record(string ws, object[] actual, string rs, Type expectedExceptionType = null)&lt;br/&gt;
         {&lt;br/&gt;
-            testResolutionMismatch(ws, mkRecord(actual, Schema.Parse(ws) as RecordSchema), rs);&lt;br/&gt;
+            if (expectedExceptionType != null)&lt;br/&gt;
+            {&lt;br/&gt;
+                Assert.Throws(expectedExceptionType, () =&amp;gt; { testResolutionMismatch(ws, mkRecord(actual, Schema.Parse(ws) as RecordSchema), rs); });&lt;br/&gt;
+            }&lt;br/&gt;
+            else&lt;br/&gt;
+            {
+                testResolutionMismatch(ws, mkRecord(actual, Schema.Parse(ws) as RecordSchema), rs);
+            }&lt;br/&gt;
         }&lt;br/&gt;
 &lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;enum\&quot;,\&quot;name\&quot;:\&quot;e\&quot;,\&quot;symbols\&quot;:[\&quot;s\&quot;, \&quot;t\&quot;]}&quot;, &quot;s&quot;, &quot;int&quot;,&lt;br/&gt;
-            ExpectedException = typeof(AvroException), Description = &quot;Non-enum schema&quot;)]&lt;br/&gt;
+            typeof(AvroException), Description = &quot;Non-enum schema&quot;)]&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;enum\&quot;,\&quot;name\&quot;:\&quot;e\&quot;,\&quot;symbols\&quot;:[\&quot;s\&quot;, \&quot;t\&quot;]}&quot;,&lt;br/&gt;
             &quot;s&quot;, &quot;{\&quot;type\&quot;:\&quot;enum\&quot;,\&quot;name\&quot;:\&quot;f\&quot;,\&quot;symbols\&quot;:[\&quot;s\&quot;, \&quot;t\&quot;]}&quot;,&lt;br/&gt;
-            ExpectedException = typeof(AvroException), Description = &quot;Name mismatch&quot;)]&lt;br/&gt;
+            typeof(AvroException), Description = &quot;Name mismatch&quot;)]&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;enum\&quot;,\&quot;name\&quot;:\&quot;e\&quot;,\&quot;symbols\&quot;:[\&quot;s\&quot;, \&quot;t\&quot;]}&quot;,&lt;br/&gt;
             &quot;s&quot;, &quot;{\&quot;type\&quot;:\&quot;enum\&quot;,\&quot;name\&quot;:\&quot;f\&quot;,\&quot;symbols\&quot;:[\&quot;t\&quot;, \&quot;u\&quot;]}&quot;,&lt;br/&gt;
-            ExpectedException = typeof(AvroException), Description = &quot;Incompatible symbols&quot;)]&lt;br/&gt;
-        public void TestResolutionMismatch_enum(string ws, string value, string rs)&lt;br/&gt;
+            typeof(AvroException), Description = &quot;Incompatible symbols&quot;)]&lt;br/&gt;
+        public void TestResolutionMismatch_enum(string ws, string value, string rs, Type expectedExceptionType = null)&lt;br/&gt;
         {&lt;br/&gt;
-            testResolutionMismatch(ws, mkEnum(ws, value), rs);&lt;br/&gt;
+            if (expectedExceptionType != null)&lt;br/&gt;
+            {&lt;br/&gt;
+                Assert.Throws(expectedExceptionType, () =&amp;gt; { testResolutionMismatch(ws, mkEnum(ws, value), rs); });&lt;br/&gt;
+            }&lt;br/&gt;
+            else&lt;br/&gt;
+            {
+                testResolutionMismatch(ws, mkEnum(ws, value), rs);
+            }&lt;br/&gt;
         }&lt;br/&gt;
 &lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;map\&quot;,\&quot;values\&quot;:\&quot;int\&quot;}&quot;, new object[] { &quot;a&quot;, 0 }, &quot;int&quot;,&lt;br/&gt;
-            ExpectedException = typeof(AvroException), Description = &quot;Non-map schema&quot;)]&lt;br/&gt;
+            typeof(AvroException), Description = &quot;Non-map schema&quot;)]&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;map\&quot;,\&quot;values\&quot;:\&quot;int\&quot;}&quot;,&lt;br/&gt;
             new object[] { &quot;a&quot;, 0 }, &quot;{\&quot;type\&quot;:\&quot;map\&quot;,\&quot;values\&quot;:\&quot;string\&quot;}&quot;,&lt;br/&gt;
-            ExpectedException = typeof(AvroException), Description = &quot;Name mismatch&quot;)]&lt;br/&gt;
-        public void TestResolutionMismatch_map(string ws, object[] value, string rs)&lt;br/&gt;
+            typeof(AvroException), Description = &quot;Name mismatch&quot;)]&lt;br/&gt;
+        public void TestResolutionMismatch_map(string ws, object[] value, string rs, Type expectedExceptionType = null)&lt;br/&gt;
         {&lt;br/&gt;
-            testResolutionMismatch(ws, mkMap(value), rs);&lt;br/&gt;
+            if (expectedExceptionType != null)&lt;br/&gt;
+            {&lt;br/&gt;
+                Assert.Throws(expectedExceptionType, () =&amp;gt; { testResolutionMismatch(ws, mkMap(value), rs); });&lt;br/&gt;
+            }&lt;br/&gt;
+            else&lt;br/&gt;
+            {
+                testResolutionMismatch(ws, mkMap(value), rs);
+            }&lt;br/&gt;
         }&lt;br/&gt;
 &lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;fixed\&quot;,\&quot;name\&quot;:\&quot;f\&quot;,\&quot;size\&quot;:2}&quot;, new byte[] { 1, 1 }, &quot;int&quot;,&lt;br/&gt;
-            ExpectedException = typeof(AvroException), Description = &quot;Non-fixed schema&quot;)]&lt;br/&gt;
+            typeof(AvroException), Description = &quot;Non-fixed schema&quot;)]&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;fixed\&quot;,\&quot;name\&quot;:\&quot;f\&quot;,\&quot;size\&quot;:2}&quot;,&lt;br/&gt;
             new byte[] { 1, 1 }, &quot;{\&quot;type\&quot;:\&quot;fixed\&quot;,\&quot;name\&quot;:\&quot;g\&quot;,\&quot;size\&quot;:2}&quot;,&lt;br/&gt;
-            ExpectedException = typeof(AvroException), Description = &quot;Name mismatch&quot;)]&lt;br/&gt;
+            typeof(AvroException), Description = &quot;Name mismatch&quot;)]&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;fixed\&quot;,\&quot;name\&quot;:\&quot;f\&quot;,\&quot;size\&quot;:2}&quot;,&lt;br/&gt;
             new byte[] { 1, 1 }, &quot;{\&quot;type\&quot;:\&quot;fixed\&quot;,\&quot;name\&quot;:\&quot;f\&quot;,\&quot;size\&quot;:1}&quot;,&lt;br/&gt;
-            ExpectedException = typeof(AvroException), Description = &quot;Size mismatch&quot;)]&lt;br/&gt;
-        public void TestResolutionMismatch_fixed(string ws, byte[] value, string rs)&lt;br/&gt;
+            typeof(AvroException), Description = &quot;Size mismatch&quot;)]&lt;br/&gt;
+        public void TestResolutionMismatch_fixed(string ws, byte[] value, string rs, Type expectedExceptionType = null)&lt;br/&gt;
         {&lt;br/&gt;
-            testResolutionMismatch(ws, mkFixed(ws, value), rs);&lt;br/&gt;
+            if (expectedExceptionType != null)&lt;br/&gt;
+            {&lt;br/&gt;
+                Assert.Throws(expectedExceptionType, () =&amp;gt; { testResolutionMismatch(ws, mkFixed(ws, value), rs); });&lt;br/&gt;
+            }&lt;br/&gt;
+            else&lt;br/&gt;
+            {
+                 testResolutionMismatch(ws, mkFixed(ws, value), rs); 
+            }&lt;br/&gt;
         }&lt;br/&gt;
 &lt;br/&gt;
         private static GenericRecord mkRecord(object[] kv, RecordSchema s)&lt;br/&gt;
diff --git a/lang/csharp/src/apache/test/Ipc/HttpClientServerTest.cs b/lang/csharp/src/apache/test/Ipc/HttpClientServerTest.cs&lt;br/&gt;
index 5c2ddf6cd..36979006e 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/test/Ipc/HttpClientServerTest.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/test/Ipc/HttpClientServerTest.cs&lt;br/&gt;
@@ -1,4 +1,4 @@&lt;br/&gt;
-&#65279;/**&lt;br/&gt;
+/**&lt;br/&gt;
  * Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
  * or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
  * distributed with this work for additional information&lt;br/&gt;
@@ -42,7 +42,7 @@ public class HttpClientServerTest&lt;br/&gt;
 &lt;br/&gt;
         const string URL = @&quot;http://localhost:18080/avro/test/ipc/mailResponder/&quot;;&lt;br/&gt;
 &lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestFixtureSetUp&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;OneTimeSetUp&amp;#93;&lt;/span&gt;&lt;br/&gt;
         //&lt;span class=&quot;error&quot;&gt;&amp;#91;TestInitialize&amp;#93;&lt;/span&gt;&lt;br/&gt;
         public void Init()&lt;br/&gt;
         {
@@ -58,7 +58,7 @@ public void Init()
             proxy = new GenericRequestor(transceiver, MailResponder.Protocol);
         }&lt;br/&gt;
 &lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestFixtureTearDown&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;OneTimeTearDown&amp;#93;&lt;/span&gt;&lt;br/&gt;
         //&lt;span class=&quot;error&quot;&gt;&amp;#91;TestCleanup&amp;#93;&lt;/span&gt;&lt;br/&gt;
         public void Cleanup()&lt;br/&gt;
         {&lt;br/&gt;
diff --git a/lang/csharp/src/apache/test/Ipc/SerializationTest.cs b/lang/csharp/src/apache/test/Ipc/SerializationTest.cs&lt;br/&gt;
index 84104a0e5..58198023c 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/test/Ipc/SerializationTest.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/test/Ipc/SerializationTest.cs&lt;br/&gt;
@@ -1,4 +1,4 @@&lt;br/&gt;
-&#65279;/**&lt;br/&gt;
+/**&lt;br/&gt;
  * Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
  * or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
  * distributed with this work for additional information&lt;br/&gt;
@@ -60,7 +60,7 @@ public override AllTestRecord echo(AllTestRecord allTest)&lt;br/&gt;
         private SocketTransceiver transceiver;&lt;br/&gt;
         private All simpleClient;&lt;br/&gt;
 &lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestFixtureSetUp&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;OneTimeSetUp&amp;#93;&lt;/span&gt;&lt;br/&gt;
         public void Init()&lt;br/&gt;
         {
             var mailResponder = new SpecificResponder&amp;lt;All&amp;gt;(new AllImpl());
@@ -73,7 +73,7 @@ public void Init()
             simpleClient = SpecificRequestor.CreateClient&amp;lt;All&amp;gt;(transceiver);
         }&lt;br/&gt;
 &lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestFixtureTearDown&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;OneTimeTearDown&amp;#93;&lt;/span&gt;&lt;br/&gt;
         public void Cleanup()&lt;br/&gt;
         {
             server.Stop();
@@ -150,4 +150,4 @@ private static AllTestRecord CreateExpectedTestData()
             };&lt;br/&gt;
         }&lt;br/&gt;
     }&lt;br/&gt;
-}&lt;br/&gt;
\ No newline at end of file&lt;br/&gt;
+}&lt;br/&gt;
diff --git a/lang/csharp/src/apache/test/Ipc/SocketServerTest.cs b/lang/csharp/src/apache/test/Ipc/SocketServerTest.cs&lt;br/&gt;
index 1a1747bfa..9d091ae3d 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/test/Ipc/SocketServerTest.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/test/Ipc/SocketServerTest.cs&lt;br/&gt;
@@ -1,4 +1,4 @@&lt;br/&gt;
-&#65279;/**&lt;br/&gt;
+/**&lt;br/&gt;
  * Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
  * or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
  * distributed with this work for additional information&lt;br/&gt;
@@ -33,7 +33,7 @@ public class SocketServerTest&lt;br/&gt;
         private SocketTransceiver transceiver;&lt;br/&gt;
         private GenericRequestor proxy;&lt;br/&gt;
 &lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestFixtureSetUp&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;OneTimeSetUp&amp;#93;&lt;/span&gt;&lt;br/&gt;
         public void Init()&lt;br/&gt;
         {
             mailResponder = new MailResponder();
@@ -45,7 +45,7 @@ public void Init()
             proxy = new GenericRequestor(transceiver, MailResponder.Protocol);
         }&lt;br/&gt;
 &lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestFixtureTearDown&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;OneTimeTearDown&amp;#93;&lt;/span&gt;&lt;br/&gt;
         public void Cleanup()&lt;br/&gt;
         {
             server.Stop();
@@ -184,4 +184,4 @@ public void TestRequestResponse()
             }&lt;br/&gt;
         }&lt;br/&gt;
     }&lt;br/&gt;
-}&lt;br/&gt;
\ No newline at end of file&lt;br/&gt;
+}&lt;br/&gt;
diff --git a/lang/csharp/src/apache/test/Ipc/SocketServerWithCallbacksTest.cs b/lang/csharp/src/apache/test/Ipc/SocketServerWithCallbacksTest.cs&lt;br/&gt;
index c625e63ec..d8fb57d00 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/test/Ipc/SocketServerWithCallbacksTest.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/test/Ipc/SocketServerWithCallbacksTest.cs&lt;br/&gt;
@@ -1,4 +1,4 @@&lt;br/&gt;
-&#65279;/**&lt;br/&gt;
+/**&lt;br/&gt;
  * Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
  * or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
  * distributed with this work for additional information&lt;br/&gt;
@@ -37,7 +37,7 @@ public class SocketServerWithCallbacksTest&lt;br/&gt;
         private SocketTransceiver transceiver;&lt;br/&gt;
         private SimpleCallback simpleClient;&lt;br/&gt;
 &lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestFixtureSetUp&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;OneTimeSetUp&amp;#93;&lt;/span&gt;&lt;br/&gt;
         public void Init()&lt;br/&gt;
         {
             var responder = new SpecificResponder&amp;lt;Simple&amp;gt;(new SimpleImpl());
@@ -48,7 +48,7 @@ public void Init()
             simpleClient = SpecificRequestor.CreateClient&amp;lt;SimpleCallback&amp;gt;(transceiver);
         }&lt;br/&gt;
 &lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestFixtureTearDown&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;OneTimeTearDown&amp;#93;&lt;/span&gt;&lt;br/&gt;
         public void TearDown()&lt;br/&gt;
         {
             try
@@ -803,4 +803,4 @@ public override void ack()
         }&lt;br/&gt;
 &lt;br/&gt;
     }&lt;br/&gt;
-}&lt;br/&gt;
\ No newline at end of file&lt;br/&gt;
+}&lt;br/&gt;
diff --git a/lang/csharp/src/apache/test/Protocol/ProtocolTest.cs b/lang/csharp/src/apache/test/Protocol/ProtocolTest.cs&lt;br/&gt;
index 19eeee8b3..453d2ed1b 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/test/Protocol/ProtocolTest.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/test/Protocol/ProtocolTest.cs&lt;br/&gt;
@@ -1,4 +1,4 @@&lt;br/&gt;
-&#65279;/**&lt;br/&gt;
+/**&lt;br/&gt;
  * Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
  * or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
  * distributed with this work for additional information&lt;br/&gt;
@@ -49,7 +49,7 @@ public class ProtocolTest&lt;br/&gt;
       &quot;&quot;errors&quot;&quot;: &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;Curse&amp;quot;&amp;quot;, &amp;quot;&amp;quot;CurseMore&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;&lt;br/&gt;
     }&lt;br/&gt;
   }&lt;br/&gt;
-}&quot;, true)]&lt;br/&gt;
+}&quot;, true, TestName = &quot;TestProtocol0&quot;)]&lt;br/&gt;
         [TestCase(@&quot;{
   &quot;&quot;protocol&quot;&quot; : &quot;&quot;MyProtocol&quot;&quot;,
   &quot;&quot;namespace&quot;&quot; : &quot;&quot;com.foo&quot;&quot;,
@@ -107,7 +107,7 @@ public class ProtocolTest
 	&quot;&quot;type&quot;&quot; : &quot;&quot;int&quot;&quot;
    }&lt;br/&gt;
    ]&lt;br/&gt;
-}&quot;, true)]&lt;br/&gt;
+}&quot;, true, TestName = &quot;TestProtocol1&quot;)]&lt;br/&gt;
         [TestCase(@&quot;{
   &quot;&quot;protocol&quot;&quot; : &quot;&quot;MyProtocol&quot;&quot;,
   &quot;&quot;namespace&quot;&quot; : &quot;&quot;com.bar&quot;&quot;,
@@ -168,7 +168,7 @@ public class ProtocolTest
 	&quot;&quot;type&quot;&quot; : &quot;&quot;int&quot;&quot;
    }&lt;br/&gt;
    ]&lt;br/&gt;
-}&quot;, true)]&lt;br/&gt;
+}&quot;, true, TestName = &quot;TestProtocol2&quot;)]&lt;br/&gt;
         public static void TestProtocol(string str, bool valid)&lt;br/&gt;
         {
             Protocol protocol = Protocol.Parse(str);
@@ -221,7 +221,7 @@ public static void TestProtocol(string str, bool valid)
     }&lt;br/&gt;
   }&lt;br/&gt;
 }&quot;,&lt;br/&gt;
-  true,true)]&lt;br/&gt;
+  true,true, TestName = &quot;TestProtocolHash_ProtocolsMatch&quot;)]&lt;br/&gt;
         // Protocols match, order of schemas in &apos;types&apos; are different&lt;br/&gt;
         [TestCase(&lt;br/&gt;
 @&quot;{
@@ -262,7 +262,7 @@ public static void TestProtocol(string str, bool valid)
     }&lt;br/&gt;
   }&lt;br/&gt;
 }&quot;,&lt;br/&gt;
-  false,true)]&lt;br/&gt;
+  false,true, TestName = &quot;TestProtocolHash_ProtocolsMatch_OrderOfSchemasInTypesAreDifferent&quot;)]&lt;br/&gt;
         // Name of protocol is different&lt;br/&gt;
         [TestCase(&lt;br/&gt;
 @&quot;{
@@ -303,7 +303,7 @@ public static void TestProtocol(string str, bool valid)
     }&lt;br/&gt;
   }&lt;br/&gt;
 }&quot;,&lt;br/&gt;
-  false,false)]&lt;br/&gt;
+  false,false, TestName = &quot;TestProtocolHash_NameOfProtocolIsDifferent&quot;)]&lt;br/&gt;
         // Name of a message request is different: &apos;hi&apos;&lt;br/&gt;
         [TestCase(&lt;br/&gt;
 @&quot;{
@@ -344,7 +344,7 @@ public static void TestProtocol(string str, bool valid)
     }&lt;br/&gt;
   }&lt;br/&gt;
 }&quot;,&lt;br/&gt;
-  false,false)]&lt;br/&gt;
+  false,false, TestName = &quot;TestProtocolHash_NameOfMessageRequestIsDifferent&quot;)]&lt;br/&gt;
         // Name of a type is different : Curse1&lt;br/&gt;
         [TestCase(&lt;br/&gt;
 @&quot;{
@@ -385,7 +385,7 @@ public static void TestProtocol(string str, bool valid)
     }&lt;br/&gt;
   }&lt;br/&gt;
 }&quot;,&lt;br/&gt;
-  false,false)]&lt;br/&gt;
+  false,false, TestName = &quot;TestProtocolHash_NameOfTypeIsDifferent_Curse1&quot;)]&lt;br/&gt;
         // Name of a record field is different: &apos;mymessage&apos;&lt;br/&gt;
         [TestCase(&lt;br/&gt;
 @&quot;{
@@ -426,7 +426,7 @@ public static void TestProtocol(string str, bool valid)
     }&lt;br/&gt;
   }&lt;br/&gt;
 }&quot;,&lt;br/&gt;
-  false,false)]&lt;br/&gt;
+  false,false, TestName = &quot;TestProtocolHash_NameOfRecordFieldIsDifferent_MyMessage&quot;)]&lt;br/&gt;
         public static void TestProtocolHash(string str1, string str2, bool md5_equal, bool hash_equal)&lt;br/&gt;
         {&lt;br/&gt;
             Protocol protocol1 = Protocol.Parse(str1);&lt;br/&gt;
diff --git a/lang/csharp/src/apache/test/Schema/AliasTest.cs b/lang/csharp/src/apache/test/Schema/AliasTest.cs&lt;br/&gt;
index 96dec9ebc..c480076d3 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/test/Schema/AliasTest.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/test/Schema/AliasTest.cs&lt;br/&gt;
@@ -1,4 +1,4 @@&lt;br/&gt;
-&#65279;/**&lt;br/&gt;
+/**&lt;br/&gt;
  * Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
  * or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
  * distributed with this work for additional information&lt;br/&gt;
@@ -143,64 +143,64 @@ public void TestFixedAliasesResolution(string reader, string writer, bool canrea&lt;br/&gt;
                   @&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;:&quot;&quot;long&quot;&quot; },&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f2&quot;&quot;,&quot;&quot;type&quot;&quot;: &quot;&quot;int&quot;&quot;}]}&quot;,&lt;br/&gt;
-                  true)]&lt;br/&gt;
+                  true, TestName = &quot;TestRecordAliasesResolution1&quot;)]&lt;br/&gt;
         [TestCase(2,@&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;:&quot;&quot;long&quot;&quot; },&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f2&quot;&quot;,&quot;&quot;type&quot;&quot;: &quot;&quot;int&quot;&quot;}]}&quot;,&lt;br/&gt;
                   @&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;NewRec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;:&quot;&quot;long&quot;&quot; },&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f2&quot;&quot;,&quot;&quot;type&quot;&quot;: &quot;&quot;int&quot;&quot;}]}&quot;,&lt;br/&gt;
-                  false)]&lt;br/&gt;
+                  false, TestName = &quot;TestRecordAliasesResolution2&quot;)]&lt;br/&gt;
         [TestCase(3,@&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;, &quot;&quot;aliases&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;NewRec&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;:&quot;&quot;long&quot;&quot; },&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f2&quot;&quot;,&quot;&quot;type&quot;&quot;: &quot;&quot;int&quot;&quot;}]}&quot;,&lt;br/&gt;
                   @&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;NewRec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;:&quot;&quot;long&quot;&quot; },&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f2&quot;&quot;,&quot;&quot;type&quot;&quot;: &quot;&quot;int&quot;&quot;}]}&quot;,&lt;br/&gt;
-                  true)]&lt;br/&gt;
+                  true, TestName = &quot;TestRecordAliasesResolution3&quot;)]&lt;br/&gt;
         [TestCase(4,@&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;, &quot;&quot;aliases&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;OtherRec&amp;quot;&amp;quot;,&amp;quot;&amp;quot;DiffRec&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;:&quot;&quot;long&quot;&quot; },&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f2&quot;&quot;,&quot;&quot;type&quot;&quot;: &quot;&quot;int&quot;&quot;}]}&quot;,&lt;br/&gt;
                   @&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;NewRec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;:&quot;&quot;long&quot;&quot; },&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f2&quot;&quot;,&quot;&quot;type&quot;&quot;: &quot;&quot;int&quot;&quot;}]}&quot;,&lt;br/&gt;
-                  false)]&lt;br/&gt;
+                  false, TestName = &quot;TestRecordAliasesResolution4&quot;)]&lt;br/&gt;
         [TestCase(5,@&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;:&quot;&quot;long&quot;&quot; },&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f3&quot;&quot;,&quot;&quot;type&quot;&quot;: &quot;&quot;int&quot;&quot;}]}&quot;,&lt;br/&gt;
                   @&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;:&quot;&quot;long&quot;&quot; },&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f2&quot;&quot;,&quot;&quot;type&quot;&quot;: &quot;&quot;int&quot;&quot;}]}&quot;,&lt;br/&gt;
-                  false)]&lt;br/&gt;
+                  false, TestName = &quot;TestRecordAliasesResolution5&quot;)]&lt;br/&gt;
         [TestCase(6,@&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;:&quot;&quot;long&quot;&quot; },&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f3&quot;&quot;,&quot;&quot;type&quot;&quot;: &quot;&quot;int&quot;&quot;, &quot;&quot;aliases&quot;&quot;:[&quot;&quot;f2&quot;&quot;]}]}&quot;,&lt;br/&gt;
                   @&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;:&quot;&quot;long&quot;&quot; },&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f2&quot;&quot;,&quot;&quot;type&quot;&quot;: &quot;&quot;int&quot;&quot;}]}&quot;,&lt;br/&gt;
-                  true)]&lt;br/&gt;
+                  true, TestName = &quot;TestRecordAliasesResolution6&quot;)]&lt;br/&gt;
         [TestCase(7,@&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;:&quot;&quot;long&quot;&quot; },&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f3&quot;&quot;,&quot;&quot;type&quot;&quot;: &quot;&quot;int&quot;&quot;, &quot;&quot;aliases&quot;&quot;:[&quot;&quot;f4&quot;&quot;,&quot;&quot;f5&quot;&quot;]}]}&quot;,&lt;br/&gt;
                   @&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;:&quot;&quot;long&quot;&quot; },&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f2&quot;&quot;,&quot;&quot;type&quot;&quot;: &quot;&quot;int&quot;&quot;}]}&quot;,&lt;br/&gt;
-                  false)]&lt;br/&gt;
+                  false, TestName = &quot;TestRecordAliasesResolution7&quot;)]&lt;br/&gt;
         [TestCase(8,@&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;: {&quot;&quot;type&quot;&quot;:&quot;&quot;enum&quot;&quot;, &quot;&quot;name&quot;&quot;:&quot;&quot;Symbol&quot;&quot;, &quot;&quot;symbols&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;A&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt; }}]}&quot;,&lt;br/&gt;
                   @&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;: {&quot;&quot;type&quot;&quot;:&quot;&quot;enum&quot;&quot;, &quot;&quot;name&quot;&quot;:&quot;&quot;NewSymbol&quot;&quot;, &quot;&quot;symbols&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;A&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt; }}]}&quot;,&lt;br/&gt;
-                  false)]&lt;br/&gt;
+                  false, TestName = &quot;TestRecordAliasesResolution8&quot;)]&lt;br/&gt;
         [TestCase(9,@&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;: {&quot;&quot;type&quot;&quot;:&quot;&quot;enum&quot;&quot;, &quot;&quot;name&quot;&quot;:&quot;&quot;Symbol&quot;&quot;, &quot;&quot;aliases&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;NewSymbol&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;, &quot;&quot;symbols&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;A&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt; }}]}&quot;,&lt;br/&gt;
                   @&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;: {&quot;&quot;type&quot;&quot;:&quot;&quot;enum&quot;&quot;, &quot;&quot;name&quot;&quot;:&quot;&quot;NewSymbol&quot;&quot;, &quot;&quot;symbols&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;A&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt; }}]}&quot;,&lt;br/&gt;
-                  true)]&lt;br/&gt;
+                  true, TestName = &quot;TestRecordAliasesResolution9&quot;)]&lt;br/&gt;
         [TestCase(10,@&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;: {&quot;&quot;type&quot;&quot;:&quot;&quot;enum&quot;&quot;, &quot;&quot;name&quot;&quot;:&quot;&quot;Symbol&quot;&quot;, &quot;&quot;aliases&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;DiffSymbol&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;, &quot;&quot;symbols&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;A&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt; }}]}&quot;,&lt;br/&gt;
                   @&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;: {&quot;&quot;type&quot;&quot;:&quot;&quot;enum&quot;&quot;, &quot;&quot;name&quot;&quot;:&quot;&quot;NewSymbol&quot;&quot;, &quot;&quot;symbols&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;A&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt; }}]}&quot;,&lt;br/&gt;
-                  false)]&lt;br/&gt;
+                  false, TestName = &quot;TestRecordAliasesResolution10&quot;)]&lt;br/&gt;
         [TestCase(11,@&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&quot;&quot;aliases&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;NewRec&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;,&lt;br/&gt;
                     &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f2&quot;&quot;,&quot;&quot;aliases&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;f1&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;,&quot;&quot;type&quot;&quot;: {&quot;&quot;type&quot;&quot;:&quot;&quot;enum&quot;&quot;, &quot;&quot;name&quot;&quot;:&quot;&quot;Symbol&quot;&quot;, &quot;&quot;aliases&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;NewSymbol&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;, &quot;&quot;symbols&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;A&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt; }},&lt;br/&gt;
                                 {&quot;&quot;name&quot;&quot;:&quot;&quot;f3&quot;&quot;,&quot;&quot;aliases&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;f4&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;,&quot;&quot;type&quot;&quot;: {&quot;&quot;type&quot;&quot;:&quot;&quot;fixed&quot;&quot;, &quot;&quot;name&quot;&quot;:&quot;&quot;Fixed&quot;&quot;, &quot;&quot;aliases&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;NewFixed&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;, &quot;&quot;size&quot;&quot;: 1 }}&lt;br/&gt;
@@ -209,7 +209,7 @@ public void TestFixedAliasesResolution(string reader, string writer, bool canrea&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;: {&quot;&quot;type&quot;&quot;:&quot;&quot;enum&quot;&quot;, &quot;&quot;name&quot;&quot;:&quot;&quot;NewSymbol&quot;&quot;, &quot;&quot;symbols&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;A&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt; }},&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f4&quot;&quot;,&quot;&quot;type&quot;&quot;: {&quot;&quot;type&quot;&quot;:&quot;&quot;fixed&quot;&quot;, &quot;&quot;name&quot;&quot;:&quot;&quot;NewFixed&quot;&quot;, &quot;&quot;size&quot;&quot;: 1 }}&lt;br/&gt;
                                 ]}&quot;,&lt;br/&gt;
-                  true)]&lt;br/&gt;
+                  true, TestName = &quot;TestRecordAliasesResolution11&quot;)]&lt;br/&gt;
         [TestCase(12,@&quot;{&quot;&quot;type&quot;&quot;:&quot;&quot;record&quot;&quot;,&quot;&quot;name&quot;&quot;:&quot;&quot;Rec&quot;&quot;,&quot;&quot;aliases&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;NewRec&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;,&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f2&quot;&quot;,&quot;&quot;aliases&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;f1&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;,&quot;&quot;type&quot;&quot;: {&quot;&quot;type&quot;&quot;:&quot;&quot;enum&quot;&quot;, &quot;&quot;name&quot;&quot;:&quot;&quot;Symbol&quot;&quot;, &quot;&quot;aliases&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;NewSymbol&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;, &quot;&quot;symbols&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;A&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt; }},&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f3&quot;&quot;,&quot;&quot;aliases&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;f4&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;,&quot;&quot;type&quot;&quot;: {&quot;&quot;type&quot;&quot;:&quot;&quot;fixed&quot;&quot;, &quot;&quot;name&quot;&quot;:&quot;&quot;Fixed&quot;&quot;, &quot;&quot;aliases&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;NewFixed&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;, &quot;&quot;size&quot;&quot;:1 }}&lt;br/&gt;
@@ -218,7 +218,7 @@ public void TestFixedAliasesResolution(string reader, string writer, bool canrea&lt;br/&gt;
                      &quot;&quot;fields&quot;&quot;:[{&quot;&quot;name&quot;&quot;:&quot;&quot;f1&quot;&quot;,&quot;&quot;type&quot;&quot;: {&quot;&quot;type&quot;&quot;:&quot;&quot;enum&quot;&quot;, &quot;&quot;name&quot;&quot;:&quot;&quot;NewSymbol&quot;&quot;, &quot;&quot;symbols&quot;&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;quot;A&amp;quot;&amp;quot;,&amp;quot;&amp;quot;B&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt; }},&lt;br/&gt;
                                  {&quot;&quot;name&quot;&quot;:&quot;&quot;f4&quot;&quot;,&quot;&quot;type&quot;&quot;: {&quot;&quot;type&quot;&quot;:&quot;&quot;fixed&quot;&quot;, &quot;&quot;name&quot;&quot;:&quot;&quot;NewFixed&quot;&quot;, &quot;&quot;size&quot;&quot;:1 }}&lt;br/&gt;
                                 ]}&quot;,&lt;br/&gt;
-                  true)]&lt;br/&gt;
+                  true, TestName = &quot;TestRecordAliasesResolution12&quot;)]&lt;br/&gt;
 &lt;br/&gt;
         public void TestRecordAliasesResolution(int testid, string reader, string writer, bool canread)&lt;br/&gt;
         {&lt;br/&gt;
diff --git a/lang/csharp/src/apache/test/Schema/SchemaNormalizationTests.cs b/lang/csharp/src/apache/test/Schema/SchemaNormalizationTests.cs&lt;br/&gt;
index c3b0cd1ad..eb24dd13b 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/test/Schema/SchemaNormalizationTests.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/test/Schema/SchemaNormalizationTests.cs&lt;br/&gt;
@@ -1,4 +1,4 @@&lt;br/&gt;
-&#65279;/**&lt;br/&gt;
+/**&lt;br/&gt;
  * Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
  * or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
  * distributed with this work for additional information&lt;br/&gt;
@@ -50,7 +50,9 @@ public void FingerprintTest(string input, string expectedOutput)&lt;br/&gt;
 &lt;br/&gt;
         private static List&amp;lt;object[]&amp;gt; ProvideFingerprintTestCases()&lt;br/&gt;
         {&lt;br/&gt;
-            using (StreamReader reader = new StreamReader(&quot;../../../../../share/test/data/schema-tests.txt&quot;))&lt;br/&gt;
+            var dir = Path.GetDirectoryName(new Uri(typeof(SchemaNormalizationTests).Assembly.CodeBase).LocalPath);&lt;br/&gt;
+            var testsPath = Path.Combine(dir, &quot;../../../../../share/test/data/schema-tests.txt&quot;);&lt;br/&gt;
+            using (StreamReader reader = new StreamReader(testsPath))&lt;br/&gt;
             {
                 return CaseFinder.Find(reader, &quot;fingerprint&quot;, new List&amp;lt;object[]&amp;gt;());
             }&lt;br/&gt;
@@ -58,7 +60,9 @@ private static List&amp;lt;object[]&amp;gt; ProvideFingerprintTestCases()&lt;br/&gt;
 &lt;br/&gt;
         private static List&amp;lt;object[]&amp;gt; ProvideCanonicalTestCases()&lt;br/&gt;
         {&lt;br/&gt;
-            using (StreamReader reader = new StreamReader(&quot;../../../../../share/test/data/schema-tests.txt&quot;))&lt;br/&gt;
+            var dir = Path.GetDirectoryName(new Uri(typeof(SchemaNormalizationTests).Assembly.CodeBase).LocalPath);&lt;br/&gt;
+            var testsPath = Path.Combine(dir, &quot;../../../../../share/test/data/schema-tests.txt&quot;);&lt;br/&gt;
+            using (StreamReader reader = new StreamReader(testsPath))&lt;br/&gt;
             {
                 return CaseFinder.Find(reader, &quot;canonical&quot;, new List&amp;lt;object[]&amp;gt;());
             }&lt;br/&gt;
diff --git a/lang/csharp/src/apache/test/Schema/SchemaTests.cs b/lang/csharp/src/apache/test/Schema/SchemaTests.cs&lt;br/&gt;
index 7931d405b..5023f3826 100644&lt;br/&gt;
&amp;#8212; a/lang/csharp/src/apache/test/Schema/SchemaTests.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/test/Schema/SchemaTests.cs&lt;br/&gt;
@@ -64,22 +64,22 @@ public class SchemaTests&lt;br/&gt;
             &quot;\&quot;fields\&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;name\&quot;:\&quot;value\&quot;,\&quot;type\&quot;:\&quot;long\&quot;},{\&quot;name\&quot;:\&quot;next\&quot;,\&quot;type\&quot;:[\&quot;LongList\&quot;,\&quot;null\&quot;]}&amp;#93;&lt;/span&gt;}&quot;)] // Recursive.&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;LongList\&quot;,&quot; +&lt;br/&gt;
             &quot;\&quot;fields\&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;name\&quot;:\&quot;value\&quot;,\&quot;type\&quot;:\&quot;long\&quot;},{\&quot;name\&quot;:\&quot;next\&quot;,\&quot;type\&quot;:[\&quot;LongListA\&quot;,\&quot;null\&quot;]}&amp;#93;&lt;/span&gt;}&quot;,&lt;br/&gt;
-            Description = &quot;Unknown name&quot;, ExpectedException = typeof(SchemaParseException))]&lt;br/&gt;
+            typeof(SchemaParseException), Description = &quot;Unknown name&quot;)]&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;LongList\&quot;}&quot;,&lt;br/&gt;
-            Description = &quot;No fields&quot;, ExpectedException = typeof(SchemaParseException))]&lt;br/&gt;
+            typeof(SchemaParseException), Description = &quot;No fields&quot;)]&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;LongList\&quot;, \&quot;fields\&quot;: \&quot;hi\&quot;}&quot;,&lt;br/&gt;
-            Description = &quot;Fields not an array&quot;, ExpectedException = typeof(SchemaParseException))]&lt;br/&gt;
+            typeof(SchemaParseException), Description = &quot;Fields not an array&quot;)]&lt;br/&gt;
 &lt;br/&gt;
         // Enum&lt;br/&gt;
         &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;name\&quot;: \&quot;Test\&quot;, \&quot;symbols\&quot;: [\&quot;A\&quot;, \&quot;B\&quot;]}&amp;quot;)&amp;#93;&lt;/span&gt;&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;name\&quot;: \&quot;Status\&quot;, \&quot;symbols\&quot;: \&quot;Normal Caution Critical\&quot;}&quot;,&lt;br/&gt;
-            Description = &quot;Symbols not an array&quot;, ExpectedException = typeof(SchemaParseException))]&lt;br/&gt;
+            typeof(SchemaParseException), Description = &quot;Symbols not an array&quot;)]&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;name\&quot;: [ 0, 1, 1, 2, 3, 5, 8 ], \&quot;symbols\&quot;: [\&quot;Golden\&quot;, \&quot;Mean\&quot;]}&quot;,&lt;br/&gt;
-            Description = &quot;Name not a string&quot;, ExpectedException = typeof(SchemaParseException))]&lt;br/&gt;
+            typeof(SchemaParseException), Description = &quot;Name not a string&quot;)]&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;symbols\&quot; : [\&quot;I\&quot;, \&quot;will\&quot;, \&quot;fail\&quot;, \&quot;no\&quot;, \&quot;name\&quot;]}&quot;,&lt;br/&gt;
-            Description = &quot;No name&quot;, ExpectedException = typeof(SchemaParseException))]&lt;br/&gt;
+            typeof(SchemaParseException), Description = &quot;No name&quot;)]&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;: \&quot;enum\&quot;, \&quot;name\&quot;: \&quot;Test\&quot;, \&quot;symbols\&quot; : [\&quot;AA\&quot;, \&quot;AA\&quot;]}&quot;,&lt;br/&gt;
-            Description = &quot;Duplicate symbol&quot;, ExpectedException = typeof(SchemaParseException))]&lt;br/&gt;
+            typeof(SchemaParseException), Description = &quot;Duplicate symbol&quot;)]&lt;br/&gt;
 &lt;br/&gt;
         // Array&lt;br/&gt;
         &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;{\&quot;type\&quot;: \&quot;array\&quot;, \&quot;items\&quot;: \&quot;long\&quot;}&amp;quot;)&amp;#93;&lt;/span&gt;&lt;br/&gt;
@@ -92,22 +92,27 @@ public class SchemaTests&lt;br/&gt;
         // Union&lt;br/&gt;
         [TestCase(&quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;\&amp;quot;string\&amp;quot;, \&amp;quot;null\&amp;quot;, \&amp;quot;long\&amp;quot;&amp;#93;&lt;/span&gt;&quot;)]&lt;br/&gt;
         [TestCase(&quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;\&amp;quot;string\&amp;quot;, \&amp;quot;long\&amp;quot;, \&amp;quot;long\&amp;quot;&amp;#93;&lt;/span&gt;&quot;,&lt;br/&gt;
-            Description = &quot;Duplicate type&quot;, ExpectedException = typeof(SchemaParseException))]&lt;br/&gt;
+            typeof(SchemaParseException), Description = &quot;Duplicate type&quot;)]&lt;br/&gt;
         [TestCase(&quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;{\&quot;type\&quot;: \&quot;array\&quot;, \&quot;items\&quot;: \&quot;long\&quot;}, {\&quot;type\&quot;: \&quot;array\&quot;, \&quot;items\&quot;: \&quot;string\&quot;}&amp;#93;&lt;/span&gt;&quot;,&lt;br/&gt;
-            Description = &quot;Duplicate type&quot;, ExpectedException = typeof(SchemaParseException))]&lt;br/&gt;
+            typeof(SchemaParseException), Description = &quot;Duplicate type&quot;)]&lt;br/&gt;
         &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;{\&quot;type\&quot;:[\&quot;string\&quot;, \&quot;null\&quot;, \&quot;long\&quot;]}&amp;quot;)&amp;#93;&lt;/span&gt;&lt;br/&gt;
 &lt;br/&gt;
         // Fixed&lt;br/&gt;
         &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;{ \&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;name\&quot;: \&quot;Test\&quot;, \&quot;size\&quot;: 1}&amp;quot;)&amp;#93;&lt;/span&gt;&lt;br/&gt;
         &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;{\&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;name\&quot;: \&quot;MyFixed\&quot;, \&quot;namespace\&quot;: \&quot;org.apache.hadoop.avro\&quot;, \&quot;size\&quot;: 1}&amp;quot;)&amp;#93;&lt;/span&gt;&lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;{ \&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;name\&quot;: \&quot;Test\&quot;, \&quot;size\&quot;: 1}&amp;quot;)&amp;#93;&lt;/span&gt;&lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;{ \&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;name\&quot;: \&quot;Test\&quot;, \&quot;size\&quot;: 1}&amp;quot;)&amp;#93;&lt;/span&gt;&lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;{\&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;name\&quot;: \&quot;Missing size\&quot;}&amp;quot;, ExpectedException = typeof(SchemaParseException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;{\&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;name\&quot;: \&quot;Missing size\&quot;}&amp;quot;, typeof(SchemaParseException))&amp;#93;&lt;/span&gt;&lt;br/&gt;
         [TestCase(&quot;{\&quot;type\&quot;: \&quot;fixed\&quot;, \&quot;size\&quot;: 314}&quot;,&lt;br/&gt;
-            Description = &quot;No name&quot;, ExpectedException = typeof(SchemaParseException))]&lt;br/&gt;
-        public void TestBasic(string s)&lt;br/&gt;
+            typeof(SchemaParseException), Description = &quot;No name&quot;)]&lt;br/&gt;
+        public void TestBasic(string s, Type expectedExceptionType = null)&lt;br/&gt;
         {&lt;br/&gt;
-            Schema.Parse(s);&lt;br/&gt;
+            if (expectedExceptionType != null)&lt;br/&gt;
+            {&lt;br/&gt;
+                Assert.Throws(expectedExceptionType, () =&amp;gt; { Schema.Parse(s); });&lt;br/&gt;
+            }&lt;br/&gt;
+            else&lt;br/&gt;
+            {
+                Schema.Parse(s);
+            }&lt;br/&gt;
         }&lt;br/&gt;
 &lt;br/&gt;
         &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;null&amp;quot;, Schema.Type.Null)&amp;#93;&lt;/span&gt;&lt;br/&gt;
@@ -265,7 +270,7 @@ public void TestFixed(string s, int size)&lt;br/&gt;
             testToString(sc);&lt;br/&gt;
         }&lt;br/&gt;
 &lt;br/&gt;
-        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;a&amp;quot;, &amp;quot;o.a.h&amp;quot;, Result = &amp;quot;o.a.h.a&amp;quot;)&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        &lt;span class=&quot;error&quot;&gt;&amp;#91;TestCase(&amp;quot;a&amp;quot;, &amp;quot;o.a.h&amp;quot;, ExpectedResult = &amp;quot;o.a.h.a&amp;quot;)&amp;#93;&lt;/span&gt;&lt;br/&gt;
         public string testFullname(string s1, string s2)&lt;br/&gt;
         {
             var name = new SchemaName(s1, s2, null);
diff --git a/lang/csharp/src/apache/test/Specific/SpecificTests.cs b/lang/csharp/src/apache/test/Specific/SpecificTests.cs
index a39168d13..8318ab571 100644
--- a/lang/csharp/src/apache/test/Specific/SpecificTests.cs
+++ b/lang/csharp/src/apache/test/Specific/SpecificTests.cs
@@ -1,4 +1,4 @@
-&#65279;/**
+/**
  * Licensed to the Apache Software Foundation (ASF) under one
  * or more contributor license agreements.  See the NOTICE file
  * distributed with this work for additional information
@@ -157,8 +157,7 @@ class SpecificTests
     myArray3.Add(o1);
     myArray3.Add(o2);
 
-&quot;}&lt;br/&gt;
-)]&lt;br/&gt;
+&quot;}, TestName = &quot;TestSpecific&quot;)]&lt;br/&gt;
         public void TestSpecific(string str, object[] result)&lt;br/&gt;
         {&lt;br/&gt;
             if(compres == null)&lt;br/&gt;
@@ -191,7 +190,7 @@ public void TestSpecific(string str, object[] result)&lt;br/&gt;
             // compile&lt;br/&gt;
             var comparam = new CompilerParameters(new string[] { &quot;mscorlib.dll&quot; }
&lt;p&gt;);&lt;br/&gt;
             comparam.ReferencedAssemblies.Add(&quot;System.dll&quot;);&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;comparam.ReferencedAssemblies.Add(&quot;Avro.dll&quot;);&lt;br/&gt;
+            comparam.ReferencedAssemblies.Add(Path.Combine(TestContext.CurrentContext.TestDirectory, &quot;Avro.dll&quot;));&lt;br/&gt;
             comparam.GenerateInMemory = true;&lt;br/&gt;
             var ccp = new Microsoft.CSharp.CSharpCodeProvider();&lt;br/&gt;
             var units = new CodeCompileUnit[] 
{ compileUnit }
&lt;p&gt;;&lt;br/&gt;
@@ -375,4 +374,4 @@ public void Put(int fieldPos, object fieldValue)&lt;br/&gt;
             enumType = (EnumType)fieldValue;&lt;br/&gt;
         }&lt;br/&gt;
     }&lt;br/&gt;
-}&lt;br/&gt;
\ No newline at end of file&lt;br/&gt;
+}&lt;br/&gt;
diff --git a/lang/csharp/src/apache/test/Utils/CaseFinderTests.cs b/lang/csharp/src/apache/test/Utils/CaseFinderTests.cs&lt;br/&gt;
index 1257863af..7b460969c 100644&lt;/p&gt;
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/csharp/src/apache/test/Utils/CaseFinderTests.cs&lt;br/&gt;
+++ b/lang/csharp/src/apache/test/Utils/CaseFinderTests.cs&lt;br/&gt;
@@ -1,4 +1,4 @@&lt;br/&gt;
-&#65279;/**&lt;br/&gt;
+/**&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;Licensed to the Apache Software Foundation (ASF) under one&lt;/li&gt;
	&lt;li&gt;or more contributor license agreements.  See the NOTICE file&lt;/li&gt;
	&lt;li&gt;distributed with this work for additional information&lt;br/&gt;
@@ -72,7 +72,7 @@ public void TestOutput(string input, string label, List&amp;lt;object[]&amp;gt; expectedOutput&lt;br/&gt;
             Assert.True(Eq(result, expectedOutput), Pr(result));&lt;br/&gt;
         }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private List&amp;lt;Object[]&amp;gt; OutputTestCases()&lt;br/&gt;
+        private static List&amp;lt;Object[]&amp;gt; OutputTestCases()&lt;br/&gt;
         {&lt;br/&gt;
             List&amp;lt;Object[]&amp;gt; result = new List&amp;lt;Object[]&amp;gt;();&lt;br/&gt;
             result.Add(new Object[] { &quot;&quot;, &quot;foo&quot;, new List&amp;lt;object[]&amp;gt; { } });&lt;br/&gt;
@@ -82,7 +82,6 @@ private List&amp;lt;Object[]&amp;gt; OutputTestCases()&lt;br/&gt;
             result.Add(new Object[] { &quot;&amp;lt;&amp;lt;INPUT a\r&amp;lt;&amp;lt;OUTPUT b&quot;, &quot;OUTPUT&quot;, new List&amp;lt;object[]&amp;gt; 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: { new object[] { &quot;a&quot;, &quot;b&quot; } } });&lt;br/&gt;
             result.Add(new Object[] { &quot;// This is a test\n&amp;lt;&amp;lt;INPUT a\n\n\n&amp;lt;&amp;lt;OUTPUT b&quot;, &quot;OUTPUT&quot;, new List&amp;lt;object[]&amp;gt; { new object[] { &quot;a&quot;, &quot;b&quot; } }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt; });&lt;br/&gt;
             result.Add(new Object[] { &quot;&amp;lt;&amp;lt;INPUT a\n&amp;lt;&amp;lt;OUTPUT\nb\nOUTPUT&quot;, &quot;OUTPUT&quot;, new List&amp;lt;object[]&amp;gt; &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: { new object[] { &quot;a&quot;, &quot;b&quot; } } });&lt;br/&gt;
-            result.Add(new Object[] { &quot;&amp;lt;&amp;lt;INPUT a\n&amp;lt;&amp;lt;OUTPUT\nb\nOUTPUT&quot;, &quot;OUTPUT&quot;, new List&amp;lt;object[]&amp;gt; { new object[] { &quot;a&quot;, &quot;b&quot; } }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt; });&lt;br/&gt;
             result.Add(new Object[] { &quot;&amp;lt;&amp;lt;INPUT a\n&amp;lt;&amp;lt;OUTPUT\nb\n\nOUTPUT&quot;, &quot;OUTPUT&quot;, new List&amp;lt;object[]&amp;gt; &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: { new object[] { &quot;a&quot;, &quot;b\n&quot; } }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt; });&lt;br/&gt;
             result.Add(new Object[] { &quot;&amp;lt;&amp;lt;INPUT a\n&amp;lt;&amp;lt;OUTPUT\n\n  b  \n\nOUTPUT&quot;, &quot;OUTPUT&quot;, new List&amp;lt;object[]&amp;gt; &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: { new object[] { &quot;a&quot;, &quot;\n  b  \n&quot; } }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt; });&lt;br/&gt;
             result.Add(new Object[] { &quot;&amp;lt;&amp;lt;INPUT a\n&amp;lt;&amp;lt;O b\n&amp;lt;&amp;lt;INPUT c\n&amp;lt;&amp;lt;O d&quot;, &quot;O&quot;, new List&amp;lt;object[]&amp;gt; &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: { new object[] { &quot;a&quot;, &quot;b&quot; }, new object[] { &quot;c&quot;, &quot;d&quot; } }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt; });&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16741232" author="jira-bot" created="Sat, 12 Jan 2019 10:32:57 +0000"  >&lt;p&gt;Commit 9a05375436385b7fce75d32cfdcd359e279e0628 in avro&apos;s branch refs/heads/master from Brian Lachniet&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=9a05375&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=9a05375&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2112&quot; title=&quot;c# (.net) port to .NET Standard 2.0 and nuget (package) dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2112&quot;&gt;&lt;del&gt;AVRO-2112&lt;/del&gt;&lt;/a&gt;: Target .NET Standard/Core in C# (#307)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2161&quot; title=&quot;Upgrade C# Unit Tests to NUnit 3.x&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2161&quot;&gt;&lt;del&gt;AVRO-2161&lt;/del&gt;&lt;/a&gt;: Upgrade C# unit tests to NUnit 3&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2112&quot; title=&quot;c# (.net) port to .NET Standard 2.0 and nuget (package) dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2112&quot;&gt;&lt;del&gt;AVRO-2112&lt;/del&gt;&lt;/a&gt;: Update C# projects to target .NET Standard/Core and .NET Framework 4.0&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2112&quot; title=&quot;c# (.net) port to .NET Standard 2.0 and nuget (package) dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2112&quot;&gt;&lt;del&gt;AVRO-2112&lt;/del&gt;&lt;/a&gt;: Move C# IPC tests to a Avro.ipc.test&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2112&quot; title=&quot;c# (.net) port to .NET Standard 2.0 and nuget (package) dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2112&quot;&gt;&lt;del&gt;AVRO-2112&lt;/del&gt;&lt;/a&gt;: Ignore C# tests that use System.CodeDom compilation when targeting .NET Core&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;See &lt;a href=&quot;https://github.com/dotnet/corefx/issues/12180&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/dotnet/corefx/issues/12180&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2112&quot; title=&quot;c# (.net) port to .NET Standard 2.0 and nuget (package) dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2112&quot;&gt;&lt;del&gt;AVRO-2112&lt;/del&gt;&lt;/a&gt;: Replace usage of JToken.ToString() in C# projects&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In Newtonsoft.Json v3.5, JToken.ToString() returned the raw JSON&lt;br/&gt;
representation of the token. In later versions of&lt;br/&gt;
Newtonsoft.Json, JToken.ToString() returns a simple string&lt;br/&gt;
representation of the value. See the examples below:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;v3.5: &quot;\&quot;Hello World\&quot;&quot;&lt;/li&gt;
	&lt;li&gt;Later versions: &quot;Hello World&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In this commit, I&apos;ve updated the project to work with later versions&lt;br/&gt;
of Newtonsoft.Json as well as v3.5. I&apos;ve replaced some usages of&lt;br/&gt;
JToken.ToString(). When we need the raw JSON representation, we use&lt;br/&gt;
JsonConvert.Serialize(). When we need the string value of a string&lt;br/&gt;
JToken, we use JToken.Value&amp;lt;string&amp;gt;().&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2112&quot; title=&quot;c# (.net) port to .NET Standard 2.0 and nuget (package) dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2112&quot;&gt;&lt;del&gt;AVRO-2112&lt;/del&gt;&lt;/a&gt;: Update C# README&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Update pom.xml with new C# paths to ignore for license check&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;csharp: Cut support for net35, update Dockerfile and csharp build.sh&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Add mono-complete to Dockerfile for build&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;csharp: Remove unnecessary ProjectGuid elements from projects&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Revert to only running tests for Avro.test.dll&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is what we were doing on master. I was trying to run the IPC tests,&lt;br/&gt;
but that has not seemed to work well in our automated builds.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;List all tests as they are run&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Add build.ps1 and update README&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Update Target Frameworks table in README&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Try disabling tests that take a long time to run&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16741258" author="blachniet" created="Sat, 12 Jan 2019 11:32:30 +0000"  >&lt;p&gt;Upgrading to NUnit 3 was completed as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2112&quot; title=&quot;c# (.net) port to .NET Standard 2.0 and nuget (package) dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2112&quot;&gt;&lt;del&gt;AVRO-2112&lt;/del&gt;&lt;/a&gt; (GitHub &lt;a href=&quot;https://github.com/apache/avro/pull/307&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;PR #307&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="13123703">AVRO-2112</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="13123703">AVRO-2112</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 26 May 2018 10:50:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 week, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3rg1j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Upgraded C# unit tests to NUnit 3</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
