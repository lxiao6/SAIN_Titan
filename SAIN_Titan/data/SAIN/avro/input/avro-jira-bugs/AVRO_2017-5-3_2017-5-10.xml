<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:25:01 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2017-5-3+AND+created+%3C%3D+2017-5-10+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="1" total="1"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-2032] Unable to decode JSON-encoded Double.NaN, Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2032</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;When using the JsonEncoder to serialize Double.NaN, Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY to resulting JSON cannot be parsed by the JsonDencoder.&lt;br/&gt;
An AvroTypeException is thrown with the message &quot;Expected double. Got VALUE_STRING&quot;.&lt;br/&gt;
When using BinaryEncoder/BinaryDecoder, it works fine.&lt;/p&gt;

&lt;p&gt;This JUnit code snippet will reproduce the issue:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    @Test
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void test() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
        Schema schema = SchemaBuilder.builder()
                .record(&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;)
                .fields()
                    .optionalDouble(&lt;span class=&quot;code-quote&quot;&gt;&quot;number1&quot;&lt;/span&gt;)
                    .optionalDouble(&lt;span class=&quot;code-quote&quot;&gt;&quot;number2&quot;&lt;/span&gt;)
                    .optionalDouble(&lt;span class=&quot;code-quote&quot;&gt;&quot;number3&quot;&lt;/span&gt;)
                .endRecord();
        GenericData.Record record = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericData.Record(schema);
        record.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;number1&quot;&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Double&lt;/span&gt;.NaN);
        record.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;number2&quot;&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Double&lt;/span&gt;.POSITIVE_INFINITY);
        record.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;number3&quot;&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Double&lt;/span&gt;.NEGATIVE_INFINITY);

        ByteArrayOutputStream out = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream();
        JsonEncoder encoder = EncoderFactory.get().jsonEncoder(schema, out);
        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericDatumWriter&amp;lt;GenericRecord&amp;gt;(schema).write(record, encoder);
        encoder.flush();
        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(out);

        Decoder decoder = DecoderFactory.get().jsonDecoder(schema, out.toString());
        GenericData.Record deserialized = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericData.Record(schema);
        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericDatumReader&amp;lt;GenericRecord&amp;gt;(schema).read(deserialized, decoder);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="13069358">AVRO-2032</key>
            <summary>Unable to decode JSON-encoded Double.NaN, Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="pdekinder">Pieter Dekinder</reporter>
                        <labels>
                    </labels>
                <created>Fri, 5 May 2017 07:13:55 +0000</created>
                <updated>Tue, 5 Jun 2018 09:54:41 +0000</updated>
                                            <version>1.8.1</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16498449" author="zolyfarkas" created="Fri, 1 Jun 2018 19:35:15 +0000"  >&lt;p&gt;I resolved this issue in my fork, it is fairly a small fix, here is the detail:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zolyfarkas/avro/commit/afe6c04f38c535533c33ed4c303fb011df828606&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/zolyfarkas/avro/commit/afe6c04f38c535533c33ed4c303fb011df828606&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will not have time to work on a PR anytime soon....so any help appreciated...&lt;/p&gt;</comment>
                            <comment id="16501549" author="nkollar" created="Tue, 5 Jun 2018 09:54:23 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zolyfarkas&quot; class=&quot;user-hover&quot; rel=&quot;zolyfarkas&quot;&gt;Zoltan Farkas&lt;/a&gt; would you mind creating a pull request from the commit in your fork? Or if you don&apos;t have time for it, I can make one based on your suggestion, if you don&apos;t mind. Though the &lt;a href=&quot;https://tools.ietf.org/html/rfc7159&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;JSON spec&lt;/a&gt; says that &quot;Numeric values that cannot be represented in the grammar below (such as Infinity and NaN) are not permitted.&quot;, I&apos;d expect that changing the encoding of an Avro file from binary to Json shouldn&apos;t restrict the users in this case, therefore trying to parse the token as double makes sense for me.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 1 Jun 2018 19:35:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            32 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3eiy7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
