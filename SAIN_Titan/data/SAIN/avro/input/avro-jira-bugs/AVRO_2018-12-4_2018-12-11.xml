<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:27:37 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2018-12-4+AND+created+%3C%3D+2018-12-11+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="2" total="2"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-2281] Performance improvement in ruby binary decoder and encoder</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2281</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The ruby binary decoder has some inefficient memory usage patterns. The decoding process relies on `unpack` quite heavily, but it allocates an array that is not used as we just access the first element of the result. In ruby 2.4 we can use the optimized version of this, `unpack1` which avoids allocating the unused array. In `byte!`, we can go one step further and just use the `readbyte` method provided by the IO module - this improves the performance of `byte!` by about 50%. Additionally, there are a few strings in the encoder and decoder that should be frozen to reduce unnecessary string allocations.&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;With these changes, I&apos;ve seen about a 20% performance improvement when decoding.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13202876">AVRO-2281</key>
            <summary>Performance improvement in ruby binary decoder and encoder</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dkulp">Daniel Kulp</assignee>
                                    <reporter username="kphelps">Kyle Phelps</reporter>
                        <labels>
                    </labels>
                <created>Thu, 6 Dec 2018 18:40:39 +0000</created>
                <updated>Fri, 7 Dec 2018 17:09:01 +0000</updated>
                            <resolved>Fri, 7 Dec 2018 17:09:01 +0000</resolved>
                                    <version>1.9.0</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>ruby</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16711848" author="githubbot" created="Thu, 6 Dec 2018 18:42:04 +0000"  >&lt;p&gt;kphelps opened a new pull request #401: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2281&quot; title=&quot;Performance improvement in ruby binary decoder and encoder&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2281&quot;&gt;&lt;del&gt;AVRO-2281&lt;/del&gt;&lt;/a&gt; Optimize ruby binary encoder/decoder&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/401&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/401&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   This makes some performance improvements around unpacking strings and freezing some strings that cause a lot of unnecessary allocations in some cases. We can also take advantage of `unpack1` when running in a version of ruby that supports it.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16713096" author="githubbot" created="Fri, 7 Dec 2018 17:08:16 +0000"  >&lt;p&gt;dkulp closed pull request #401: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2281&quot; title=&quot;Performance improvement in ruby binary decoder and encoder&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2281&quot;&gt;&lt;del&gt;AVRO-2281&lt;/del&gt;&lt;/a&gt;: Optimize ruby binary encoder/decoder&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/401&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/401&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/ruby/lib/avro/io.rb b/lang/ruby/lib/avro/io.rb&lt;br/&gt;
index 5961a4802..31107217a 100644&lt;br/&gt;
&amp;#8212; a/lang/ruby/lib/avro/io.rb&lt;br/&gt;
+++ b/lang/ruby/lib/avro/io.rb&lt;br/&gt;
@@ -43,7 +43,7 @@ def initialize(reader)&lt;br/&gt;
       end&lt;/p&gt;

&lt;p&gt;       def byte!&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;@reader.read(1).unpack(&apos;C&apos;).first&lt;br/&gt;
+        @reader.readbyte&lt;br/&gt;
       end&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;       def read_null&lt;br/&gt;
@@ -76,7 +76,7 @@ def read_float&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;The float is converted into a 32-bit integer using a method&lt;/li&gt;
	&lt;li&gt;equivalent to Java&apos;s floatToIntBits and then encoded in&lt;/li&gt;
	&lt;li&gt;little-endian format.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;@reader.read(4).unpack(&apos;e&apos;)&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        read_and_unpack(4, &apos;e&apos;.freeze)&lt;br/&gt;
       end&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;       def read_double&lt;br/&gt;
@@ -84,7 +84,7 @@ def read_double&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;The double is converted into a 64-bit integer using a method&lt;/li&gt;
	&lt;li&gt;equivalent to Java&apos;s doubleToLongBits and then encoded in&lt;/li&gt;
	&lt;li&gt;little-endian format.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;@reader.read(8).unpack(&apos;E&apos;)&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        read_and_unpack(8, &apos;E&apos;.freeze)&lt;br/&gt;
       end&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;       def read_bytes&lt;br/&gt;
@@ -97,7 +97,7 @@ def read_string&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;A string is encoded as a long followed by that many bytes of&lt;/li&gt;
	&lt;li&gt;UTF-8 encoded character data.&lt;br/&gt;
         read_bytes.tap do |string|&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;string.force_encoding(&quot;UTF-8&quot;) if string.respond_to? :force_encoding&lt;br/&gt;
+          string.force_encoding(&apos;UTF-8&apos;.freeze) if string.respond_to? :force_encoding&lt;br/&gt;
         end&lt;br/&gt;
       end&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -144,6 +144,23 @@ def skip_string&lt;br/&gt;
       def skip&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
         reader.seek(reader.tell() + n)&lt;br/&gt;
       end&lt;br/&gt;
+&lt;br/&gt;
+      private&lt;br/&gt;
+&lt;br/&gt;
+      # Optimize unpacking strings when `unpack1` is available (ruby &amp;gt;= 2.4)&lt;br/&gt;
+      if String.instance_methods.include?(:unpack1)&lt;br/&gt;
+&lt;br/&gt;
+        def read_and_unpack(byte_count, format)&lt;br/&gt;
+          @reader.read(byte_count).unpack1(format)&lt;br/&gt;
+        end&lt;br/&gt;
+&lt;br/&gt;
+      else&lt;br/&gt;
+&lt;br/&gt;
+        def read_and_unpack(byte_count, format)&lt;br/&gt;
+          @reader.read(byte_count).unpack(format)&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        end&lt;br/&gt;
+&lt;br/&gt;
+      end&lt;br/&gt;
     end&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Write leaf values&lt;br/&gt;
@@ -188,7 +205,7 @@ def write_long&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/li&gt;
	&lt;li&gt;equivalent to Java&apos;s floatToIntBits and then encoded in&lt;/li&gt;
	&lt;li&gt;little-endian format.&lt;br/&gt;
       def write_float(datum)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;@writer.write(&lt;span class=&quot;error&quot;&gt;&amp;#91;datum&amp;#93;&lt;/span&gt;.pack(&apos;e&apos;))&lt;br/&gt;
+        @writer.write(&lt;span class=&quot;error&quot;&gt;&amp;#91;datum&amp;#93;&lt;/span&gt;.pack(&apos;e&apos;.freeze))&lt;br/&gt;
       end&lt;/li&gt;
&lt;/ul&gt;


&lt;ol&gt;
	&lt;li&gt;A double is written as 8 bytes.&lt;br/&gt;
@@ -196,7 +213,7 @@ def write_float(datum)&lt;/li&gt;
	&lt;li&gt;equivalent to Java&apos;s doubleToLongBits and then encoded in&lt;/li&gt;
	&lt;li&gt;little-endian format.&lt;br/&gt;
       def write_double(datum)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;@writer.write(&lt;span class=&quot;error&quot;&gt;&amp;#91;datum&amp;#93;&lt;/span&gt;.pack(&apos;E&apos;))&lt;br/&gt;
+        @writer.write(&lt;span class=&quot;error&quot;&gt;&amp;#91;datum&amp;#93;&lt;/span&gt;.pack(&apos;E&apos;.freeze))&lt;br/&gt;
       end&lt;/li&gt;
&lt;/ul&gt;


&lt;ol&gt;
	&lt;li&gt;Bytes are encoded as a long followed by that many bytes of data.&lt;br/&gt;
@@ -208,7 +225,7 @@ def write_bytes(datum)&lt;/li&gt;
	&lt;li&gt;A string is encoded as a long followed by that many bytes of&lt;/li&gt;
	&lt;li&gt;UTF-8 encoded character data&lt;br/&gt;
       def write_string(datum)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;datum = datum.encode(&apos;utf-8&apos;) if datum.respond_to? :encode&lt;br/&gt;
+        datum = datum.encode(&apos;utf-8&apos;.freeze) if datum.respond_to? :encode&lt;br/&gt;
         write_bytes(datum)&lt;br/&gt;
       end&lt;/li&gt;
&lt;/ul&gt;






&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 6 Dec 2018 18:42:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|s01968:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2282] Control default FLUSH_PASSED_TO_STREAM behavior of JsonEncoder</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2282</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The &lt;a href=&quot;https://github.com/codehaus/jackson/blob/1.8/src/java/org/codehaus/jackson/JsonGenerator.java#L120&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;FLUSH_PASSED_TO_STREAM&lt;/a&gt; feature of jackson&apos;s JSONGenerator controls if flush calls to JsonEncoder are passed to the underlying stream. The default value for this is true causing the underlying stream to be flushed every time encoder.flush is called. Currently, JsonEncoder doesn&apos;t provide a way to change this behaviour. In many scenarios, a flush call is made to the encoder with the intention of flushing the buffer to the underlying stream, and not the stream itself, which has a detrimental impact on performance. The patch provided creates a way to specify the default behaviour of underlying JSONGenerator during JsonEncoder&apos;s initialization itself. This will be extremely helpful in scenarios such as Hadoop&apos;s MR Evenwriter, allowing the caller to set the desired behaviour for optimal performance.&#160;&lt;/p&gt;</description>
                <environment></environment>
        <key id="13203150">AVRO-2282</key>
            <summary>Control default FLUSH_PASSED_TO_STREAM behavior of JsonEncoder</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="saurabhpant">Saurabh</reporter>
                        <labels>
                    </labels>
                <created>Fri, 7 Dec 2018 21:17:55 +0000</created>
                <updated>Fri, 7 Dec 2018 21:35:02 +0000</updated>
                                                            <fixVersion>1.7.4</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                            <attachment id="12951043" name="avrojsonencoder1.patch" size="15084" author="saurabhpant" created="Fri, 7 Dec 2018 21:18:13 +0000"/>
                            <attachment id="12951042" name="avrojsonencoder1.patch" size="15084" author="saurabhpant" created="Fri, 7 Dec 2018 21:17:19 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310250" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10430"><![CDATA[Patch]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|s01auw:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
