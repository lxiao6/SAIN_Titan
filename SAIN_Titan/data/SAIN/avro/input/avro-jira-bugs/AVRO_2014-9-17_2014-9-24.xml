<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:20:52 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2014-9-17+AND+created+%3C%3D+2014-9-24+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="4" total="4"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1587] Avro snapshots are not deployed to repository.apache.org</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1587</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Avro snapshots repository seems empty:&lt;br/&gt;
&lt;a href=&quot;https://repository.apache.org/content/repositories/snapshots/org/apache/avro/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://repository.apache.org/content/repositories/snapshots/org/apache/avro/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AFAICT, it&apos;s just the matter of adding deploy goal to the builder.&lt;br/&gt;
Would be great if anyone could fix this.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12742163">AVRO-1587</key>
            <summary>Avro snapshots are not deployed to repository.apache.org</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="vanyatka">Ivan Balashov</reporter>
                        <labels>
                    </labels>
                <created>Wed, 17 Sep 2014 14:36:28 +0000</created>
                <updated>Sun, 5 Oct 2014 18:03:46 +0000</updated>
                                                                            <component>build</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="14141435" author="cutting" created="Fri, 19 Sep 2014 22:25:21 +0000"  >&lt;p&gt;I changed the goal from &apos;verify&apos; to &apos;deploy&apos;, triggered a build, and it seemed to work.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://repository.apache.org/content/groups/snapshots/org/apache/avro/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://repository.apache.org/content/groups/snapshots/org/apache/avro/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If that&apos;s sufficient, we can close this issue.  Every build will now be posted to the snapshot repo.&lt;/p&gt;</comment>
                            <comment id="14141990" author="vanyatka" created="Sat, 20 Sep 2014 14:07:10 +0000"  >&lt;p&gt;Thanks for fixing this.&lt;/p&gt;

&lt;p&gt;One more minor issue: source jars are not deployed along, even though maven-source-plugin is bound to package phase. Could it be that &apos;dist&apos; profile is not set in the build?&lt;/p&gt;</comment>
                            <comment id="14143913" author="cutting" created="Mon, 22 Sep 2014 22:06:37 +0000"  >&lt;p&gt;Adding &apos;-P dist&apos; caused the enforcer plugin to fail, so instead I just added &apos;source:jar-no-fork&apos; to the goals and it looks like source jars are now deployed too.&lt;/p&gt;</comment>
                            <comment id="14144007" author="cutting" created="Mon, 22 Sep 2014 23:16:27 +0000"  >&lt;p&gt;The deploy fails on some of the build servers, where it seems not to be permitted.&lt;/p&gt;

&lt;p&gt;For example, this build failed on host jenkins-ubuntu-1404-4gb-938:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://builds.apache.org/view/A-D/view/Avro/job/AvroJava/479/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/view/A-D/view/Avro/job/AvroJava/479/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;while this one succeeded (with no changes to code or Jenkins config) on host H11:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://builds.apache.org/view/A-D/view/Avro/job/AvroJava/480/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/view/A-D/view/Avro/job/AvroJava/480/&lt;/a&gt; &lt;/p&gt;</comment>
                            <comment id="14159438" author="busbey" created="Sun, 5 Oct 2014 05:41:34 +0000"  >&lt;p&gt;Should we be doing this? SNAPSHOT builds are only meant for Avro developer use, not external use. Especially with the addition of the source jars, I&apos;m concerned we&apos;re encouraging people to rely on unreleased versions of the codebase.&lt;/p&gt;</comment>
                            <comment id="14159611" author="cutting" created="Sun, 5 Oct 2014 18:03:46 +0000"  >&lt;p&gt;Having snapshots in a repo lets us easily test other projects against our future releases. We should not promote snapshots as releases, but they can aid development.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 19 Sep 2014 22:25:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 16 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i205tz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1588] ReflectData.AllowNull incorrectly handles primitive types.</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1588</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;When doing the following:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;PoJo {
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; id;
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; name;
}

ReflectData.AllowNull.get().getSchema(PoJo.class);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;d expect a schema like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-javascript&quot;&gt;{
  &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;PoJo&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;MyObject$&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt; : [ {
    &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;id&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt;,
  }, {
    &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : [ &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt; ],
    &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt; : &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
  } ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But instead I get:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-javascript&quot;&gt;{
  &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;PoJo&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;MyObject$&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt; : [ {
    &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;id&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : [ &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt; ],
    &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt; : &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
  }, {
    &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : [ &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt; ],
    &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt; : &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
  } ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will later result in an NullPointerException when you try to deserialize bytes where id was null when it tries to convert the Long to a long.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12742289">AVRO-1588</key>
            <summary>ReflectData.AllowNull incorrectly handles primitive types.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="fwiffo">Joey Echeverria</reporter>
                        <labels>
                    </labels>
                <created>Wed, 17 Sep 2014 21:58:57 +0000</created>
                <updated>Mon, 22 Sep 2014 22:30:33 +0000</updated>
                            <resolved>Mon, 22 Sep 2014 22:30:33 +0000</resolved>
                                    <version>1.7.7</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="14138105" author="busbey" created="Wed, 17 Sep 2014 22:17:30 +0000"  >&lt;p&gt;The second schema better matches the stated goals of ReflectData.AllowNull&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ReflectData implementation that permits null field values. The schema generated for each field is a union of its declared type and null.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Do we need to check for when our annotated class doesn&apos;t use the nullable version of a primitive and throw an error at getSchema time? Or special case those fields to not be nullable?&lt;/p&gt;</comment>
                            <comment id="14138117" author="fwiffo" created="Wed, 17 Sep 2014 22:22:39 +0000"  >&lt;p&gt;I think it should special case primitive fields to not be nullable. I view ReflectData.AllowNull to be a short cut to adding &lt;tt&gt;@Nullable&lt;/tt&gt; to the fields of my PoJo, or for cases where I don&apos;t control the source of the PoJo. But I wouldn&apos;t expect it to produce a schema that isn&apos;t actually compatible with my class. In particular, if I&apos;m using ReflectData.AllowNull to extract a schema and then use it to read data, I&apos;d like to be able to check schema compatibility in advance and get an error if the writer schema allows nulls for one of the fields that is a primitive in my class. As it stands today, I won&apos;t get an error until I actually try to read the data and the error I&apos;ll get is a NullPointerException.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="12742890">AVRO-1589</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 17 Sep 2014 22:17:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 18 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i206kf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1589] [Java] ReflectData.AllowNulls will create incompatible Schemas for primitive types</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1589</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;&lt;tt&gt;ReflectData.AllowNulls&lt;/tt&gt; will always create nullable types, even if the reflected object has primitive fields. When assigning a null to a primitive field, Java always throws a &lt;tt&gt;NullPointerException&lt;/tt&gt;. I think the right thing to do is to allow nulls for any &lt;tt&gt;Object&lt;/tt&gt; and return required schemas for primitive types.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12742890">AVRO-1589</key>
            <summary>[Java] ReflectData.AllowNulls will create incompatible Schemas for primitive types</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rdblue">Ryan Blue</assignee>
                                    <reporter username="rdblue">Ryan Blue</reporter>
                        <labels>
                    </labels>
                <created>Fri, 19 Sep 2014 23:37:10 +0000</created>
                <updated>Mon, 1 Feb 2016 14:55:53 +0000</updated>
                            <resolved>Mon, 22 Sep 2014 22:14:09 +0000</resolved>
                                    <version>1.7.7</version>
                                    <fixVersion>1.8.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="14141562" author="rdblue" created="Fri, 19 Sep 2014 23:39:56 +0000"  >&lt;p&gt;Adding a patch with a simple fix.&lt;/p&gt;</comment>
                            <comment id="14141581" author="cutting" created="Fri, 19 Sep 2014 23:55:36 +0000"  >&lt;p&gt;Patch looks reasonable.  Should we add a test?&lt;/p&gt;</comment>
                            <comment id="14141619" author="rdblue" created="Sat, 20 Sep 2014 00:44:31 +0000"  >&lt;p&gt;Added simple tests for both wrapper classes (e.g., Boolean) and primitives. The test validates against the reflected schema so that java-class properties are set correctly.&lt;/p&gt;</comment>
                            <comment id="14143925" author="jira-bot" created="Mon, 22 Sep 2014 22:13:38 +0000"  >&lt;p&gt;Commit 1626913 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1626913&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1626913&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1589&quot; title=&quot;[Java] ReflectData.AllowNulls will create incompatible Schemas for primitive types&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1589&quot;&gt;&lt;del&gt;AVRO-1589&lt;/del&gt;&lt;/a&gt;. Java: Fix ReflectData.AllowNulls to not create unions for primitive types.  Contributed by Ryan Blue.&lt;/p&gt;</comment>
                            <comment id="14143928" author="cutting" created="Mon, 22 Sep 2014 22:14:09 +0000"  >&lt;p&gt;I added the license to the new file &amp;amp; committed this.&lt;/p&gt;

&lt;p&gt;Thanks, Ryan!&lt;/p&gt;</comment>
                            <comment id="14143966" author="hudson" created="Mon, 22 Sep 2014 22:39:09 +0000"  >&lt;p&gt;FAILURE: Integrated in AvroJava #481 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/481/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/481/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1589&quot; title=&quot;[Java] ReflectData.AllowNulls will create incompatible Schemas for primitive types&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1589&quot;&gt;&lt;del&gt;AVRO-1589&lt;/del&gt;&lt;/a&gt;. Java: Fix ReflectData.AllowNulls to not create unions for primitive types.  Contributed by Ryan Blue. (cutting: rev 1626913)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectData.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14143988" author="rdblue" created="Mon, 22 Sep 2014 22:58:57 +0000"  >&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12742289">AVRO-1588</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12670146" name="AVRO-1589-1.patch" size="1313" author="rdblue" created="Fri, 19 Sep 2014 23:39:30 +0000"/>
                            <attachment id="12670155" name="AVRO-1589-2.patch" size="4640" author="rdblue" created="Sat, 20 Sep 2014 00:44:31 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 19 Sep 2014 23:55:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 17 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i20a6v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1590] [java] AllowNull causes unexpected resolution failure</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1590</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;If I try to read data serialized with a hand-written schema using a reflected schema generated by AllowNull, even though all of the individual types can be read. Here is a failing test:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;Point {
    &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; x;
    &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; y;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;Circle {
    Point center;
    &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; radius;
  }

  @Test
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testAllowNull() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SchemaValidatorBuilder()
        .canBeReadStrategy()
        .validateLatest().validate(
        SchemaBuilder.record(&lt;span class=&quot;code-quote&quot;&gt;&quot;Circle&quot;&lt;/span&gt;).fields()
            .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;center&quot;&lt;/span&gt;).type().record(&lt;span class=&quot;code-quote&quot;&gt;&quot;Point&quot;&lt;/span&gt;).fields()
            .requiredDouble(&lt;span class=&quot;code-quote&quot;&gt;&quot;x&quot;&lt;/span&gt;)
            .requiredDouble(&lt;span class=&quot;code-quote&quot;&gt;&quot;y&quot;&lt;/span&gt;)
            .endRecord().noDefault()
            .requiredDouble(&lt;span class=&quot;code-quote&quot;&gt;&quot;radius&quot;&lt;/span&gt;)
            .endRecord(),
        Arrays.asList(ReflectData.AllowNull.get().getSchema(Circle.class)));
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The problem is that the &lt;tt&gt;ResolvingGrammarGenerator&lt;/tt&gt; can&apos;t resolve a record with a nullable record unless the two have the same &lt;a href=&quot;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/io/parsing/ResolvingGrammarGenerator.java#L439&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;full name&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is more work, but I think the check should be whether there is a readable record in the union. Another alternative is to special case a nullable union and allow the record-level resolution only in that case.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12742912">AVRO-1590</key>
            <summary>[java] AllowNull causes unexpected resolution failure</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rdblue">Ryan Blue</assignee>
                                    <reporter username="rdblue">Ryan Blue</reporter>
                        <labels>
                    </labels>
                <created>Sat, 20 Sep 2014 02:20:08 +0000</created>
                <updated>Mon, 1 Feb 2016 14:56:09 +0000</updated>
                            <resolved>Mon, 29 Sep 2014 22:58:51 +0000</resolved>
                                    <version>1.7.7</version>
                                    <fixVersion>1.8.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="14145132" author="rdblue" created="Tue, 23 Sep 2014 17:58:07 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1590&quot; title=&quot;[java] AllowNull causes unexpected resolution failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1590&quot;&gt;&lt;del&gt;AVRO-1590&lt;/del&gt;&lt;/a&gt;: Improve resolution of records in unions.&lt;/p&gt;

&lt;p&gt;This fixes schema resolution when a record is inside a union and has a&lt;br/&gt;
name change. A common situation to encounter this error is using a&lt;br/&gt;
hand-written schema and switching to a reflected schema with AllowNull&lt;br/&gt;
(this is the included test case).&lt;/p&gt;

&lt;p&gt;Previously, when a schema changed to a union, then bestBranch method&lt;br/&gt;
would only match records if the name and namespace matched exactly or if&lt;br/&gt;
both records were not named. The latter case assumed that any unnamed&lt;br/&gt;
records matched. This commit updates the bestBranch resolution so that a&lt;br/&gt;
Symbol is generated for the potential record pair and checks whether the &lt;br/&gt;
result is an error action (if there are unresolved fields) or whether&lt;br/&gt;
the record fields are error actions (if a field exists but always&lt;br/&gt;
results in an error). This fixes the initial problem and chooses the &lt;br/&gt;
correct branch in the rare case of multiple unnamed records.&lt;/p&gt;

&lt;p&gt;There are two significant behavior changes when resolving an added union:&lt;br/&gt;
1. The first record with a matching structure will be chosen instead of one with a matching name&lt;br/&gt;
2. Unnamed records are matched by structure rather than choosing the first in the union&lt;/p&gt;</comment>
                            <comment id="14146533" author="cutting" created="Wed, 24 Sep 2014 17:03:09 +0000"  >&lt;p&gt;I&apos;m confused.  Why is it wrong to require a full name match here?  An alias could be used, or the manually defined schema can specify the namespace.  What am I missing?&lt;/p&gt;</comment>
                            <comment id="14146571" author="rdblue" created="Wed, 24 Sep 2014 17:28:11 +0000"  >&lt;p&gt;The problem is that full name isn&apos;t required elsewhere to perform the matching. If the full name matches or an alias exists, then that works for resolution. But when resolving two record types without one being wrapped in a union, there is no requirement that the names must match. Instead, they are matched using &lt;a href=&quot;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/io/parsing/ResolvingGrammarGenerator.java#L118&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;&lt;tt&gt;resolveRecords&lt;/tt&gt;&lt;/a&gt; that just looks at the structure. Because this is the &quot;usual&quot; behavior, I expected it to work the same way when I had a name change and the record was in a union with NULL.&lt;/p&gt;

&lt;p&gt;Perhaps a simpler summary is:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Resolving T and Union(NULL, T, ...) works for all types&lt;/li&gt;
	&lt;li&gt;Resolving Record(name=A, fields=...) and Record(name=B, fields=...) works if the fields can be resolved&lt;/li&gt;
	&lt;li&gt;Resolving Record(name=A, fields=...) and Union(NULL, Record(name=B, fields=...)) &lt;em&gt;doesn&apos;t&lt;/em&gt; work even though both of the above rules seem to be satisfied&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I also think that the behavior isn&apos;t quite correct when both record names are null, although I don&apos;t think this is a very common case. If a record with no name is matched against a union of two records with no name, then the first branch in the union is always chosen. But we can do slightly better and match the structure of the records to get the right one.&lt;/p&gt;</comment>
                            <comment id="14146772" author="cutting" created="Wed, 24 Sep 2014 19:34:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;Resolving Record(name=A, fields=...) and Record(name=B, fields=...) works if the fields can be resolved&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is a deviation from the specification.  Record names are meant to match, including namespace.  For example one have a union that contains records v1.Purchase and v2.Purchase.&lt;/p&gt;

&lt;p&gt;Aliases were added to permit folks to read records in with changed names.  The namespace is part of the name.  So it seems to me that aliases are a better way to handle this, rather than rely on a loose implementation.&lt;/p&gt;

&lt;p&gt;Records will null names are not permitted in the spec.  The Java implementation uses them internally to implement message parameter lists, but the schema parser shouldn&apos;t parse them.&lt;/p&gt;

&lt;p&gt;We could: &lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;implement the spec even more loosely, e.g., first looking for the record in a union whose full name matches, then one whose short name matches and if both of those fail use the first record in the union.&lt;/li&gt;
	&lt;li&gt;tighten the implementation to better enforce the specification, breaking applications that depend on this.&lt;/li&gt;
	&lt;li&gt;change the specification to permit loose matching when exact match fails.&lt;/li&gt;
	&lt;li&gt;leave things as is.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;It would be good to look how Perl, Python, Ruby, C &amp;amp; C++ implement this.  In a union with multiple records, how do they select a match?  My guess is that some are strict &amp;amp; some are loose.&lt;/p&gt;

&lt;p&gt;By Postel&apos;s law, a loose implementation is acceptable, so I lean towards 1 or 4.&lt;/p&gt;</comment>
                            <comment id="14146800" author="rdblue" created="Wed, 24 Sep 2014 19:54:30 +0000"  >&lt;p&gt;Python at least uses the strict check that the full names match (see io lines &lt;a href=&quot;https://github.com/apache/avro/blob/trunk/lang/py/src/avro/io.py#L457&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;457&lt;/a&gt; and &lt;a href=&quot;https://github.com/apache/avro/blob/trunk/lang/py/src/avro/io.py#L388&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;388&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I think #1 works. I like matching just the short name to support relocations more easily, and using the first record in the union fixes the cases where I&apos;m seeing this because AllowNull is adding unions everywhere. If we want an even more loose implementation, I can update this patch so that it checks full name, then short name, and then structure rather than choosing the first record.&lt;/p&gt;</comment>
                            <comment id="14148508" author="cutting" created="Thu, 25 Sep 2014 23:50:17 +0000"  >&lt;p&gt;How would you check structure?  The record that has the highest number of matching field names?  First one that has any matching field names?&lt;/p&gt;</comment>
                            <comment id="14148517" author="rdblue" created="Fri, 26 Sep 2014 00:04:45 +0000"  >&lt;p&gt;The current patch matches the first record that doesn&apos;t produce an error action or has an error action in its production. That translates to:&lt;br/&gt;
1. All of the fields in the read schema were present in the write schema or had defaults (or else the Symbol is an ErrorAction)&lt;br/&gt;
2. Each field has a possible non-error action (or else the field itself would be an ErrorAction, like reading a float as an int)&lt;/p&gt;</comment>
                            <comment id="14148522" author="cutting" created="Fri, 26 Sep 2014 00:09:12 +0000"  >&lt;p&gt;That sounds like a great structural check.&lt;/p&gt;</comment>
                            <comment id="14148525" author="rdblue" created="Fri, 26 Sep 2014 00:12:21 +0000"  >&lt;p&gt;Great, then I&apos;ll plan on updating the patch so that it first checks full name, then short name, then matches structure.&lt;/p&gt;</comment>
                            <comment id="14150780" author="rdblue" created="Sat, 27 Sep 2014 21:26:04 +0000"  >&lt;p&gt;Patch #2, which implements record matching in a union by:&lt;br/&gt;
1. Check full name&lt;br/&gt;
2. Check short name&lt;br/&gt;
3. Check structure&lt;/p&gt;</comment>
                            <comment id="14150782" author="rdblue" created="Sat, 27 Sep 2014 21:31:17 +0000"  >&lt;p&gt;I just added a patch that implements the union matching as discussed. But, I&apos;m not sure that checking the short name before structure is the right thing to do. The structure check gives a list of potential matches, and I don&apos;t think there&apos;s a case where we would want to return a successful resolution because the short name matches but the structure doesn&apos;t. If the structure can&apos;t be matched, then I think the right thing to do is go with the specified behavior and return that there was no way to resolve the union. So I think short name could be used to choose between potential matches, but shouldn&apos;t be used in place of matching structure. If there&apos;s agreement on that, then I can update the patch again.&lt;/p&gt;</comment>
                            <comment id="14152264" author="cutting" created="Mon, 29 Sep 2014 20:49:57 +0000"  >&lt;p&gt;Ryan, that makes perfect sense.&lt;/p&gt;</comment>
                            <comment id="14152449" author="rdblue" created="Mon, 29 Sep 2014 22:42:20 +0000"  >&lt;p&gt;This patch changes the logic in &lt;tt&gt;bestBranch&lt;/tt&gt; for records one more time:&lt;br/&gt;
1. If there is a full name match for any branch of the union, it is chosen&lt;br/&gt;
2. Of the records in the union that can read the written schema, if one matches the written schema&apos;s short name, it is chosen.&lt;br/&gt;
3. Otherwise, the first record that can read the written schema is chosen.&lt;/p&gt;

&lt;p&gt;I&apos;ve added a few tests for the ResolvingGrammarGenerator that verify this behavior.&lt;/p&gt;</comment>
                            <comment id="14152470" author="jira-bot" created="Mon, 29 Sep 2014 22:58:29 +0000"  >&lt;p&gt;Commit 1628335 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1628335&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1628335&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1590&quot; title=&quot;[java] AllowNull causes unexpected resolution failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1590&quot;&gt;&lt;del&gt;AVRO-1590&lt;/del&gt;&lt;/a&gt;. Java: In resolving records in unions, permit structural and shortname matches when fullname matching fails.  Contributed by Ryan Blue.&lt;/p&gt;</comment>
                            <comment id="14152471" author="cutting" created="Mon, 29 Sep 2014 22:58:51 +0000"  >&lt;p&gt;I committed this.  Thanks, Ryan!&lt;/p&gt;</comment>
                            <comment id="14152539" author="rdblue" created="Mon, 29 Sep 2014 23:47:13 +0000"  >&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="14152540" author="hudson" created="Mon, 29 Sep 2014 23:47:25 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #483 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/483/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/483/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1590&quot; title=&quot;[java] AllowNull causes unexpected resolution failure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1590&quot;&gt;&lt;del&gt;AVRO-1590&lt;/del&gt;&lt;/a&gt;. Java: In resolving records in unions, permit structural and shortname matches when fullname matching fails.  Contributed by Ryan Blue. (cutting: rev 1628335)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/io/parsing/ResolvingGrammarGenerator.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/TestSchemaValidation.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator2.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12670758" name="AVRO-1590-1.patch" size="6131" author="rdblue" created="Tue, 23 Sep 2014 17:58:07 +0000"/>
                            <attachment id="12671664" name="AVRO-1590-2.patch" size="7710" author="rdblue" created="Sat, 27 Sep 2014 21:26:04 +0000"/>
                            <attachment id="12671891" name="AVRO-1590-3.patch" size="12144" author="rdblue" created="Mon, 29 Sep 2014 22:42:20 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 24 Sep 2014 17:03:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 16 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i20abj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
