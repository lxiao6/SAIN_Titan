<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:27:29 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2018-11-6+AND+created+%3C%3D+2018-11-13+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="12" total="12"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-2254] Unions with 2 records declared downward fail</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2254</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The following IDL will fail complaining that 2 same type is declared twice in the union:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@namespace(&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.avro.gen&quot;&lt;/span&gt;)
protocol UnionFwd {

    record TestRecord {
      union {SR1, SR2} unionField;
    }

    record SR1 {
      string field;
    }

    record SR2 {
      string field;
    }

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the fix for this can be pretty simple:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zolyfarkas/avro/commit/56b215f73f34cc80d505875c90217916b271abb5&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/zolyfarkas/avro/commit/56b215f73f34cc80d505875c90217916b271abb5&lt;/a&gt;&lt;/p&gt;
</description>
                <environment></environment>
        <key id="13197151">AVRO-2254</key>
            <summary>Unions with 2 records declared downward fail</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="zolyfarkas">Zoltan Farkas</reporter>
                        <labels>
                    </labels>
                <created>Thu, 8 Nov 2018 15:09:40 +0000</created>
                <updated>Sun, 30 Dec 2018 05:20:15 +0000</updated>
                                            <version>1.9.0</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="16681192" author="nkollar" created="Fri, 9 Nov 2018 09:58:25 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zolyfarkas&quot; class=&quot;user-hover&quot; rel=&quot;zolyfarkas&quot;&gt;Zoltan Farkas&lt;/a&gt; looks like a bug, could you please create a PR with the fix?&lt;/p&gt;</comment>
                            <comment id="16682877" author="zolyfarkas" created="Sun, 11 Nov 2018 13:16:44 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkollar&quot; class=&quot;user-hover&quot; rel=&quot;nkollar&quot;&gt;Nandor Kollar&lt;/a&gt; Nandor, can you please review the fix I am referencing and let me know if the solution looks good? This way I can create a better PR...&lt;/p&gt;</comment>
                            <comment id="16685032" author="nkollar" created="Tue, 13 Nov 2018 10:53:04 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zolyfarkas&quot; class=&quot;user-hover&quot; rel=&quot;zolyfarkas&quot;&gt;Zoltan Farkas&lt;/a&gt; the fix looks good to me, I can merge the PR if you open one, and&#160;every test passes.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 9 Nov 2018 09:58:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|s00a3s:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2255] Implement shellcheck automatically on Pull Requests</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2255</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;In the several PRs to &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2229&quot; title=&quot;Ability to test using a Docker image&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2229&quot;&gt;&lt;del&gt;AVRO-2229&lt;/del&gt;&lt;/a&gt; I suggested improvements to some of the shell scripts. Many of those improvements were bugs caught by &lt;a href=&quot;https://github.com/koalaman/shellcheck.&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/koalaman/shellcheck.&lt;/a&gt; I think we should implement shellcheck in our automatic checks so that contributors get fast feedback on their shell scripts.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13197285">AVRO-2255</key>
            <summary>Implement shellcheck automatically on Pull Requests</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="kojiromike">Michael A. Smith</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Nov 2018 01:16:40 +0000</created>
                <updated>Sun, 30 Dec 2018 05:48:12 +0000</updated>
                                                                            <component>misc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="16680720" author="kojiromike" created="Fri, 9 Nov 2018 01:46:45 +0000"  >&lt;p&gt;There isn&apos;t a trivial way to tell which files in the repo are shell scripts, because they don&apos;t all have a simple extension like &apos;.sh&apos;. A mildly non-trivial solution would be something like&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-bash&quot;&gt;
git ls-files -z | xargs -0 file | awk -F: &lt;span class=&quot;code-quote-red&quot;&gt;&apos;/shell script/{printf &lt;span class=&quot;code-object&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;code-quote-red&quot;&gt;&quot;\0&quot;&lt;/span&gt;}&apos;&lt;/span&gt; | xargs -0 shellcheck
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we want to run it in docker we can do that partially:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-bash&quot;&gt;
git ls-files -z | xargs -0 file | awk -F: &lt;span class=&quot;code-quote-red&quot;&gt;&apos;/shell script/{printf &lt;span class=&quot;code-object&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;code-quote-red&quot;&gt;&quot;\0&quot;&lt;/span&gt;}&apos;&lt;/span&gt; |
    xargs -0 docker run --rm -v &lt;span class=&quot;code-quote-red&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;$PWD&lt;/span&gt;:&lt;span class=&quot;code-object&quot;&gt;$PWD&lt;/span&gt;&quot;&lt;/span&gt; -w &lt;span class=&quot;code-quote-red&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;$PWD&lt;/span&gt;&quot;&lt;/span&gt; koalaman/shellcheck
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Doing it fully in docker is annoying because alpine doesn&apos;t have the `file` command (even though it&apos;s a POSIX standard command), so we&apos;d have to jump through some hoops to get that working neatly.&lt;/p&gt;</comment>
                            <comment id="16680722" author="kojiromike" created="Fri, 9 Nov 2018 01:48:32 +0000"  >&lt;p&gt;The reason I used &lt;tt&gt;git ls-files&lt;/tt&gt; above is I assume we&apos;ll really want to test only the changed files in any given PR, so I&apos;m guessing that solution involves git. But if Yetus or Travis has a concise list of changed files from the GitHub API, that&apos;s probably better.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|s00axk:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2256] Error checking compatibility of record reader schema with union writer schema</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2256</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;This raises a missing method error because the comparison is invalid.&lt;/p&gt;

&lt;p&gt;Fix:&#160;&lt;a href=&quot;https://github.com/apache/avro/pull/368&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/368&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="13197479">AVRO-2256</key>
            <summary>Error checking compatibility of record reader schema with union writer schema</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tjwp">Tim Perkins</assignee>
                                    <reporter username="tjwp">Tim Perkins</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Nov 2018 18:38:50 +0000</created>
                <updated>Sun, 18 Nov 2018 17:30:15 +0000</updated>
                            <resolved>Sun, 18 Nov 2018 17:30:15 +0000</resolved>
                                    <version>1.9.0</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>ruby</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16684284" author="githubbot" created="Mon, 12 Nov 2018 19:29:54 +0000"  >&lt;p&gt;Fokko commented on a change in pull request #368: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2256&quot; title=&quot;Error checking compatibility of record reader schema with union writer schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2256&quot;&gt;&lt;del&gt;AVRO-2256&lt;/del&gt;&lt;/a&gt; Prevent error checking compatibility of a record reading a union in Ruby&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/368#discussion_r232784016&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/368#discussion_r232784016&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/ruby/lib/avro/schema_compatibility.rb&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -141,6 +141,8 @@ def match_union_schemas(writers_schema, readers_schema)&lt;br/&gt;
       end&lt;/p&gt;

&lt;p&gt;       def match_record_schemas(writers_schema, readers_schema)&lt;br/&gt;
+        return false if writers_schema.type_sym == :union&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   Haven&apos;t done Ruby for a while. This will return always `false` when it is a union?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16687041" author="githubbot" created="Wed, 14 Nov 2018 19:54:45 +0000"  >&lt;p&gt;tjwp commented on a change in pull request #368: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2256&quot; title=&quot;Error checking compatibility of record reader schema with union writer schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2256&quot;&gt;&lt;del&gt;AVRO-2256&lt;/del&gt;&lt;/a&gt; Prevent error checking compatibility of a record reading a union in Ruby&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/368#discussion_r233596859&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/368#discussion_r233596859&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/ruby/lib/avro/schema_compatibility.rb&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -141,6 +141,8 @@ def match_union_schemas(writers_schema, readers_schema)&lt;br/&gt;
       end&lt;/p&gt;

&lt;p&gt;       def match_record_schemas(writers_schema, readers_schema)&lt;br/&gt;
+        return false if writers_schema.type_sym == :union&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   That&apos;s correct it will always return `false` for a union.&lt;/p&gt;

&lt;p&gt;   From a schema compatibility perspective, that is correct. If there writer&apos;s schema was union, then in general it cannot be guaranteed that a record schema in the reader is compatible with it.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16690977" author="githubbot" created="Sun, 18 Nov 2018 17:30:06 +0000"  >&lt;p&gt;Fokko closed pull request #368: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2256&quot; title=&quot;Error checking compatibility of record reader schema with union writer schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2256&quot;&gt;&lt;del&gt;AVRO-2256&lt;/del&gt;&lt;/a&gt; Prevent error checking compatibility of a record reading a union in Ruby&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/368&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/368&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/ruby/lib/avro/schema_compatibility.rb b/lang/ruby/lib/avro/schema_compatibility.rb&lt;br/&gt;
index 1842b3e0a..37401fc0a 100644&lt;br/&gt;
&amp;#8212; a/lang/ruby/lib/avro/schema_compatibility.rb&lt;br/&gt;
+++ b/lang/ruby/lib/avro/schema_compatibility.rb&lt;br/&gt;
@@ -141,6 +141,8 @@ def match_union_schemas(writers_schema, readers_schema)&lt;br/&gt;
       end&lt;/p&gt;

&lt;p&gt;       def match_record_schemas(writers_schema, readers_schema)&lt;br/&gt;
+        return false if writers_schema.type_sym == :union&lt;br/&gt;
+&lt;br/&gt;
         writer_fields_hash = writers_schema.fields_hash&lt;br/&gt;
         readers_schema.fields.each do |field|&lt;br/&gt;
           if writer_fields_hash.key?(field.name)&lt;br/&gt;
diff --git a/lang/ruby/test/test_schema_compatibility.rb b/lang/ruby/test/test_schema_compatibility.rb&lt;br/&gt;
index 138c8956b..4ec60ef76 100644&lt;br/&gt;
&amp;#8212; a/lang/ruby/test/test_schema_compatibility.rb&lt;br/&gt;
+++ b/lang/ruby/test/test_schema_compatibility.rb&lt;br/&gt;
@@ -75,7 +75,9 @@ def test_compatible_reader_writer_pairs&lt;br/&gt;
       long_list_record_schema, long_list_record_schema,&lt;br/&gt;
       long_list_record_schema, int_list_record_schema,&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;null_schema, null_schema&lt;br/&gt;
+      null_schema, null_schema,&lt;br/&gt;
+&lt;br/&gt;
+      nested_optional_record, nested_record&lt;br/&gt;
     ].each_slice(2) do |(reader, writer)|&lt;br/&gt;
       assert_true(can_read?(writer, reader), &quot;expecting #
{reader} to read #{writer}&quot;)&lt;br/&gt;
     end&lt;br/&gt;
@@ -130,7 +132,9 @@ def test_incompatible_reader_writer_pairs&lt;br/&gt;
 &lt;br/&gt;
       int_list_record_schema, long_list_record_schema,&lt;br/&gt;
 &lt;br/&gt;
-      null_schema, int_schema&lt;br/&gt;
+      null_schema, int_schema,&lt;br/&gt;
+&lt;br/&gt;
+      nested_record, nested_optional_record&lt;br/&gt;
     ].each_slice(2) do |(reader, writer)|&lt;br/&gt;
       assert_false(can_read?(writer, reader), &quot;expecting #{reader}
&lt;p&gt; not to read #&lt;/p&gt;
{writer}
&lt;p&gt;&quot;)&lt;br/&gt;
     end&lt;br/&gt;
@@ -413,6 +417,14 @@ def a_dint_b_dint_record1_schema&lt;br/&gt;
     Avro::Schema.parse(&apos;&lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {&amp;quot;type&amp;quot;}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;&apos;)&lt;br/&gt;
   end&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+  def nested_record&lt;br/&gt;
+    Avro::Schema.parse(&apos;{&quot;type&quot;:&quot;record&quot;,&quot;name&quot;:&quot;parent&quot;,&quot;fields&quot;:[{&quot;name&quot;:&quot;attribute&quot;,&quot;type&quot;:{&quot;type&quot;:&quot;record&quot;,&quot;name&quot;:&quot;child&quot;,&quot;fields&quot;:[&lt;/p&gt;
{&quot;name&quot;:&quot;id&quot;,&quot;type&quot;:&quot;string&quot;}
&lt;p&gt;]}}]}&apos;)&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
+  def nested_optional_record&lt;br/&gt;
+    Avro::Schema.parse(&apos;{&quot;type&quot;:&quot;record&quot;,&quot;name&quot;:&quot;parent&quot;,&quot;fields&quot;:[{&quot;name&quot;:&quot;attribute&quot;,&quot;type&quot;:[&quot;null&quot;,{&quot;type&quot;:&quot;record&quot;,&quot;name&quot;:&quot;child&quot;,&quot;fields&quot;:[&lt;/p&gt;
{&quot;name&quot;:&quot;id&quot;,&quot;type&quot;:&quot;string&quot;}
&lt;p&gt;]}],&quot;default&quot;:null}]}&apos;)&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
   def int_list_record_schema&lt;br/&gt;
     Avro::Schema.parse &amp;lt;&amp;lt;-SCHEMA&lt;br/&gt;
       {&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 Nov 2018 19:29:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310250" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10430"><![CDATA[Patch]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|s00c4o:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2257] Site Link to Release Notes is Not Available</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2257</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The &lt;a href=&quot;https://avro.apache.org/releases.html#Release+Notes&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;release notes section&lt;/a&gt; of the apache release page redirect to a &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO?report=com.atlassian.jira.plugin.system.project:changelog-panel#selectedTab=com.atlassian.jira.plugin.system.project%3Achangelog-panel&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;change log panel&lt;/a&gt;&#160;on JIRA, but that panel, if it exists at all, is not publicly visible.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13197482">AVRO-2257</key>
            <summary>Site Link to Release Notes is Not Available</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="dcsobral">Daniel Sobral</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Nov 2018 18:48:54 +0000</created>
                <updated>Fri, 9 Nov 2018 18:48:54 +0000</updated>
                                                                            <component>doc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|s00c5c:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2258] Resolution Canonical Form</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2258</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The spec defines the Parsing Canonical Form to identify schemas that are the same from the perspective of reading data written against the schemas. Schema Fingerprints can then be computed based on the Parsing Canonical Form.&lt;/p&gt;

&lt;p&gt;For our implementation of an Avro schema registry, we found schema fingerprints based on the Parsing Canonical Form to be insufficient because they exclude default and alias attributes which affect resolution between different schemas.&lt;/p&gt;

&lt;p&gt;For the registry, we wanted new versions to created when defaults or alias are changed.&lt;/p&gt;

&lt;p&gt;We extended to the Parsing Canonical Form to define a Resolution Canonical Form by modifying the order transformation and adding a transformation on aliases:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;ORDER&amp;#93;&lt;/span&gt; Order the appearance of fields in JSON objects as follows:&#160;&lt;tt&gt;name, type, fields, symbols, items, values, size, default, aliases&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;ALIASES&amp;#93;&lt;/span&gt; Aliases for named types and fields are converted to their fullname, using applicable namespace, and sorted.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We have an implementation for this that we have been using in Ruby:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/salsify/avro-resolution_canonical_form&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/salsify/avro-resolution_canonical_form&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;I&apos;m opening this issue to gauge if there is interest and support for adding this to the Avro specification. If there is then I can open a pull request to modify the spec.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13197493">AVRO-2258</key>
            <summary>Resolution Canonical Form</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="tjwp">Tim Perkins</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Nov 2018 19:44:08 +0000</created>
                <updated>Fri, 9 Nov 2018 19:44:08 +0000</updated>
                                                                            <component>spec</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|s00c7s:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2259] Enable C++ tests for build using docker</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2259</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Presently, C++ tests&#160;are disabled. Re-enable the tests so that developers can use docker for building and testing C++ binding.&lt;/p&gt;</description>
                <environment>&lt;p&gt;From project root, the following sequence of commands fails:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ ./build.sh docker
user@f407ae86ead3:~/avro$ cd lang/c++
thiru@f407ae86ead3:~/avro/lang/c++$ rm -rf build
thiru@f407ae86ead3:~/avro/lang/c++$ ./build.sh test&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</environment>
        <key id="13197627">AVRO-2259</key>
            <summary>Enable C++ tests for build using docker</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thiru_mg">Thiruvalluvan M. G.</assignee>
                                    <reporter username="thiru_mg">Thiruvalluvan M. G.</reporter>
                        <labels>
                    </labels>
                <created>Sun, 11 Nov 2018 07:46:27 +0000</created>
                <updated>Sun, 11 Nov 2018 19:04:42 +0000</updated>
                            <resolved>Sun, 11 Nov 2018 19:04:42 +0000</resolved>
                                    <version>1.8.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>c++</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|s00d1k:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2260] IDL Json Parsing is lossy, and it could be made more accurate.</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2260</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently all integers are handled as Long, and all floating point as Double, having basically the following issues:&lt;/p&gt;

&lt;p&gt;1) cannot handle numbers larger that MAXLONG.&lt;br/&gt;
2) introducing unnecessary precision &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
JsonNode Json() :
{ &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; s; Token t; JsonNode n; }
{ 
( s = JsonString() { n = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TextNode(s); }
| (t=&amp;lt;INTEGER_LITERAL&amp;gt; { n = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LongNode(&lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.parseLong(t.image)); })
| (t=&amp;lt;FLOATING_POINT_LITERAL&amp;gt; {n=&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DoubleNode(&lt;span class=&quot;code-object&quot;&gt;Double&lt;/span&gt;.parseDouble(t.image));})
| n=JsonObject()
| n=JsonArray()
| ( &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt; { n = BooleanNode.TRUE; } )
| ( &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&quot;&lt;/span&gt; { n = BooleanNode.FALSE; } )
| ( &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;&quot;&lt;/span&gt; { n = NullNode.instance; } )
 )
  { &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; n; }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This should be improved to:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
JsonNode Json() :
{ &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; s; Token t; JsonNode n; }
{ 
( s = JsonString() { n = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TextNode(s); }
| (t=&amp;lt;INTEGER_LITERAL&amp;gt; {
           &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
             n = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IntNode(&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.parseInt(t.image));
           } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt;(NumberFormatException  e) {
             &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
                n = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LongNode(&lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.parseLong(t.image));
             } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt;(NumberFormatException  ex2) {
                n = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BigIntegerNode(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; java.math.BigInteger(t.image));
             }
           }
 })
| (t=&amp;lt;FLOATING_POINT_LITERAL&amp;gt; {n=&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DecimalNode(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; java.math.BigDecimal(t.image));})
| n=JsonObject()
| n=JsonArray()
| ( &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;&quot;&lt;/span&gt; { n = BooleanNode.TRUE; } )
| ( &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;&quot;&lt;/span&gt; { n = BooleanNode.FALSE; } )
| ( &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;&quot;&lt;/span&gt; { n = NullNode.instance; } )
 )
  { &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; n; }
}

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="13197641">AVRO-2260</key>
            <summary>IDL Json Parsing is lossy, and it could be made more accurate.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="zolyfarkas">Zoltan Farkas</reporter>
                        <labels>
                    </labels>
                <created>Sun, 11 Nov 2018 13:30:46 +0000</created>
                <updated>Sun, 30 Dec 2018 04:36:56 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|s00d4o:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2261] Bump RAT plugin to 0.13</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2261</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description></description>
                <environment></environment>
        <key id="13197759">AVRO-2261</key>
            <summary>Bump RAT plugin to 0.13</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21148&amp;avatarType=issuetype">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="Fokko">Fokko Driesprong</assignee>
                                    <reporter username="Fokko">Fokko Driesprong</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 Nov 2018 11:14:29 +0000</created>
                <updated>Mon, 12 Nov 2018 15:22:30 +0000</updated>
                            <resolved>Mon, 12 Nov 2018 15:21:55 +0000</resolved>
                                    <version>1.8.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16683602" author="githubbot" created="Mon, 12 Nov 2018 11:24:18 +0000"  >&lt;p&gt;Fokko opened a new pull request #372: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2261&quot; title=&quot;Bump RAT plugin to 0.13&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2261&quot;&gt;&lt;del&gt;AVRO-2261&lt;/del&gt;&lt;/a&gt; Bump Rat version&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/372&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/372&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   So we&apos;re up to date with the latest greatest&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16683932" author="githubbot" created="Mon, 12 Nov 2018 15:22:27 +0000"  >&lt;p&gt;Fokko closed pull request #372: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2261&quot; title=&quot;Bump RAT plugin to 0.13&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2261&quot;&gt;&lt;del&gt;AVRO-2261&lt;/del&gt;&lt;/a&gt; Bump Rat version&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/372&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/372&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/pom.xml b/pom.xml&lt;br/&gt;
index 0dfecbd5b..0792baaa1 100644&lt;br/&gt;
&amp;#8212; a/pom.xml&lt;br/&gt;
+++ b/pom.xml&lt;br/&gt;
@@ -53,7 +53,7 @@&lt;br/&gt;
     &amp;lt;!-- plugin versions --&amp;gt;&lt;br/&gt;
     &amp;lt;antrun-plugin.version&amp;gt;1.7&amp;lt;/antrun-plugin.version&amp;gt;&lt;br/&gt;
     &amp;lt;enforcer-plugin.version&amp;gt;1.3.1&amp;lt;/enforcer-plugin.version&amp;gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&amp;lt;rat.version&amp;gt;0.12&amp;lt;/rat.version&amp;gt;&lt;br/&gt;
+    &amp;lt;rat.version&amp;gt;0.13&amp;lt;/rat.version&amp;gt;&lt;br/&gt;
     &amp;lt;checkstyle-plugin.version&amp;gt;2.17&amp;lt;/checkstyle-plugin.version&amp;gt;&lt;br/&gt;
   &amp;lt;/properties&amp;gt;&lt;/li&gt;
&lt;/ul&gt;






&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16683933" author="jira-bot" created="Mon, 12 Nov 2018 15:22:30 +0000"  >&lt;p&gt;Commit a8875da2cff6bd08c4169f3126b1871f09c557e3 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Fokko&quot; class=&quot;user-hover&quot; rel=&quot;Fokko&quot;&gt;Fokko Driesprong&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=a8875da&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=a8875da&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2261&quot; title=&quot;Bump RAT plugin to 0.13&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2261&quot;&gt;&lt;del&gt;AVRO-2261&lt;/del&gt;&lt;/a&gt; Bump Rat version (#372)&lt;/p&gt;

</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 Nov 2018 11:24:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|s00duo:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2262] Java compression codec improvements</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2262</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;ul&gt;
	&lt;li&gt;Update a few things to use try-with-resources&lt;/li&gt;
	&lt;li&gt;Updated CodecFactory to reference constants for codec names&lt;/li&gt;
	&lt;li&gt;Fixed a small bug in Snappy and BZip2: compression/decompression were incorrect if the input ByteBuffer was a a slice(). I don&apos;t see anywhere that this would actually happen currently, but some codecs were written to account for this correctly; now they&apos;re all correct. Updated everything to compute the correct offset into the underlying array. (I can add a test for this in TestAllCodecs once #351 is merged).&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="13197760">AVRO-2262</key>
            <summary>Java compression codec improvements</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21148&amp;avatarType=issuetype">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jtolar">Jacob Tolar</assignee>
                                    <reporter username="Fokko">Fokko Driesprong</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 Nov 2018 11:17:44 +0000</created>
                <updated>Mon, 12 Nov 2018 20:05:56 +0000</updated>
                            <resolved>Mon, 12 Nov 2018 11:18:23 +0000</resolved>
                                    <version>1.8.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16683592" author="githubbot" created="Mon, 12 Nov 2018 11:18:12 +0000"  >&lt;p&gt;Fokko closed pull request #352: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2262&quot; title=&quot;Java compression codec improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2262&quot;&gt;&lt;del&gt;AVRO-2262&lt;/del&gt;&lt;/a&gt; Java compression codec improvements&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/352&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/352&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/avro/src/main/java/org/apache/avro/file/BZip2Codec.java b/lang/java/avro/src/main/java/org/apache/avro/file/BZip2Codec.java&lt;br/&gt;
index e2dbc094f..1d1f4ed26 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/main/java/org/apache/avro/file/BZip2Codec.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/file/BZip2Codec.java&lt;br/&gt;
@@ -29,6 +29,8 @@&lt;br/&gt;
 public class BZip2Codec extends Codec {&lt;/p&gt;

&lt;p&gt;   public static final int DEFAULT_BUFFER_SIZE = 64 * 1024;&lt;br/&gt;
+  private final byte[] buffer = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;DEFAULT_BUFFER_SIZE&amp;#93;&lt;/span&gt;;&lt;br/&gt;
+&lt;br/&gt;
   private ByteArrayOutputStream outputBuffer;&lt;/p&gt;

&lt;p&gt;   static class Option extends CodecFactory {&lt;br/&gt;
@@ -43,41 +45,27 @@ protected Codec createInstance() {&lt;/p&gt;

&lt;p&gt;   @Override&lt;br/&gt;
   public ByteBuffer compress(ByteBuffer uncompressedData) throws IOException {&lt;br/&gt;
-&lt;br/&gt;
     ByteArrayOutputStream baos = getOutputBuffer(uncompressedData.remaining());&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;BZip2CompressorOutputStream outputStream = new BZip2CompressorOutputStream(baos);&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;try 
{
-      outputStream.write(uncompressedData.array(),
-                         uncompressedData.position(),
-                         uncompressedData.remaining());
-    }
&lt;p&gt; finally {&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;outputStream.close();&lt;br/&gt;
+&lt;br/&gt;
+    try (BZip2CompressorOutputStream outputStream = new BZip2CompressorOutputStream(baos)) 
{
+        outputStream.write(uncompressedData.array(), computeOffset(uncompressedData), uncompressedData.remaining());
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ByteBuffer result = ByteBuffer.wrap(baos.toByteArray());&lt;/li&gt;
	&lt;li&gt;return result;&lt;br/&gt;
+    return ByteBuffer.wrap(baos.toByteArray());&lt;br/&gt;
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   @Override&lt;br/&gt;
   public ByteBuffer decompress(ByteBuffer compressedData) throws IOException {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ByteArrayInputStream bais = new ByteArrayInputStream(compressedData.array());&lt;/li&gt;
	&lt;li&gt;BZip2CompressorInputStream inputStream = new BZip2CompressorInputStream(bais);&lt;/li&gt;
	&lt;li&gt;try {&lt;br/&gt;
+    ByteArrayInputStream bais = new ByteArrayInputStream(compressedData.array(), computeOffset(compressedData), compressedData.remaining());&lt;br/&gt;
+    try(BZip2CompressorInputStream inputStream = new BZip2CompressorInputStream(bais)) {&lt;br/&gt;
       ByteArrayOutputStream baos = new ByteArrayOutputStream();&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;byte[] buffer = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;DEFAULT_BUFFER_SIZE&amp;#93;&lt;/span&gt;;&lt;br/&gt;
-&lt;br/&gt;
       int readCount = -1;&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;while ( (readCount = inputStream.read(buffer, compressedData.position(), buffer.length))&amp;gt; 0) {&lt;br/&gt;
+      while ((readCount = inputStream.read(buffer, compressedData.position(), buffer.length)) &amp;gt; 0) 
{
         baos.write(buffer, 0, readCount);
       }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ByteBuffer result = ByteBuffer.wrap(baos.toByteArray());&lt;/li&gt;
	&lt;li&gt;return result;&lt;/li&gt;
	&lt;li&gt;} finally 
{
-      inputStream.close();
+      return ByteBuffer.wrap(baos.toByteArray());
     }
&lt;p&gt;   }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -100,6 +88,4 @@ private ByteArrayOutputStream getOutputBuffer(int suggestedLength) &lt;/p&gt;
{
     outputBuffer.reset();
     return outputBuffer;
   }
&lt;p&gt;-&lt;br/&gt;
-&lt;br/&gt;
 }&lt;br/&gt;
diff --git a/lang/java/avro/src/main/java/org/apache/avro/file/Codec.java b/lang/java/avro/src/main/java/org/apache/avro/file/Codec.java&lt;br/&gt;
index bd335c925..d4621390f 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/main/java/org/apache/avro/file/Codec.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/file/Codec.java&lt;br/&gt;
@@ -22,6 +22,9 @@&lt;/p&gt;

&lt;p&gt; /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Interface for Avro-supported compression codecs for data files.&lt;br/&gt;
+ *&lt;br/&gt;
+ * Note that Codec objects may maintain internal state (e.g. buffers)&lt;br/&gt;
+ * and are not thread safe.&lt;br/&gt;
  */&lt;br/&gt;
 public abstract class Codec {&lt;br/&gt;
   /** Name of the codec; written to the file&apos;s metadata. */&lt;br/&gt;
@@ -37,12 +40,21 @@&lt;br/&gt;
    **/&lt;br/&gt;
   @Override&lt;br/&gt;
   public abstract boolean equals(Object other);&lt;br/&gt;
+&lt;br/&gt;
   /**&lt;/li&gt;
	&lt;li&gt;Codecs must implement a hashCode() method that is consistent with equals().*/&lt;br/&gt;
   @Override&lt;br/&gt;
   public abstract int hashCode();&lt;br/&gt;
+&lt;br/&gt;
   @Override&lt;br/&gt;
   public String toString() 
{
     return getName();
   }
&lt;p&gt;+&lt;br/&gt;
+  // Codecs often reference the array inside a ByteBuffer. Compute the offset&lt;br/&gt;
+  // to the start of data correctly in the case that our ByteBuffer&lt;br/&gt;
+  // is a slice() of another.&lt;br/&gt;
+  protected static int computeOffset(ByteBuffer data) &lt;/p&gt;
{
+      return data.arrayOffset() + data.position();
+  }
&lt;p&gt; }&lt;br/&gt;
diff --git a/lang/java/avro/src/main/java/org/apache/avro/file/CodecFactory.java b/lang/java/avro/src/main/java/org/apache/avro/file/CodecFactory.java&lt;br/&gt;
index db51fc693..238e8a4d7 100644&lt;/p&gt;
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/java/avro/src/main/java/org/apache/avro/file/CodecFactory.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/file/CodecFactory.java&lt;br/&gt;
@@ -83,12 +83,12 @@ public static CodecFactory zstandardCodec() {&lt;br/&gt;
   public static final int DEFAULT_XZ_LEVEL = LZMA2Options.PRESET_DEFAULT;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   static &lt;/p&gt;
{
-    addCodec(&quot;null&quot;, nullCodec());
-    addCodec(&quot;deflate&quot;, deflateCodec(DEFAULT_DEFLATE_LEVEL));
-    addCodec(&quot;snappy&quot;, snappyCodec());
-    addCodec(&quot;bzip2&quot;, bzip2Codec());
-    addCodec(&quot;xz&quot;, xzCodec(DEFAULT_XZ_LEVEL));
-    addCodec(&quot;zstandard&quot;, zstandardCodec());
+    addCodec(DataFileConstants.NULL_CODEC, nullCodec());
+    addCodec(DataFileConstants.DEFLATE_CODEC, deflateCodec(DEFAULT_DEFLATE_LEVEL));
+    addCodec(DataFileConstants.SNAPPY_CODEC, snappyCodec());
+    addCodec(DataFileConstants.BZIP2_CODEC, bzip2Codec());
+    addCodec(DataFileConstants.XZ_CODEC, xzCodec(DEFAULT_XZ_LEVEL));
+    addCodec(DataFileConstants.ZSTANDARD_CODEC, zstandardCodec());
   }

&lt;p&gt;   /** Maps a codec name into a CodecFactory.&lt;br/&gt;
diff --git a/lang/java/avro/src/main/java/org/apache/avro/file/DeflateCodec.java b/lang/java/avro/src/main/java/org/apache/avro/file/DeflateCodec.java&lt;br/&gt;
index 7080d65ea..5a3f92718 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/main/java/org/apache/avro/file/DeflateCodec.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/file/DeflateCodec.java&lt;br/&gt;
@@ -36,7 +36,7 @@&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;{@link Inflater}
&lt;p&gt; and &lt;/p&gt;
{@link Deflater}
&lt;p&gt;, is using&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;RFC1951.&lt;br/&gt;
  */&lt;br/&gt;
-class DeflateCodec extends Codec {&lt;br/&gt;
+public class DeflateCodec extends Codec {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   static class Option extends CodecFactory {&lt;br/&gt;
     private int compressionLevel;&lt;br/&gt;
@@ -70,30 +70,19 @@ public String getName() {&lt;br/&gt;
   @Override&lt;br/&gt;
   public ByteBuffer compress(ByteBuffer data) throws IOException {&lt;br/&gt;
     ByteArrayOutputStream baos = getOutputBuffer(data.remaining());&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;DeflaterOutputStream ios = new DeflaterOutputStream(baos, getDeflater());&lt;/li&gt;
	&lt;li&gt;writeAndClose(data, ios);&lt;/li&gt;
	&lt;li&gt;ByteBuffer result = ByteBuffer.wrap(baos.toByteArray());&lt;/li&gt;
	&lt;li&gt;return result;&lt;br/&gt;
+    try(OutputStream outputStream = new DeflaterOutputStream(baos, getDeflater())) 
{
+      outputStream.write(data.array(), computeOffset(data), data.remaining());
+    }&lt;br/&gt;
+    return ByteBuffer.wrap(baos.toByteArray());&lt;br/&gt;
   }&lt;br/&gt;
 &lt;br/&gt;
   @Override&lt;br/&gt;
   public ByteBuffer decompress(ByteBuffer data) throws IOException {
     ByteArrayOutputStream baos = getOutputBuffer(data.remaining());
-    InflaterOutputStream ios = new InflaterOutputStream(baos, getInflater());
-    writeAndClose(data, ios);
-    ByteBuffer result = ByteBuffer.wrap(baos.toByteArray());
-    return result;
-  }&lt;br/&gt;
-&lt;br/&gt;
-  private void writeAndClose(ByteBuffer data, OutputStream to) throws IOException {&lt;br/&gt;
-    byte[] input = data.array();&lt;br/&gt;
-    int offset = data.arrayOffset() + data.position();&lt;br/&gt;
-    int length = data.remaining();&lt;br/&gt;
-    try {
-      to.write(input, offset, length);
-    } finally {&lt;br/&gt;
-      to.close();&lt;br/&gt;
+    try(OutputStream outputStream = new InflaterOutputStream(baos, getInflater())) {
+      outputStream.write(data.array(), computeOffset(data), data.remaining());
     }&lt;br/&gt;
+    return ByteBuffer.wrap(baos.toByteArray());&lt;br/&gt;
   }&lt;br/&gt;
 &lt;br/&gt;
   // get and initialize the inflater for use.&lt;br/&gt;
diff --git a/lang/java/avro/src/main/java/org/apache/avro/file/SnappyCodec.java b/lang/java/avro/src/main/java/org/apache/avro/file/SnappyCodec.java&lt;br/&gt;
index 3c75bb70f..04f721861 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/main/java/org/apache/avro/file/SnappyCodec.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/file/SnappyCodec.java&lt;br/&gt;
@@ -24,7 +24,7 @@&lt;br/&gt;
 import org.xerial.snappy.Snappy;&lt;br/&gt;
 &lt;br/&gt;
 /** * Implements Snappy compression and decompression. */&lt;br/&gt;
-class SnappyCodec extends Codec {&lt;br/&gt;
+public class SnappyCodec extends Codec {&lt;br/&gt;
   private CRC32 crc32 = new CRC32();&lt;br/&gt;
 &lt;br/&gt;
   static class Option extends CodecFactory {&lt;br/&gt;
@@ -40,12 +40,13 @@ private SnappyCodec() {}&lt;br/&gt;
 &lt;br/&gt;
   @Override&lt;br/&gt;
   public ByteBuffer compress(ByteBuffer in) throws IOException {&lt;br/&gt;
+    int offset = computeOffset(in);&lt;br/&gt;
     ByteBuffer out =&lt;br/&gt;
       ByteBuffer.allocate(Snappy.maxCompressedLength(in.remaining())+4);&lt;br/&gt;
-    int size = Snappy.compress(in.array(), in.position(), in.remaining(),&lt;br/&gt;
+    int size = Snappy.compress(in.array(), offset, in.remaining(),&lt;br/&gt;
                                out.array(), 0);&lt;br/&gt;
     crc32.reset();&lt;br/&gt;
-    crc32.update(in.array(), in.position(), in.remaining());&lt;br/&gt;
+    crc32.update(in.array(), offset, in.remaining());&lt;br/&gt;
     out.putInt(size, (int)crc32.getValue());&lt;br/&gt;
 &lt;br/&gt;
     out.limit(size+4);&lt;br/&gt;
@@ -55,9 +56,10 @@ public ByteBuffer compress(ByteBuffer in) throws IOException {&lt;br/&gt;
 &lt;br/&gt;
   @Override&lt;br/&gt;
   public ByteBuffer decompress(ByteBuffer in) throws IOException {&lt;br/&gt;
+    int offset = computeOffset(in);&lt;br/&gt;
     ByteBuffer out = ByteBuffer.allocate&lt;br/&gt;
-      (Snappy.uncompressedLength(in.array(),in.position(),in.remaining()-4));&lt;br/&gt;
-    int size = Snappy.uncompress(in.array(),in.position(),in.remaining()-4,&lt;br/&gt;
+      (Snappy.uncompressedLength(in.array(), offset, in.remaining()-4));&lt;br/&gt;
+    int size = Snappy.uncompress(in.array(), offset, in.remaining()-4,&lt;br/&gt;
                                  out.array(), 0);&lt;br/&gt;
     out.limit(size);&lt;br/&gt;
 &lt;br/&gt;
@@ -79,5 +81,4 @@ public boolean equals(Object obj) {
       return false;
     return true;
   }&lt;br/&gt;
-&lt;br/&gt;
 }&lt;br/&gt;
diff --git a/lang/java/avro/src/main/java/org/apache/avro/file/XZCodec.java b/lang/java/avro/src/main/java/org/apache/avro/file/XZCodec.java&lt;br/&gt;
index 6586818fa..92a742a56 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/main/java/org/apache/avro/file/XZCodec.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/file/XZCodec.java&lt;br/&gt;
@@ -59,8 +59,9 @@ public String getName() {&lt;br/&gt;
   @Override&lt;br/&gt;
   public ByteBuffer compress(ByteBuffer data) throws IOException {&lt;br/&gt;
     ByteArrayOutputStream baos = getOutputBuffer(data.remaining());&lt;br/&gt;
-    OutputStream ios = new XZCompressorOutputStream(baos, compressionLevel);&lt;br/&gt;
-    writeAndClose(data, ios);&lt;br/&gt;
+    try (OutputStream outputStream = new XZCompressorOutputStream(baos, compressionLevel)) {+      outputStream.write(data.array(), computeOffset(data), data.remaining());+    }
&lt;p&gt;     return ByteBuffer.wrap(baos.toByteArray());&lt;br/&gt;
   }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -69,28 +70,15 @@ public ByteBuffer decompress(ByteBuffer data) throws IOException {&lt;br/&gt;
     ByteArrayOutputStream baos = getOutputBuffer(data.remaining());&lt;br/&gt;
     InputStream bytesIn = new ByteArrayInputStream(&lt;br/&gt;
       data.array(),&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;data.arrayOffset() + data.position(),&lt;br/&gt;
+      computeOffset(data),&lt;br/&gt;
       data.remaining());&lt;/li&gt;
	&lt;li&gt;InputStream ios = new XZCompressorInputStream(bytesIn);&lt;/li&gt;
	&lt;li&gt;try 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {++    try (InputStream ios = new XZCompressorInputStream(bytesIn)) {
       IOUtils.copy(ios, baos);
-    } finally {
-      ios.close();
     }     return ByteBuffer.wrap(baos.toByteArray());   }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private void writeAndClose(ByteBuffer data, OutputStream to) throws IOException {&lt;/li&gt;
	&lt;li&gt;byte[] input = data.array();&lt;/li&gt;
	&lt;li&gt;int offset = data.arrayOffset() + data.position();&lt;/li&gt;
	&lt;li&gt;int length = data.remaining();&lt;/li&gt;
	&lt;li&gt;try 
{
-      to.write(input, offset, length);
-    }
&lt;p&gt; finally &lt;/p&gt;
{
-      to.close();
-    }&lt;/li&gt;
	&lt;li&gt;}&lt;br/&gt;
-&lt;br/&gt;
   // get and initialize the output buffer for use.&lt;br/&gt;
   private ByteArrayOutputStream getOutputBuffer(int suggestedLength) {&lt;br/&gt;
     if (null == outputBuffer) {&lt;br/&gt;
diff --git a/lang/java/avro/src/main/java/org/apache/avro/file/ZstandardCodec.java b/lang/java/avro/src/main/java/org/apache/avro/file/ZstandardCodec.java&lt;br/&gt;
index 4ec84335f..deea4b88e 100644
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/java/avro/src/main/java/org/apache/avro/file/ZstandardCodec.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/file/ZstandardCodec.java&lt;br/&gt;
@@ -46,10 +46,11 @@ public String getName() {&lt;br/&gt;
     }&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     @Override&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public ByteBuffer compress(ByteBuffer uncompressedData) throws IOException {&lt;/li&gt;
	&lt;li&gt;ByteArrayOutputStream baos = getOutputBuffer(uncompressedData.remaining());&lt;/li&gt;
	&lt;li&gt;OutputStream outputStream = new ZstdCompressorOutputStream(baos);&lt;/li&gt;
	&lt;li&gt;writeAndClose(uncompressedData, outputStream);&lt;br/&gt;
+    public ByteBuffer compress(ByteBuffer data) throws IOException 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+        ByteArrayOutputStream baos = getOutputBuffer(data.remaining());+        try (OutputStream outputStream = new ZstdCompressorOutputStream(baos)) {
+           outputStream.write(data.array(), computeOffset(data), data.remaining());
+        }         return ByteBuffer.wrap(baos.toByteArray());     }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -58,28 +59,14 @@ public ByteBuffer decompress(ByteBuffer compressedData) throws IOException {&lt;br/&gt;
         ByteArrayOutputStream baos = getOutputBuffer(compressedData.remaining());&lt;br/&gt;
         InputStream bytesIn = new ByteArrayInputStream(&lt;br/&gt;
           compressedData.array(),&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;compressedData.arrayOffset() + compressedData.position(),&lt;br/&gt;
+          computeOffset(compressedData),&lt;br/&gt;
           compressedData.remaining());&lt;/li&gt;
	&lt;li&gt;InputStream ios = new ZstdCompressorInputStream(bytesIn);&lt;/li&gt;
	&lt;li&gt;try 
{
-          IOUtils.copy(ios, baos);
-        }
&lt;p&gt; finally {&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;ios.close();&lt;br/&gt;
+        try (InputStream ios = new ZstdCompressorInputStream(bytesIn)) 
{
+            IOUtils.copy(ios, baos);
         }
&lt;p&gt;         return ByteBuffer.wrap(baos.toByteArray());&lt;br/&gt;
     }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private void writeAndClose(ByteBuffer data, OutputStream to) throws IOException {&lt;/li&gt;
	&lt;li&gt;byte[] input = data.array();&lt;/li&gt;
	&lt;li&gt;int offset = data.arrayOffset() + data.position();&lt;/li&gt;
	&lt;li&gt;int length = data.remaining();&lt;/li&gt;
	&lt;li&gt;try 
{
-          to.write(input, offset, length);
-        }
&lt;p&gt; finally &lt;/p&gt;
{
-          to.close();
-        }&lt;/li&gt;
	&lt;li&gt;}&lt;br/&gt;
-&lt;br/&gt;
     // get and initialize the output buffer for use.&lt;br/&gt;
     private ByteArrayOutputStream getOutputBuffer(int suggestedLength) {&lt;br/&gt;
       if (outputBuffer == null) {&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16683593" author="jira-bot" created="Mon, 12 Nov 2018 11:18:16 +0000"  >&lt;p&gt;Commit 07bd95a82f93458196d44f8e285435a865d3d70d in avro&apos;s branch refs/heads/master from jacobtolar&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=07bd95a&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=07bd95a&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2262&quot; title=&quot;Java compression codec improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2262&quot;&gt;&lt;del&gt;AVRO-2262&lt;/del&gt;&lt;/a&gt; Java compression codec fixes. (#352)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2262&quot; title=&quot;Java compression codec improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2262&quot;&gt;&lt;del&gt;AVRO-2262&lt;/del&gt;&lt;/a&gt; Java compression codec improvements&lt;/p&gt;</comment>
                            <comment id="16683594" author="jira-bot" created="Mon, 12 Nov 2018 11:18:17 +0000"  >&lt;p&gt;Commit 07bd95a82f93458196d44f8e285435a865d3d70d in avro&apos;s branch refs/heads/master from jacobtolar&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=07bd95a&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=07bd95a&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2262&quot; title=&quot;Java compression codec improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2262&quot;&gt;&lt;del&gt;AVRO-2262&lt;/del&gt;&lt;/a&gt; Java compression codec fixes. (#352)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2262&quot; title=&quot;Java compression codec improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2262&quot;&gt;&lt;del&gt;AVRO-2262&lt;/del&gt;&lt;/a&gt; Java compression codec improvements&lt;/p&gt;</comment>
                            <comment id="16684182" author="githubbot" created="Mon, 12 Nov 2018 18:03:58 +0000"  >&lt;p&gt;jacobtolar commented on issue #352: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2262&quot; title=&quot;Java compression codec improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2262&quot;&gt;&lt;del&gt;AVRO-2262&lt;/del&gt;&lt;/a&gt; Java compression codec improvements&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/352#issuecomment-437975579&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/352#issuecomment-437975579&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Sorry, I hadn&apos;t gotten back around to this yet. Thanks for merging.&lt;/p&gt;

&lt;p&gt;   I&apos;ll have to send a separate PR with the unit test I was going to add to this branch once #351 was merged.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16684195" author="githubbot" created="Mon, 12 Nov 2018 18:13:09 +0000"  >&lt;p&gt;jacobtolar opened a new pull request #376: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2262&quot; title=&quot;Java compression codec improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2262&quot;&gt;&lt;del&gt;AVRO-2262&lt;/del&gt;&lt;/a&gt;: add unit test to test codec behavior on sliced buffers&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/376&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/376&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   This tests the changes that were merged in #352 &lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16684212" author="githubbot" created="Mon, 12 Nov 2018 18:22:28 +0000"  >&lt;p&gt;Fokko commented on issue #352: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2262&quot; title=&quot;Java compression codec improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2262&quot;&gt;&lt;del&gt;AVRO-2262&lt;/del&gt;&lt;/a&gt; Java compression codec improvements&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/352#issuecomment-437981023&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/352#issuecomment-437981023&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Thanks @jacobtolar &lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16684316" author="githubbot" created="Mon, 12 Nov 2018 20:05:41 +0000"  >&lt;p&gt;Fokko closed pull request #376: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2262&quot; title=&quot;Java compression codec improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2262&quot;&gt;&lt;del&gt;AVRO-2262&lt;/del&gt;&lt;/a&gt;: add unit test to test codec behavior on sliced buffers&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/376&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/376&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/avro/src/test/java/org/apache/avro/file/TestAllCodecs.java b/lang/java/avro/src/test/java/org/apache/avro/file/TestAllCodecs.java&lt;br/&gt;
index 0e531b7a5..c21c56891 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/test/java/org/apache/avro/file/TestAllCodecs.java&lt;br/&gt;
+++ b/lang/java/avro/src/test/java/org/apache/avro/file/TestAllCodecs.java&lt;br/&gt;
@@ -84,6 +84,39 @@ public void testCodec() throws IOException &lt;/p&gt;
{
     Assert.assertEquals(decompressedBuffer, inputByteBuffer);
   }

&lt;p&gt;+  @Test&lt;br/&gt;
+  public void testCodecSlice() throws IOException &lt;/p&gt;
{
+    int inputSize = 500_000;
+    byte[] input = generateTestData(inputSize);
+
+    Codec codecInstance = CodecFactory.fromString(codec).createInstance();
+
+    ByteBuffer partialBuffer = ByteBuffer.wrap(input);
+    partialBuffer.position(17);
+
+    ByteBuffer inputByteBuffer = partialBuffer.slice();
+    ByteBuffer compressedBuffer = codecInstance.compress(inputByteBuffer);
+
+    int compressedSize = compressedBuffer.remaining();
+
+    // Make sure something returned
+    assertTrue(compressedSize &amp;gt; 0);
+
+    // Create a slice from the compressed buffer
+    ByteBuffer sliceBuffer = ByteBuffer.allocate(compressedSize + 100);
+    sliceBuffer.position(50);
+    sliceBuffer.put(compressedBuffer);
+    sliceBuffer.limit(compressedSize + 50);
+    sliceBuffer.position(50);
+
+    // Decompress the data
+    ByteBuffer decompressedBuffer = codecInstance.decompress(sliceBuffer.slice());
+
+    // Validate the the input and output are equal.
+    inputByteBuffer.rewind();
+    Assert.assertEquals(decompressedBuffer, inputByteBuffer);
+  }
&lt;p&gt;+&lt;br/&gt;
   // Generate some test data that will compress easily&lt;br/&gt;
   public static byte[] generateTestData(int inputSize) {&lt;br/&gt;
     byte[] arr = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;inputSize&amp;#93;&lt;/span&gt;;&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16684317" author="jira-bot" created="Mon, 12 Nov 2018 20:05:45 +0000"  >&lt;p&gt;Commit 40a5e6ae4cc4cd2d8065880c2641d640d1ca2f8f in avro&apos;s branch refs/heads/master from jacobtolar&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=40a5e6a&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=40a5e6a&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2262&quot; title=&quot;Java compression codec improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2262&quot;&gt;&lt;del&gt;AVRO-2262&lt;/del&gt;&lt;/a&gt; Unit test to test codec behavior on sliced buffers (#376)&lt;/p&gt;

&lt;p&gt;See #352 for further reference.&lt;/p&gt;</comment>
                            <comment id="16684318" author="githubbot" created="Mon, 12 Nov 2018 20:05:56 +0000"  >&lt;p&gt;Fokko commented on issue #376: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2262&quot; title=&quot;Java compression codec improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2262&quot;&gt;&lt;del&gt;AVRO-2262&lt;/del&gt;&lt;/a&gt;: add unit test to test codec behavior on sliced buffers&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/376#issuecomment-438011564&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/376#issuecomment-438011564&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Thanks for the follow up @jacobtolar &lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 Nov 2018 11:18:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|s00duw:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2263] Bump Apache commons-cli to 1.4</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2263</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description></description>
                <environment></environment>
        <key id="13197761">AVRO-2263</key>
            <summary>Bump Apache commons-cli to 1.4</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21148&amp;avatarType=issuetype">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="Fokko">Fokko Driesprong</assignee>
                                    <reporter username="Fokko">Fokko Driesprong</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 Nov 2018 11:21:24 +0000</created>
                <updated>Mon, 12 Nov 2018 15:22:12 +0000</updated>
                            <resolved>Mon, 12 Nov 2018 15:21:40 +0000</resolved>
                                    <version>1.8.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16683601" author="githubbot" created="Mon, 12 Nov 2018 11:24:08 +0000"  >&lt;p&gt;Fokko opened a new pull request #371: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2263&quot; title=&quot;Bump Apache commons-cli to 1.4&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2263&quot;&gt;&lt;del&gt;AVRO-2263&lt;/del&gt;&lt;/a&gt; Bump Apache commons-cli to 1.4&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/371&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/371&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16683929" author="githubbot" created="Mon, 12 Nov 2018 15:22:07 +0000"  >&lt;p&gt;Fokko closed pull request #371: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2263&quot; title=&quot;Bump Apache commons-cli to 1.4&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2263&quot;&gt;&lt;del&gt;AVRO-2263&lt;/del&gt;&lt;/a&gt; Bump Apache commons-cli to 1.4&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/371&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/371&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/pom.xml b/lang/java/pom.xml&lt;br/&gt;
index 30de7f8de..c335a5ab0 100644&lt;br/&gt;
&amp;#8212; a/lang/java/pom.xml&lt;br/&gt;
+++ b/lang/java/pom.xml&lt;br/&gt;
@@ -52,7 +52,7 @@&lt;br/&gt;
     &amp;lt;velocity.version&amp;gt;2.0&amp;lt;/velocity.version&amp;gt;&lt;br/&gt;
     &amp;lt;maven.version&amp;gt;2.0.11&amp;lt;/maven.version&amp;gt;&lt;br/&gt;
     &amp;lt;ant.version&amp;gt;1.10.0&amp;lt;/ant.version&amp;gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&amp;lt;commons-cli.version&amp;gt;1.3.1&amp;lt;/commons-cli.version&amp;gt;&lt;br/&gt;
+    &amp;lt;commons-cli.version&amp;gt;1.4&amp;lt;/commons-cli.version&amp;gt;&lt;br/&gt;
     &amp;lt;commons-codec.version&amp;gt;1.10&amp;lt;/commons-codec.version&amp;gt;&lt;br/&gt;
     &amp;lt;commons-compress.version&amp;gt;1.18&amp;lt;/commons-compress.version&amp;gt;&lt;br/&gt;
     &amp;lt;commons-lang.version&amp;gt;3.5&amp;lt;/commons-lang.version&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16683931" author="jira-bot" created="Mon, 12 Nov 2018 15:22:12 +0000"  >&lt;p&gt;Commit 9bf8b01243b059911dc042ed2b0ecf4729005cf0 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Fokko&quot; class=&quot;user-hover&quot; rel=&quot;Fokko&quot;&gt;Fokko Driesprong&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=9bf8b01&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=9bf8b01&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2263&quot; title=&quot;Bump Apache commons-cli to 1.4&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2263&quot;&gt;&lt;del&gt;AVRO-2263&lt;/del&gt;&lt;/a&gt; Bump Apache commons-cli to 1.4 (#371)&lt;/p&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 Nov 2018 11:24:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|s00dv4:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2264] Bump Apache commons-lang3 to 3.8.1</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2264</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description></description>
                <environment></environment>
        <key id="13197762">AVRO-2264</key>
            <summary>Bump Apache commons-lang3 to 3.8.1</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21148&amp;avatarType=issuetype">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="Fokko">Fokko Driesprong</assignee>
                                    <reporter username="Fokko">Fokko Driesprong</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 Nov 2018 11:23:05 +0000</created>
                <updated>Mon, 12 Nov 2018 15:23:56 +0000</updated>
                            <resolved>Mon, 12 Nov 2018 15:23:56 +0000</resolved>
                                    <version>1.8.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16683599" author="githubbot" created="Mon, 12 Nov 2018 11:23:58 +0000"  >&lt;p&gt;Fokko opened a new pull request #370: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2264&quot; title=&quot;Bump Apache commons-lang3 to 3.8.1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2264&quot;&gt;&lt;del&gt;AVRO-2264&lt;/del&gt;&lt;/a&gt; Bump Apache commons-lang3 to 3.8.1&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/370&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/370&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16683749" author="githubbot" created="Mon, 12 Nov 2018 12:47:37 +0000"  >&lt;p&gt;nandorKollar closed pull request #370: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2264&quot; title=&quot;Bump Apache commons-lang3 to 3.8.1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2264&quot;&gt;&lt;del&gt;AVRO-2264&lt;/del&gt;&lt;/a&gt; Bump Apache commons-lang3 to 3.8.1&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/370&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/370&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/pom.xml b/lang/java/pom.xml&lt;br/&gt;
index 30de7f8de..e3dc76d28 100644&lt;br/&gt;
&amp;#8212; a/lang/java/pom.xml&lt;br/&gt;
+++ b/lang/java/pom.xml&lt;br/&gt;
@@ -55,7 +55,7 @@&lt;br/&gt;
     &amp;lt;commons-cli.version&amp;gt;1.3.1&amp;lt;/commons-cli.version&amp;gt;&lt;br/&gt;
     &amp;lt;commons-codec.version&amp;gt;1.10&amp;lt;/commons-codec.version&amp;gt;&lt;br/&gt;
     &amp;lt;commons-compress.version&amp;gt;1.18&amp;lt;/commons-compress.version&amp;gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&amp;lt;commons-lang.version&amp;gt;3.5&amp;lt;/commons-lang.version&amp;gt;&lt;br/&gt;
+    &amp;lt;commons-lang.version&amp;gt;3.8.1&amp;lt;/commons-lang.version&amp;gt;&lt;br/&gt;
     &amp;lt;commons-logging.version&amp;gt;1.2&amp;lt;/commons-logging.version&amp;gt;&lt;br/&gt;
     &amp;lt;tukaani.version&amp;gt;1.6&amp;lt;/tukaani.version&amp;gt;&lt;br/&gt;
     &amp;lt;easymock.version&amp;gt;3.6&amp;lt;/easymock.version&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16683750" author="jira-bot" created="Mon, 12 Nov 2018 12:47:41 +0000"  >&lt;p&gt;Commit 6d4f6bef8d03f6bb5d452b65e68074f11892ccbf in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Fokko&quot; class=&quot;user-hover&quot; rel=&quot;Fokko&quot;&gt;Fokko Driesprong&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=6d4f6be&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=6d4f6be&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2264&quot; title=&quot;Bump Apache commons-lang3 to 3.8.1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2264&quot;&gt;&lt;del&gt;AVRO-2264&lt;/del&gt;&lt;/a&gt; Bump Apache commons-lang3 to 3.8.1&lt;/p&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 Nov 2018 11:23:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|s00dvc:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2265] Remove Guava as a dependency</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2265</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Get rid of Guava in the tests. Guava is a dependency that can easily clash with different versions. Since it is used very little, it makes sense to get rid of it.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13197882">AVRO-2265</key>
            <summary>Remove Guava as a dependency</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21148&amp;avatarType=issuetype">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="Fokko">Fokko Driesprong</assignee>
                                    <reporter username="Fokko">Fokko Driesprong</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 Nov 2018 19:02:18 +0000</created>
                <updated>Tue, 13 Nov 2018 08:50:13 +0000</updated>
                            <resolved>Tue, 13 Nov 2018 08:49:49 +0000</resolved>
                                    <version>1.8.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16684256" author="githubbot" created="Mon, 12 Nov 2018 19:10:23 +0000"  >&lt;p&gt;Fokko opened a new pull request #377: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2265&quot; title=&quot;Remove Guava as a dependency&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2265&quot;&gt;&lt;del&gt;AVRO-2265&lt;/del&gt;&lt;/a&gt; Remove Guava as a test dependency&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/377&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/377&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Get rid of Guava: &lt;a href=&quot;https://github.com/apache/avro/pull/373&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/373&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16684900" author="githubbot" created="Tue, 13 Nov 2018 08:50:09 +0000"  >&lt;p&gt;Fokko closed pull request #377: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2265&quot; title=&quot;Remove Guava as a dependency&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2265&quot;&gt;&lt;del&gt;AVRO-2265&lt;/del&gt;&lt;/a&gt; Remove Guava as a test dependency&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/377&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/377&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/avro/pom.xml b/lang/java/avro/pom.xml&lt;br/&gt;
index 817bb3aa0..c9104fba9 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/pom.xml&lt;br/&gt;
+++ b/lang/java/avro/pom.xml&lt;br/&gt;
@@ -179,18 +179,6 @@&lt;br/&gt;
       &amp;lt;groupId&amp;gt;com.github.luben&amp;lt;/groupId&amp;gt;&lt;br/&gt;
       &amp;lt;artifactId&amp;gt;zstd-jni&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
     &amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&amp;lt;dependency&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;groupId&amp;gt;com.google.guava&amp;lt;/groupId&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;artifactId&amp;gt;guava&amp;lt;/artifactId&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;version&amp;gt;${guava.version}&amp;lt;/version&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;exclusions&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;exclusion&amp;gt; &amp;lt;!-- GPL --&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;groupId&amp;gt;com.google.code.findbugs&amp;lt;/groupId&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;artifactId&amp;gt;jsr305&amp;lt;/artifactId&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/exclusion&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/exclusions&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/dependency&amp;gt;&lt;br/&gt;
   &amp;lt;/dependencies&amp;gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; &amp;lt;/project&amp;gt;&lt;br/&gt;
diff --git a/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java b/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java&lt;br/&gt;
index 0c87189f1..4cb6c38d5 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java&lt;br/&gt;
+++ b/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java&lt;br/&gt;
@@ -20,14 +20,8 @@&lt;br/&gt;
 package org.apache.avro.message;&lt;/p&gt;

&lt;p&gt; import java.nio.ByteBuffer;&lt;br/&gt;
-import java.util.Arrays;&lt;br/&gt;
-import java.util.List;&lt;br/&gt;
-import java.util.Set;&lt;br/&gt;
-&lt;br/&gt;
-import com.google.common.collect.Iterables;&lt;br/&gt;
-import com.google.common.collect.Lists;&lt;br/&gt;
-import com.google.common.collect.Ordering;&lt;br/&gt;
-import com.google.common.collect.Sets;&lt;br/&gt;
+import java.util.*;&lt;br/&gt;
+&lt;br/&gt;
 import org.apache.avro.AvroRuntimeException;&lt;br/&gt;
 import org.apache.avro.Schema;&lt;br/&gt;
 import org.apache.avro.SchemaBuilder;&lt;br/&gt;
@@ -38,33 +32,33 @@&lt;br/&gt;
 import org.junit.Test;&lt;/p&gt;

&lt;p&gt; public class TestBinaryMessageEncoding {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public static final Schema SCHEMA_V1 = SchemaBuilder.record(&quot;TestRecord&quot;)&lt;br/&gt;
+  private static final Schema SCHEMA_V1 = SchemaBuilder.record(&quot;TestRecord&quot;)&lt;br/&gt;
       .fields()&lt;br/&gt;
       .requiredInt(&quot;id&quot;)&lt;br/&gt;
       .optionalString(&quot;msg&quot;)&lt;br/&gt;
       .endRecord();&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public static final GenericRecordBuilder V1_BUILDER =&lt;br/&gt;
+  private static final GenericRecordBuilder V1_BUILDER =&lt;br/&gt;
       new GenericRecordBuilder(SCHEMA_V1);&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public static final List&amp;lt;Record&amp;gt; V1_RECORDS = Arrays.asList(&lt;br/&gt;
+  private static final List&amp;lt;Record&amp;gt; V1_RECORDS = Arrays.asList(&lt;br/&gt;
       V1_BUILDER.set(&quot;id&quot;, 1).set(&quot;msg&quot;, &quot;m-1&quot;).build(),&lt;br/&gt;
       V1_BUILDER.set(&quot;id&quot;, 2).set(&quot;msg&quot;, &quot;m-2&quot;).build(),&lt;br/&gt;
       V1_BUILDER.set(&quot;id&quot;, 4).set(&quot;msg&quot;, &quot;m-4&quot;).build(),&lt;br/&gt;
       V1_BUILDER.set(&quot;id&quot;, 6).set(&quot;msg&quot;, &quot;m-6&quot;).build()&lt;br/&gt;
   );&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public static final Schema SCHEMA_V2 = SchemaBuilder.record(&quot;TestRecord&quot;)&lt;br/&gt;
+  private static final Schema SCHEMA_V2 = SchemaBuilder.record(&quot;TestRecord&quot;)&lt;br/&gt;
       .fields()&lt;br/&gt;
       .requiredLong(&quot;id&quot;)&lt;br/&gt;
       .name(&quot;message&quot;).aliases(&quot;msg&quot;).type().optional().stringType()&lt;br/&gt;
       .optionalDouble(&quot;data&quot;)&lt;br/&gt;
       .endRecord();&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public static final GenericRecordBuilder V2_BUILDER =&lt;br/&gt;
+  private static final GenericRecordBuilder V2_BUILDER =&lt;br/&gt;
       new GenericRecordBuilder(SCHEMA_V2);&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public static final List&amp;lt;Record&amp;gt; V2_RECORDS = Arrays.asList(&lt;br/&gt;
+  private static final List&amp;lt;Record&amp;gt; V2_RECORDS = Arrays.asList(&lt;br/&gt;
       V2_BUILDER.set(&quot;id&quot;, 3L).set(&quot;message&quot;, &quot;m-3&quot;).set(&quot;data&quot;, 12.3).build(),&lt;br/&gt;
       V2_BUILDER.set(&quot;id&quot;, 5L).set(&quot;message&quot;, &quot;m-5&quot;).set(&quot;data&quot;, 23.4).build(),&lt;br/&gt;
       V2_BUILDER.set(&quot;id&quot;, 7L).set(&quot;message&quot;, &quot;m-7&quot;).set(&quot;data&quot;, 34.5).build(),&lt;br/&gt;
@@ -73,29 +67,25 @@&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   @Test&lt;br/&gt;
   public void testByteBufferRoundTrip() throws Exception &lt;/p&gt;
{
-    MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(
-        GenericData.get(), SCHEMA_V2);
-    MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(
-        GenericData.get(), SCHEMA_V2);
+    MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);
+    MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);
 
     Record copy = decoder.decode(encoder.encode(V2_RECORDS.get(0)));
 
-    Assert.assertTrue(&quot;Copy should not be the same object&quot;,
-        copy != V2_RECORDS.get(0));
-    Assert.assertEquals(&quot;Record should be identical after round-trip&quot;,
-        V2_RECORDS.get(0), copy);
+    Assert.assertNotSame(&quot;Copy should not be the same object&quot;, copy, V2_RECORDS.get(0));
+    Assert.assertEquals(&quot;Record should be identical after round-trip&quot;, V2_RECORDS.get(0), copy);
   }

&lt;p&gt;   @Test&lt;br/&gt;
   public void testSchemaEvolution() throws Exception {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;List&amp;lt;ByteBuffer&amp;gt; buffers = Lists.newArrayList();&lt;/li&gt;
	&lt;li&gt;List&amp;lt;Record&amp;gt; records = Ordering.usingToString().sortedCopy(&lt;/li&gt;
	&lt;li&gt;Iterables.concat(V1_RECORDS, V2_RECORDS));&lt;br/&gt;
+    List&amp;lt;ByteBuffer&amp;gt; buffers = new ArrayList&amp;lt;&amp;gt;();&lt;br/&gt;
+    List&amp;lt;Record&amp;gt; records = new ArrayList&amp;lt;&amp;gt;();&lt;br/&gt;
+&lt;br/&gt;
+    records.addAll(V1_RECORDS);&lt;br/&gt;
+    records.addAll(V2_RECORDS);&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MessageEncoder&amp;lt;Record&amp;gt; v1Encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V1);&lt;/li&gt;
	&lt;li&gt;MessageEncoder&amp;lt;Record&amp;gt; v2Encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2);&lt;br/&gt;
+    MessageEncoder&amp;lt;Record&amp;gt; v1Encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V1);&lt;br/&gt;
+    MessageEncoder&amp;lt;Record&amp;gt; v2Encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     for (Record record : records) {&lt;br/&gt;
       if (record.getSchema() == SCHEMA_V1) {&lt;br/&gt;
@@ -105,21 +95,17 @@ public void testSchemaEvolution() throws Exception {&lt;br/&gt;
       }&lt;br/&gt;
     }&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Set&amp;lt;Record&amp;gt; allAsV2 = Sets.newHashSet(V2_RECORDS);&lt;/li&gt;
	&lt;li&gt;allAsV2.add(&lt;/li&gt;
	&lt;li&gt;V2_BUILDER.set(&quot;id&quot;, 1L).set(&quot;message&quot;, &quot;m-1&quot;).clear(&quot;data&quot;).build());&lt;/li&gt;
	&lt;li&gt;allAsV2.add(&lt;/li&gt;
	&lt;li&gt;V2_BUILDER.set(&quot;id&quot;, 2L).set(&quot;message&quot;, &quot;m-2&quot;).clear(&quot;data&quot;).build());&lt;/li&gt;
	&lt;li&gt;allAsV2.add(&lt;/li&gt;
	&lt;li&gt;V2_BUILDER.set(&quot;id&quot;, 4L).set(&quot;message&quot;, &quot;m-4&quot;).clear(&quot;data&quot;).build());&lt;/li&gt;
	&lt;li&gt;allAsV2.add(&lt;/li&gt;
	&lt;li&gt;V2_BUILDER.set(&quot;id&quot;, 6L).set(&quot;message&quot;, &quot;m-6&quot;).clear(&quot;data&quot;).build());&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;BinaryMessageDecoder&amp;lt;Record&amp;gt; v2Decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2);&lt;br/&gt;
+    Set&amp;lt;Record&amp;gt; allAsV2 = new HashSet&amp;lt;&amp;gt;(V2_RECORDS);&lt;br/&gt;
+&lt;br/&gt;
+    allAsV2.add(V2_BUILDER.set(&quot;id&quot;, 1L).set(&quot;message&quot;, &quot;m-1&quot;).clear(&quot;data&quot;).build());&lt;br/&gt;
+    allAsV2.add(V2_BUILDER.set(&quot;id&quot;, 2L).set(&quot;message&quot;, &quot;m-2&quot;).clear(&quot;data&quot;).build());&lt;br/&gt;
+    allAsV2.add(V2_BUILDER.set(&quot;id&quot;, 4L).set(&quot;message&quot;, &quot;m-4&quot;).clear(&quot;data&quot;).build());&lt;br/&gt;
+    allAsV2.add(V2_BUILDER.set(&quot;id&quot;, 6L).set(&quot;message&quot;, &quot;m-6&quot;).clear(&quot;data&quot;).build());&lt;br/&gt;
+&lt;br/&gt;
+    BinaryMessageDecoder&amp;lt;Record&amp;gt; v2Decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);&lt;br/&gt;
     v2Decoder.addSchema(SCHEMA_V1);&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Set&amp;lt;Record&amp;gt; decodedUsingV2 = Sets.newHashSet();&lt;br/&gt;
+    Set&amp;lt;Record&amp;gt; decodedUsingV2 = new HashSet&amp;lt;&amp;gt;();&lt;br/&gt;
     for (ByteBuffer buffer : buffers) 
{
       decodedUsingV2.add(v2Decoder.decode(buffer));
     }
&lt;p&gt;@@ -129,10 +115,8 @@ public void testSchemaEvolution() throws Exception {&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   @Test(expected = MissingSchemaException.class)&lt;br/&gt;
   public void testCompatibleReadFailsWithoutSchema() throws Exception {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MessageEncoder&amp;lt;Record&amp;gt; v1Encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V1);&lt;/li&gt;
	&lt;li&gt;BinaryMessageDecoder&amp;lt;Record&amp;gt; v2Decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2);&lt;br/&gt;
+    MessageEncoder&amp;lt;Record&amp;gt; v1Encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V1);&lt;br/&gt;
+    BinaryMessageDecoder&amp;lt;Record&amp;gt; v2Decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     ByteBuffer v1Buffer = v1Encoder.encode(V1_RECORDS.get(3));&lt;/p&gt;

&lt;p&gt;@@ -141,10 +125,8 @@ public void testCompatibleReadFailsWithoutSchema() throws Exception {&lt;/p&gt;

&lt;p&gt;   @Test&lt;br/&gt;
   public void testCompatibleReadWithSchema() throws Exception {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MessageEncoder&amp;lt;Record&amp;gt; v1Encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V1);&lt;/li&gt;
	&lt;li&gt;BinaryMessageDecoder&amp;lt;Record&amp;gt; v2Decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2);&lt;br/&gt;
+    MessageEncoder&amp;lt;Record&amp;gt; v1Encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V1);&lt;br/&gt;
+    BinaryMessageDecoder&amp;lt;Record&amp;gt; v2Decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);&lt;br/&gt;
     v2Decoder.addSchema(SCHEMA_V1);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     ByteBuffer v1Buffer = v1Encoder.encode(V1_RECORDS.get(3));&lt;br/&gt;
@@ -158,13 +140,11 @@ public void testCompatibleReadWithSchema() throws Exception {&lt;/p&gt;

&lt;p&gt;   @Test&lt;br/&gt;
   public void testCompatibleReadWithSchemaFromLookup() throws Exception {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MessageEncoder&amp;lt;Record&amp;gt; v1Encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V1);&lt;br/&gt;
+    MessageEncoder&amp;lt;Record&amp;gt; v1Encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V1);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     SchemaStore.Cache schemaCache = new SchemaStore.Cache();&lt;br/&gt;
     schemaCache.addSchema(SCHEMA_V1);&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;BinaryMessageDecoder&amp;lt;Record&amp;gt; v2Decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2, schemaCache);&lt;br/&gt;
+    BinaryMessageDecoder&amp;lt;Record&amp;gt; v2Decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2, schemaCache);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     ByteBuffer v1Buffer = v1Encoder.encode(V1_RECORDS.get(2));&lt;/p&gt;

&lt;p&gt;@@ -180,32 +160,29 @@ public void testBufferReuse() throws Exception &lt;/p&gt;
{
     // This test depends on the serialized version of record 1 being smaller or
     // the same size as record 0 so that the reused ByteArrayOutputStream won&apos;t
     // expand its internal buffer.
-    MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(
-        GenericData.get(), SCHEMA_V1, false);
+    MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V1, false);
 
     ByteBuffer b0 = encoder.encode(V1_RECORDS.get(0));
     ByteBuffer b1 = encoder.encode(V1_RECORDS.get(1));
 
     Assert.assertEquals(b0.array(), b1.array());
 
-    MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(
-        GenericData.get(), SCHEMA_V1);
+    MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V1);
     Assert.assertEquals(&quot;Buffer was reused, decode(b0) should be record 1&quot;,
         V1_RECORDS.get(1), decoder.decode(b0));
   }

&lt;p&gt;   @Test&lt;br/&gt;
   public void testBufferCopy() throws Exception {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V1);&lt;br/&gt;
+    MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V1);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     ByteBuffer b0 = encoder.encode(V1_RECORDS.get(0));&lt;br/&gt;
     ByteBuffer b1 = encoder.encode(V1_RECORDS.get(1));&lt;/p&gt;

&lt;p&gt;     Assert.assertNotEquals(b0.array(), b1.array());&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V1);&lt;br/&gt;
+    MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V1);&lt;br/&gt;
+&lt;br/&gt;
     // bytes are not changed by reusing the encoder&lt;br/&gt;
     Assert.assertEquals(&quot;Buffer was copied, decode(b0) should be record 0&quot;,&lt;br/&gt;
         V1_RECORDS.get(0), decoder.decode(b0));&lt;br/&gt;
@@ -213,10 +190,8 @@ public void testBufferCopy() throws Exception {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   @Test(expected = AvroRuntimeException.class)&lt;br/&gt;
   public void testByteBufferMissingPayload() throws Exception {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2);&lt;/li&gt;
	&lt;li&gt;MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2);&lt;br/&gt;
+    MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);&lt;br/&gt;
+    MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     ByteBuffer buffer = encoder.encode(V2_RECORDS.get(0));&lt;/p&gt;

&lt;p&gt;@@ -227,10 +202,8 @@ public void testByteBufferMissingPayload() throws Exception {&lt;/p&gt;

&lt;p&gt;   @Test(expected = BadHeaderException.class)&lt;br/&gt;
   public void testByteBufferMissingFullHeader() throws Exception {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2);&lt;/li&gt;
	&lt;li&gt;MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2);&lt;br/&gt;
+    MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);&lt;br/&gt;
+    MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     ByteBuffer buffer = encoder.encode(V2_RECORDS.get(0));&lt;/p&gt;

&lt;p&gt;@@ -241,10 +214,8 @@ public void testByteBufferMissingFullHeader() throws Exception {&lt;/p&gt;

&lt;p&gt;   @Test(expected = BadHeaderException.class)&lt;br/&gt;
   public void testByteBufferBadMarkerByte() throws Exception {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2);&lt;/li&gt;
	&lt;li&gt;MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2);&lt;br/&gt;
+    MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);&lt;br/&gt;
+    MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     ByteBuffer buffer = encoder.encode(V2_RECORDS.get(0));&lt;br/&gt;
     buffer.array()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = 0x00;&lt;br/&gt;
@@ -254,10 +225,8 @@ public void testByteBufferBadMarkerByte() throws Exception {&lt;/p&gt;

&lt;p&gt;   @Test(expected = BadHeaderException.class)&lt;br/&gt;
   public void testByteBufferBadVersionByte() throws Exception {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2);&lt;/li&gt;
	&lt;li&gt;MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2);&lt;br/&gt;
+    MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);&lt;br/&gt;
+    MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     ByteBuffer buffer = encoder.encode(V2_RECORDS.get(0));&lt;br/&gt;
     buffer.array()&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; = 0x00;&lt;br/&gt;
@@ -267,10 +236,8 @@ public void testByteBufferBadVersionByte() throws Exception {&lt;/p&gt;

&lt;p&gt;   @Test(expected = MissingSchemaException.class)&lt;br/&gt;
   public void testByteBufferUnknownSchema() throws Exception {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2);&lt;/li&gt;
	&lt;li&gt;MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(&lt;/li&gt;
	&lt;li&gt;GenericData.get(), SCHEMA_V2);&lt;br/&gt;
+    MessageEncoder&amp;lt;Record&amp;gt; encoder = new BinaryMessageEncoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);&lt;br/&gt;
+    MessageDecoder&amp;lt;Record&amp;gt; decoder = new BinaryMessageDecoder&amp;lt;&amp;gt;(GenericData.get(), SCHEMA_V2);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     ByteBuffer buffer = encoder.encode(V2_RECORDS.get(0));&lt;br/&gt;
     buffer.array()&lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt; = 0x00;&lt;br/&gt;
diff --git a/lang/java/mapred/pom.xml b/lang/java/mapred/pom.xml&lt;br/&gt;
index fb705efee..368226a1d 100644&lt;br/&gt;
&amp;#8212; a/lang/java/mapred/pom.xml&lt;br/&gt;
+++ b/lang/java/mapred/pom.xml&lt;br/&gt;
@@ -101,33 +101,6 @@&lt;br/&gt;
           &amp;lt;/execution&amp;gt;&lt;br/&gt;
         &amp;lt;/executions&amp;gt;&lt;br/&gt;
       &amp;lt;/plugin&amp;gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&amp;lt;plugin&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;artifactId&amp;gt;maven-enforcer-plugin&amp;lt;/artifactId&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;version&amp;gt;1.4.1&amp;lt;/version&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;executions&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;execution&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;id&amp;gt;enforce-banned-dependencies&amp;lt;/id&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;goals&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;goal&amp;gt;enforce&amp;lt;/goal&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/goals&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;configuration&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;rules&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;bannedDependencies&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;!-- Ban all versions of Guava other than 11.0.2 that Hadoop uses --&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;excludes&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;exclude&amp;gt;com.google.guava:guava&amp;lt;/exclude&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/excludes&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;includes&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;include&amp;gt;com.google.guava:guava:11.0.2&amp;lt;/include&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/includes&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/bannedDependencies&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/rules&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;fail&amp;gt;true&amp;lt;/fail&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/configuration&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/execution&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/executions&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/plugin&amp;gt;&lt;br/&gt;
     &amp;lt;/plugins&amp;gt;&lt;br/&gt;
   &amp;lt;/build&amp;gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;diff --git a/lang/java/pom.xml b/lang/java/pom.xml&lt;br/&gt;
index cb596cf2d..43892c003 100644&lt;br/&gt;
&amp;#8212; a/lang/java/pom.xml&lt;br/&gt;
+++ b/lang/java/pom.xml&lt;br/&gt;
@@ -62,8 +62,6 @@&lt;br/&gt;
     &amp;lt;hamcrest.version&amp;gt;1.3&amp;lt;/hamcrest.version&amp;gt;&lt;br/&gt;
     &amp;lt;joda.version&amp;gt;2.10.1&amp;lt;/joda.version&amp;gt;&lt;br/&gt;
     &amp;lt;grpc.version&amp;gt;1.16.1&amp;lt;/grpc.version&amp;gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&amp;lt;!-- This Guava version should match Hadoop&apos;s Guava version. See &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1781&quot; title=&quot;Schema.parse is not thread safe&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1781&quot;&gt;&lt;del&gt;AVRO-1781&lt;/del&gt;&lt;/a&gt;. --&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;guava.version&amp;gt;11.0.2&amp;lt;/guava.version&amp;gt;&lt;br/&gt;
     &amp;lt;findbugs-annotations.version&amp;gt;1.3.9-1&amp;lt;/findbugs-annotations.version&amp;gt;&lt;br/&gt;
     &amp;lt;zstd-jni.version&amp;gt;1.3.7-1&amp;lt;/zstd-jni.version&amp;gt;&lt;/li&gt;
&lt;/ul&gt;






&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16684901" author="jira-bot" created="Tue, 13 Nov 2018 08:50:13 +0000"  >&lt;p&gt;Commit 71be8a456ffb250abb22f2a956ae0c6acd5104fa in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Fokko&quot; class=&quot;user-hover&quot; rel=&quot;Fokko&quot;&gt;Fokko Driesprong&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=71be8a4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=71be8a4&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2265&quot; title=&quot;Remove Guava as a dependency&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2265&quot;&gt;&lt;del&gt;AVRO-2265&lt;/del&gt;&lt;/a&gt; Remove Guava as a test dependency (#377)&lt;/p&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                            <outwardlinks description="supercedes">
                                        <issuelink>
            <issuekey id="13180528">AVRO-2217</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 Nov 2018 19:10:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|s00em0:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
