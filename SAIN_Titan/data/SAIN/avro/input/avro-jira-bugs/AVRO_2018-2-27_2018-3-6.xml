<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:26:18 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2018-2-27+AND+created+%3C%3D+2018-3-6+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="4" total="4"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-2151] ReflectData, JsonEncoder encoding runtime exception</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2151</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Using reflect data has a problem if a field is an array of an object (eg String[]) and using JsonEncoder.&lt;/p&gt;

&lt;p&gt;Simple&#160; reproduction of the problem&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;Record {
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] myfield = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[]{&lt;span class=&quot;code-quote&quot;&gt;&quot;hello world&quot;&lt;/span&gt;};
}

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
  Schema s = SchemaBuilder.record(&lt;span class=&quot;code-quote&quot;&gt;&quot;Record&quot;&lt;/span&gt;)
    .fields()
      .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;myfield&quot;&lt;/span&gt;).type(
        Schema.createArray(
         Schema.create(Schema.Type.STRING)
        )
      ).noDefault()
    .endRecord();

  &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(s);

  ReflectData d = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReflectData();
  d.createDatumWriter(s).write(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Record(),   EncoderFactory.get().jsonEncoder(s, &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;));
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.avro.AvroTypeException: Incorrect number of items written. 1 more required.
	at org.apache.avro.io.ParsingEncoder.pop(ParsingEncoder.java:60)
	at org.apache.avro.io.JsonEncoder.writeArrayEnd(JsonEncoder.java:259)
	at org.apache.avro.reflect.ReflectDatumWriter.writeArray(ReflectDatumWriter.java:112)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumWriter.writeWithoutConversion(GenericDatumWriter.java:120)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumWriter.write(GenericDatumWriter.java:75)
	at org.apache.avro.reflect.ReflectDatumWriter.write(ReflectDatumWriter.java:159)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumWriter.writeField(GenericDatumWriter.java:166)
	at org.apache.avro.specific.SpecificDatumWriter.writeField(SpecificDatumWriter.java:90)
	at org.apache.avro.reflect.ReflectDatumWriter.writeField(ReflectDatumWriter.java:191)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumWriter.writeRecord(GenericDatumWriter.java:156)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumWriter.writeWithoutConversion(GenericDatumWriter.java:118)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumWriter.write(GenericDatumWriter.java:75)
	at org.apache.avro.reflect.ReflectDatumWriter.write(ReflectDatumWriter.java:159)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumWriter.write(GenericDatumWriter.java:62)
	at Bugged.main(Bugged.java:30)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="13141515">AVRO-2151</key>
            <summary>ReflectData, JsonEncoder encoding runtime exception</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="xushichang">Xu ShiChang Desmond</reporter>
                        <labels>
                    </labels>
                <created>Wed, 28 Feb 2018 12:40:19 +0000</created>
                <updated>Wed, 6 Jun 2018 21:25:42 +0000</updated>
                                            <version>1.8.2</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="16468517" author="xushichang" created="Wed, 9 May 2018 07:49:10 +0000"  >&lt;p&gt;Basically, its ReflectDatumWriter&apos;s writeObjectArray that fails to call startItem on the encoder. (it screws the json encoder up but binary encoder doesnt care)&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void writeObjectArray(Schema element, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;[] data, Encoder out) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; size = data.length;
    out.setItemCount(size);
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; size; i++) {
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.write(element, data[i], out);
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="16503928" author="cutting" created="Wed, 6 Jun 2018 21:25:42 +0000"  >&lt;p&gt;Can you please submit a pull request on GitHub, including a test?&#160; Thanks!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 6 Jun 2018 21:25:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            32 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3qp2f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2152] JsonDecoder fails when reading record with aliases inside union</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2152</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The JsonDecoder only handles aliases at the &quot;top level&quot; or &quot;field level&quot;. Aliased records within a union fail with an &quot;Unknown union branch&quot; AvroTypeException.&lt;/p&gt;

&lt;p&gt;&#160;The same writer/read schema combination works fine with the binaryEncoder, and the two schemas are considered a COMPATIBLE by the SchemaCompatibility check.&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;
&lt;h1&gt;&lt;a name=&quot;WriterSchema&quot;&gt;&lt;/a&gt;Writer Schema&lt;/h1&gt;

&lt;p&gt;{&lt;br/&gt;
 &quot;type&quot; : &quot;record&quot;,&lt;br/&gt;
 &quot;name&quot; : &quot;WWrapper&quot;,&lt;br/&gt;
 &quot;namespace&quot; : &quot;writer.ns&quot;,&lt;br/&gt;
 &quot;doc&quot; : &quot;writer&quot;,&lt;br/&gt;
 &quot;fields&quot; : [ {&lt;br/&gt;
 &quot;name&quot; : &quot;item&quot;,&lt;br/&gt;
 &quot;type&quot; : [ &quot;null&quot;, {&lt;br/&gt;
 &quot;type&quot; : &quot;record&quot;,&lt;br/&gt;
 &quot;name&quot; : &quot;WItem&quot;,&lt;br/&gt;
 &quot;doc&quot; : &quot;writer item&quot;,&lt;br/&gt;
 &quot;fields&quot; : [ &lt;/p&gt;
{
 &quot;name&quot; : &quot;value&quot;,
 &quot;type&quot; : &quot;string&quot;,
 &quot;doc&quot; : &quot;value&quot;
 }
&lt;p&gt; ]&lt;br/&gt;
 } ],&lt;br/&gt;
 &quot;doc&quot; : &quot;value&quot;&lt;br/&gt;
 } ]&lt;br/&gt;
}&lt;/p&gt;
&lt;h1&gt;&lt;a name=&quot;ReaderSchema&quot;&gt;&lt;/a&gt;Reader Schema&lt;/h1&gt;

&lt;p&gt;{&lt;br/&gt;
 &quot;type&quot; : &quot;record&quot;,&lt;br/&gt;
 &quot;name&quot; : &quot;RWrapper&quot;,&lt;br/&gt;
 &quot;namespace&quot; : &quot;reader.ns&quot;,&lt;br/&gt;
 &quot;doc&quot; : &quot;reader&quot;,&lt;br/&gt;
 &quot;fields&quot; : [ {&lt;br/&gt;
 &quot;name&quot; : &quot;item&quot;,&lt;br/&gt;
 &quot;type&quot; : [ &quot;null&quot;, {&lt;br/&gt;
 &quot;type&quot; : &quot;record&quot;,&lt;br/&gt;
 &quot;name&quot; : &quot;RItem&quot;,&lt;br/&gt;
 &quot;doc&quot; : &quot;reader item&quot;,&lt;br/&gt;
 &quot;fields&quot; : [ &lt;/p&gt;
{
 &quot;name&quot; : &quot;value&quot;,
 &quot;type&quot; : &quot;string&quot;,
 &quot;doc&quot; : &quot;value&quot;
 }
&lt;p&gt; ],&lt;br/&gt;
 &quot;aliases&quot; : [ &quot;writer.ns.WItem&quot; ]&lt;br/&gt;
 } ],&lt;br/&gt;
 &quot;doc&quot; : &quot;value&quot;&lt;br/&gt;
 } ],&lt;br/&gt;
 &quot;aliases&quot; : [ &quot;writer.ns.WWrapper&quot; ]&lt;br/&gt;
}&lt;/p&gt;</description>
                <environment>&lt;p&gt;JDK 1.8&lt;/p&gt;

&lt;p&gt;Avro 1.8.2&lt;/p&gt;</environment>
        <key id="13142166">AVRO-2152</key>
            <summary>JsonDecoder fails when reading record with aliases inside union</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.svg">Trivial</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="6">Invalid</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="phaas">Patrick Haas</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Mar 2018 18:35:14 +0000</created>
                <updated>Mon, 5 Mar 2018 21:33:13 +0000</updated>
                            <resolved>Mon, 5 Mar 2018 20:48:34 +0000</resolved>
                                    <version>1.8.2</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16384150" author="githubbot" created="Fri, 2 Mar 2018 21:06:07 +0000"  >&lt;p&gt;phaas opened a new pull request #291: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2152&quot; title=&quot;JsonDecoder fails when reading record with aliases inside union&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2152&quot;&gt;&lt;del&gt;AVRO-2152&lt;/del&gt;&lt;/a&gt;: Fix JsonDecoder handling of aliases in unions.&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/291&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/291&lt;/a&gt;&lt;/p&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Determine aliases of any named types when generating&lt;br/&gt;
      the json grammer&lt;/li&gt;
	&lt;li&gt;When reading union, check aliases when exact match is not found.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16384866" author="cutting" created="Sat, 3 Mar 2018 21:44:40 +0000"  >&lt;p&gt;Aliases are implemented by Schema#applyAliases, not during parsing.&lt;/p&gt;

&lt;p&gt;But I think the bug is perhaps with your test case.  The JsonDecoder should be constructed with the writer&apos;s schema, not the reader&apos;s, since you&apos;re decoding data that was encoded with that schema.  The GenericDatumReader then adapts the decoded data to the desired reader schema, including applying any aliases.  Does that make sense?&lt;/p&gt;</comment>
                            <comment id="16386698" author="phaas" created="Mon, 5 Mar 2018 20:23:32 +0000"  >&lt;p&gt;Hi Doug, thanks for taking a look.&lt;/p&gt;

&lt;p&gt;I tried the deserialization passing the writer schema to the json decoder, which did resolve the exception. I misunderstood the javadoc for this field (&quot;The Schema for data read from this JsonEncoder&quot;) as the reader schema, not the writer schema.&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;</comment>
                            <comment id="16386749" author="cutting" created="Mon, 5 Mar 2018 20:48:34 +0000"  >&lt;p&gt;I&apos;ll resolve this as invalid then.  Thanks!&lt;/p&gt;</comment>
                            <comment id="16386792" author="githubbot" created="Mon, 5 Mar 2018 21:33:13 +0000"  >&lt;p&gt;phaas closed pull request #291: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2152&quot; title=&quot;JsonDecoder fails when reading record with aliases inside union&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2152&quot;&gt;&lt;del&gt;AVRO-2152&lt;/del&gt;&lt;/a&gt;: Fix JsonDecoder handling of aliases in unions.&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/291&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/291&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/avro/src/main/java/org/apache/avro/io/parsing/ResolvingGrammarGenerator.java b/lang/java/avro/src/main/java/org/apache/avro/io/parsing/ResolvingGrammarGenerator.java&lt;br/&gt;
index 7c5da1169..226c5030a 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/main/java/org/apache/avro/io/parsing/ResolvingGrammarGenerator.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/io/parsing/ResolvingGrammarGenerator.java&lt;br/&gt;
@@ -24,6 +24,7 @@&lt;br/&gt;
 import java.util.Iterator;&lt;br/&gt;
 import java.util.List;&lt;br/&gt;
 import java.util.Map;&lt;br/&gt;
+import java.util.Set;&lt;/p&gt;

&lt;p&gt; import org.apache.avro.AvroTypeException;&lt;br/&gt;
 import org.apache.avro.Schema;&lt;br/&gt;
@@ -195,6 +196,7 @@ private Symbol resolveUnion(Schema writer, Schema reader,&lt;br/&gt;
     final int size = alts.size();&lt;br/&gt;
     Symbol[] symbols = new Symbol&lt;span class=&quot;error&quot;&gt;&amp;#91;size&amp;#93;&lt;/span&gt;;&lt;br/&gt;
     String[] labels = new String&lt;span class=&quot;error&quot;&gt;&amp;#91;size&amp;#93;&lt;/span&gt;;&lt;br/&gt;
+    Set&amp;lt;String&amp;gt;[] aliases = new Set&lt;span class=&quot;error&quot;&gt;&amp;#91;size&amp;#93;&lt;/span&gt;;&lt;/p&gt;

&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;We construct a symbol without filling the arrays. Please see&lt;br/&gt;
@@ -204,9 +206,10 @@ private Symbol resolveUnion(Schema writer, Schema reader,&lt;br/&gt;
     for (Schema w : alts) 
{
       symbols[i] = generate(w, reader, seen);
       labels[i] = w.getFullName();
+      aliases[i] = generateAliases(w);
       i++;
     }&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return Symbol.seq(Symbol.alt(symbols, labels),&lt;br/&gt;
+    return Symbol.seq(Symbol.alt(symbols, labels, aliases),&lt;br/&gt;
                       Symbol.writerUnionAction());&lt;br/&gt;
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;diff --git a/lang/java/avro/src/main/java/org/apache/avro/io/parsing/Symbol.java b/lang/java/avro/src/main/java/org/apache/avro/io/parsing/Symbol.java&lt;br/&gt;
index 187942400..dab275e12 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/main/java/org/apache/avro/io/parsing/Symbol.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/io/parsing/Symbol.java&lt;br/&gt;
@@ -111,8 +111,8 @@ static Symbol repeat(Symbol endSymbol, Symbol... symsToRepeat) {&lt;br/&gt;
   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;A convenience method to construct a union.&lt;br/&gt;
    */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;static Symbol alt(Symbol[] symbols, String[] labels) {&lt;/li&gt;
	&lt;li&gt;return new Alternative(symbols, labels);&lt;br/&gt;
+  static Symbol alt(Symbol[] symbols, String[] labels, Set&amp;lt;String&amp;gt;[] aliases) 
{
+    return new Alternative(symbols, labels, aliases);
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;br/&gt;
@@ -426,10 +426,13 @@ private static boolean hasErrors(Symbol root, Symbol[] symbols, Set&amp;lt;Symbol&amp;gt; visi&lt;br/&gt;
   public static class Alternative extends Symbol {&lt;br/&gt;
     public final Symbol[] symbols;&lt;br/&gt;
     public final String[] labels;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private Alternative(Symbol[] symbols, String[] labels) {&lt;br/&gt;
+    public final Set&amp;lt;String&amp;gt;[] aliases;&lt;br/&gt;
+&lt;br/&gt;
+    private Alternative(Symbol[] symbols, String[] labels, Set&amp;lt;String&amp;gt;[] aliases) 
{
       super(Kind.ALTERNATIVE);
       this.symbols = symbols;
       this.labels = labels;
+      this.aliases = aliases;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     public Symbol getSymbol(int index) {&lt;br/&gt;
@@ -450,6 +453,9 @@ public int findLabel(String label) {&lt;br/&gt;
           if (label.equals(labels&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;)) &lt;/p&gt;
{
             return i;
           }
&lt;p&gt;+          if (aliases&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;.contains(label)) &lt;/p&gt;
{
+            return i;
+          }
&lt;p&gt;         }&lt;br/&gt;
       }&lt;br/&gt;
       return -1;&lt;br/&gt;
@@ -462,7 +468,7 @@ public Alternative flatten(Map&amp;lt;Sequence, Sequence&amp;gt; map,&lt;br/&gt;
       for (int i = 0; i &amp;lt; ss.length; i++) &lt;/p&gt;
{
         ss[i] = symbols[i].flatten(map, map2);
       }
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return new Alternative(ss, labels);&lt;br/&gt;
+      return new Alternative(ss, labels, aliases);&lt;br/&gt;
     }&lt;br/&gt;
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;diff --git a/lang/java/avro/src/main/java/org/apache/avro/io/parsing/ValidatingGrammarGenerator.java b/lang/java/avro/src/main/java/org/apache/avro/io/parsing/ValidatingGrammarGenerator.java&lt;br/&gt;
index 6e1a55eae..bbbb33e30 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/main/java/org/apache/avro/io/parsing/ValidatingGrammarGenerator.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/io/parsing/ValidatingGrammarGenerator.java&lt;br/&gt;
@@ -17,9 +17,11 @@&lt;br/&gt;
  */&lt;br/&gt;
 package org.apache.avro.io.parsing;&lt;/p&gt;

&lt;p&gt;+import java.util.Collections;&lt;br/&gt;
 import java.util.HashMap;&lt;br/&gt;
 import java.util.List;&lt;br/&gt;
 import java.util.Map;&lt;br/&gt;
+import java.util.Set;&lt;/p&gt;

&lt;p&gt; import org.apache.avro.Schema;&lt;br/&gt;
 import org.apache.avro.Schema.Field;&lt;br/&gt;
@@ -101,21 +103,43 @@ public Symbol generate(Schema sc, Map&amp;lt;LitS, Symbol&amp;gt; seen) {&lt;br/&gt;
       List&amp;lt;Schema&amp;gt; subs = sc.getTypes();&lt;br/&gt;
       Symbol[] symbols = new Symbol&lt;span class=&quot;error&quot;&gt;&amp;#91;subs.size()&amp;#93;&lt;/span&gt;;&lt;br/&gt;
       String[] labels = new String&lt;span class=&quot;error&quot;&gt;&amp;#91;subs.size()&amp;#93;&lt;/span&gt;;&lt;br/&gt;
+      Set&amp;lt;String&amp;gt;[] aliases = new Set&lt;span class=&quot;error&quot;&gt;&amp;#91;subs.size()&amp;#93;&lt;/span&gt;;&lt;/p&gt;

&lt;p&gt;       int i = 0;&lt;br/&gt;
       for (Schema b : sc.getTypes()) &lt;/p&gt;
{
         symbols[i] = generate(b, seen);
         labels[i] = b.getFullName();
+        aliases[i] = generateAliases(b);
         i++;
       }
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return Symbol.seq(Symbol.alt(symbols, labels), Symbol.UNION);&lt;br/&gt;
+      return Symbol.seq(Symbol.alt(symbols, labels, aliases), Symbol.UNION);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     default:&lt;br/&gt;
       throw new RuntimeException(&quot;Unexpected schema type&quot;);&lt;br/&gt;
     }&lt;br/&gt;
   }&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** A wrapper around Schema that does &quot;==&quot; equality. */&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Named types may have alises which must be considered when resolving&lt;br/&gt;
+   * unions.&lt;br/&gt;
+   * &amp;lt;p&amp;gt;&lt;br/&gt;
+   * &quot;Record, enums and fixed are named types.&quot; &lt;a href=&quot;#Names&quot;&gt;spec.xml#Names&lt;/a&gt;&lt;br/&gt;
+   *&lt;br/&gt;
+   * @param schema&lt;br/&gt;
+   * @return&lt;br/&gt;
+   */&lt;br/&gt;
+  protected Set&amp;lt;String&amp;gt; generateAliases(Schema schema) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+    Schema.Type type = schema.getType();+    if (Schema.Type.RECORD.equals(type) || Schema.Type.ENUM.equals(type) || Schema.Type.FIXED.equals(type)) {
+      return schema.getAliases();
+    } else {
+      return Collections.emptySet();
+    }+  }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+&lt;br/&gt;
+  /**&lt;br/&gt;
+   * A wrapper around Schema that does &quot;==&quot; equality.&lt;br/&gt;
+   */&lt;br/&gt;
   static class LitS {&lt;br/&gt;
     public final Schema actual;&lt;br/&gt;
     public LitS(Schema actual) &lt;/p&gt;
{ this.actual = actual; }
&lt;p&gt;diff --git a/lang/java/avro/src/test/java/org/apache/avro/io/TestJsonDecoder.java b/lang/java/avro/src/test/java/org/apache/avro/io/TestJsonDecoder.java&lt;br/&gt;
index c63749840..a9f497087 100644&lt;/p&gt;
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/java/avro/src/test/java/org/apache/avro/io/TestJsonDecoder.java&lt;br/&gt;
+++ b/lang/java/avro/src/test/java/org/apache/avro/io/TestJsonDecoder.java&lt;br/&gt;
@@ -18,12 +18,26 @@&lt;br/&gt;
 package org.apache.avro.io;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; import org.apache.avro.Schema;&lt;br/&gt;
+import org.apache.avro.SchemaCompatibility;&lt;br/&gt;
+import org.apache.avro.generic.GenericData;&lt;br/&gt;
+import org.apache.avro.generic.GenericDatumWriter;&lt;br/&gt;
 import org.apache.avro.generic.GenericRecord;&lt;br/&gt;
 import org.apache.avro.generic.GenericDatumReader;&lt;/p&gt;

&lt;p&gt;+import org.apache.avro.generic.GenericRecordBuilder;&lt;br/&gt;
 import org.junit.Test;&lt;br/&gt;
 import org.junit.Assert;&lt;/p&gt;

&lt;p&gt;+import java.io.ByteArrayOutputStream;&lt;br/&gt;
+import java.io.IOException;&lt;br/&gt;
+import java.nio.charset.StandardCharsets;&lt;br/&gt;
+&lt;br/&gt;
+import static java.util.Collections.singletonList;&lt;br/&gt;
+import static org.apache.avro.Schema.create;&lt;br/&gt;
+import static org.apache.avro.Schema.createRecord;&lt;br/&gt;
+import static org.apache.avro.Schema.createUnion;&lt;br/&gt;
+import static org.junit.Assert.assertEquals;&lt;br/&gt;
+&lt;br/&gt;
 public class TestJsonDecoder {&lt;/p&gt;

&lt;p&gt;   @Test public void testInt() throws Exception {&lt;br/&gt;
@@ -76,4 +90,60 @@ private void checkNumeric(String type, Object value) throws Exception &lt;/p&gt;
{
     Assert.assertEquals(200, in.readLong());
     in.skipArray();
   }
&lt;p&gt;+&lt;br/&gt;
+&lt;br/&gt;
+  /**&lt;br/&gt;
+   * &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2152&quot; title=&quot;JsonDecoder fails when reading record with aliases inside union&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2152&quot;&gt;&lt;del&gt;AVRO-2152&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
+   * JsonDecoder fails when reading record with aliases inside union&lt;br/&gt;
+   */&lt;br/&gt;
+  @Test public void testJsonDecoderWithAliasesInUnion() throws Exception &lt;/p&gt;
{
+    Schema writerItem = createRecord(&quot;WItem&quot;, &quot;writer item&quot;, &quot;writer.ns&quot;, false,
+      singletonList(new Schema.Field(&quot;value&quot;,
+        create(Schema.Type.STRING),
+        &quot;value&quot;, (Object) null)));
+    Schema writerSchema = createRecord(&quot;WWrapper&quot;, &quot;writer&quot;, &quot;writer.ns&quot;, false,
+      singletonList(new Schema.Field(&quot;item&quot;,
+        createUnion(create(Schema.Type.NULL), writerItem),
+        &quot;value&quot;, (Object) null)));
+    System.out.println(writerSchema.toString(true));
+
+    Schema readerItem = createRecord(&quot;RItem&quot;, &quot;reader item&quot;, &quot;reader.ns&quot;, false,
+      singletonList(new Schema.Field(&quot;value&quot;, create(Schema.Type.STRING),
+        &quot;value&quot;, (Object) null)));
+    Schema readerSchema = createRecord(&quot;RWrapper&quot;, &quot;reader&quot;, &quot;reader.ns&quot;, false,
+      singletonList(new Schema.Field(&quot;item&quot;,
+        createUnion(create(Schema.Type.NULL), readerItem),
+        &quot;value&quot;, (Object) null)));
+    readerSchema.addAlias(&quot;WWrapper&quot;, &quot;writer.ns&quot;);
+    readerItem.addAlias(&quot;WItem&quot;, &quot;writer.ns&quot;);
+
+    System.out.println(readerSchema.toString(true));
+
+    assertEquals(SchemaCompatibility.SchemaCompatibilityType.COMPATIBLE,
+      SchemaCompatibility.checkReaderWriterCompatibility(readerSchema, writerSchema).getType());
+
+    // Create an instance for testing
+    GenericData.Record instance = new GenericRecordBuilder(writerSchema)
+      .set(&quot;item&quot;,
+        new GenericRecordBuilder(writerItem)
+          .set(&quot;value&quot;, &quot;12345&quot;)
+          .build()
+      ).build();
+
+    // Serialize using JSON Encoder
+    final GenericDatumWriter&amp;lt;Object&amp;gt; writer = new GenericDatumWriter&amp;lt;&amp;gt;(instance.getSchema());
+    final ByteArrayOutputStream out = new ByteArrayOutputStream();
+    final JsonEncoder encoder = EncoderFactory.get().jsonEncoder(instance.getSchema(), out);
+    writer.write(instance, encoder);
+    encoder.flush();
+
+    // Deserialize using JSON Decoder
+    final GenericDatumReader&amp;lt;GenericRecord&amp;gt; reader = new GenericDatumReader&amp;lt;&amp;gt;(writerSchema, readerSchema);
+    final JsonDecoder decoder = DecoderFactory.get().jsonDecoder(readerSchema,
+      new String(out.toByteArray(), StandardCharsets.UTF_8));
+
+    GenericRecord deserialized = reader.read(null, decoder);
+    assertEquals(deserialized.toString(), instance.toString());
+  }
&lt;p&gt;+&lt;br/&gt;
 }&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12912808" name="JsonDecoderAliasesInUnion.java" size="4863" author="phaas" created="Fri, 2 Mar 2018 18:35:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 2 Mar 2018 21:06:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            45 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3qt2f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2153] Generating C++ code with avrogencpp produces unclear error message</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2153</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;If you put a bad name for a json node in an avro file, you can sometimes get: &quot;Exception: boost::too_many_args: format-string referred&quot;, when avro is trying to tell you the name of the bad json node, because&#160;the node&apos;s name isn&apos;t passed to boost::format correctly.&#160;&lt;/p&gt;</description>
                <environment></environment>
        <key id="13142286">AVRO-2153</key>
            <summary>Generating C++ code with avrogencpp produces unclear error message</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="5">Cannot Reproduce</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="nicksbyman">Nick Byman</reporter>
                        <labels>
                    </labels>
                <created>Sat, 3 Mar 2018 16:26:37 +0000</created>
                <updated>Tue, 2 Oct 2018 16:58:49 +0000</updated>
                            <resolved>Tue, 2 Oct 2018 16:58:49 +0000</resolved>
                                                                    <component>c++</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="16384725" author="githubbot" created="Sat, 3 Mar 2018 16:37:42 +0000"  >&lt;p&gt;nicksbyman opened a new pull request #294: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2153&quot; title=&quot;Generating C++ code with avrogencpp produces unclear error message&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2153&quot;&gt;&lt;del&gt;AVRO-2153&lt;/del&gt;&lt;/a&gt; Clearer error msg while parsing - specify which node had a &#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/294&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/294&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   &#8230;problem&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16424104" author="githubbot" created="Tue, 3 Apr 2018 14:36:39 +0000"  >&lt;p&gt;thiru-apache commented on issue #294: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2153&quot; title=&quot;Generating C++ code with avrogencpp produces unclear error message&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2153&quot;&gt;&lt;del&gt;AVRO-2153&lt;/del&gt;&lt;/a&gt; Clearer error msg while parsing - specify which node had a &#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/294#issuecomment-378272657&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/294#issuecomment-378272657&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   I tried to reproduce the problem on my mac, and I couldn&apos;t.&lt;/p&gt;

&lt;p&gt;   Which platform and compiler are you using? Alternatively, can you attach a small schema that triggers this problem? Thank you.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16430625" author="githubbot" created="Mon, 9 Apr 2018 14:44:26 +0000"  >&lt;p&gt;nicksbyman commented on issue #294: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2153&quot; title=&quot;Generating C++ code with avrogencpp produces unclear error message&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2153&quot;&gt;&lt;del&gt;AVRO-2153&lt;/del&gt;&lt;/a&gt; Clearer error msg while parsing - specify which node had a &#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/294#issuecomment-379777036&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/294#issuecomment-379777036&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Hi @thiru-apache I&apos;m using g++ 4.8, gcc 4.7, ubuntu 14.04, and boost 1.66.0. I do also assume this is a problem with dependencies, but on the other hand I feel like it&apos;s good to have backwards compatibility in the parser if it doesn&apos;t make things less readable or clean, and I feel like in this case the commit does the opposite. Let me know what you think. &lt;/p&gt;

&lt;p&gt;   Nick&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16430627" author="githubbot" created="Mon, 9 Apr 2018 14:44:34 +0000"  >&lt;p&gt;nicksbyman commented on issue #294: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2153&quot; title=&quot;Generating C++ code with avrogencpp produces unclear error message&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2153&quot;&gt;&lt;del&gt;AVRO-2153&lt;/del&gt;&lt;/a&gt; Clearer error msg while parsing - specify which node had a &#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/294#issuecomment-379777036&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/294#issuecomment-379777036&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Hi @thiru-apache I&apos;m using g++ 4.8, gcc 4.8, ubuntu 14.04, and boost 1.66.0. I do also assume this is a problem with dependencies, but on the other hand I feel like it&apos;s good to have backwards compatibility in the parser if it doesn&apos;t make things less readable or clean, and I feel like in this case the commit does the opposite. Let me know what you think. &lt;/p&gt;

&lt;p&gt;   Nick&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16561189" author="githubbot" created="Sun, 29 Jul 2018 17:22:20 +0000"  >&lt;p&gt;thiru-apache commented on issue #294: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2153&quot; title=&quot;Generating C++ code with avrogencpp produces unclear error message&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2153&quot;&gt;&lt;del&gt;AVRO-2153&lt;/del&gt;&lt;/a&gt; Clearer error msg while parsing - specify which node had a &#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/294#issuecomment-408692300&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/294#issuecomment-408692300&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   @nicksbyman It looks like `boost::format` does not work in your environment. While this patch will fix the specific problem you faced (by sidestepping `boost::format`), there are many other places we use `boost::format`. Either we get to the bottom of why this does not work in your environment or get rid of `boost::format` altogether. I don&apos;t think fixing a single instance is a good idea.&lt;/p&gt;

&lt;p&gt;   By the way, I had difficulty creating an Ubuntu instance with boost 1.66.0. By any chance is there an AWS AMI with the relevant software that I can use to understand the problem better? Thank you.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16601246" author="githubbot" created="Sun, 2 Sep 2018 16:24:59 +0000"  >&lt;p&gt;nicksbyman commented on issue #294: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2153&quot; title=&quot;Generating C++ code with avrogencpp produces unclear error message&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2153&quot;&gt;&lt;del&gt;AVRO-2153&lt;/del&gt;&lt;/a&gt; Clearer error msg while parsing - specify which node had a &#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/294#issuecomment-417942324&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/294#issuecomment-417942324&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Hi @thiru-apache that makes sense. I&apos;ll close this PR. Thanks for looking into it. &lt;/p&gt;

&lt;p&gt;   Nick&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16601247" author="githubbot" created="Sun, 2 Sep 2018 16:25:05 +0000"  >&lt;p&gt;nicksbyman closed pull request #294: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2153&quot; title=&quot;Generating C++ code with avrogencpp produces unclear error message&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2153&quot;&gt;&lt;del&gt;AVRO-2153&lt;/del&gt;&lt;/a&gt; Clearer error msg while parsing - specify which node had a &#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/294&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/294&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/c+&lt;ins&gt;/impl/Compiler.cc b/lang/c&lt;/ins&gt;+/impl/Compiler.cc&lt;br/&gt;
index be5fe3f86..9151ad71a 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/impl/Compiler.cc&lt;br/&gt;
+++ b/lang/c++/impl/Compiler.cc&lt;br/&gt;
@@ -97,7 +97,9 @@ static NodePtr makeNode(const std::string&amp;amp; t, SymbolTable&amp;amp; st, const string&amp;amp; ns)&lt;br/&gt;
     if (it != st.end()) &lt;/p&gt;
{
         return NodePtr(new NodeSymbolic(asSingleAttribute(n), it-&amp;gt;second));
     }
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;throw Exception(boost::format(&quot;Unknown type: %1%&quot;) % n.fullname());&lt;br/&gt;
+    std::string errorMsg = &quot;While parsing your avro schema, we encountered a problem making\n&quot; &lt;br/&gt;
+                            &quot;a node in the json tree. The node&apos;s name is &quot; + n.fullname();&lt;br/&gt;
+    throw Exception(errorMsg);&lt;br/&gt;
 }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; const json::Object::const_iterator findField(const Entity&amp;amp; e,&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16635817" author="thiru_mg" created="Tue, 2 Oct 2018 16:58:49 +0000"  >&lt;p&gt;The problem is specific to the reporter&apos;s environment and the reporter has closed the pull request.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 3 Mar 2018 16:37:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            15 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3qtt3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2154] Python to Java IPC converts boolean inside a union to integer</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2154</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Using the following IDL:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@namespace(&lt;span class=&quot;code-quote&quot;&gt;&quot;us.codemug&quot;&lt;/span&gt;)
protocol BooleanTestProtocol {
&#160; void booleanInUnion(union{&lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;, string} myunion);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and the following Java implementation:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; us.codemug;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.Map;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.AvroRemoteException;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;BooleanTestResponder &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; BooleanTestProtocol {

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt; booleanInUnion(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; myunion) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; AvroRemoteException {
    print(myunion);
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; void print(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; value) {
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Type: &quot;&lt;/span&gt; + value.getClass().getName());
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Value: &quot;&lt;/span&gt; + value);
  }
}

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When performing the IPC from python with the input:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
args = dict()
args[&lt;span class=&quot;code-quote&quot;&gt;&apos;myunion&apos;&lt;/span&gt;] = True
requestor.request(&lt;span class=&quot;code-quote&quot;&gt;&apos;booleanInUnion&apos;&lt;/span&gt;, args)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Produces this output at the server side:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Type: java.lang.&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;
Value: 1
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The booleans are being converted to integers&lt;/p&gt;</description>
                <environment>&lt;p&gt;macOS 10.13.3&lt;/p&gt;

&lt;p&gt;Java(TM) SE Runtime Environment (build 1.8.0_161-b12)&lt;/p&gt;

&lt;p&gt;Python 2.7.10&lt;/p&gt;</environment>
        <key id="13142629">AVRO-2154</key>
            <summary>Python to Java IPC converts boolean inside a union to integer</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="codemug">Usman Shahid</reporter>
                        <labels>
                    </labels>
                <created>Mon, 5 Mar 2018 18:43:59 +0000</created>
                <updated>Tue, 6 Mar 2018 11:20:55 +0000</updated>
                                            <version>1.8.2</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="16387641" author="codemug" created="Tue, 6 Mar 2018 11:20:55 +0000"  >&lt;p&gt;The problem occurs on python client in the `DatumWriter.write_union()` method. The method iterates over all the types in a union and performs an `isinstance()` on the value with each type. Incidentally, due to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0285/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;python design decision regarding booleans&lt;/a&gt;, `isinstance(True, int)` returns `True` to maintain backward compatibility and since the loop in `write_union` doesn&apos;t break, the type that returns true last in the sequence of the union gets selected. If we reverse the sequence of the types in the union definition, it works fine and a boolean is returned on the server side.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            45 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3qvxj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>java python rpc</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>
