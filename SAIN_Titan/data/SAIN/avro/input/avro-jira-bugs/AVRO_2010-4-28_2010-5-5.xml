<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:13:51 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2010-4-28+AND+created+%3C%3D+2010-5-5+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="7" total="7"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-529] Cannot use array type in avro request</title>
                <link>https://issues.apache.org/jira/browse/AVRO-529</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;While it is OK to use array in avro response, we get the following error when using it in the type definition. e.g.:&lt;/p&gt;

&lt;p&gt;  {&lt;br/&gt;
    &quot;namespace&quot;: &quot;my_namespace&quot;,&lt;br/&gt;
    &quot;protocol&quot;: &quot;MyProtocol&quot;,&lt;br/&gt;
    &quot;types&quot;: [&lt;br/&gt;
      {&lt;br/&gt;
        &quot;name&quot;: &quot;Thing&quot;, &quot;type&quot;: &quot;record&quot;, &quot;fields&quot;: [&lt;br/&gt;
          &lt;/p&gt;
{ &quot;name&quot;: &quot;id&quot;, &quot;type&quot;: &quot;long&quot; }
&lt;p&gt;,&lt;/p&gt;
          { &quot;name&quot;: &quot;other_ids&quot;, &quot;type&quot;: &quot;array&quot;, &quot;items&quot;: &quot;long&quot; }
&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;/script/../vendor/gems/avro-1.4.0.pre1/lib/avro/schema.rb:78:in `real_parse&apos;: &quot;array&quot; is not  a schema we know about. (Avro::SchemaParseError)&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/schema.rb:135:in `subparse&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/schema.rb:369:in `initialize&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/schema.rb:180:in `new&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/schema.rb:180:in `make_field_objects&apos;&lt;br/&gt;
	from /Library/Ruby/Site/1.8/rubygems/custom_require.rb:31:in `each_with_index&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/schema.rb:174:in `each&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/schema.rb:174:in `each_with_index&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/schema.rb:174:in `make_field_objects&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/schema.rb:200:in `initialize&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/schema.rb:53:in `new&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/schema.rb:53:in `real_parse&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/protocol.rb:73:in `parse_types&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/protocol.rb:70:in `collect&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/protocol.rb:70:in `parse_types&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/protocol.rb:54:in `initialize&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/protocol.rb:31:in `new&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/protocol.rb:31:in `parse&apos;&lt;/p&gt;</description>
                <environment>&lt;p&gt;Mac OS X&lt;/p&gt;</environment>
        <key id="12463164">AVRO-529</key>
            <summary>Cannot use array type in avro request</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="wanliyang">Wanli Yang</reporter>
                        <labels>
                    </labels>
                <created>Wed, 28 Apr 2010 00:06:01 +0000</created>
                <updated>Wed, 8 Sep 2010 21:14:57 +0000</updated>
                            <resolved>Wed, 28 Apr 2010 07:39:06 +0000</resolved>
                                    <version>1.4.0</version>
                                    <fixVersion>1.3.2</fixVersion>
                                    <component>ruby</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12861686" author="jmhodges" created="Wed, 28 Apr 2010 06:10:08 +0000"  >&lt;p&gt;Could I get a more complete protocol? This one is way malformed.&lt;/p&gt;</comment>
                            <comment id="12861698" author="jmhodges" created="Wed, 28 Apr 2010 07:17:49 +0000"  >&lt;p&gt;Okay, so a more complete example&#160;I got from Rael is:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; {
    &lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;somenamespace&quot;&lt;/span&gt;
    &lt;span class=&quot;code-quote&quot;&gt;&quot;protocol&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;Composition&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;types&quot;&lt;/span&gt;: [],
    &lt;span class=&quot;code-quote&quot;&gt;&quot;messages&quot;&lt;/span&gt;: {
      &lt;span class=&quot;code-quote&quot;&gt;&quot;get_things&quot;&lt;/span&gt;: {
        &lt;span class=&quot;code-quote&quot;&gt;&quot;request&quot;&lt;/span&gt;: [
          { &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;id&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;array&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;items&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt; }
        ],
        &lt;span class=&quot;code-quote&quot;&gt;&quot;response&quot;&lt;/span&gt;: { &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;array&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;items&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt; }
      }
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The problem line for Wanli and Rael is  the field in the request:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-quote&quot;&gt;&quot;request&quot;&lt;/span&gt;: [
          { &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;id&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;array&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;items&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt; }
        ],
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This, unfortunately, is not allowed in avro! You see, this type has been &quot;flattened&quot;. It should look like &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-quote&quot;&gt;&quot;request&quot;&lt;/span&gt;: [
          { &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;id&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;array&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;items&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt; }}
        ],
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is unintuitive but allowing it parse like above leads to other problems. Say we mean to define a FileMode type for the first time in the request field like so:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;mode&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;FileMode&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;symbols&quot;&lt;/span&gt;: [&lt;span class=&quot;code-quote&quot;&gt;&quot;w&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;r&quot;&lt;/span&gt;] }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but &quot;flatten&quot; the definition like the &quot;bad&quot; protocol given:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;mode&quot;&lt;/span&gt;,  &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;symbols&quot;&lt;/span&gt;: [&lt;span class=&quot;code-quote&quot;&gt;&quot;w&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;r&quot;&lt;/span&gt;]}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This second schema is weird! We have the term &quot;name&quot; being overloaded! In the first one, we have a field named &quot;mode&quot; that takes a type  named &quot;FileMode&quot; (remember that enum&apos;s require names!). In the second one we have a field named &quot;mode&quot; and then some stuff that could be creating an enum named &quot;mode&quot; but really is just incomplete!&lt;/p&gt;

&lt;p&gt;This behavior is slightly confusing when dealing with array and map types, but is consistent with the necessity to &quot;nest&quot; the named types enum, fixed, record, error and, of course, user-defined types.&lt;/p&gt;

&lt;p&gt;NOW! We can think about two different things. One is to improve this error message. Basically, if there&apos;s more than &quot;type&quot;, &quot;name&quot;, &quot;doc&quot; and &quot;default&quot; in a record&apos;s field, we should through a very specific error saying &quot;nest this type&quot;. This is relatively straightforward.&lt;/p&gt;

&lt;p&gt;The second thing is to think about changing the spec to allow array and map types to be &quot;flattened&quot; in this manner as they have no &quot;name&quot; conflicts. It does, however, cause weird problems where people will expect primitive behavior when they get complex behavior.&lt;/p&gt;

&lt;p&gt;This is really just confusing because the &quot;simple&quot; versions of &quot;primitive&quot; types (i.e. &quot;string&quot; instead of &lt;/p&gt;
{&quot;type&quot;:&quot;string&quot;}
&lt;p&gt;) are really confusing for newbies! If we disallowed them, people would immediately glom on to this nesting problem!&lt;/p&gt;

&lt;p&gt;So, the first thing is probably doable. The second one requires more thought.&lt;/p&gt;</comment>
                            <comment id="12861706" author="jmhodges" created="Wed, 28 Apr 2010 07:39:06 +0000"  >&lt;p&gt;The error should be made better (so I made &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-531&quot; title=&quot;ruby impl should produce better errors on &amp;quot;flattened&amp;quot; schemas in fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-531&quot;&gt;AVRO-531&lt;/a&gt;), and while it might be nice for arrays and maps, the problems of allowing for &quot;nested&quot; schemas are more trouble than they are worth, atm.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12463181">AVRO-531</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 28 Apr 2010 06:10:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94841</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 39 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e0w7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79907</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-530] allow for mutual recursion in type definitions</title>
                <link>https://issues.apache.org/jira/browse/AVRO-530</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Suppose you have these two types in your protocol:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;User&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;current_status&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;Status&quot;&lt;/span&gt;}]}

{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;Status&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;author&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;User&quot;&lt;/span&gt;}]}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will raise an error! The current workaround is to define one of them at their first usage. Like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;User&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;current_status&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;Status&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [.. lots of fields ...]}]}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But this is incredibly unwieldy. It would be really nice for the spec to require all the parsers to allow for mutual recursion, instead. It could be done by implementing a two-pass parser. One pass to acquire names referenced, and a second to fill in those names with their appropriate references.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12463180">AVRO-530</key>
            <summary>allow for mutual recursion in type definitions</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jmhodges">Jeff Hodges</reporter>
                        <labels>
                    </labels>
                <created>Wed, 28 Apr 2010 07:30:27 +0000</created>
                <updated>Mon, 1 Oct 2012 17:30:16 +0000</updated>
                                            <version>1.3.2</version>
                                                    <component>spec</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="12861717" author="jmhodges" created="Wed, 28 Apr 2010 08:12:55 +0000"  >&lt;p&gt;(It could be done in one pass, of course. That was just an off-the-cuff idea that I thought would be easier to write but might not be.)&lt;/p&gt;</comment>
                            <comment id="12861844" author="scott_carey" created="Wed, 28 Apr 2010 17:11:47 +0000"  >&lt;p&gt;In the past, it has been suggested that simplifications like the above or shortcuts to make managing types across different schema/protocol files be handled at the genavro layer.  &lt;/p&gt;

&lt;p&gt;If genavro evolves enough, all the user facing, ease of use stuff for managing schemas could go there, while the individual language implementations can all be as simple as possible and only use the JSON.&lt;/p&gt;</comment>
                            <comment id="12861897" author="jmhodges" created="Wed, 28 Apr 2010 18:49:34 +0000"  >&lt;p&gt;Yeah, but now might be the time to change that! This is a known, well-understood, and solved parsing problem. We can totally do it!&lt;/p&gt;

&lt;p&gt;At my company, we&apos;re building lots of little services and its really, really handy to have the schema right up next to the code. We deal with a lot of thrift and while we understand the compilation step, it turns out to really nice to have the protocol Right There while you&apos;re working. Especially, if you&apos;re still tweaking it. We&apos;re hitting the desire/need for mutual recursion way before we&apos;re hitting a spot where genavro makes real sense for us. (Maybe others have different experiences?)&lt;/p&gt;

&lt;p&gt;And making mutual recursion would be a huge boon for anyone who doesn&apos;t want to deal with the genavro step, too. I know a lot of folks that have come on board just because we make it easy to play with Avro and push it to its limits quickly. I wouldn&apos;t want to take that away and say &quot;use this thing that you&apos;ll have to make part of your build and then get all the file path stuff right and have to think&quot; when all they want to do is see how far they can push it.&lt;/p&gt;

&lt;p&gt;In any case, I&apos;m going to give this a go in the ruby implementation, and put up a patch. Maybe someone with a similar desire can do it in java or python and see how well it works?&lt;/p&gt;

&lt;p&gt;As the apps grow, genavro makes total sense! But I&apos;d hate to limit wonderful, powerful ideas to it that are, while not trivial, totally doable at every level. How nice it is to know your idea will always work, no matter how you interact with avro.&lt;/p&gt;</comment>
                            <comment id="12861899" author="jmhodges" created="Wed, 28 Apr 2010 18:50:17 +0000"  >&lt;p&gt;Oh, and I guess I screwed up my searches earlier. Where did we have this discussion at? Maybe I&apos;m missing something important.&lt;/p&gt;</comment>
                            <comment id="12861935" author="scott_carey" created="Wed, 28 Apr 2010 20:49:36 +0000"  >&lt;p&gt;Some of it was in this conversation:&lt;br/&gt;
&lt;a href=&quot;http://www.mail-archive.com/avro-dev@hadoop.apache.org/msg02397.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.mail-archive.com/avro-dev@hadoop.apache.org/msg02397.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I agree the JSON could certainly be easier to use in several ways.   But those are spec changes that are not backwards compatible.  Maybe Avro 2.0?&lt;/p&gt;</comment>
                            <comment id="12861979" author="jmhodges" created="Wed, 28 Apr 2010 22:48:45 +0000"  >&lt;p&gt;Yeah, I suppose. I&apos;m happy to have a ticket for this.&lt;/p&gt;</comment>
                            <comment id="13455715" author="onetoinfinity@yahoo.com" created="Fri, 14 Sep 2012 10:49:27 +0000"  >&lt;p&gt;Any chance this could be revived ? The IDL still doesn&apos;t support self-referential types...&lt;/p&gt;</comment>
                            <comment id="13455881" author="cutting" created="Fri, 14 Sep 2012 15:49:33 +0000"  >&lt;p&gt;Patches are welcome.  The IDL parser lives in a file called idl.jj.  Have at it.&lt;/p&gt;</comment>
                            <comment id="13465525" author="onetoinfinity@yahoo.com" created="Fri, 28 Sep 2012 11:32:40 +0000"  >&lt;p&gt;Is this supposed to work atm at the json schema representation level ? The following simple example results in StackOverflow even if there are comments in the Symbol class that it&apos;s supposed to handle recursive symbols:&lt;/p&gt;

&lt;p&gt;Code is in scala repl:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;val recType = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Parser().parse(&lt;span class=&quot;code-quote&quot;&gt;&quot;&quot;&quot; {&quot;&lt;/span&gt;type&lt;span class=&quot;code-quote&quot;&gt;&quot;:&quot;&lt;/span&gt;record&lt;span class=&quot;code-quote&quot;&gt;&quot;, &quot;&lt;/span&gt;name&lt;span class=&quot;code-quote&quot;&gt;&quot;:&quot;&lt;/span&gt;SelfRefType&lt;span class=&quot;code-quote&quot;&gt;&quot;, &quot;&lt;/span&gt;fields&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{&quot;&lt;/span&gt;type&lt;span class=&quot;code-quote&quot;&gt;&quot;: &quot;&lt;/span&gt;SelfRefType&lt;span class=&quot;code-quote&quot;&gt;&quot;, &quot;&lt;/span&gt;name&lt;span class=&quot;code-quote&quot;&gt;&quot;:&quot;&lt;/span&gt;self&lt;span class=&quot;code-quote&quot;&gt;&quot;}]} &quot;&lt;/span&gt;&quot;&quot;)

recType: org.apache.avro.Schema = {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;SelfRefType&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;self&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;SelfRefType&quot;&lt;/span&gt;}]}


val encoder = EncoderFactory.get().jsonEncoder(recType, Console.out)

java.lang.StackOverflowError
	at org.apache.avro.io.parsing.Symbol.flattenedSize(Symbol.java:213)
	at org.apache.avro.io.parsing.Symbol$Sequence.flattenedSize(Symbol.java:324)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13466984" author="cutting" created="Mon, 1 Oct 2012 17:30:16 +0000"  >&lt;p&gt;Yes, that&apos;s meant to work today.  Perhaps there&apos;s a bug when a record has no other fields besides a self-reference.  Please file a separate issue for this bug.  Thanks!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 28 Apr 2010 17:11:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94842</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 17 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0a5nr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>57190</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-531] ruby impl should produce better errors on &quot;flattened&quot; schemas in fields</title>
                <link>https://issues.apache.org/jira/browse/AVRO-531</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The &quot;flattened&quot; schemas of fields that look like&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-quote&quot;&gt;&quot;request&quot;&lt;/span&gt;: [
          { &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;id&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;array&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;items&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt; }
        ],
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;that are supposed to be&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-quote&quot;&gt;&quot;request&quot;&lt;/span&gt;: [
          { &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;id&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;array&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;items&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt; }}
        ],
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;should have way better errors associated with them. Basically, we should check record types for things other than &quot;default&quot;, &quot;doc&quot;, &quot;name&quot;, &quot;type&quot; and raise a specific error if they are seen.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12463181">AVRO-531</key>
            <summary>ruby impl should produce better errors on &quot;flattened&quot; schemas in fields</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="jmhodges">Jeff Hodges</assignee>
                                    <reporter username="jmhodges">Jeff Hodges</reporter>
                        <labels>
                    </labels>
                <created>Wed, 28 Apr 2010 07:35:49 +0000</created>
                <updated>Wed, 28 Apr 2010 08:03:51 +0000</updated>
                                            <version>1.3.2</version>
                                                    <component>ruby</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12861715" author="jmhodges" created="Wed, 28 Apr 2010 08:01:18 +0000"  >&lt;p&gt;Note that we can&apos;t allow for this flattening on most types! &lt;/p&gt;

&lt;p&gt;This is unintuitive but allowing them all to be parsed as &quot;flattened&quot; leads to other problems. Say we mean to define a FileMode type for the first time in the request field like so:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;mode&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;FileMode&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;symbols&quot;&lt;/span&gt;: [&lt;span class=&quot;code-quote&quot;&gt;&quot;w&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;r&quot;&lt;/span&gt;] }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but &quot;flatten&quot; the definition like the &quot;bad&quot; protocol given:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;mode&quot;&lt;/span&gt;,  &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;symbols&quot;&lt;/span&gt;: [&lt;span class=&quot;code-quote&quot;&gt;&quot;w&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;r&quot;&lt;/span&gt;]}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This second schema is weird! We have the term &quot;name&quot; being overloaded! In the first one, we have a field named &quot;mode&quot; that takes a type  named &quot;FileMode&quot; (remember that enums require names!). In the second one we have a field named &quot;mode&quot; and then some stuff that could be creating an enum named &quot;mode&quot; but really is just incomplete!&lt;/p&gt;

&lt;p&gt;This behavior is slightly confusing when dealing with array and map types, but is consistent with the necessity to &quot;nest&quot; the named types enum, fixed, record, error and, of course, user-defined types&lt;/p&gt;

&lt;p&gt;Really, this problem is because people (like my fine coworkers!) are expecting types to behave like the &quot;simple&quot; versions of primitive types (e.g. &quot;string&quot; instead of &lt;/p&gt;
{&quot;type&quot;: &quot;string&quot;}
&lt;p&gt;) when really they are much more than that! Hell, I&apos;ve had to work on that myself!&lt;/p&gt;

&lt;p&gt;So, again, we can&apos;t allow for this flattening because it is even more confusing than allowing it! Ugh!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12463164">AVRO-529</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94843</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 39 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e0wf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79908</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-532] Java: optimize Utf8#toString() and &apos;new Utf8(String)&apos;</title>
                <link>https://issues.apache.org/jira/browse/AVRO-532</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Avro&apos;s Specific and Generic Java APIs frequently convert Java Strings to Avro Utf8.  This conversion might be optimized.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12463274">AVRO-532</key>
            <summary>Java: optimize Utf8#toString() and &apos;new Utf8(String)&apos;</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Wed, 28 Apr 2010 23:45:45 +0000</created>
                <updated>Wed, 8 Sep 2010 13:58:20 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="12862001" author="cutting" created="Wed, 28 Apr 2010 23:46:32 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/THRIFT-765&quot; title=&quot;Improved string encoding and decoding performance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;THRIFT-765&quot;&gt;&lt;del&gt;THRIFT-765&lt;/del&gt;&lt;/a&gt; contains code that could be used to optimize this, but that code does not appear to yet handle surrogate pairs correctly.&lt;/p&gt;</comment>
                            <comment id="12862019" author="kkrugler" created="Thu, 29 Apr 2010 00:21:49 +0000"  >&lt;p&gt;I added an example for Bryan as a comment on the &lt;a href=&quot;https://issues.apache.org/jira/browse/THRIFT-765&quot; title=&quot;Improved string encoding and decoding performance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;THRIFT-765&quot;&gt;&lt;del&gt;THRIFT-765&lt;/del&gt;&lt;/a&gt; issue.&lt;/p&gt;</comment>
                            <comment id="12862319" author="cutting" created="Thu, 29 Apr 2010 18:23:11 +0000"  >&lt;p&gt;I now think &lt;a href=&quot;https://issues.apache.org/jira/browse/THRIFT-765&quot; title=&quot;Improved string encoding and decoding performance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;THRIFT-765&quot;&gt;&lt;del&gt;THRIFT-765&lt;/del&gt;&lt;/a&gt; actually does handle surrogate pairs.  Should we copy that code?&lt;/p&gt;</comment>
                            <comment id="12862344" author="milindb" created="Thu, 29 Apr 2010 18:49:44 +0000"  >&lt;p&gt;Hadoop record IO has had the efficient and proper handling of surrogate pairs since beginning.&lt;/p&gt;</comment>
                            <comment id="12907217" author="kkrugler" created="Wed, 8 Sep 2010 13:57:28 +0000"  >&lt;p&gt;Robert Muir recently uploaded a new patch to &lt;a href=&quot;https://issues.apache.org/jira/browse/THRIFT-765&quot; title=&quot;Improved string encoding and decoding performance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;THRIFT-765&quot;&gt;&lt;del&gt;THRIFT-765&lt;/del&gt;&lt;/a&gt; that looks pretty good to me. The issue was closed, but I think they might re-open it now.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12462935">THRIFT-765</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12473537">AVRO-661</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 29 Apr 2010 00:21:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94844</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 20 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e0wn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79909</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-533] .NET implementation of Avro</title>
                <link>https://issues.apache.org/jira/browse/AVRO-533</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description></description>
                <environment></environment>
        <key id="12463311">AVRO-533</key>
            <summary>.NET implementation of Avro</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dona">Dona Alvarez</assignee>
                                    <reporter username="hammer">Jeff Hammerbacher</reporter>
                        <labels>
                    </labels>
                <created>Thu, 29 Apr 2010 07:36:12 +0000</created>
                <updated>Tue, 17 May 2011 12:35:27 +0000</updated>
                            <resolved>Thu, 31 Mar 2011 21:22:56 +0000</resolved>
                                    <version>1.4.0</version>
                                    <fixVersion>1.5.1</fixVersion>
                                    <component>csharp</component>
                        <due></due>
                            <votes>9</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="12862298" author="jcustenborder" created="Thu, 29 Apr 2010 18:08:40 +0000"  >&lt;p&gt;I am happy to accept this issue. I&apos;ve already been working on a port of avro to .net. I&apos;ve currently on the middle of moving to Austin, tx so progress will be minimal over the next couple weeks. What I have done so far is available at &lt;a href=&quot;http://github.com/jcustenborder/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/jcustenborder/avro&lt;/a&gt;. My plans is to get things up and running with code generation support by mid summer. Hopefully sooner. The cool part is that I have a need for cross platform RPC at my new job meaning this will be one of my early development tasks. &lt;/p&gt;

&lt;p&gt;If you want to take what is in my github as an initial patch you are more than welcome. So far it passes a lot of the schema tests and would be a great starting point for anyone that wants to help. &lt;/p&gt;

&lt;p&gt;My longterm goals is to have a fast client and server implementation that uses reflection.emit under the hood for schema serialization.&lt;/p&gt;</comment>
                            <comment id="12862305" author="jcustenborder" created="Thu, 29 Apr 2010 18:13:01 +0000"  >&lt;p&gt;One thing I forgot. This will be mono compliant and will be tested against mono on debian. &lt;/p&gt;</comment>
                            <comment id="12863196" author="sbanacho" created="Sun, 2 May 2010 21:25:18 +0000"  >&lt;p&gt;Excellent.  I was hoping to contribute to a C# version but I&apos;ve been too busy, so I&apos;m glad to see it&apos;s underway.&lt;/p&gt;</comment>
                            <comment id="12864942" author="jcustenborder" created="Thu, 6 May 2010 21:50:19 +0000"  >&lt;p&gt;Here is a patch of what I have done so far. Just to make things nice and confusing I changed my development environment to follow &lt;a href=&quot;http://wiki.apache.org/hadoop/GitAndHadoop&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.apache.org/hadoop/GitAndHadoop&lt;/a&gt; so now I&apos;m working out of a branch instead of trunk. This changes my github url for anyone who is interested. The correct github url is &lt;a href=&quot;http://github.com/jcustenborder/avro/tree/dotnet-port&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://github.com/jcustenborder/avro/tree/dotnet-port&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;I&apos;m not too familiar with Apache patch procedures so please let me know if you need anything modified.&lt;/p&gt;</comment>
                            <comment id="12898783" author="jcustenborder" created="Mon, 16 Aug 2010 03:10:14 +0000"  >&lt;p&gt;Initial contribution of .Net support for AVRO.&lt;/p&gt;</comment>
                            <comment id="12900160" author="thiru_mg" created="Thu, 19 Aug 2010 02:51:46 +0000"  >&lt;p&gt;Hi Jeremy,&lt;/p&gt;

&lt;p&gt;I&apos;ve started looking into it. I couldn&apos;t get it compile because it is complaining that the namespaces like Newtonsoft and log4net are not found. I was not able to build those solutions in the contrib directory either. It reports problems with further dependencies.&lt;/p&gt;

&lt;p&gt;I&apos;m using VC# express 2010 on Windows XP.&lt;/p&gt;

&lt;p&gt;Can you add a README at lang/dotnet that explains how to setup for building the project?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Thiru&lt;/p&gt;</comment>
                            <comment id="12900163" author="jcustenborder" created="Thu, 19 Aug 2010 03:32:03 +0000"  >&lt;p&gt;Hi Thiru, &lt;/p&gt;

&lt;p&gt;Sorry about the missing dependencies. It looks like the patch process ignores binary files. I&apos;m not really familiar with the patch process. Should I just add the contrib folder as a zip file to this ticket?  &lt;/p&gt;

&lt;p&gt;J&lt;/p&gt;</comment>
                            <comment id="12900166" author="thiru_mg" created="Thu, 19 Aug 2010 04:12:51 +0000"  >&lt;p&gt;Hi Jeremy,&lt;/p&gt;

&lt;p&gt;Thanks for the quick response.&lt;/p&gt;

&lt;p&gt;That is one way. But if your git repository is current, I can pull the stuff from there. Once we converge, let&apos;s move back to patch. I guess it will take a few iterations and having large zip attachments every time will be a problem.&lt;/p&gt;

&lt;p&gt;Thiru&lt;/p&gt;</comment>
                            <comment id="12900405" author="jcustenborder" created="Thu, 19 Aug 2010 19:18:30 +0000"  >&lt;p&gt;My git repo is current. Once contrib is added to the repo we shouldn&apos;t run into these issues.&lt;/p&gt;</comment>
                            <comment id="12901050" author="thiru_mg" created="Sat, 21 Aug 2010 16:45:40 +0000"  >&lt;p&gt;Hi Jeremy,&lt;/p&gt;

&lt;p&gt;I could get the code to compile on my machine. I was trying to understand the code from the bottom. Since the schema and encoding/decoding at the very bottom, the following comments apply to those parts of the code. Please bear with me, it&apos;ll take a while to go through the whole codebase. Since we wish and hope that the code will live for several years, a couple of weeks spent in getting it right should be worth it.&lt;/p&gt;

&lt;p&gt;Most of the tests passed on my machine, some failed. One test even crashes NTest UI.&lt;/p&gt;

&lt;p&gt;The class hierarchy of Schema is:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Schema
    ArraySchema
    MapSchema
    NamedSchema
        EnumSchema
        FixedSchema        
        RecordSchema
            ErrorSchema
    PrimitiveSchema
        BooleanSchema
        NullSchema
    UnionSchema
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It&apos;s not clear why only NullSchema and BooleanSchema are specified and the rest of the primitive schemas are left alone. I think a a more appropriate hierarchy would be:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Schema
    NamedSchema
        EnumSchema
        FixedSchema        
        RecordSchema/ErrorSchema
    UnnamedSchema
        ArraySchema
        MapSchema
        PrimitiveSchema
        UnionSchema
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Instead of having SchemaType as a string, it&apos;d be better to have it as an enum, which, unlike string, is close-ended.&lt;/p&gt;

&lt;p&gt;Testing appears inadequate. In TestSchema, for example the test only covers parsing.&lt;/p&gt;

&lt;p&gt;In the Encoder and Decoder interfaces, we are accepting the Stream in every function. Typically, a lot of encoding/decoding happens on the same stream. So attaching the stream the interface once will be better, the way we do in the Java implementation.&lt;/p&gt;

&lt;p&gt;I see some files have both Windows and Unix line-endings. I don&apos;t know where the problem is. Do you think keeping Windows line-ending throughout will keep us from these troubles?&lt;/p&gt;

&lt;p&gt;Most of the places the tabs are expanded into spaces, which is perfect. But certain tabs seem to have escaped. We try to avoid hard-tabs.&lt;/p&gt;

&lt;p&gt;We can save quite a bit of code if we use parameterized tests. There is attempt to achieve parameterization in TestSchema. But it leads to some problems, I think. When tests fail, it becomes hard to find which test has failed.&lt;/p&gt;

&lt;p&gt;I tired to capture all the above ideas (regarding the Schema not encoder/decoder) by refactoring the code. I kept it at git@github.com:thirumg/Avro.NET.git in the master branch.&lt;br/&gt;
Please feel free to pull it and try. I have commented out certain tests and code in Avrogen because of this refactroing. Please don&apos;t mistake me, my intention was not to arbitrarily change your code. I thought some ideas are better shown by demonstration rather than pages and pages of text.&lt;/p&gt;

&lt;p&gt;Please let me know what you think.&lt;/p&gt;

&lt;p&gt;Do you have any suggestion for a code coverage tool? It&apos;ll be nice to know how much coverage we get with our tests.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Thiru&lt;/p&gt;

</comment>
                            <comment id="12901106" author="jcustenborder" created="Sat, 21 Aug 2010 22:08:27 +0000"  >&lt;p&gt;Hey Thiru,&lt;/p&gt;

&lt;p&gt;The main point in me putting out this patch was so that there are a few other corporate devs that have been in contact with me about my fork. This is an initial contribution and is not completely working release. Jeff Hammerbacher asked me to create a patch of what I have done so far. This is what that patch is. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Most of the tests passed on my machine, some failed. One test even crashes NTest UI.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m aware of that. Schema parsing still needs some work. Testing the interop schema causes a stack overflow. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It&apos;s not clear why only NullSchema and BooleanSchema are specified and the rest of the primitive schemas are left alone. I think a a more appropriate hierarchy would be:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;At one point I had a schema definition for all of the primitive types. I removed all of these for just using the static variable Primitive.Boolean, Primitive.Null.  I forgot to remove the NullSchema and BooleanSchema classes. These should be removed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Instead of having SchemaType as a string, it&apos;d be better to have it as an enum, which, unlike string, is close-ended.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This was my first approach but I ended up moving away from the enum. For the life of me I cannot remember why.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Testing appears inadequate. In TestSchema, for example the test only covers parsing.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yep it&apos;s not a full release. It&apos;s only what I have finished so far.  You are welcome to add tests.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I see some files have both Windows and Unix line-endings. I don&apos;t know where the problem is. Do you think keeping Windows line-ending throughout will keep us from these troubles?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This must have been my git settings on windows. Do you want me to try and correct it then resubmit?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I tired to capture all the above ideas (regarding the Schema not encoder/decoder) by refactoring the code. I kept it at git@github.com:thirumg/Avro.NET.git in the master branch.&lt;br/&gt;
Please feel free to pull it and try. I have commented out certain tests and code in Avrogen because of this refactroing. Please don&apos;t mistake me, my intention was not to arbitrarily change your code. I thought some ideas are better shown by demonstration rather than pages and pages of text.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Instead of commenting out the tests lets put the Explicit argument on them. This will allow the tests to be executed if you explicitly execute the test. If you execute all of the tests, Explicit tests will be skipped.  &lt;br/&gt;
Changing the code does not bother me. The main reason I put this patch together is that I have been contacted by interested parties that due to corporate legal concerns needed the code to be submitted to ASF before they could add their contributions.  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do you have any suggestion for a code coverage tool? It&apos;ll be nice to know how much coverage we get with our tests.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ncover?&lt;/p&gt;


</comment>
                            <comment id="12904956" author="hammer" created="Wed, 1 Sep 2010 07:24:38 +0000"  >&lt;p&gt;Hey,&lt;/p&gt;

&lt;p&gt;It looks like this patch might slip the 1.4.0 release. Not a big deal, but would love to see it cleaned up and committed to trunk. Any progress since Jeremy&apos;s comments?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Jeff&lt;/p&gt;</comment>
                            <comment id="12905496" author="thiru_mg" created="Thu, 2 Sep 2010 13:11:10 +0000"  >&lt;p&gt;Yea. I started working on this. I&apos;ve finished refactoring the &quot;lower&quot; layers viz. schema, decoder and encoder and tested them. I&apos;m working on the generic reader/writer. I should be able to submit a patch for these in a few days. Then I&apos;ll take up the &quot;upper&quot; layers file, ipc and codegen.&lt;/p&gt;</comment>
                            <comment id="12905742" author="hammer" created="Fri, 3 Sep 2010 00:07:10 +0000"  >&lt;p&gt;Awesome! Thanks for the update, Thiru.&lt;/p&gt;</comment>
                            <comment id="12906559" author="thiru_mg" created="Mon, 6 Sep 2010 18:23:12 +0000"  >&lt;p&gt;This patch is trimmed and cleaned up version of  Jeremy Custenborder.&lt;/p&gt;

&lt;p&gt;The patch is pretty complete in terms of Schema, binary encoding, binary decoding. generic reader and generic writer and schema resolution for generic reader and documentation for these. The only known issue is that it does not resolve schemas if the writer&apos;s schema does not have a field and but the reader&apos;s schema has a field with a default value. I don&apos;t have clean solution for this yet.&lt;/p&gt;

&lt;p&gt;The patch has a fair collection of unit tests using NUnit.&lt;/p&gt;

&lt;p&gt;The code compiles on a windows machine with Microsoft Visual C# 2010. The only dependency is that one should install NUnit 2.5.x. Since I use parametrized (data driven) tests, the minimum version of NUnit should be 2.5.&lt;/p&gt;

&lt;p&gt;To be useful, the following tasks should be completed:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Compare the binary data produced to that by other implementations and ensure they are equivalent&lt;/li&gt;
	&lt;li&gt;Make the code compile with Mono on a Linux system&lt;/li&gt;
	&lt;li&gt;Add support for datafile, IPC and code generation&lt;/li&gt;
	&lt;li&gt;Fix the resoultion with default value problem above.&lt;/li&gt;
	&lt;li&gt;Do some benchmark and compare the performance with that of other implementations such as Java&lt;/li&gt;
	&lt;li&gt;Describe the design in a document&lt;/li&gt;
	&lt;li&gt;Have some install script&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m planning to undertake these tasks in roughly the same order as above.&lt;/p&gt;

&lt;p&gt;Comments are welcome.&lt;/p&gt;</comment>
                            <comment id="12906650" author="hammer" created="Tue, 7 Sep 2010 03:08:56 +0000"  >&lt;p&gt;Hey Thiru,&lt;/p&gt;

&lt;p&gt;Awesome, thanks for the great work. I&apos;d love to see you commit the initial work you&apos;ve done and open separate JIRAs for additional tasks you&apos;ve outlined.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Jeff&lt;/p&gt;</comment>
                            <comment id="12909314" author="thiru_mg" created="Tue, 14 Sep 2010 16:40:33 +0000"  >&lt;p&gt;In terms of functionality, this patch is essentially the same as the previous one, but works on both Windows and Linux.&lt;/p&gt;

&lt;p&gt;The batch contains the following three libraries:&lt;/p&gt;

&lt;p&gt;Newtonsoft.Json.Net20.dll from &lt;a href=&quot;http://james.newtonking.com/projects/json-net.aspx&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://james.newtonking.com/projects/json-net.aspx&lt;/a&gt; (Creative Commons Attribution 2.5 License)&lt;br/&gt;
log4net.dll from &lt;a href=&quot;http://logging.apache.org/log4net/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://logging.apache.org/log4net/&lt;/a&gt; (Apache 2.0 license)&lt;br/&gt;
nunit.framework.dll from &lt;a href=&quot;http://www.nunit.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nunit.org/&lt;/a&gt; (zlib/libpng license)&lt;/p&gt;

&lt;p&gt;I&apos;ve copied these files from a larger download. Can someone confirm that it&apos;s legal to copy the individual files and to use them in our project? Thanks&lt;/p&gt;</comment>
                            <comment id="12909341" author="cutting" created="Tue, 14 Sep 2010 17:14:42 +0000"  >&lt;p&gt;These licenses are all acceptable for inclusion.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.apache.org/legal/resolved.html#category-a&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/legal/resolved.html#category-a&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For any non-Apache license, add an entry at the end of Avro&apos;s LICENSE.txt of the form:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;For the lang/c-sharp/../json-net.aspx component: 

.. text of its license...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the code contains copyright notices, these should be similarly added to NOTICE.txt.&lt;/p&gt;</comment>
                            <comment id="12972352" author="psivanov" created="Fri, 17 Dec 2010 04:22:51 +0000"  >&lt;p&gt;Hi Thiru, &lt;/p&gt;

&lt;p&gt;I was wondering what is the status of this project and in particular the third bullet (datafile, IPC, codeGen).&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Petar&lt;/p&gt;</comment>
                            <comment id="12972828" author="thiru_mg" created="Sat, 18 Dec 2010 17:08:40 +0000"  >&lt;p&gt;Hi Petar,&lt;/p&gt;

&lt;p&gt;I&apos;m really sorry, I couldn&apos;t find time to complete this.&lt;/p&gt;

&lt;p&gt;I&apos;m presently working on Avro C++ as my company needs it. I plan to come back to this in Jan.&lt;/p&gt;</comment>
                            <comment id="12987749" author="dona" created="Thu, 27 Jan 2011 20:44:43 +0000"  >&lt;p&gt;Hi Thiru,&lt;/p&gt;

&lt;p&gt;You were introduced to me by Doug Cutting. I will be working on completing the dotnet implementation of avro. I grabbed the code from Jeremy&apos;s git (&lt;a href=&quot;https://github.com/jcustenborder/avro/tree/dotnet-port&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/jcustenborder/avro/tree/dotnet-port&lt;/a&gt;) to use as my code base, but I can&apos;t apply the patches that you added here - the directory structure between the patch and git is not the same. &lt;/p&gt;

&lt;p&gt;Would you be able to help me get the latest dotnet code for me to start with?&lt;/p&gt;

&lt;p&gt;Thank you&lt;br/&gt;
Dona&lt;/p&gt;
</comment>
                            <comment id="12987905" author="thiru_mg" created="Fri, 28 Jan 2011 03:09:00 +0000"  >&lt;p&gt;Hi Dona,&lt;/p&gt;

&lt;p&gt;The patch (AVRo-533.patch) here is derived from Jeremy&apos;s original work (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-533&quot; title=&quot;.NET implementation of Avro&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-533&quot;&gt;&lt;del&gt;AVRO-533&lt;/del&gt;&lt;/a&gt;.zip). I refactored a lot, fixed functionality gaps, got in quite a bit of unit testing (over 80% coverage when I last measured) and it has a cleaner design. Also it works with both Microsoft.NET and Mono. I suggest you start from &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-533&quot; title=&quot;.NET implementation of Avro&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-533&quot;&gt;&lt;del&gt;AVRO-533&lt;/del&gt;&lt;/a&gt;.patch.&lt;/p&gt;

&lt;p&gt;If you are interested in basic Avro encoding and decoding, the code in this patch should be good enough except for one issue - when resolving schemas it does not insert default values (for fields that reader&apos;s schema has but missing in writer&apos;s schema).&lt;/p&gt;

&lt;p&gt;Unimplemented functionality: (1) Avro data file format and (2) Avro RPC. (1) should be easy to implement as the work is not much and current design lends itself for data file (2) requires much more work.&lt;/p&gt;</comment>
                            <comment id="12988834" author="jcustenborder" created="Mon, 31 Jan 2011 18:29:07 +0000"  >&lt;p&gt;Dona, &lt;/p&gt;

&lt;p&gt;I can also be of some assistance. I&apos;m sorry I didn&apos;t have time to complete the project. I joined a startup and most of my time was consumed there. I&apos;m getting to a point that I can contribute once again, so I&apos;d be interested in seeing where I can help out. You are more than welcome to email me if you have any questions about why I implemented something one way or another. One thing I have not done is cross platform testing. I haven&apos;t tried to serialize something in the .net version and read it from the java version for example.&lt;/p&gt;

&lt;p&gt;If you clone from my repo that would be the version that is included in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-533&quot; title=&quot;.NET implementation of Avro&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-533&quot;&gt;&lt;del&gt;AVRO-533&lt;/del&gt;&lt;/a&gt;.zip. My Zip patch contained some external libraries that I&apos;m using. I didn&apos;t know how to include the binaries in the patching process hence the zip. I believe Thiru took my patch, refactored it, and added some unit tests. I haven&apos;t looked at that work yet. I believe that is the contents of Thiru&apos;s two patches.   &lt;/p&gt;

&lt;p&gt;Hit me up if I can be of any assistance. &lt;/p&gt;

&lt;p&gt;j&lt;/p&gt;</comment>
                            <comment id="12989864" author="dona" created="Wed, 2 Feb 2011 23:21:11 +0000"  >&lt;p&gt;Thanks Jeremy,&lt;br/&gt;
I can surely use your help. I&apos;ll email you so we can discuss how to divide the work. &lt;/p&gt;

&lt;p&gt;Dona&lt;/p&gt;</comment>
                            <comment id="12989868" author="dona" created="Wed, 2 Feb 2011 23:25:21 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I&apos;d like to post a question for everyone: &lt;/p&gt;

&lt;p&gt;What are your thoughts on using Java velocity template for C# code generation?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Dona&lt;/p&gt;</comment>
                            <comment id="12989881" author="cutting" created="Wed, 2 Feb 2011 23:39:44 +0000"  >&lt;p&gt;Adding a set of templates to Java&apos;s SpecificCompiler might simplify a C# implementations.  In addition to the templates we&apos;d also need to add some new C#-specific utility methods to SpecificCompiler, analagous to javaType(), javaEscape(), etc.&lt;/p&gt;</comment>
                            <comment id="12989904" author="sseverance" created="Wed, 2 Feb 2011 23:53:24 +0000"  >&lt;p&gt;I have a partially complete port of moving the file read/write to completely async IO as well as using .nets dynamic assemblies for each of codegen. If you want the code I will zip it up and drop it here.&lt;/p&gt;</comment>
                            <comment id="12989906" author="philip" created="Wed, 2 Feb 2011 23:57:06 +0000"  >&lt;p&gt;Dona,&lt;/p&gt;

&lt;p&gt;Using Java&apos;s template generation for other languages is exactly what I had in mind when I made it templated.  You&apos;ll need to pipe through some commandline arguments and such to &quot;choose&quot; a set of templates as opposed to the default Java ones, but this should be pretty straight-forward.&lt;/p&gt;

&lt;p&gt;&amp;#8211; Philip&lt;/p&gt;</comment>
                            <comment id="12990361" author="jcustenborder" created="Thu, 3 Feb 2011 23:06:01 +0000"  >&lt;p&gt;Initially I had already started moving down the path using System.CodeDom to generate out an object graph for .Net. With CodeDom there is no overhead switching between VB.Net, C#, or any other .Net based language that supports CodeDom. Check out CodeGen/AvroGrn.cs. I started writing an implementation there. I was initially thinking of doing something similar to the Protocol buffer implementation of .Net. They use attributes to mark the types of each class.  &lt;/p&gt;</comment>
                            <comment id="12990364" author="jcustenborder" created="Thu, 3 Feb 2011 23:07:58 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I have a partially complete port of moving the file read/write to completely async IO as well as using .nets dynamic assemblies for each of codegen. If you want the code I will zip it up and drop it here.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Steve it&apos;s been a while since we spoke. Did you end up implementing data files? I&apos;m interested in seeing the async modification you made.  &lt;/p&gt;</comment>
                            <comment id="12991419" author="dona" created="Mon, 7 Feb 2011 15:52:01 +0000"  >
&lt;p&gt;Thanks for all the feedback. I looked at System.CodeDom and that allows generation of C# classes without the need of any templates. It&apos;s pretty straightforward. My team has done extensions to the Java code gen tool and so creating new velocity templates for C# is a good option to quickly re-use those added functionalities. I&apos;ll discuss this in more detail with my team. Please feel free to email me if you have additional input on this.&lt;/p&gt;

&lt;p&gt;Jeremy, last week I worked on protocol parsing. You had that coded but that was not included in Thiru&apos;s latest patch. I fixed a few things to make it work like resolution of types from different namespaces, writing back from schema objects to JSON text, etc. I&apos;ll email you the latest code. My priority at this point is code generation, if you want you can work on other missing functionalities like data file, RPC, etc. &lt;/p&gt;

&lt;p&gt;Steve, I&apos;m interested in seeing what you have done as well&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Dona&lt;/p&gt;
</comment>
                            <comment id="12991436" author="dona" created="Mon, 7 Feb 2011 16:12:38 +0000"  >&lt;p&gt;I could not email the file due to security policies. Attached here instead, csharp.zip&lt;/p&gt;</comment>
                            <comment id="13005870" author="dona" created="Fri, 11 Mar 2011 22:03:13 +0000"  >
&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I attached the latest version of C# Avro api (csharp_2nd_patch.zip) if anyone would like to review. The following are the features I added since the last patch on Sep 2010&lt;/p&gt;

&lt;p&gt;Code generation&lt;br/&gt;
Decoding/encoding of specific objects&lt;br/&gt;
Schema default values&lt;br/&gt;
Namespace resolution&lt;br/&gt;
Protocol parsing&lt;br/&gt;
Parsing of custom properties&lt;br/&gt;
Alias parsing and resolution&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Dona&lt;/p&gt;
</comment>
                            <comment id="13007089" author="cutting" created="Tue, 15 Mar 2011 18:44:09 +0000"  >&lt;p&gt;I&apos;m trying to build this on Ubuntu 10.10.&lt;/p&gt;

&lt;p&gt;I installed mono with:&lt;/p&gt;

&lt;p&gt;sudo apt-get install mono-2.0-devel mono-xbuild nunit&lt;/p&gt;

&lt;p&gt;This installs mono version 2.6.7.&lt;/p&gt;

&lt;p&gt;Attempting to build with the following command (from the README) fails:&lt;/p&gt;

&lt;p&gt;CONFIGURATION=Release xbuild Avro.sln&lt;/p&gt;

&lt;p&gt;I&apos;ve attached the log from this build.  Any idea what the problem is?&lt;/p&gt;</comment>
                            <comment id="13007448" author="dona" created="Wed, 16 Mar 2011 13:00:27 +0000"  >
&lt;p&gt;I did not attempt this in Mono. The version I have installed is Visual Studio 2010, framework 4.0. &lt;/p&gt;

&lt;p&gt;It looks like Mono 2.6.7 does not support framework 4, unless you configure it with --with-profile4=yes. From the log it says that the build is successful, but with 25 warnings. You can try with the configuration change. Or if you open the solution and change target framework to 3.5, that could work too since I don&apos;t think I used any of the new framework 4 features that is not supported in 3.5.&lt;/p&gt;
</comment>
                            <comment id="13007705" author="cutting" created="Wed, 16 Mar 2011 22:00:27 +0000"  >&lt;p&gt;I don&apos;t have Visual Studio, so I will not be able to test it there.&lt;/p&gt;

&lt;p&gt;Ideally we could get it to work with Mono too, but I don&apos;t have enough experience with either C# or Mono.&lt;/p&gt;

&lt;p&gt;Has anyone else looked at this?  Thiru?&lt;/p&gt;</comment>
                            <comment id="13008905" author="thiru_mg" created="Sun, 20 Mar 2011 14:41:31 +0000"  >&lt;p&gt;Thanks a lot Dona for taking this up.&lt;/p&gt;

&lt;p&gt;I didn&apos;t do a proper review of the design or implementation. But I did build and had a cursory look. Here are my observations:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I could cleanly compile on my Windows XP with Visual Studio Express 2010.&lt;/li&gt;
	&lt;li&gt;Two unit tests failed. (TestResolutionMismatch_simple of GenericTests and SpecificTests). They failed because lines 123 to 126 in GenericReader.cs were commented out. Uncommenting that fixes the problem.&lt;/li&gt;
	&lt;li&gt;The test for codegen has its assertions commented out. Uncommenting it still succeeds, I&apos;m not sure why they are commented. But still, I get an impression that the tests there is inadequate. It merely tests that compilation of the generated code goes through. It doesn&apos;t seem to test the contents of generated code.&lt;/li&gt;
	&lt;li&gt;Perhaps I&apos;m missing something completely. To me, SpecificTests seems to test Generic rather than Specific. What am I missing?&lt;/li&gt;
	&lt;li&gt;Protocol compiler is in place. But there is no server or client implementation. This is fine, but I just wanted to check if my understanding is correct.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="13009818" author="dona" created="Tue, 22 Mar 2011 20:07:29 +0000"  >
&lt;p&gt;Thiru,&lt;/p&gt;

&lt;p&gt;Thanks for looking into it. Please see my answers below:&lt;/p&gt;


&lt;p&gt;&#9632;Two unit tests failed. (TestResolutionMismatch_simple of GenericTests and SpecificTests). They failed because lines 123 to 126 in GenericReader.cs were commented out. Uncommenting that fixes the problem.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I moved the CanRead() call to Read&amp;lt;T&amp;gt;() since calling CanRead() from the top level schema recursively calls CanRead() for all its child schemas so it doesn&apos;t need to be repeated inside the read() function, with the exception of union schema. I added a call to CanRead inside ReadUnion() and that took care of the unit test issue. Let me know if you think I&apos;m missing something here by making this change. Also, there is a big performance gain by doing it this way.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&#9632;The test for codegen has its assertions commented out. Uncommenting it still succeeds, I&apos;m not sure why they are commented. But still, I get an impression that the tests there is inadequate. It merely tests that compilation of the generated code goes through. It doesn&apos;t seem to test the contents of generated code.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I commented it out becase for some reason I am still missing a reference to a system assembly so the compilation always errors out. I haven&apos;t had the chance to get back to it. I also have not added all my code gen test cases into Nunit.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&#9632;Perhaps I&apos;m missing something completely. To me, SpecificTests seems to test Generic rather than Specific. What am I missing?&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Yes, SpecificTests is just a copy of Generic. My testcases for this are not yet integrated in Nunit.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&#9632;Protocol compiler is in place. But there is no server or client implementation. This is fine, but I just wanted to check if my understanding is correct.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Correct, at this point we (my company) only needed a protocol parser.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks,&lt;br/&gt;
Dona&lt;/p&gt;</comment>
                            <comment id="13011323" author="cutting" created="Fri, 25 Mar 2011 18:12:06 +0000"  >&lt;p&gt;I cannot personally review &amp;amp; commit this unless I can get it to run on Linux under Mono.  But if someone else (e.g., Thiru) can independently build and test it on Windows then it could be committed.&lt;/p&gt;</comment>
                            <comment id="13011325" author="paul.j.hoffman" created="Fri, 25 Mar 2011 18:16:05 +0000"  >&lt;p&gt;I will be out until 4 April. For issues and support, please contact - DG GCP Odin Dev for Odin (Fendy Zhong) DG IG Tech Camden for Camden/Castle (Kevin Mooney, Deep Mistry) If needed, I can be reached @ 312-802-7258.&lt;/p&gt;</comment>
                            <comment id="13011337" author="ewhauser" created="Fri, 25 Mar 2011 18:33:59 +0000"  >&lt;p&gt;I&apos;m willing to verify the patch under .NET 4.  However, getting this when trying to apply against master:&lt;/p&gt;

&lt;p&gt;git apply dotnet.patch&lt;/p&gt;

&lt;p&gt;dotnet.patch.txt:7: trailing whitespace.&lt;br/&gt;
bin&lt;br/&gt;
dotnet.patch.txt:8: trailing whitespace.&lt;br/&gt;
obj&lt;br/&gt;
dotnet.patch.txt:16: trailing whitespace.&lt;br/&gt;
&#65279;&lt;br/&gt;
dotnet.patch.txt:17: trailing whitespace.&lt;br/&gt;
Microsoft Visual Studio Solution File, Format Version 10.00&lt;br/&gt;
dotnet.patch.txt:18: trailing whitespace.&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Visual Studio 2008&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Bin/Compact/New&lt;br/&gt;
tonsoft.Json.Compact.dll&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Bin/Compact/Newtonsoft.Json.Compact.dll: patc&lt;br/&gt;
h does not apply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Bin/Compact/New&lt;br/&gt;
tonsoft.Json.Compact.pdb&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Bin/Compact/Newtonsoft.Json.Compact.pdb: patc&lt;br/&gt;
h does not apply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Bin/DotNet/Newt&lt;br/&gt;
onsoft.Json.dll&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Bin/DotNet/Newtonsoft.Json.dll: patch does no&lt;br/&gt;
t apply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Bin/DotNet/Newt&lt;br/&gt;
onsoft.Json.pdb&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Bin/DotNet/Newtonsoft.Json.pdb: patch does no&lt;br/&gt;
t apply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Bin/DotNet20/Ne&lt;br/&gt;
wtonsoft.Json.Net20.dll&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Bin/DotNet20/Newtonsoft.Json.Net20.dll: patch&lt;br/&gt;
 does not apply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Bin/DotNet20/Ne&lt;br/&gt;
wtonsoft.Json.Net20.pdb&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Bin/DotNet20/Newtonsoft.Json.Net20.pdb: patch&lt;br/&gt;
 does not apply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Bin/Silverlight&lt;br/&gt;
/Newtonsoft.Json.Silverlight.dll&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Bin/Silverlight/Newtonsoft.Json.Silverlight.d&lt;br/&gt;
ll: patch does not apply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Bin/Silverlight&lt;br/&gt;
/Newtonsoft.Json.Silverlight.pdb&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Bin/Silverlight/Newtonsoft.Json.Silverlight.p&lt;br/&gt;
db: patch does not apply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Documentation.c&lt;br/&gt;
hm&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Documentation.chm: patch does not apply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Src/Doc/donate.&lt;br/&gt;
gif&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Src/Doc/donate.gif: patch does not apply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Src/Lib/LinqBri&lt;br/&gt;
dge.dll&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Src/Lib/LinqBridge.dll: patch does not apply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Src/Lib/NUnitLi&lt;br/&gt;
te.dll&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Src/Lib/NUnitLite.dll: patch does not apply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Src/Lib/nunit.f&lt;br/&gt;
ramework.dll&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Src/Lib/nunit.framework.dll: patch does not a&lt;br/&gt;
pply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Src/Lib/nunit.f&lt;br/&gt;
ramework.silverlight.dll&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Src/Lib/nunit.framework.silverlight.dll: patc&lt;br/&gt;
h does not apply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Src/Newtonsoft.&lt;br/&gt;
Json.Tests/bunny_pancake.jpg&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Src/Newtonsoft.Json.Tests/bunny_pancake.jpg:&lt;br/&gt;
patch does not apply&lt;br/&gt;
error: cannot apply binary patch to &apos;dotnet/src/contrib/Json35r6/Src/Newtonsoft.&lt;br/&gt;
Json/Dynamic.snk&apos; without full index line&lt;br/&gt;
error: dotnet/src/contrib/Json35r6/Src/Newtonsoft.Json/Dynamic.snk: patch does n&lt;br/&gt;
ot apply&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13011342" author="dona" created="Fri, 25 Mar 2011 18:42:46 +0000"  >&lt;p&gt;Attahed csharp_3rd.zip. This contains the following changes:&lt;br/&gt;
-performance enhancements&lt;br/&gt;
-testcases for codegen and specific objects&lt;/p&gt;

&lt;p&gt;This is the complete source code (not a patch) so please use this one instead.&lt;/p&gt;</comment>
                            <comment id="13011394" author="ewhauser" created="Fri, 25 Mar 2011 19:51:03 +0000"  >&lt;p&gt;I can confirm that this compiles and all tests pass in VS2010 / .NET 4.0.&lt;/p&gt;</comment>
                            <comment id="13011828" author="thiru_mg" created="Sun, 27 Mar 2011 18:41:43 +0000"  >&lt;p&gt;This is same as Dona&apos;s csharp_3rd.zip with the following changes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The code now compiles and tests pass under Mono in Ubuntu 10.10 as well as Windows XP/Visual C# Express 2010.&lt;/li&gt;
	&lt;li&gt;The .csproj files were referring to TargetFrameworkVersion 4.0, which does not work with Mono. Blindly replacing it with 3.5 fails to work in Windows. I made TargetFrameworkVersion configurable. Please see README.&lt;/li&gt;
	&lt;li&gt;The code was using Enum.TryParse() which is not available in 3.5. I replaced it with Enum.Parse()&lt;/li&gt;
	&lt;li&gt;The Newtonsoft.Json.dll was not the latest. It was causing some errors.&lt;/li&gt;
	&lt;li&gt;Some of the DLL references in csproj were incorrect. I suppose it worked in Windows because visual studio was pulling them using registry.&lt;/li&gt;
	&lt;li&gt;Code Generation and Specific tests used Microsoft.CSharp.dll. I made them use either Mono.CSharp.dll or Microsoft.CSharp.dll depending on the Runtime.&lt;/li&gt;
	&lt;li&gt;Made all text files use unix line endings. It was mixed earlier.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13012713" author="cutting" created="Tue, 29 Mar 2011 21:27:08 +0000"  >&lt;p&gt;Compiles for me now under Mono on Ubuntu 10.10.  Tests pass, but it appears that none are actually run.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;% nunit-console Avro.nunit
NUnit version 2.4.7
Copyright (C) 2002-2007 Charlie Poole.
Copyright (C) 2002-2004 James W. Newkirk, Michael C. Two, Alexei A. Vorontsov.
Copyright (C) 2000-2002 Philip Craig.
All Rights Reserved.

&lt;span class=&quot;code-object&quot;&gt;Runtime&lt;/span&gt; Environment - 
   OS Version: Unix 2.6.35.28
  CLR Version: 2.0.50727.1433 ( 2.6.7 (Debian 2.6.7-3ubuntu1) )


Tests run: 0, Failures: 0, Not run: 0, Time: 0.042 seconds
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Any idea what I&apos;ve done wrong?&lt;/p&gt;</comment>
                            <comment id="13012838" author="thiru_mg" created="Wed, 30 Mar 2011 04:31:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;Any idea what I&apos;ve done wrong?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Your version of NUnit is old. The Avro unit tests use NUnit 2.5 features extensively. Since NUnit tests use C# attributes (roughly equivalent to Java annotations), the old NUnit runner does not recognise the attributes of the new version; it doesn&apos;t fail either. It&apos;ll be nice if we can somehow make the tests report error if run with older runner. My quick search didn&apos;t reveal any easy solution.&lt;/p&gt;

&lt;p&gt;NUnit 2.5 or later should be able to run the tests.&lt;/p&gt;</comment>
                            <comment id="13013742" author="cutting" created="Wed, 30 Mar 2011 23:53:18 +0000"  >&lt;p&gt;Thanks, Thiru.  Any reason not to commit this now?&lt;/p&gt;</comment>
                            <comment id="13013791" author="thiru_mg" created="Thu, 31 Mar 2011 02:16:12 +0000"  >&lt;p&gt;I don&apos;t think anyone has done interop tests with other language implementations. I&apos;m sure most of it would pass; the only thing that might cause trouble is encoding of double and float. If there is indeed incompatibility that would require data migration for the .net users in the future. I&apos;ll try to get it done today.&lt;/p&gt;

&lt;p&gt;I suggest that this Jira is assigned to Dona before committing this. I don&apos;t know how to do that, since the assignees list does not have her name.&lt;/p&gt;</comment>
                            <comment id="13013792" author="scott_carey" created="Thu, 31 Mar 2011 02:24:14 +0000"  >&lt;p&gt;Added Dona to the Avro contributors group and assigned this ticket to her.&lt;/p&gt;</comment>
                            <comment id="13013965" author="dona" created="Thu, 31 Mar 2011 13:21:51 +0000"  >
&lt;p&gt;I did interop testing with Java, and we did not see issues with decoding Java data in C# and vice versa. Encoding of double worked. We didn&apos;t have value for the float field though so that would still need to be tested.&lt;/p&gt;

&lt;p&gt;What is the process for submitting changes after the initial work is comitted? I have a few changes that I would like to submit later on, mostly related to making codegen extensible and some issues with writing union.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Dona&lt;/p&gt;</comment>
                            <comment id="13014052" author="cutting" created="Thu, 31 Mar 2011 16:24:53 +0000"  >&lt;p&gt;We should integrate this code into the top-level build.sh, including interop testing.  Ideally that would be in the initial patch, but I&apos;m not sure we need to wait for that to commit this.&lt;/p&gt;

&lt;p&gt;Dona, once this is committed the process for making changes is to open new Jira issues for each change, attach patches to the issues, to give others the opportunity to review them before they&apos;re committed.&lt;/p&gt;</comment>
                            <comment id="13014097" author="thiru_mg" created="Thu, 31 Mar 2011 17:52:27 +0000"  >&lt;p&gt;I tested the .net version for compatibility with Java using different data types. I also tested its ability to read Java&apos;s blocking binary encoding. Both the tests pass.&lt;/p&gt;

&lt;p&gt;+1 for committing this.&lt;/p&gt;</comment>
                            <comment id="13014221" author="cutting" created="Thu, 31 Mar 2011 21:22:56 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;

&lt;p&gt;I added a simple build.sh file that handles &apos;test&apos; and &apos;clean&apos; targets only; no interop targets or binary release packaging yet.&lt;/p&gt;

&lt;p&gt;I also added license headers to a few files that were missing them.  Some of these appear to be Visual Studio files that might be auto-generated, so maybe instead of adding a license we should add them to share/rat-excludes.txt.&lt;/p&gt;

&lt;p&gt;Could someone please verify that the version I committed builds with Visual Studio?  I only built &amp;amp; tested with Mono.&lt;/p&gt;</comment>
                            <comment id="13014371" author="thiru_mg" created="Fri, 1 Apr 2011 02:40:11 +0000"  >&lt;p&gt;Microsoft Visual Studio thinks the solution has just two projects not three. It does not recognize Avro.main project. The attached patch &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-533&quot; title=&quot;.NET implementation of Avro&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-533&quot;&gt;&lt;del&gt;AVRO-533&lt;/del&gt;&lt;/a&gt;_3.patch fixes it.&lt;/p&gt;</comment>
                            <comment id="13014739" author="cutting" created="Fri, 1 Apr 2011 16:52:42 +0000"  >&lt;p&gt;Thiru, thanks for catching that.  It looks like I made a cut/paste error of some such.  Oops!&lt;/p&gt;

&lt;p&gt;I committed your patch.&lt;/p&gt;</comment>
                            <comment id="13034419" author="patrickangeles" created="Mon, 16 May 2011 23:17:12 +0000"  >&lt;p&gt;Noticed some things here,&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;JIRA says fixed for 1.5.1, but the code is not in 1.5.1 (however, it is in trunk).&lt;/li&gt;
	&lt;li&gt;Tried writing C# and reading Java and vice-versa, seems it doesn&apos;t work. It appears the C# side is not reading nor writing the header. (This starts with 
{&apos;O&apos;,&apos;b&apos;,&apos;j&apos;, 0x01 }
&lt;p&gt;.)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13034427" author="hammer" created="Mon, 16 May 2011 23:38:52 +0000"  >&lt;p&gt;The C# code is in the source tarball for the 1.5.1 release, but it does not have a separate folder.&lt;/p&gt;</comment>
                            <comment id="13034739" author="patrickangeles" created="Tue, 17 May 2011 12:35:27 +0000"  >&lt;p&gt;On second look, it seems that C# does not support Avro data files yet.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/AVRO/Supported+Languages&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cwiki.apache.org/confluence/display/AVRO/Supported+Languages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Filing a separate JIRA to track this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12454550" name="AVRO-533.patch" size="1006468" author="thiru_mg" created="Tue, 14 Sep 2010 16:40:33 +0000"/>
                            <attachment id="12453954" name="AVRO-533.patch" size="257168" author="thiru_mg" created="Mon, 6 Sep 2010 18:23:12 +0000"/>
                            <attachment id="12452139" name="AVRO-533.zip" size="1745798" author="jcustenborder" created="Mon, 16 Aug 2010 03:10:13 +0000"/>
                            <attachment id="12475188" name="AVRO-533_3.patch" size="754" author="thiru_mg" created="Fri, 1 Apr 2011 02:40:11 +0000"/>
                            <attachment id="12470459" name="csharp.zip" size="1340210" author="dona" created="Mon, 7 Feb 2011 16:12:38 +0000"/>
                            <attachment id="12473438" name="csharp_2nd_patch.zip" size="2425945" author="dona" created="Fri, 11 Mar 2011 22:03:13 +0000"/>
                            <attachment id="12474644" name="csharp_3rd.zip" size="389344" author="dona" created="Fri, 25 Mar 2011 18:42:46 +0000"/>
                            <attachment id="12474733" name="csharp_4.zip" size="396737" author="thiru_mg" created="Sun, 27 Mar 2011 18:41:43 +0000"/>
                            <attachment id="12443909" name="dotnet.patch" size="3930847" author="jcustenborder" created="Thu, 6 May 2010 21:50:18 +0000"/>
                            <attachment id="12473718" name="failure.txt" size="30816" author="cutting" created="Tue, 15 Mar 2011 18:44:09 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 29 Apr 2010 18:08:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94845</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 36 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e0wv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79910</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>&amp;nbsp;Initial work towards getting .Net support for Avro. Support for most Avro types is working along with some of code generation. Stream support needs to be added. Unions need to be flushed out as well. Type serialization is currently handled by a reflection.emit system that is dynamically generated at runtime. </customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-533&quot; title=&quot;.NET implementation of Avro&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-533&quot;&gt;&lt;strike&gt;AVRO-533&lt;/strike&gt;&lt;/a&gt; C# .Net</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-534] AvroRecordReader (org.apache.avro.mapred) should support a JobConf-given schema</title>
                <link>https://issues.apache.org/jira/browse/AVRO-534</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Consider an Avro File of a single record type with about 70 fields in the order (str, str, str, long, str, double, &lt;span class=&quot;error&quot;&gt;&amp;#91;lets take only first 6 into consideration&amp;#93;&lt;/span&gt; ...).&lt;br/&gt;
To pass this into a simple MapReduce job I do: AvroInputFormat.addInputPath(...) and it works well with an IdentityMapper.&lt;/p&gt;

&lt;p&gt;Now I&apos;d like to read only three fields, say fields 0, 1 and 3 so I give the special schema with my 3 fields as (str (0), str (1), long(2)) using AvroJob.setInputGeneric(..., mySchema). This leads to a failure of the mapreduce job since the Avro record reader reads the file for its entire schema (of 70 fields) and tries to convert my given &apos;long&apos; field to &apos;str&apos; as is at the index 2 of the actual schema (meaning its using the actual schema embedded into the file, not what I supplied!).&lt;/p&gt;

&lt;p&gt;The AvroRecordReader must support reading in the schema specified by the user using AvroJob.setInputGeneric.&lt;/p&gt;

&lt;p&gt;I&apos;ve written a patch for it to do the same but am not sure if its actually the solution (MAP_OUTPUT_SCHEMA use?)&lt;/p&gt;</description>
                <environment>&lt;p&gt;ArchLinux, JAVA 1.6, Apache Hadoop (0.20.2), Apache Avro (trunk &amp;#8211; 1.4.0 SNAPSHOT), Using Avro Generic API (JAVA)&lt;/p&gt;</environment>
        <key id="12463426">AVRO-534</key>
            <summary>AvroRecordReader (org.apache.avro.mapred) should support a JobConf-given schema</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.svg">Trivial</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="qwertymaniac">Harsh J</assignee>
                                    <reporter username="qwertymaniac">Harsh J</reporter>
                        <labels>
                            <label>avro</label>
                    </labels>
                <created>Fri, 30 Apr 2010 12:31:01 +0000</created>
                <updated>Wed, 8 Sep 2010 21:07:47 +0000</updated>
                            <resolved>Mon, 23 Aug 2010 19:19:55 +0000</resolved>
                                    <version>1.4.0</version>
                                    <fixVersion>1.4.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12862648" author="qwertymaniac" created="Fri, 30 Apr 2010 12:33:01 +0000"  >&lt;p&gt;Patch to fix the issue with AvroRecordReader.&lt;/p&gt;</comment>
                            <comment id="12862732" author="cutting" created="Fri, 30 Apr 2010 16:14:28 +0000"  >&lt;p&gt;This looks right.  Can you please add a test for this?  Thanks!&lt;/p&gt;</comment>
                            <comment id="12862738" author="qwertymaniac" created="Fri, 30 Apr 2010 16:32:35 +0000"  >&lt;p&gt;Hello Doug,&lt;/p&gt;

&lt;p&gt;Could you tell me in simple points how to go about doing that? Not been in Java development for long but am willing to do this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I see a WordCount test for Avro in trunk, shall I extend that or write a custom one?&lt;/p&gt;</comment>
                            <comment id="12862747" author="cutting" created="Fri, 30 Apr 2010 17:07:14 +0000"  >&lt;p&gt;&amp;gt; I see a WordCount test for Avro in trunk, shall I extend that or write a custom one?&lt;/p&gt;

&lt;p&gt;We might add an @Test testProjection() method to TestWordCountGeneric that reads the job&apos;s output file with AvroRecordReader using a different schema.  We can add a new field to the schema with a default value, and remove one of the existing fields.  So the schema might look like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.avro.mapred.WordCount&quot;&lt;/span&gt;,
 &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[
     {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;count&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt;}
     {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;rank&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt;: -1},
 ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then we check, e.g., that there are the expected number of counts and that they sum to the expected total, that the rank is always -1, and that the field &quot;word&quot; is not present in the record.  How&apos;s that sound?&lt;/p&gt;

&lt;p&gt;Also, instead of deleting the output file after the test, we might delete it before the test runs so we don&apos;t get &quot;attempt to overwrite&quot; errors.  Leaving the file after the test runs also makes debugging easier.&lt;/p&gt;</comment>
                            <comment id="12880646" author="qwertymaniac" created="Sun, 20 Jun 2010 16:04:28 +0000"  >&lt;p&gt;Hello again,&lt;/p&gt;

&lt;p&gt;I&apos;m unable to understand a (probably minor) java thing with regard to the JUnit tests. Where is the WordCount class actually defined? I find the .java source file of it in my build folder (under build/test/generated/etc).&lt;/p&gt;

&lt;p&gt;Another quick question, should the testProjection method also perform a map-reduce operation or simple data reading would do?&lt;/p&gt;</comment>
                            <comment id="12880935" author="cutting" created="Mon, 21 Jun 2010 18:34:31 +0000"  >&lt;p&gt;&amp;gt; Where is the WordCount class actually defined?&lt;/p&gt;

&lt;p&gt;The schema is under share/test/schemas.  The .java file is generated from this during the build.&lt;/p&gt;

&lt;p&gt;&amp;gt; should the testProjection method also perform a map-reduce operation or simple data reading would do?&lt;/p&gt;

&lt;p&gt;You could directly test AvroRecordReader instead of running another MapReduce job.&lt;/p&gt;</comment>
                            <comment id="12900541" author="cutting" created="Fri, 20 Aug 2010 00:45:55 +0000"  >&lt;p&gt;Harsh, will you have a chance to work on a test for this?  Please tell me if you&apos;d like me to help.&lt;/p&gt;</comment>
                            <comment id="12900855" author="qwertymaniac" created="Fri, 20 Aug 2010 20:40:47 +0000"  >&lt;p&gt;Have been putting it off since the mapred package refactoring.&lt;/p&gt;

&lt;p&gt;The test passes right now but I&apos;m not sure how to check the &apos;word&apos; field (&apos;key&apos; field now I guess). Also, it&apos;d be great if one can specify a default value when creating a schema via the Pair class wouldn&apos;t it? Shall I start a new JIRA for this? I&apos;m not sure if my way of generating a selective reading schema manually as implemented in the patch is the right way to do.&lt;/p&gt;

&lt;p&gt;Please comment &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12901539" author="qwertymaniac" created="Mon, 23 Aug 2010 19:01:07 +0000"  >&lt;p&gt;Update test case patch to use a JSON string schema instead of building it using the Schema class.&lt;/p&gt;

&lt;p&gt;(I require to do this so much that I&apos;ve begun to find it the easiest way to build one &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/tongue.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)&lt;/p&gt;</comment>
                            <comment id="12901547" author="cutting" created="Mon, 23 Aug 2010 19:19:54 +0000"  >&lt;p&gt;I just committed this.  Thanks, Harsh!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12443283" name="avro.mapreduce.r1.diff" size="1026" author="qwertymaniac" created="Fri, 30 Apr 2010 12:33:01 +0000"/>
                            <attachment id="12452664" name="avro.recordreader.readers.schema.r2.diff" size="3551" author="qwertymaniac" created="Fri, 20 Aug 2010 20:40:47 +0000"/>
                            <attachment id="12452844" name="avro.recordreader.readers.schema.r3.diff" size="3531" author="qwertymaniac" created="Mon, 23 Aug 2010 19:01:07 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 30 Apr 2010 16:14:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94846</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 22 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e0x3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79911</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Avro, MapReduce, AvroRecordReader</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-535] default does not work</title>
                <link>https://issues.apache.org/jira/browse/AVRO-535</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;this is the request:&lt;/p&gt;

&lt;p&gt;    &quot;get_foo&quot;: {&lt;br/&gt;
      &quot;request&quot;: [&lt;br/&gt;
        &lt;/p&gt;
{ &quot;name&quot;: &quot;id&quot;, &quot;type&quot;: &quot;long&quot; }
&lt;p&gt;,&lt;/p&gt;
        { &quot;name&quot;: &quot;foo&quot;, &quot;type&quot;: &quot;string&quot;, &quot;default&quot;: &quot;bar&quot; }
&lt;p&gt;      ],&lt;br/&gt;
      &quot;response&quot;: &lt;/p&gt;
{ &quot;type&quot;: &quot;array&quot;, &quot;items&quot;: &quot;long&quot; }
&lt;p&gt;    },&lt;/p&gt;


&lt;p&gt;This is the client code:&lt;/p&gt;

&lt;p&gt;avro.request(&apos;get_foo&apos;, &apos;id&apos; =&amp;gt; 3)&lt;/p&gt;

&lt;p&gt;And this is the error the client gets:&lt;/p&gt;

&lt;p&gt;./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/io.rb:544:in `write_data&apos;: The datum &lt;/p&gt;
{&quot;id&quot;=&amp;gt;3}
&lt;p&gt; is not an example of schema [&lt;/p&gt;
{&quot;name&quot;:&quot;id&quot;,&quot;type&quot;:&quot;long&quot;}
&lt;p&gt;,&lt;/p&gt;
{&quot;name&quot;:&quot;foo&quot;,&quot;default&quot;:&quot;bar&quot;,&quot;type&quot;:&quot;string&quot;}
&lt;p&gt;] (Avro::IO::AvroTypeError)&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/io.rb:539:in `write&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/ipc.rb:160:in `write_request&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/ipc.rb:155:in `write_call_request&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/ipc.rb:105:in `request&apos;&lt;/p&gt;


&lt;p&gt;And nil does not work either:&lt;/p&gt;

&lt;p&gt;client code: &lt;br/&gt;
avro.request(&apos;get_foo&apos;, &lt;/p&gt;
{&apos;id&apos; =&amp;gt; 3, &apos;foo&apos; =&amp;gt; nil}
&lt;p&gt;)&lt;/p&gt;

&lt;p&gt;error the client gets:&lt;br/&gt;
./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/io.rb:544:in `write_data&apos;: The datum &lt;/p&gt;
{&quot;id&quot;=&amp;gt;3, &quot;foo&quot;=&amp;gt;nil}
&lt;p&gt; is not an example of schema [&lt;/p&gt;
{&quot;name&quot;:&quot;id&quot;,&quot;type&quot;:&quot;long&quot;}
&lt;p&gt;,&lt;/p&gt;
{&quot;name&quot;:&quot;foo&quot;,&quot;default&quot;:&quot;bar&quot;,&quot;type&quot;:&quot;string&quot;}
&lt;p&gt;] (Avro::IO::AvroTypeError)&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/io.rb:539:in `write&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/ipc.rb:160:in `write_request&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/ipc.rb:155:in `write_call_request&apos;&lt;br/&gt;
	from ./script/../vendor/gems/avro-1.4.0.pre1/lib/avro/ipc.rb:105:in `request&apos;&lt;/p&gt;
</description>
                <environment>&lt;p&gt;Mac OSX&lt;/p&gt;</environment>
        <key id="12463463">AVRO-535</key>
            <summary>default does not work</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="6">Invalid</resolution>
                                        <assignee username="jmhodges">Jeff Hodges</assignee>
                                    <reporter username="wanliyang">Wanli Yang</reporter>
                        <labels>
                    </labels>
                <created>Fri, 30 Apr 2010 21:54:53 +0000</created>
                <updated>Wed, 25 Aug 2010 19:01:46 +0000</updated>
                            <resolved>Wed, 5 May 2010 05:46:32 +0000</resolved>
                                    <version>1.4.0</version>
                                                    <component>ruby</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12862893" author="jmhodges" created="Fri, 30 Apr 2010 21:56:23 +0000"  >&lt;p&gt;In the future, a little more context would be great but I get what you mean. On my plate.&lt;/p&gt;</comment>
                            <comment id="12864169" author="jmhodges" created="Wed, 5 May 2010 05:46:32 +0000"  >&lt;p&gt;Marking this as invalid. The spec only wants defaults used on read, not write.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 30 Apr 2010 21:56:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94847</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            8 years, 38 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e0xb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79912</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
