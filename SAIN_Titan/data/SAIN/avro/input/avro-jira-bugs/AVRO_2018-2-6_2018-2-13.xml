<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:26:09 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2018-2-6+AND+created+%3C%3D+2018-2-13+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="3" total="3"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-2141] Format class names during code generation</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2141</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;We use some schemas that come from Ruby-land and have unfortunate names like &apos;badly_named_schema&apos;. This results in Java classes with the same ugly looking names. It would be nice if there was an option on SpecificCompiler that allowed for reformatting class names into a different&#160;casing style .&lt;/p&gt;</description>
                <environment></environment>
        <key id="13137515">AVRO-2141</key>
            <summary>Format class names during code generation</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="ecopoesis">Mike Roberts</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Feb 2018 19:04:49 +0000</created>
                <updated>Fri, 9 Feb 2018 19:04:49 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            49 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3q0fr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2142] SchemaBuilder Java documentation code snippet is not valid</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2142</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The code snippet in SchemaBuilder is invalid, it has invalid quotes and misses one call in the builder chain.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13137853">AVRO-2142</key>
            <summary>SchemaBuilder Java documentation code snippet is not valid</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.svg">Trivial</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="iemejia">Isma&#235;l Mej&#237;a</assignee>
                                    <reporter username="iemejia">Isma&#235;l Mej&#237;a</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 Feb 2018 12:58:22 +0000</created>
                <updated>Tue, 27 Nov 2018 10:58:16 +0000</updated>
                            <resolved>Tue, 27 Nov 2018 10:58:16 +0000</resolved>
                                                    <fixVersion>1.9.0</fixVersion>
                                    <component>doc</component>
                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16360707" author="githubbot" created="Mon, 12 Feb 2018 13:01:28 +0000"  >&lt;p&gt;iemejia opened a new pull request #282: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2142&quot; title=&quot;SchemaBuilder Java documentation code snippet is not valid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2142&quot;&gt;&lt;del&gt;AVRO-2142&lt;/del&gt;&lt;/a&gt;: Fix SchemaBuilder javadoc code snippet&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/282&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/282&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   The code snippet in SchemaBuilder is invalid, it has invalid quotes and misses one call in the builder chain.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16360760" author="githubbot" created="Mon, 12 Feb 2018 13:39:44 +0000"  >&lt;p&gt;iemejia commented on issue #282: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2142&quot; title=&quot;SchemaBuilder Java documentation code snippet is not valid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2142&quot;&gt;&lt;del&gt;AVRO-2142&lt;/del&gt;&lt;/a&gt;: Fix SchemaBuilder javadoc code snippet&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/282#issuecomment-364924876&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/282#issuecomment-364924876&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Nice, thanks &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16700224" author="githubbot" created="Tue, 27 Nov 2018 10:57:02 +0000"  >&lt;p&gt;iemejia closed pull request #282: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2142&quot; title=&quot;SchemaBuilder Java documentation code snippet is not valid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2142&quot;&gt;&lt;del&gt;AVRO-2142&lt;/del&gt;&lt;/a&gt;: Fix SchemaBuilder javadoc code snippet&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/282&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/282&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/avro/src/main/java/org/apache/avro/SchemaBuilder.java b/lang/java/avro/src/main/java/org/apache/avro/SchemaBuilder.java&lt;br/&gt;
index cdc43e032..8ebe45baf 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/main/java/org/apache/avro/SchemaBuilder.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/SchemaBuilder.java&lt;br/&gt;
@@ -61,11 +61,11 @@&lt;br/&gt;
  *&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&amp;lt;pre&amp;gt;&lt;/li&gt;
	&lt;li&gt;Schema schema = SchemaBuilder&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;*   .record(&quot;HandshakeRequest&quot;).namespace(&quot;org.apache.avro.ipc)&lt;br/&gt;
+ *   .record(&quot;HandshakeRequest&quot;).namespace(&quot;org.apache.avro.ipc&quot;)&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;.fields()&lt;/li&gt;
	&lt;li&gt;.name(&quot;clientHash&quot;).type().fixed(&quot;MD5&quot;).size(16).noDefault()&lt;/li&gt;
	&lt;li&gt;.name(&quot;clientProtocol&quot;).type().nullable().stringType().noDefault()&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;*     .name(&quot;serverHash&quot;).type(&quot;MD5&quot;)&lt;br/&gt;
+ *     .name(&quot;serverHash&quot;).type(&quot;MD5&quot;).noDefault()&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;.name(&quot;meta&quot;).type().nullable().map().values().bytesType().noDefault()&lt;/li&gt;
	&lt;li&gt;.endRecord();&lt;/li&gt;
	&lt;li&gt;&amp;lt;/pre&amp;gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16700226" author="jira-bot" created="Tue, 27 Nov 2018 10:57:05 +0000"  >&lt;p&gt;Commit 39ec1a3f0addfce06869f705f7a17c03d538fe16 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=iemejia&quot; class=&quot;user-hover&quot; rel=&quot;iemejia&quot;&gt;Isma&#235;l Mej&#237;a&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=39ec1a3&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=39ec1a3&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2142&quot; title=&quot;SchemaBuilder Java documentation code snippet is not valid&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2142&quot;&gt;&lt;del&gt;AVRO-2142&lt;/del&gt;&lt;/a&gt;: Fix SchemaBuilder javadoc code snippet&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 Feb 2018 13:01:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3q2iv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2143] ReflectData should determine inner class names in a different way.</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2143</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I used ReflectData to generate schemas containing inner classes. These classes were named automatically by ReflectData with dollar (&apos;$&apos;), with, for example com.company.avro.House$Type. Nevertheless @AvroAlias does not support aliases containing &apos;$&apos; in names. In particulr, it fails in validateName in Schema core class. The failure is correct given that AVRO name specs does notinclude the &apos;$&apos; symbol. &lt;/p&gt;

&lt;p&gt;I suppose that ReflectData should, for example, generate inner class names in a different way, such as replacing &apos;$&apos; by dots (&apos;.&apos;), or it should fail.&lt;/p&gt;

&lt;p&gt;And a detail: Although I cannot add aliases with &apos;$&apos;, I can still encode and decode such objects and inner classes using that schema. &lt;/p&gt;

&lt;p&gt;I think that it newer versions it is also happening.&lt;br/&gt;
&#160;&lt;/p&gt;</description>
                <environment></environment>
        <key id="13137896">AVRO-2143</key>
            <summary>ReflectData should determine inner class names in a different way.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="elmendavies">Miguel</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 Feb 2018 16:12:41 +0000</created>
                <updated>Thu, 22 Feb 2018 00:52:52 +0000</updated>
                            <resolved>Thu, 22 Feb 2018 00:52:52 +0000</resolved>
                                    <version>1.7.7</version>
                                    <fixVersion>1.9.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16361306" author="cutting" created="Mon, 12 Feb 2018 19:17:17 +0000"  >&lt;p&gt;Does it work if you specify the name and space separately in the alias?&#160; This might look like:&lt;/p&gt;

&lt;p&gt;@AvroAlias(name=&quot;Type&quot;, space=&quot;example com.company.avro.House&quot;)&lt;/p&gt;</comment>
                            <comment id="16361960" author="elmendavies" created="Tue, 13 Feb 2018 08:05:48 +0000"  >&lt;p&gt;It works perfectly as you suggested, well, just changing name to alias:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@AvroAlias(alias=&lt;span class=&quot;code-quote&quot;&gt;&quot;Type&quot;&lt;/span&gt;, space=&lt;span class=&quot;code-quote&quot;&gt;&quot;com.company.avro.House$&quot;&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Is &apos;$&apos; in namespace allowed?&lt;/p&gt;</comment>
                            <comment id="16362922" author="githubbot" created="Tue, 13 Feb 2018 19:32:14 +0000"  >&lt;p&gt;cutting opened a new pull request #283: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2143&quot; title=&quot;ReflectData should determine inner class names in a different way.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2143&quot;&gt;&lt;del&gt;AVRO-2143&lt;/del&gt;&lt;/a&gt;. Fix Java reflect to stop using dollar sign in namespaces of nested classes.&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/283&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/283&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16362923" author="cutting" created="Tue, 13 Feb 2018 19:32:47 +0000"  >&lt;p&gt;According to the spec, $ is not valid in namespaces.  It seems the Java implementation currently does not validate namespaces, so it is permitted in Java.  And, as you&apos;ve discovered, it&apos;s currently required to handle reflection of nested classes.&lt;/p&gt;

&lt;p&gt;So, currently schemas generated by Java from reflected nested classes might fail to be parsed by other implementations which might (correctly) not permit $ in namespaces.&lt;/p&gt;

&lt;p&gt;I&apos;ll submit a pull request to fix this.&lt;/p&gt;</comment>
                            <comment id="16371753" author="cutting" created="Wed, 21 Feb 2018 17:56:06 +0000"  >&lt;p&gt;Any objections to committing this?&lt;/p&gt;</comment>
                            <comment id="16372274" author="githubbot" created="Thu, 22 Feb 2018 00:51:07 +0000"  >&lt;p&gt;cutting closed pull request #283: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2143&quot; title=&quot;ReflectData should determine inner class names in a different way.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2143&quot;&gt;&lt;del&gt;AVRO-2143&lt;/del&gt;&lt;/a&gt;. Fix Java reflect to stop using dollar sign in namespaces of nested classes.&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/283&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/283&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectData.java b/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectData.java&lt;br/&gt;
index 2eea133dd..1c179007a 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectData.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectData.java&lt;br/&gt;
@@ -575,7 +575,7 @@ protected Schema createSchema(Type type, Map&amp;lt;String,Schema&amp;gt; names) {&lt;br/&gt;
         String name = c.getSimpleName();&lt;br/&gt;
         String space = c.getPackage() == null ? &quot;&quot; : c.getPackage().getName();&lt;br/&gt;
         if (c.getEnclosingClass() != null)                   // nested class&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;space = c.getEnclosingClass().getName() + &quot;$&quot;;&lt;br/&gt;
+          space = c.getEnclosingClass().getName();&lt;br/&gt;
         Union union = c.getAnnotation(Union.class);&lt;br/&gt;
         if (union != null) {                                 // union annotated&lt;br/&gt;
           return getAnnotatedUnion(union, names);&lt;br/&gt;
diff --git a/lang/java/avro/src/main/java/org/apache/avro/specific/SpecificData.java b/lang/java/avro/src/main/java/org/apache/avro/specific/SpecificData.java&lt;br/&gt;
index f74640d80..44de5c434 100644
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/java/avro/src/main/java/org/apache/avro/specific/SpecificData.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/specific/SpecificData.java&lt;br/&gt;
@@ -161,7 +161,11 @@ public Class getClass(Schema schema) {&lt;br/&gt;
         try 
{
           c = ClassUtils.forName(getClassLoader(), getClassName(schema));
         }
&lt;p&gt; catch (ClassNotFoundException e) {&lt;/p&gt;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;c = NO_CLASS;&lt;br/&gt;
+          try 
{                                   // nested class?
+            c = ClassUtils.forName(getClassLoader(), getNestedClassName(schema));
+          }
&lt;p&gt; catch (ClassNotFoundException ex) &lt;/p&gt;
{
+            c = NO_CLASS;
+          }
&lt;p&gt;         }&lt;br/&gt;
         classCache.put(name, c);&lt;br/&gt;
       }&lt;br/&gt;
@@ -205,10 +209,18 @@ public static String getClassName(Schema schema) &lt;/p&gt;
{
     String name = schema.getName();
     if (namespace == null || &quot;&quot;.equals(namespace))
       return name;
-    String dot = namespace.endsWith(&quot;$&quot;) ? &quot;&quot; : &quot;.&quot;;
+    String dot = namespace.endsWith(&quot;$&quot;) ? &quot;&quot; : &quot;.&quot;; // back-compatibly handle $
     return namespace + dot + name;
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+  private String getNestedClassName(Schema schema) &lt;/p&gt;
{
+    String namespace = schema.getNamespace();
+    String name = schema.getName();
+    if (namespace == null || &quot;&quot;.equals(namespace))
+      return name;
+    return namespace + &quot;$&quot; + name;
+  }
&lt;p&gt;+&lt;br/&gt;
   private final LoadingCache&amp;lt;java.lang.reflect.Type,Schema&amp;gt; schemaCache =&lt;br/&gt;
       CacheBuilder.newBuilder()&lt;br/&gt;
           .weakKeys()&lt;br/&gt;
diff --git a/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java b/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java&lt;br/&gt;
index 7165c0768..21244fbd2 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java&lt;br/&gt;
+++ b/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java&lt;br/&gt;
@@ -134,7 +134,7 @@&lt;br/&gt;
   @Test public void testUnionWithEnum() {&lt;br/&gt;
     Schema s = new Schema.Parser().parse&lt;br/&gt;
         (&quot;[\&quot;null\&quot;, &lt;/p&gt;
{\&quot;type\&quot;:\&quot;enum\&quot;,\&quot;name\&quot;:\&quot;E\&quot;,\&quot;namespace\&quot;:&quot; +
-            &quot;\&quot;org.apache.avro.reflect.TestReflect$\&quot;,\&quot;symbols\&quot;:[\&quot;A\&quot;,\&quot;B\&quot;]}
&lt;p&gt;]&quot;);&lt;br/&gt;
+            &quot;\&quot;org.apache.avro.reflect.TestReflect\&quot;,\&quot;symbols\&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;\&amp;quot;A\&amp;quot;,\&amp;quot;B\&amp;quot;&amp;#93;&lt;/span&gt;}]&quot;);&lt;br/&gt;
     GenericData data = ReflectData.get();&lt;br/&gt;
     assertEquals(1, data.resolveUnion(s, E.A));&lt;br/&gt;
   }&lt;br/&gt;
@@ -525,13 +525,13 @@ void checkReadWrite(Object object, Schema s) throws Exception {&lt;br/&gt;
   public static enum E &lt;/p&gt;
{ A, B }
&lt;p&gt;;&lt;br/&gt;
   @Test public void testEnum() throws Exception {&lt;br/&gt;
     check(E.class, &quot;&lt;/p&gt;
{\&quot;type\&quot;:\&quot;enum\&quot;,\&quot;name\&quot;:\&quot;E\&quot;,\&quot;namespace\&quot;:&quot;
-          +&quot;\&quot;org.apache.avro.reflect.TestReflect$\&quot;,\&quot;symbols\&quot;:[\&quot;A\&quot;,\&quot;B\&quot;]}
&lt;p&gt;&quot;);&lt;br/&gt;
+          +&quot;\&quot;org.apache.avro.reflect.TestReflect\&quot;,\&quot;symbols\&quot;:&lt;span class=&quot;error&quot;&gt;&amp;#91;\&amp;quot;A\&amp;quot;,\&amp;quot;B\&amp;quot;&amp;#93;&lt;/span&gt;}&quot;);&lt;br/&gt;
   }&lt;/p&gt;

&lt;p&gt;   public static class R &lt;/p&gt;
{ int a; long b; }
&lt;p&gt;   @Test public void testRecord() throws Exception {&lt;br/&gt;
     check(R.class, &quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;R\&quot;,\&quot;namespace\&quot;:&quot;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;+&quot;\&quot;org.apache.avro.reflect.TestReflect$\&quot;,\&quot;fields\&quot;:[&quot;&lt;br/&gt;
+          +&quot;\&quot;org.apache.avro.reflect.TestReflect\&quot;,\&quot;fields\&quot;:[&quot;&lt;br/&gt;
           +&quot;
{\&quot;name\&quot;:\&quot;a\&quot;,\&quot;type\&quot;:\&quot;int\&quot;}
&lt;p&gt;,&quot;&lt;br/&gt;
           +&quot;&lt;/p&gt;
{\&quot;name\&quot;:\&quot;b\&quot;,\&quot;type\&quot;:\&quot;long\&quot;}
&lt;p&gt;]}&quot;);&lt;br/&gt;
   }&lt;br/&gt;
@@ -539,20 +539,20 @@ void checkReadWrite(Object object, Schema s) throws Exception {&lt;br/&gt;
   public static class RAvroIgnore &lt;/p&gt;
{ @AvroIgnore int a; }
&lt;p&gt;   @Test public void testAnnotationAvroIgnore() throws Exception &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {     check(RAvroIgnore.class, &amp;quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;RAvroIgnore\&quot;,\&quot;namespace\&quot;:&quot;
-          +&quot;\&quot;org.apache.avro.reflect.TestReflect$\&quot;,\&quot;fields\&quot;:[]}&amp;quot;);+          +&amp;quot;&amp;quot;org.apache.avro.reflect.TestReflect&amp;quot;,&amp;quot;fields&amp;quot;}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;&quot;);&lt;br/&gt;
   }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   public static class RAvroMeta &lt;/p&gt;
{ @AvroMeta(key=&quot;K&quot;, value=&quot;V&quot;) int a; }
&lt;p&gt;   @Test public void testAnnotationAvroMeta() throws Exception {&lt;br/&gt;
     check(RAvroMeta.class, &quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;RAvroMeta\&quot;,\&quot;namespace\&quot;:&quot;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;+&quot;\&quot;org.apache.avro.reflect.TestReflect$\&quot;,\&quot;fields\&quot;:[&quot;&lt;br/&gt;
+          +&quot;\&quot;org.apache.avro.reflect.TestReflect\&quot;,\&quot;fields\&quot;:[&quot;&lt;br/&gt;
           +&quot;
{\&quot;name\&quot;:\&quot;a\&quot;,\&quot;type\&quot;:\&quot;int\&quot;,\&quot;K\&quot;:\&quot;V\&quot;}
&lt;p&gt;]}&quot;);&lt;br/&gt;
   }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   public static class RAvroName &lt;/p&gt;
{ @AvroName(&quot;b&quot;) int a; }
&lt;p&gt;   @Test public void testAnnotationAvroName() throws Exception {&lt;br/&gt;
     check(RAvroName.class, &quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;RAvroName\&quot;,\&quot;namespace\&quot;:&quot;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;+&quot;\&quot;org.apache.avro.reflect.TestReflect$\&quot;,\&quot;fields\&quot;:[&quot;&lt;br/&gt;
+          +&quot;\&quot;org.apache.avro.reflect.TestReflect\&quot;,\&quot;fields\&quot;:[&quot;&lt;br/&gt;
           +&quot;
{\&quot;name\&quot;:\&quot;b\&quot;,\&quot;type\&quot;:\&quot;int\&quot;}
&lt;p&gt;]}&quot;);&lt;br/&gt;
   }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -560,7 +560,7 @@ void checkReadWrite(Object object, Schema s) throws Exception {&lt;br/&gt;
   @Test(expected=Exception.class)&lt;br/&gt;
   public void testAnnotationAvroNameCollide() throws Exception {&lt;br/&gt;
     check(RAvroNameCollide.class, &quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;RAvroNameCollide\&quot;,\&quot;namespace\&quot;:&quot;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;+&quot;\&quot;org.apache.avro.reflect.TestReflect$\&quot;,\&quot;fields\&quot;:[&quot;&lt;br/&gt;
+          +&quot;\&quot;org.apache.avro.reflect.TestReflect\&quot;,\&quot;fields\&quot;:[&quot;&lt;br/&gt;
           +&quot;
{\&quot;name\&quot;:\&quot;b\&quot;,\&quot;type\&quot;:\&quot;int\&quot;}
&lt;p&gt;,&quot;&lt;br/&gt;
           +&quot;&lt;/p&gt;
{\&quot;name\&quot;:\&quot;b\&quot;,\&quot;type\&quot;:\&quot;int\&quot;}
&lt;p&gt;]}&quot;);&lt;br/&gt;
   }&lt;br/&gt;
@@ -568,7 +568,7 @@ public void testAnnotationAvroNameCollide() throws Exception {&lt;br/&gt;
   public static class RAvroStringableField &lt;/p&gt;
{ @Stringable int a; }
&lt;p&gt;   public void testAnnotationAvroStringableFields() throws Exception {&lt;br/&gt;
     check(RAvroStringableField.class, &quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;RAvroNameCollide\&quot;,\&quot;namespace\&quot;:&quot;&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;+&quot;\&quot;org.apache.avro.reflect.TestReflect$\&quot;,\&quot;fields\&quot;:[&quot;&lt;br/&gt;
+          +&quot;\&quot;org.apache.avro.reflect.TestReflect\&quot;,\&quot;fields\&quot;:[&quot;&lt;br/&gt;
           +&quot;
{\&quot;name\&quot;:\&quot;a\&quot;,\&quot;type\&quot;:\&quot;String\&quot;}
&lt;p&gt;]}&quot;);&lt;br/&gt;
   }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -703,7 +703,7 @@ public void testMultipleAnnotations() throws IOException {&lt;br/&gt;
   public void testAvroEncodeInducing() throws IOException {&lt;br/&gt;
     Schema schm = ReflectData.get().getSchema(AvroEncRecord.class);&lt;br/&gt;
     assertEquals(schm.toString(), &quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;AvroEncRecord\&quot;,\&quot;namespace&quot; +&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&quot;\&quot;:\&quot;org.apache.avro.reflect.TestReflect$\&quot;,\&quot;fields\&quot;:[{\&quot;name\&quot;:\&quot;date\&quot;,&quot; +&lt;br/&gt;
+      &quot;\&quot;:\&quot;org.apache.avro.reflect.TestReflect\&quot;,\&quot;fields\&quot;:[{\&quot;name\&quot;:\&quot;date\&quot;,&quot; +&lt;br/&gt;
       &quot;\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;CustomEncoding\&quot;:\&quot;DateAsLongEncoding\&quot;}}]}&quot;);&lt;br/&gt;
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -1059,9 +1059,19 @@ public void testReflectFieldError() throws Exception {&lt;/p&gt;

&lt;p&gt;   @Test&lt;br/&gt;
   public void testAvroAliasOnClass() {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;check(AliasA.class, &quot;
{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;AliasA\&quot;,\&quot;namespace\&quot;:\&quot;org.apache.avro.reflect.TestReflect$\&quot;,\&quot;fields\&quot;:[],\&quot;aliases\&quot;:[\&quot;b.a\&quot;]}
&lt;p&gt;&quot;);&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;check(AliasB.class, &quot;
{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;AliasB\&quot;,\&quot;namespace\&quot;:\&quot;org.apache.avro.reflect.TestReflect$\&quot;,\&quot;fields\&quot;:[],\&quot;aliases\&quot;:[\&quot;a\&quot;]}
&lt;p&gt;&quot;);&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;check(AliasC.class, &quot;
{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;AliasC\&quot;,\&quot;namespace\&quot;:\&quot;org.apache.avro.reflect.TestReflect$\&quot;,\&quot;fields\&quot;:[],\&quot;aliases\&quot;:[\&quot;a\&quot;]}
&lt;p&gt;&quot;);&lt;br/&gt;
+    check(AliasA.class, &quot;&lt;/p&gt;
{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;AliasA\&quot;,\&quot;namespace\&quot;:\&quot;org.apache.avro.reflect.TestReflect\&quot;,\&quot;fields\&quot;:[],\&quot;aliases\&quot;:[\&quot;b.a\&quot;]}
&lt;p&gt;&quot;);&lt;br/&gt;
+    check(AliasB.class, &quot;&lt;/p&gt;
{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;AliasB\&quot;,\&quot;namespace\&quot;:\&quot;org.apache.avro.reflect.TestReflect\&quot;,\&quot;fields\&quot;:[],\&quot;aliases\&quot;:[\&quot;a\&quot;]}
&lt;p&gt;&quot;);&lt;br/&gt;
+    check(AliasC.class, &quot;&lt;/p&gt;
{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;AliasC\&quot;,\&quot;namespace\&quot;:\&quot;org.apache.avro.reflect.TestReflect\&quot;,\&quot;fields\&quot;:[],\&quot;aliases\&quot;:[\&quot;a\&quot;]}
&lt;p&gt;&quot;);&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
+  private static class Z {}&lt;br/&gt;
+&lt;br/&gt;
+  @Test public void testDollarTerminatedNamespaceCompatibility() &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+    ReflectData data = ReflectData.get();+    Schema s = new Schema.Parser().parse+      (&amp;quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;Z\&quot;,\&quot;namespace\&quot;:\&quot;org.apache.avro.reflect.TestReflect$\&quot;,\&quot;fields\&quot;:[]}&amp;quot;);+    assertEquals(data.getSchema(data.getClass(s)).toString(),+       &amp;quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;Z\&quot;,\&quot;namespace\&quot;:\&quot;org.apache.avro.reflect.TestReflect\&quot;,\&quot;fields\&quot;:[]}&amp;quot;);   }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   private static class ClassWithAliasOnField {&lt;br/&gt;
@@ -1078,7 +1088,7 @@ public void testAvroAliasOnClass() {&lt;br/&gt;
   public void testAvroAliasOnField() {&lt;/p&gt;

&lt;p&gt;     Schema expectedSchema = SchemaBuilder.record(ClassWithAliasOnField.class.getSimpleName())&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;.namespace(&quot;org.apache.avro.reflect.TestReflect$&quot;).fields().name(&quot;primitiveField&quot;).aliases(&quot;aliasName&quot;)&lt;br/&gt;
+        .namespace(&quot;org.apache.avro.reflect.TestReflect&quot;).fields().name(&quot;primitiveField&quot;).aliases(&quot;aliasName&quot;)&lt;br/&gt;
         .type(Schema.create(org.apache.avro.Schema.Type.INT)).noDefault().endRecord();&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     check(ClassWithAliasOnField.class, expectedSchema.toString());&lt;br/&gt;
@@ -1098,7 +1108,7 @@ public void namespaceDefinitionOnFieldAliasMustThrowException() {&lt;br/&gt;
   public void testAvroDefault() {&lt;br/&gt;
     check(DefaultTest.class,&lt;br/&gt;
           &quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;DefaultTest\&quot;,&quot;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;+&quot;\&quot;namespace\&quot;:\&quot;org.apache.avro.reflect.TestReflect$\&quot;,\&quot;fields\&quot;:[&quot;&lt;br/&gt;
+          +&quot;\&quot;namespace\&quot;:\&quot;org.apache.avro.reflect.TestReflect\&quot;,\&quot;fields\&quot;:[&quot;&lt;br/&gt;
           +&quot;
{\&quot;name\&quot;:\&quot;foo\&quot;,\&quot;type\&quot;:\&quot;int\&quot;,\&quot;default\&quot;:1}
&lt;p&gt;]}&quot;);&lt;br/&gt;
   }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;diff --git a/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java b/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java&lt;br/&gt;
index 4943c531b..23348be2d 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java&lt;br/&gt;
+++ b/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java&lt;br/&gt;
@@ -120,7 +120,7 @@ public int hashCode() {&lt;br/&gt;
   public void testDecimalBytes() throws IOException {&lt;br/&gt;
     Schema schema = REFLECT.getSchema(DecimalRecordBytes.class);&lt;br/&gt;
     Assert.assertEquals(&quot;Should have the correct record name&quot;,&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&quot;org.apache.avro.reflect.TestReflectLogicalTypes$&quot;,&lt;br/&gt;
+        &quot;org.apache.avro.reflect.TestReflectLogicalTypes&quot;,&lt;br/&gt;
         schema.getNamespace());&lt;br/&gt;
     Assert.assertEquals(&quot;Should have the correct record name&quot;,&lt;br/&gt;
         &quot;DecimalRecordBytes&quot;,&lt;br/&gt;
@@ -179,7 +179,7 @@ public int hashCode() {&lt;br/&gt;
   public void testDecimalFixed() throws IOException {&lt;br/&gt;
     Schema schema = REFLECT.getSchema(DecimalRecordFixed.class);&lt;br/&gt;
     Assert.assertEquals(&quot;Should have the correct record name&quot;,&lt;/li&gt;
	&lt;li&gt;&quot;org.apache.avro.reflect.TestReflectLogicalTypes$&quot;,&lt;br/&gt;
+        &quot;org.apache.avro.reflect.TestReflectLogicalTypes&quot;,&lt;br/&gt;
         schema.getNamespace());&lt;br/&gt;
     Assert.assertEquals(&quot;Should have the correct record name&quot;,&lt;br/&gt;
         &quot;DecimalRecordFixed&quot;,&lt;br/&gt;
@@ -298,7 +298,7 @@ public LogicalType fromSchema(Schema schema) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     Schema schema = model.getSchema(PairRecord.class);&lt;br/&gt;
     Assert.assertEquals(&quot;Should have the correct record name&quot;,&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&quot;org.apache.avro.reflect.TestReflectLogicalTypes$&quot;,&lt;br/&gt;
+        &quot;org.apache.avro.reflect.TestReflectLogicalTypes&quot;,&lt;br/&gt;
         schema.getNamespace());&lt;br/&gt;
     Assert.assertEquals(&quot;Should have the correct record name&quot;,&lt;br/&gt;
         &quot;PairRecord&quot;,&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 Feb 2018 19:17:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            47 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3q2sf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
