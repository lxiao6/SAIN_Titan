<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:21:33 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2015-2-24+AND+created+%3C%3D+2015-3-3+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="4" total="4"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1641] parser.java stack should expand quickly up to some threshold rather than start at the threshold</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1641</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;at Parser.java line 65 (&lt;a href=&quot;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/io/parsing/Parser.java#L65):&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/io/parsing/Parser.java#L65):&lt;/a&gt; &lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; private void expandStack() {
    stack = Arrays.copyOf(stack, stack.length+Math.max(stack.length,1024));
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;should probably be:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;private void expandStack() {
    stack = Arrays.copyOf(stack, stack.length+Math.min(stack.length,1024));
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This expansion probably is intended to grow exponentially up to 1024, and not exponentially after 1024...&lt;/p&gt;</description>
                <environment></environment>
        <key id="12777188">AVRO-1641</key>
            <summary>parser.java stack should expand quickly up to some threshold rather than start at the threshold</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="zolyfarkas">Zoltan Farkas</assignee>
                                    <reporter username="zolyfarkas">Zoltan Farkas</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Feb 2015 14:49:38 +0000</created>
                <updated>Sun, 30 Dec 2018 04:17:18 +0000</updated>
                                            <version>1.7.7</version>
                    <version>1.8.0</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="14723430" author="zolyfarkas" created="Mon, 31 Aug 2015 14:03:16 +0000"  >&lt;p&gt;This patch has a non-trivial performance impact, it would be great if this one liner be integrated by somebody....&lt;/p&gt;</comment>
                            <comment id="15013568" author="busbey" created="Thu, 19 Nov 2015 13:52:12 +0000"  >&lt;p&gt;This sounds reasonable. If you can post a patch I&apos;m happy to review. A benchmark of some kind showing the impact would help.&lt;/p&gt;</comment>
                            <comment id="15013961" author="zolyfarkas" created="Thu, 19 Nov 2015 17:23:58 +0000"  >&lt;p&gt;Hi Sean, I am pretty sure the current code does not reflect the intent of the author...&lt;/p&gt;

&lt;p&gt;I discovered this when reviewing the profiles of our benchmarks a while ago. I do not have the perf measurements data anymore...&lt;br/&gt;
However the change I think is obvious, the current growth strategy makes no sense, huge allocation which is overkill (outside of the TLAB) 99.9% of the time...&lt;/p&gt;

&lt;p&gt;I will follow up with a patch... &lt;br/&gt;
However it would be nice if we can be a bit more pragmatic in the future and reduce the contribution overhead for simple/obvious things...&lt;/p&gt;</comment>
                            <comment id="15013984" author="zolyfarkas" created="Thu, 19 Nov 2015 17:33:48 +0000"  >&lt;p&gt;Here is the patch&lt;/p&gt;</comment>
                            <comment id="15013990" author="busbey" created="Thu, 19 Nov 2015 17:36:55 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I will follow up with a patch... &lt;br/&gt;
However it would be nice if we can be a bit more pragmatic in the future and reduce the contribution overhead for simple/obvious things...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How can we lower the overhead from providing a patch or PR?&lt;/p&gt;</comment>
                            <comment id="15014109" author="zolyfarkas" created="Thu, 19 Nov 2015 18:34:36 +0000"  >&lt;p&gt;For a simple 1-3 line change somebody with privileges should just go ahead make the change and commit it... that&apos;s what I do in my projects...&lt;/p&gt;</comment>
                            <comment id="15014233" author="busbey" created="Thu, 19 Nov 2015 19:43:33 +0000"  >&lt;p&gt;I suspect the limits of our current developer bandwidth is the thing preventing such folks from picking up these kinds of low hanging fruit and posting patches. It would definitely be nice if we could find the time to grab these kinds of issues.&lt;/p&gt;</comment>
                            <comment id="15022895" author="busbey" created="Mon, 23 Nov 2015 20:13:08 +0000"  >&lt;p&gt;FYI, I started prepping to put this in, but my first pass at a simple benchmark showed things getting worse. So I&apos;ll need to make something more formal to show the impact of hte change.&lt;/p&gt;</comment>
                            <comment id="15024562" author="zolyfarkas" created="Tue, 24 Nov 2015 14:00:40 +0000"  >&lt;p&gt;Just be careful with the benchmarking process,&lt;br/&gt;
I often see devs use naive benchmarks which show some result that has nothing to do with the reality.&lt;br/&gt;
I do not trust any benchmark which is not done with a benchmarking framework like JMH...&lt;br/&gt;
Here is how I use JMH in my project: &lt;a href=&quot;https://github.com/zolyfarkas/spf4j/tree/master/spf4j-benchmarks&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/zolyfarkas/spf4j/tree/master/spf4j-benchmarks&lt;/a&gt; &lt;br/&gt;
A good benchmark has a good amount of multithreaded runs... (large allocations outside of TLAB kill scalability due to the locking overhead incurred.)&lt;/p&gt;</comment>
                            <comment id="15025267" author="zolyfarkas" created="Tue, 24 Nov 2015 20:15:36 +0000"  >&lt;p&gt;Hi Sean, as part of this jira we might want to also review the initial stack size, which is currently:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    this.stack = new Symbol[5]; // Start small to make sure expansion code works
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The comment does not inspire much confidence... The initial size should be dictated by what is the right size (to minimize nr of expansions/memory usage) for most cases.&lt;/p&gt;

&lt;p&gt;The comment implies that the original size is small on purpose to trigger an expansion, which is quite a bad idea...&lt;/p&gt;</comment>
                            <comment id="15042226" author="zolyfarkas" created="Fri, 4 Dec 2015 20:57:28 +0000"  >&lt;p&gt;I actually changed the logic in my fork as follows:&lt;/p&gt;

&lt;p&gt;this.stack = new Symbol&lt;span class=&quot;error&quot;&gt;&amp;#91;10&amp;#93;&lt;/span&gt;; &lt;/p&gt;

&lt;p&gt;+&lt;/p&gt;

&lt;p&gt;growth strategy similar to java.util.ArrayList. see:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zolyfarkas/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/io/parsing/Parser.java#L65&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/zolyfarkas/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/io/parsing/Parser.java#L65&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In any case the initial size of 5 is too small and results in lots of expansions... The currently expansion logic implementation is inefficient, so I completely redone it in my fork.&lt;/p&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12773289" name="AVRO-1641.patch" size="625" author="zolyfarkas" created="Thu, 19 Nov 2015 17:33:48 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 19 Nov 2015 13:52:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 7 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i25z5j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1642] JVM Spec Violation 255 Parameter Limit Exceeded </title>
                <link>https://issues.apache.org/jira/browse/AVRO-1642</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The JVM Spec indicates that:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The number of method parameters is limited to 255 by the definition of a method descriptor (&#167;4.3.3), where the limit includes one unit for this in the case of instance or interface method invocations. Note that a method descriptor is defined in terms of a notion of method parameter length in which a parameter of type long or double contributes two units to the length, so parameters of these types further reduce the limit. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Avro Generated Java code with say more than 255 fields will create a constructor that is not valid and won&apos;t compile.&lt;/p&gt;

&lt;p&gt;Simple test is to create a 256 field avro schema, use the avro-maven auto code gen plugin, and try to compile the resulting class.&lt;/p&gt;

&lt;p&gt;DON&apos;T use linux when doing this use windows, my suspicion is that Linux JavaC generates invalid byte code but does not complain.&lt;br/&gt;
Windows will correctly complain indicating that you are a violator of the JVM specification.&lt;/p&gt;

</description>
                <environment>&lt;p&gt;Windows/Linux all Java&lt;/p&gt;</environment>
        <key id="12777270">AVRO-1642</key>
            <summary>JVM Spec Violation 255 Parameter Limit Exceeded </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.svg">Critical</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="barryjones">Barry Jones</assignee>
                                    <reporter username="u912boilermaker">Bryce Alcock</reporter>
                        <labels>
                            <label>build</label>
                            <label>maven</label>
                            <label>specific</label>
                    </labels>
                <created>Tue, 24 Feb 2015 19:42:33 +0000</created>
                <updated>Thu, 2 Feb 2017 23:38:47 +0000</updated>
                            <resolved>Sat, 9 Apr 2016 23:10:43 +0000</resolved>
                                    <version>1.7.7</version>
                                    <fixVersion>1.8.1</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="14720261" author="prateekrungta" created="Fri, 28 Aug 2015 17:17:33 +0000"  >&lt;p&gt;How about we add an option to the maven-plugin and the avro-tools:compile code to avoid the generation of the Constructor? It&apos;d enable people to still use the Specific POJOs over GenericRecords.&lt;/p&gt;</comment>
                            <comment id="14720263" author="prateekrungta" created="Fri, 28 Aug 2015 17:18:04 +0000"  >&lt;p&gt;I&apos;d like to use this JIRA to contribute to Avro. Can you please assign it to me. &lt;/p&gt;</comment>
                            <comment id="14720286" author="busbey" created="Fri, 28 Aug 2015 17:30:22 +0000"  >&lt;p&gt;You can feel free to start working on this now. Once I get jira permissions straightened out I&apos;ll assign it to you.&lt;/p&gt;

&lt;p&gt;I think &quot;doesn&apos;t make a constructor&quot; is a better and easier to work with failure than &quot;generates invalid bytecodes&quot;, so +1 on the approach. We should be sure to generate a warning of some kind when this happens though, since it will likely be surprising for users adding their 256th field.&lt;/p&gt;

&lt;p&gt;Can we start with coming up with a test that fails? I imagine that even if the sun compiler on linux generates invalid byte code it should fail when attempting to load the class.&lt;/p&gt;</comment>
                            <comment id="14720287" author="busbey" created="Fri, 28 Aug 2015 17:31:34 +0000"  >&lt;p&gt;so long as we&apos;re making correct byte code, you should also count double and long fields as two &quot;parameter units&quot;&lt;/p&gt;</comment>
                            <comment id="14720295" author="prateekrungta" created="Fri, 28 Aug 2015 17:35:02 +0000"  >&lt;p&gt;Sounds good. I&apos;ll get started. &lt;/p&gt;</comment>
                            <comment id="14720993" author="prateekrungta" created="Sat, 29 Aug 2015 06:53:31 +0000"  >&lt;p&gt;attached initial pass at this.&lt;/p&gt;</comment>
                            <comment id="14726786" author="prateekrungta" created="Wed, 2 Sep 2015 05:44:32 +0000"  >&lt;p&gt;Attaching a mvn project with a failing test-case (record with 256 fields). Running &lt;tt&gt;mvn compile&lt;/tt&gt; produces the following output:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;...&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; COMPILATION ERROR :&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; -------------------------------------------------------------&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; /Users/prungta/trash/scratch/avro-1642-fail/src/main/java/com/cloudera/sa/avro/samplerec.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;279,9&amp;#93;&lt;/span&gt; error: too many parameters&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; 1 error&lt;br/&gt;
...&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="14726805" author="prateekrungta" created="Wed, 2 Sep 2015 05:59:48 +0000"  >&lt;p&gt;The attached patch does the following:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;{{avro-compiler}}&amp;#93;&lt;/span&gt; Adds the ability to specify if the All-args constructor should be created; and it counts the parameters at the time of code-gen, throwing an exception if generating the All-args constructor is specified and would violate the JVM. Plus associated tests.&lt;/li&gt;
	&lt;li&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;{{avro-ipc}}&amp;#93;&lt;/span&gt; Adds test cases to use the features from &lt;tt&gt;avro-compiler&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;{{avro-maven-plugin}}&amp;#93;&lt;/span&gt; exposes the constructor generation option via a xml-child in the plugin called &lt;tt&gt;createAllArgsConstructor&lt;/tt&gt;, associated tests&lt;/li&gt;
	&lt;li&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;{{avro-tools}}&amp;#93;&lt;/span&gt; similar to the maven plugin, it exposes the cli flag &lt;tt&gt;-no-constructor&lt;/tt&gt;, and adds a test case to check.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I have two gripes with it:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The naming of the options in the maven plugin and tools should be consistent. I&apos;m personally leaning towards &lt;tt&gt;-skipAllArgsConstructor&lt;/tt&gt; and leave the plugin one as-is.&lt;/li&gt;
	&lt;li&gt;I&apos;m duplicating the &lt;tt&gt;createSampleRecordSchema&lt;/tt&gt; method in the compiler and ipc modules. I couldn&apos;t think of a way to avoid this without publishing a test-jar artifact from the compiler.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14731539" author="rdblue" created="Fri, 4 Sep 2015 22:36:44 +0000"  >&lt;p&gt;What about just detecting when there are more than 255 fields and warning that it won&apos;t create the all args constructor? The current behavior produces a file that doesn&apos;t compile anyway so we wouldn&apos;t lose functionality, and it would be simpler not to need additional options.&lt;/p&gt;</comment>
                            <comment id="14731548" author="prateekrungta" created="Fri, 4 Sep 2015 22:42:05 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=blue%40cloudera.com&quot; class=&quot;user-hover&quot; rel=&quot;blue@cloudera.com&quot;&gt;Ryan Blue&lt;/a&gt; I&apos;m a fan! I&apos;ll go ahead and make the change. &lt;/p&gt;</comment>
                            <comment id="14731669" author="u912boilermaker" created="Sat, 5 Sep 2015 00:48:40 +0000"  >&lt;p&gt;+1 for Ryan&apos;s idea.&lt;/p&gt;


&lt;p&gt;Sent from my iPhone&lt;/p&gt;
</comment>
                            <comment id="14732090" author="prateekrungta" created="Sat, 5 Sep 2015 20:01:09 +0000"  >&lt;p&gt;Attaching new patch with the implicit control over generation of the All-Args Constructor. Ryan, Sean - what do you guys think?&lt;/p&gt;</comment>
                            <comment id="14737982" author="rdblue" created="Thu, 10 Sep 2015 01:43:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=prateekrungta&quot; class=&quot;user-hover&quot; rel=&quot;prateekrungta&quot;&gt;Prateek Rungta&lt;/a&gt;, why does a float or double count as two method arguments?&lt;/p&gt;</comment>
                            <comment id="14738015" author="prateekrungta" created="Thu, 10 Sep 2015 02:16:42 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=blue%40cloudera.com&quot; class=&quot;user-hover&quot; rel=&quot;blue@cloudera.com&quot;&gt;Ryan Blue&lt;/a&gt; Its per the rules defined in the &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.3.3&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;JVM Spec&lt;/a&gt; &lt;/p&gt;</comment>
                            <comment id="14738043" author="busbey" created="Thu, 10 Sep 2015 02:39:46 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;+  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; JVM_METHOD_ARG_LIMIT = 255;
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; MAX_FIELD_PARAMETER_UNIT_COUNT = JVM_METHOD_ARG_LIMIT - 1;
+
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can you make this package protected instead of public and add a note that it&apos;s only visible for testing?&lt;/p&gt;</comment>
                            <comment id="14738044" author="busbey" created="Thu, 10 Sep 2015 02:40:18 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void compileSchema(File src, File dest) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
-    compileSchema(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File[] {src}, dest);
+    compileSchema(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File[]{src}, dest);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;please don&apos;t make unrelated formatting fixes.&lt;/p&gt;</comment>
                            <comment id="14738075" author="busbey" created="Thu, 10 Sep 2015 03:15:48 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;+  /*
+   * Returns the number of parameter units required by fields &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the AllArgsConstructor
+   */
+  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; calcAllArgConstructorParameterUnits(Schema record) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add a javadoc that the schema needs to be a Record, add an input validation that the schema is a Record, add a failure test for same.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;+      &lt;span class=&quot;code-keyword&quot;&gt;switch&lt;/span&gt;(f.schema().getType()){
+        &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; DOUBLE:
+        &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; FLOAT:
+          parameterUnits += 2; &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; &amp;amp; &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt; types contribute 2 parameter units
&lt;/span&gt;+          &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
+        &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;:
+          parameterUnits += 1; &lt;span class=&quot;code-comment&quot;&gt;// all other types contribute 1 parameter unit
&lt;/span&gt;+      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Types that need a java long or double count as 2, everything else is 1. Important to note that it&apos;s only the primitive types long and double.&lt;/p&gt;

&lt;p&gt;Per &lt;a href=&quot;http://avro.apache.org/docs/1.7.7/api/java/org/apache/avro/generic/package-summary.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;generic java api docs&lt;/a&gt;, Avro is going to generate Double and Long objects instead, which should count as 1 parameter unit.&lt;/p&gt;

&lt;p&gt;My apologies for pointing you towards the JVM note earlier. For some reason at the time I thought specific would use primitives.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;+  /*
+   * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; RuntimeException generated code &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; specified record will be not compile.
+   */
+  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void validateRecordForCompilation(Schema record) {
+    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.createAllArgsConstructor =
+        calcAllArgConstructorParameterUnits(record) &amp;lt;= MAX_FIELD_PARAMETER_UNIT_COUNT;
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;please remove the javadoc throws, since this does not throw. Also please log a warning when createAllArgsConstructor will be false.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;+#&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ($&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.isCreateAllArgsConstructor())
 
   /**
    * All-args constructor.
@@ -80,6 +81,7 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class ${&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.mangle($schema.getName())}#&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ($schema.isError()) &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; or
 #end
   }
 #end
+#end
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When we&apos;re not going to create the all-args constructor, please output a java comment that explains why we aren&apos;t making it, a pointer to using the builder pattern, etc.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;rename of lang/java/compiler/src/test/java/org/apache/avro/compiler/TestSpecificCompiler.java to lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;please don&apos;t include the rename in this patch, since it makes it hard to see what changes are relevant to this patch (we should do this rename in a different JIRA, we can do it first if it makes this patch easier).&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;+  @Test
+  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testMaxParameterCounts() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
+    Schema validSchema1 = createSampleRecordSchema(SpecificCompiler.MAX_FIELD_PARAMETER_UNIT_COUNT, 0);
+    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SpecificCompiler(validSchema1).compile();
+    Schema validSchema2 = createSampleRecordSchema(SpecificCompiler.MAX_FIELD_PARAMETER_UNIT_COUNT - 2, 1);
+    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SpecificCompiler(validSchema2).compile();
+    Schema validSchema3 = createSampleRecordSchema(SpecificCompiler.MAX_FIELD_PARAMETER_UNIT_COUNT - 1, 1);
+    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SpecificCompiler(validSchema3).compile();
+    Schema validSchema4 = createSampleRecordSchema(SpecificCompiler.MAX_FIELD_PARAMETER_UNIT_COUNT + 1, 0);
+    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SpecificCompiler(validSchema4).compile();
+  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Include comments of what you are attempting to test in these calls, expectations of success/failure, etc.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;-  
+
   &lt;span class=&quot;code-comment&quot;&gt;/** Uses the system&apos;s java compiler to actually compile the generated code. */&lt;/span&gt;
-  &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void assertCompilesWithJavaCompiler(Collection&amp;lt;OutputFile&amp;gt; outputs) 
+  &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void assertCompilesWithJavaCompiler(Collection&amp;lt;OutputFile&amp;gt; outputs)
   &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (outputs.isEmpty()) {
       &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;               &lt;span class=&quot;code-comment&quot;&gt;// Nothing to compile!
&lt;/span&gt;@@ -730,13 +757,13 @@ &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;TestSpecificCompiler {
     }
 
     JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
-    StandardJavaFileManager fileManager = 
-      compiler.getStandardFileManager(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
-    
-    CompilationTask cTask = compiler.getTask(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, fileManager, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, 
-        &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;,
-        fileManager.getJavaFileObjects(
+    StandardJavaFileManager fileManager =
+        compiler.getStandardFileManager(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
+
+    CompilationTask cTask = compiler.getTask(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, fileManager, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;,
+        &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, fileManager.getJavaFileObjects(
             javaFiles.toArray(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File[javaFiles.size()])));
-    assertTrue(cTask.call());
+    &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; compilesWithoutError = cTask.call();
+    assertTrue(compilesWithoutError);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Please leave out unrelated code reformatting.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;lang/java/tools/src/test/compiler/output-no-constructor/*&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Where are these coming from / used?&lt;/p&gt;</comment>
                            <comment id="15226628" author="barryjones" created="Tue, 5 Apr 2016 16:50:12 +0000"  >&lt;p&gt;Is there any progress on this? This is a critical issue for us having just reached this limit. Thanks.&lt;/p&gt;</comment>
                            <comment id="15226641" author="rdblue" created="Tue, 5 Apr 2016 16:53:12 +0000"  >&lt;p&gt;Looks like we&apos;re waiting for some of the review comments to be addressed. If you&apos;d like to pick this up and make those changes, I&apos;ll review it and commit. Thanks, Barry!&lt;/p&gt;</comment>
                            <comment id="15226966" author="barryjones" created="Tue, 5 Apr 2016 19:26:34 +0000"  >&lt;p&gt;Sure. From having a read through the code review comments I should be able to make most of the changes (with zero experience of this codebase), but please can you give me some pointers for:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&quot;add an input validation that the schema is a Record, add a failure test for same&quot; - where can I find examples of what is requested here?&lt;/li&gt;
	&lt;li&gt;&quot;Types that need a java long or double count as 2, everything else is 1. Important to note that it&apos;s only the primitive types long and double&quot; - what does this mean? Does it require code changes or is it just an explanatory note with no code changes required?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="15227055" author="rdblue" created="Tue, 5 Apr 2016 20:13:16 +0000"  >&lt;blockquote&gt;&lt;p&gt;add an input validation that the schema is a Record, add a failure test for same&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is saying that &lt;tt&gt;calcAllArgConstructorParameterUnits&lt;/tt&gt; should validate that the incoming schema actually is a record schema with a precondition that checks &lt;tt&gt;schema.getType() == Schema.Type.RECORD&lt;/tt&gt;. And, there should be a test for this case.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Types that need a java long or double count as 2, everything else is 1. Important to note that it&apos;s only the primitive types long and double&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When counting parameters, the primitive values would count as 2. But, since the specific compiler uses Long and Double, they count as 1. We just need to fix how the number of arguments are counted.&lt;/p&gt;</comment>
                            <comment id="15228144" author="barryjones" created="Wed, 6 Apr 2016 11:45:00 +0000"  >&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1822&quot; title=&quot;Move TestSpecificCompiler from org.apache.avro.compiler to org.apache.avro.compiler.specific to access protected members&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1822&quot;&gt;&lt;del&gt;AVRO-1822&lt;/del&gt;&lt;/a&gt; to move TestSpecificCompiler from org.apache.avro.compiler to org.apache.avro.compiler.specific so it&apos;s clear what changes are made to tests for this ticket.&lt;/p&gt;</comment>
                            <comment id="15228393" author="githubbot" created="Wed, 6 Apr 2016 14:52:57 +0000"  >&lt;p&gt;GitHub user boosh opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/85&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/85&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1642&quot; title=&quot;JVM Spec Violation 255 Parameter Limit Exceeded &quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1642&quot;&gt;&lt;del&gt;AVRO-1642&lt;/del&gt;&lt;/a&gt; - Requested code review changes&lt;/p&gt;



&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/boosh/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/boosh/avro&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1642&quot; title=&quot;JVM Spec Violation 255 Parameter Limit Exceeded &quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1642&quot;&gt;&lt;del&gt;AVRO-1642&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/85.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/85.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #85&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit e457d1eb9242c1c4f9a3a43a1e5e0e778b8c9bce&lt;br/&gt;
Author: Al B &amp;lt;al@acac04cc.ipt.aol.com&amp;gt;&lt;br/&gt;
Date:   2016-04-06T11:41:10Z&lt;/p&gt;

&lt;p&gt;    Move TestSpecificCompiler into org.apache.avro.compiler.specific&lt;/p&gt;

&lt;p&gt;commit 98954064ee8bcafbd7bddf969585a13441bdde77&lt;br/&gt;
Author: Al B &amp;lt;al@acac04cc.ipt.aol.com&amp;gt;&lt;br/&gt;
Date:   2016-04-06T14:52:14Z&lt;/p&gt;

&lt;p&gt;    Implement all requested code review changes for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1642&quot; title=&quot;JVM Spec Violation 255 Parameter Limit Exceeded &quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1642&quot;&gt;&lt;del&gt;AVRO-1642&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15233770" author="rdblue" created="Sat, 9 Apr 2016 23:10:43 +0000"  >&lt;p&gt;The fixes look good and tests pass. I&apos;ve committed this.&lt;/p&gt;</comment>
                            <comment id="15233772" author="rdblue" created="Sat, 9 Apr 2016 23:11:18 +0000"  >&lt;p&gt;Thanks for finishing this, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=barryjones&quot; class=&quot;user-hover&quot; rel=&quot;barryjones&quot;&gt;Barry Jones&lt;/a&gt;!&lt;/p&gt;</comment>
                            <comment id="15235396" author="barryjones" created="Mon, 11 Apr 2016 16:20:14 +0000"  >&lt;p&gt;You&apos;re welcome. Do you have an ETA for a release with this fix in, or do you push snapshots somewhere?&lt;/p&gt;</comment>
                            <comment id="15235540" author="busbey" created="Mon, 11 Apr 2016 17:27:16 +0000"  >&lt;p&gt;Downstream users of Apache Avro shouldn&apos;t be using any SNAPSHOTs we publish, they&apos;re just for internal testing on the team.&lt;/p&gt;

&lt;p&gt;If you need to use this beyond testing, I&apos;d recommend downloading the source and building it locally.&lt;/p&gt;

&lt;p&gt;I don&apos;t think we have an ETA on 1.8.1 yet. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=barryjones&quot; class=&quot;user-hover&quot; rel=&quot;barryjones&quot;&gt;Barry Jones&lt;/a&gt;, if you send a note to dev@avro.apache.org asking for one we can get the discussion rolling to find a release manager.&lt;/p&gt;</comment>
                            <comment id="15244435" author="jira-bot" created="Sat, 16 Apr 2016 22:14:49 +0000"  >&lt;p&gt;Commit e62b98c7c6ff0c38f142b72d3b3fed7f3d717710 in avro&apos;s branch refs/heads/master from Al B&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=e62b98c&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=e62b98c&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1642&quot; title=&quot;JVM Spec Violation 255 Parameter Limit Exceeded &quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1642&quot;&gt;&lt;del&gt;AVRO-1642&lt;/del&gt;&lt;/a&gt;: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.&lt;/p&gt;</comment>
                            <comment id="15244436" author="rdblue" created="Sat, 16 Apr 2016 22:15:20 +0000"  >&lt;p&gt;Evidently, I thought I had pushed the fix to master but I hadn&apos;t. I just did.&lt;/p&gt;</comment>
                            <comment id="15247727" author="githubbot" created="Tue, 19 Apr 2016 13:14:07 +0000"  >&lt;p&gt;Github user boosh closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/85&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/85&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15850692" author="jira-bot" created="Thu, 2 Feb 2017 23:00:21 +0000"  >&lt;p&gt;Commit 646dee5e9196ff0784776b55eba9d9ed9ba2a805 in avro&apos;s branch refs/heads/branch-1.7 from Al B&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=646dee5&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=646dee5&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1642&quot; title=&quot;JVM Spec Violation 255 Parameter Limit Exceeded &quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1642&quot;&gt;&lt;del&gt;AVRO-1642&lt;/del&gt;&lt;/a&gt;: Java: Do not generate invalid all-args constructor. Contributed by Prateek Rungta and Barry Jones.&lt;/p&gt;

&lt;p&gt;Backport:&lt;br/&gt;
Amending-Author: Ben McCann &amp;lt;bmccann@linkedin.com&amp;gt;&lt;/p&gt;</comment>
                            <comment id="15850747" author="githubbot" created="Thu, 2 Feb 2017 23:38:47 +0000"  >&lt;p&gt;Github user benmccann closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/192&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/192&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                            <outwardlinks description="supercedes">
                                        <issuelink>
            <issuekey id="12956465">AVRO-1822</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12753122" name="AVRO-1642-0.patch" size="52760" author="prateekrungta" created="Sat, 29 Aug 2015 06:53:31 +0000"/>
                            <attachment id="12754345" name="AVRO-1642-1.patch" size="42963" author="prateekrungta" created="Sat, 5 Sep 2015 20:01:09 +0000"/>
                            <attachment id="12753688" name="avro-1642-fail.tar" size="23040" author="prateekrungta" created="Wed, 2 Sep 2015 05:44:32 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 28 Aug 2015 17:17:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 50 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i25znj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>JVM Spec Violation</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1643] Add non-String maps as a logical type</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1643</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Other languages might not be able to duplicate the logic in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-680&quot; title=&quot;Allow for non-string keys&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-680&quot;&gt;&lt;del&gt;AVRO-680&lt;/del&gt;&lt;/a&gt;, so a logical type that indicates a non-string map is indeed a map would be great.&lt;/p&gt;

&lt;p&gt;Reference:&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/avro/pull/17&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/17&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12778071">AVRO-1643</key>
            <summary>Add non-String maps as a logical type</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="sachingoyal">Sachin Goyal</reporter>
                        <labels>
                    </labels>
                <created>Fri, 27 Feb 2015 00:02:16 +0000</created>
                <updated>Sun, 30 Dec 2018 05:34:50 +0000</updated>
                                            <version>1.7.6</version>
                    <version>1.7.7</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                    <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12709140">AVRO-1497</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 47 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i264i7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1644] PHP RPC support</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1644</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;PHP version doesn&apos;t support RPC calls using Avro protocol.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12778795">AVRO-1644</key>
            <summary>PHP RPC support</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="Elie">Elie Prudhomme</reporter>
                        <labels>
                    </labels>
                <created>Mon, 2 Mar 2015 17:25:50 +0000</created>
                <updated>Tue, 3 Mar 2015 16:43:37 +0000</updated>
                                            <version>1.7.7</version>
                                                    <component>php</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="14343422" author="elie" created="Mon, 2 Mar 2015 17:27:33 +0000"  >&lt;p&gt;The attached patch provides an implementation of Avro RPC in PHP.&lt;/p&gt;

&lt;p&gt;This implementation support handshake, one-way/two-way message and message errors.&lt;br/&gt;
Only socket transceiver is implemented in two versions : &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;SocketTransceiver : a standard implementation&lt;/li&gt;
	&lt;li&gt;NettyFramedSocketTransceiver : an implementation compatible with the NettyTransceiver in lang/java (which use a different message framing)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The RPC logic is in ipc.php.&lt;/p&gt;</comment>
                            <comment id="14345312" author="elie" created="Tue, 3 Mar 2015 16:43:37 +0000"  >&lt;p&gt;The first patch contains a bug in the client protocol encoding during handshake.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12702196" name="AVRO-1644-2.patch" size="53720" author="Elie" created="Tue, 3 Mar 2015 16:43:37 +0000"/>
                            <attachment id="12701907" name="AVRO-1644.patch" size="53717" author="Elie" created="Mon, 2 Mar 2015 17:27:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 46 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i268xz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Add PHP RPC call support</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                </customfields>
    </item>
</channel>
</rss>
