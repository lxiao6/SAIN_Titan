<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:16:17 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2011-10-26+AND+created+%3C%3D+2011-11-2+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="5" total="5"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-945] C# port does not build under Ubuntu 11.10</title>
                <link>https://issues.apache.org/jira/browse/AVRO-945</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;This is because the .sln file declares that it needs Framework version 3.5 client profile. Mono does not offer client profile. The forthcoming patch fixes that problem by not requiring client profile.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12529130">AVRO-945</key>
            <summary>C# port does not build under Ubuntu 11.10</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thiru_mg">Thiruvalluvan M. G.</assignee>
                                    <reporter username="thiru_mg">Thiruvalluvan M. G.</reporter>
                        <labels>
                    </labels>
                <created>Thu, 27 Oct 2011 19:45:15 +0000</created>
                <updated>Tue, 1 Nov 2011 18:36:09 +0000</updated>
                            <resolved>Fri, 28 Oct 2011 18:07:43 +0000</resolved>
                                                    <fixVersion>1.6.0</fixVersion>
                                    <component>csharp</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13137444" author="thiru_mg" created="Thu, 27 Oct 2011 19:47:05 +0000"  >&lt;p&gt;I&apos;ve tested this patch with Windows (Visual Studio express 2010) and Mono on Ubuntu 11.10.&lt;/p&gt;

&lt;p&gt;Can someone try on other platforms?&lt;/p&gt;</comment>
                            <comment id="13138481" author="cutting" created="Fri, 28 Oct 2011 16:04:24 +0000"  >&lt;p&gt;+1 Still works for me on older Ubuntu.&lt;/p&gt;</comment>
                            <comment id="13138602" author="thiru_mg" created="Fri, 28 Oct 2011 18:07:43 +0000"  >&lt;p&gt;Committed revision 1190479. Thank you Doug for trying it out.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12501142" name="AVRO-945.patch" size="4474" author="thiru_mg" created="Thu, 27 Oct 2011 19:47:05 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 28 Oct 2011 16:04:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>214990</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 13 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3fr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80319</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-946] GenericData.resolveUnion() performance improvement</title>
                <link>https://issues.apache.org/jira/browse/AVRO-946</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Due to the sequential nature of today&apos;s implementation of GenericData.resolveUnion() (used when serializing an object):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; resolveUnion(Schema union, &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; datum) {
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0;
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Schema type : union.getTypes()) {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (instanceOf(type, datum))
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; i;
      i++;
    }
    &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; UnresolvedUnionException(union, datum);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;it showed up when we were doing some serialization performance analysis.  A simple optimization can be implemented by keeping a map within the UnionSchema object (in fact, this could actually be a perfect hash map given the potential values in the map are known in advance).  The optimization is obviously most notable when a Union within the schema contains many types (in our particular use case, more than 40 in some cases).  In this scenario, we observed a 25% improvement by using an identity hash map.&lt;/p&gt;

&lt;p&gt;Even though using an identity map provides a significant boost, we have observed an even further improvement (and removed some of the restrictions of relying on object identity) by using a perfect hash map on the schema names (an extra 15% on top of that in some cases).  This implementation, unfortunately, is not something we could contribute at this point, but we thought it&apos;d be a good idea to allow users to provide alternative implementations of the indexing behavior, such as adding the following static method to Schema:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void setUnionTypeIndexCacheFactory(UnionIndexCacheFactory factory)
{
  unionIndexCacheFactory = factory;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is what the interface and identity hash map-based implementation would look like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  /**
   * A factory &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; creating UnionTypeIndexCache instances.
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; UnionIndexCacheFactory
  {
      UnionIndexCache createUnionIndexCache(List&amp;lt;Schema&amp;gt; types);

      /**
       * Used &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; caching schema indices within a union.
       */
      &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; UnionIndexCache
      {
          void setTypeIndex(Schema schema, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; index);

          &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getTypeIndex(Schema schema);
      }

  }

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;IdentityMapUnionIndexCacheFactory &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; UnionIndexCacheFactory
  {
      @Override
      &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; UnionIndexCache createUnionIndexCache(List&amp;lt;Schema&amp;gt; types)
      {
          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; UnionIndexCache()
          {
              &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; IdentityHashMap&amp;lt;Schema, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt; schemaToIndex = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IdentityHashMap&amp;lt;Schema, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt;();

              @Override
              &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setTypeIndex(Schema schema, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; index)
              {
                  schemaToIndex.put(schema, index);
              }

              @Override
              &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getTypeIndex(Schema schema)
              {
                  &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; index = schemaToIndex.get(schema);
                  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; index == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; ? -1 : index;
              }
          };
      }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I will attach a patch later today or early tomorrow.&lt;/p&gt;

&lt;p&gt;Thanks in advance,&lt;/p&gt;

&lt;p&gt;Hernan Otero&lt;/p&gt;</description>
                <environment></environment>
        <key id="12529147">AVRO-946</key>
            <summary>GenericData.resolveUnion() performance improvement</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="hernan.otero">Hernan Otero</reporter>
                        <labels>
                    </labels>
                <created>Thu, 27 Oct 2011 21:29:04 +0000</created>
                <updated>Tue, 15 Nov 2011 17:30:29 +0000</updated>
                            <resolved>Fri, 4 Nov 2011 20:59:08 +0000</resolved>
                                    <version>1.6.0</version>
                                    <fixVersion>1.6.1</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13138511" author="cutting" created="Fri, 28 Oct 2011 16:42:15 +0000"  >&lt;p&gt;I&apos;d prefer this not be a global setting for all union schemas in the JVM.&lt;/p&gt;

&lt;p&gt;A longer-term approach might be to make UnionSchema a public extensible class, and provide a visitor/copier API for schemas so that one can easily create a version of a schema replacing the implementations of some elements, like unions.&lt;/p&gt;

&lt;p&gt;A good near-term approach might be to add this functionality to GenericDatumWriter.  A MultiKeyMap should provide good performance (&lt;a href=&quot;http://s.apache.org/c1J&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://s.apache.org/c1J&lt;/a&gt;).  Note that one can override the hash function used by MultiKeyMap to make it identity or even a perfect hash.  (For a given GenericDatumWriter the schema is fixed so all unions contained in it can be enumerated.)&lt;/p&gt;

&lt;p&gt;To be more concrete, instead of calling GenericData.resolveUnion(), GenericDatumWriter() could have its own version of ResolveUnion the uses a MultiKeyMap cache indexed by the union Schema and the value&apos;s type.  On misses, the cache can be populated by calling GenericData.resolveUnion().  The hash function can be overidden to be identity for both keys.&lt;/p&gt;

&lt;p&gt;Might something like this work for you?  I think it should perform similarly to directly storing the cache in the union Schema.&lt;/p&gt;</comment>
                            <comment id="13140133" author="hernan.otero" created="Mon, 31 Oct 2011 13:15:43 +0000"  >&lt;p&gt;Thanks for the feed back.&lt;/p&gt;

&lt;p&gt;Yes, I think your proposed solution would also solve the performance issue.&lt;/p&gt;

&lt;p&gt;The only question I&apos;d have is regarding adding the Union as one of the keys in the MultiKeyMap (in GenericDatumWriter).  Unless we force identity equality (something we can&apos;t rely on within our project), there&apos;s nothing else we could use within the Union as an alternative that would still make it unique within the entire schema, is there? (this is only a problem for the Union, for the other key, the datum&apos;s schema, we could use getFullName() as an alternative).&lt;/p&gt;

&lt;p&gt;Or am I missing something?&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;

&lt;p&gt;Hernan&lt;/p&gt;</comment>
                            <comment id="13140260" author="cutting" created="Mon, 31 Oct 2011 16:11:50 +0000"  >&lt;p&gt;Identity equality may result in multiple entries for a given schema but the cache should still work correctly.  It would perform poorly if every instance had a different schema, but that&apos;s not likely.&lt;/p&gt;

&lt;p&gt;Also note that Schema now caches hash codes.  So even using equals hashing would usually only result in a single call to equals, to verify the hash entry.  Equals is fast for identical objects, so, if you used equals hashing, the slow case would be when the cached key is equal but not identical.&lt;/p&gt;

&lt;p&gt;I think identity hashing with weak keys is probably preferable.&lt;/p&gt;</comment>
                            <comment id="13140484" author="hernan.otero" created="Mon, 31 Oct 2011 19:39:55 +0000"  >&lt;p&gt;I&apos;ve implemented your proposed solution using the following data structure:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;IdentityHashMap&amp;lt;Schema, WeakHashMap&amp;lt;Schema, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;&amp;gt;&amp;gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first (identity) map&apos;s key being the Union itself, the second&apos;s (weak) being the datum&apos;s schema.&lt;/p&gt;

&lt;p&gt;As a side note, I did try implementing this using MultiKeyMap delegating to a ReferenceMap, but was unable to override equalsKey() on the MultiKeyMap due to package accessibility constraints for AbstractHashedMap.HashEntry (it may well be I misunderstood MultiKeyMap&apos;s extensibility features as I don&apos;t have much experience with it, please feel free to suggest an alternative data structure).&lt;/p&gt;

&lt;p&gt;I implemented the feature by adding 3 protected methods (for creating, caching and looking up the entries within the cache), so subclasses of GenericDatumWriter should be able to provide alternative implementations if required:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void createUnionIndexCacheMap();
&lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getCachedUnionIndex(Schema union, Schema datumSchema);
&lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; void putCachedUnionIndex(Schema union, Schema datumSchema, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; index);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here are some stats I collected.  The test uses a single record with 3 fields of the same union type.  This union type has 40 different types to choose from.  &quot;best/worst&quot; describe scenarios from the point of view of today&apos;s (sequential) implementation:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;best.  Fields are set with the first type within the union.&lt;/li&gt;
	&lt;li&gt;worst.  Fields are set with the last type within the union.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;These are the results I obtained:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;-----------------------------------------------------
| Scenario |   Time    |       Rate         | Cache |
-----------------------------------------------------
| best     | 11.1 secs |  180,685 loops/sec | &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;  |
| best     | 12.1 secs |  164,935 loops/sec | &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt; |
| worst    | 11.2 secs |  178,364 loops/sec | &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;  |
| worst    | 19.4 secs |  102,912 loops/sec | &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt; |
-----------------------------------------------------
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As expected, using the cache shows little difference between the two scenarios (but manages to be faster even in the best-case scenario!), whereas today&apos;s (sequential) implementation is significantly slower in the worst case scenario.&lt;/p&gt;

&lt;p&gt;I will submit the patch in a few minutes.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Hernan&lt;/p&gt;</comment>
                            <comment id="13140492" author="hernan.otero" created="Mon, 31 Oct 2011 19:47:54 +0000"  >&lt;p&gt;Patch with suggested implementation.&lt;/p&gt;</comment>
                            <comment id="13140500" author="hernan.otero" created="Mon, 31 Oct 2011 19:49:33 +0000"  >&lt;p&gt;Patch submitted.&lt;/p&gt;</comment>
                            <comment id="13141567" author="hernan.otero" created="Tue, 1 Nov 2011 20:44:56 +0000"  >&lt;p&gt;On further thought, the proposed implementation does have a shortcoming.  In order to leverage the optimization, the GenericDatumWriter needs to be shared.  And the current cache implementation is not thread safe.&lt;/p&gt;

&lt;p&gt;One option would be to make the cache thread safe (e.g. use a ConcurrentMap or similar structure), a second option would be to move this all back to UnionSchema, but for the time being (pending the longer term solution of making UnionSchema public and extensible), rely on a HashMap&amp;lt;String, Integer&amp;gt; using the datum&apos;s schema&apos;s getFullName() as key (to avoid the need to rely on identity).&lt;/p&gt;

&lt;p&gt;Any thoughts/suggestions?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Hernan&lt;/p&gt;</comment>
                            <comment id="13141582" author="scott_carey" created="Tue, 1 Nov 2011 21:02:46 +0000"  >&lt;p&gt;There are a few other cases where we have dealt with identity caches of Schemas.  The thread safety issue can&apos;t be dealt with by a generic ConcurrentHashMap since we need weak keys and/or values to prevent a resource leak. &lt;/p&gt;

&lt;p&gt;The solution for the resolver was to use a ThreadLocal weak map.  As long as the ThreadLocal is static or otherwise a near-singleton, this works.  If it is per instance on something that is instantiated often, ThreadLocal has performance issues.&lt;/p&gt;
</comment>
                            <comment id="13141703" author="cutting" created="Tue, 1 Nov 2011 22:35:49 +0000"  >&lt;p&gt;It would certainly be nice to cache things directly in the union schema.  I don&apos;t think we ought to have representation-specific stuff in Schema, but perhaps we can add a representation-independent random-access table to each union schema.&lt;/p&gt;

&lt;p&gt;The value of Schema.getFullName() for each branch in a union is unique within that union.  A Map&amp;lt;String,Schema&amp;gt; in each union might be useful.  Here&apos;s a patch that adds such a thing and uses it to implement resolveUnion().  Might this work?&lt;/p&gt;</comment>
                            <comment id="13142126" author="hernan.otero" created="Wed, 2 Nov 2011 13:16:48 +0000"  >&lt;p&gt;Yes, this implementation gives us a big boost in performance (a little less than using the identity map, but still a significant improvement over no map):&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;-----------------------------------------------------
| Scenario |   Time    |       Rate         | Cache |
-----------------------------------------------------
| best     | 11.9 secs |  168,449 loops/sec | &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;  |
| worst    | 12.2 secs |  164,204 loops/sec | &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;  |
-----------------------------------------------------
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13142134" author="hernan.otero" created="Wed, 2 Nov 2011 13:24:01 +0000"  >&lt;p&gt;I would actually suggest a combined solution.  This representation-independent index in UnionSchema, combined with creating a protected resolveUnion() method in GenericDatumWriter that just delegates to GenericData#resolveUnion()).  That way, we still have a way to optimize further if needed by subclassing GenericDatumWriter (combined with the proposed ThreadLocals for type safety).  At least until the longer term extensibility of Schema subtypes comes along.&lt;/p&gt;</comment>
                            <comment id="13142135" author="hernan.otero" created="Wed, 2 Nov 2011 13:24:45 +0000"  >&lt;p&gt;Oops: type safety -&amp;gt; thread safety&lt;/p&gt;</comment>
                            <comment id="13142216" author="cutting" created="Wed, 2 Nov 2011 15:38:21 +0000"  >&lt;p&gt;Hernan, that sounds like a good plan to me.  Would you like to update the patch or should I?&lt;/p&gt;</comment>
                            <comment id="13142227" author="hernan.otero" created="Wed, 2 Nov 2011 15:50:23 +0000"  >&lt;p&gt;Please go ahead if you don&apos;t mind.&lt;/p&gt;</comment>
                            <comment id="13142412" author="cutting" created="Wed, 2 Nov 2011 18:55:17 +0000"  >&lt;p&gt;Here&apos;s a version of the patch that also adds a resolveUnion() method to GenericDatumReader that delegates to the GenericData method of the same name to permit optimized implementations.&lt;/p&gt;

&lt;p&gt;If there are no objections I&apos;ll commit this.&lt;/p&gt;</comment>
                            <comment id="13144336" author="cutting" created="Fri, 4 Nov 2011 20:59:08 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12502011" name="AVRO-946.patch" size="6263" author="cutting" created="Wed, 2 Nov 2011 18:55:17 +0000"/>
                            <attachment id="12501860" name="AVRO-946.patch" size="4910" author="cutting" created="Tue, 1 Nov 2011 22:35:49 +0000"/>
                            <attachment id="12501657" name="AVRO-946.patch" size="3942" author="hernan.otero" created="Mon, 31 Oct 2011 19:47:54 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 28 Oct 2011 16:42:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>215007</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 12 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3fz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80320</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-947] improve performance of resolver cache for multi-threaded applications</title>
                <link>https://issues.apache.org/jira/browse/AVRO-947</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The DatumReader API is meant to be thread-safe, in that many threads should be able to simultaneously use a single DatumReader instance.  When we first switched GenericDatumReader to use a resolver thread-safety was broken.  &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-650&quot; title=&quot;failures under client concurrency&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-650&quot;&gt;&lt;del&gt;AVRO-650&lt;/del&gt;&lt;/a&gt; repaired this with a thread-local resolver cache, but performance suffered. &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-743&quot; title=&quot;Java: Performance Regression and memory pressure with GenericDatumReader&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-743&quot;&gt;&lt;del&gt;AVRO-743&lt;/del&gt;&lt;/a&gt; improved performance for single-threaded applications, but multi-threaded performance is still poor.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12529286">AVRO-947</key>
            <summary>improve performance of resolver cache for multi-threaded applications</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Fri, 28 Oct 2011 17:00:26 +0000</created>
                <updated>Fri, 28 Oct 2011 17:16:23 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13138548" author="cutting" created="Fri, 28 Oct 2011 17:16:23 +0000"  >&lt;p&gt;Apache Commons MultiKeyMap (&lt;a href=&quot;http://s.apache.org/c1J&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://s.apache.org/c1J&lt;/a&gt;) might be useful here.  The cache could then be efficiently indexed by thread, the reader schema and the writer schema, using identity hashing, so that lookups should be fast.  However this may still require synchronization.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>215146</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 13 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3g7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80321</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-948] Thrift: non-numeric fields should be nullable</title>
                <link>https://issues.apache.org/jira/browse/AVRO-948</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;In Thrift, struct fields with non-numeric value types should be nullable.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12529292">AVRO-948</key>
            <summary>Thrift: non-numeric fields should be nullable</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Fri, 28 Oct 2011 18:26:09 +0000</created>
                <updated>Tue, 1 Nov 2011 18:36:10 +0000</updated>
                            <resolved>Fri, 28 Oct 2011 22:20:22 +0000</resolved>
                                                    <fixVersion>1.6.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13138619" author="cutting" created="Fri, 28 Oct 2011 18:35:37 +0000"  >&lt;p&gt;Here&apos;s a patch that makes non-numeric fields nullable, to be consistent with Thrift semantics.  It also identified bugs when embedding enum and binary values in unions, also fixed here.&lt;/p&gt;</comment>
                            <comment id="13138651" author="cutting" created="Fri, 28 Oct 2011 19:04:11 +0000"  >&lt;p&gt;Here&apos;s an improved patch that also correctly handles numeric fields that are declared optional.&lt;/p&gt;</comment>
                            <comment id="13138853" author="cutting" created="Fri, 28 Oct 2011 22:20:22 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12501342" name="AVRO-948.patch" size="13525" author="cutting" created="Fri, 28 Oct 2011 19:04:11 +0000"/>
                            <attachment id="12501338" name="AVRO-948.patch" size="5976" author="cutting" created="Fri, 28 Oct 2011 18:35:37 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>215152</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 13 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3gf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80322</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-949] NettyTransiever doesn&apos;t call RPCPlugin.clientReceiveResponse on the same thread as clientSendRequest</title>
                <link>https://issues.apache.org/jira/browse/AVRO-949</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;RPCPlugin.clientReceiveResponse() is called in the Netty IO thread when using a NettyTransceiver.  This is quite different than how HTTPTransceiver does it.&lt;/p&gt;

&lt;p&gt;Users can use RPCPlugin to do things like tracing and timing. It&apos;s bizarre that clientSendRequest() happens in the caller&apos;s thread, but clientReceiveResponse() happens in a different one, because thread locals are one of the easiest way to pass information between these.  There&apos;s no easy other way, since RPCContext, which is passed along, has no way to associate arbitrary data with itself.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12529339">AVRO-949</key>
            <summary>NettyTransiever doesn&apos;t call RPCPlugin.clientReceiveResponse on the same thread as clientSendRequest</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="philip">Philip Zeyliger</reporter>
                        <labels>
                    </labels>
                <created>Sat, 29 Oct 2011 02:29:58 +0000</created>
                <updated>Tue, 13 Dec 2011 19:06:47 +0000</updated>
                                            <version>1.5.4</version>
                    <version>1.6.0</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13139310" author="cutting" created="Sat, 29 Oct 2011 13:54:40 +0000"  >&lt;p&gt;Maybe we should add &apos;Map&amp;lt;Object,Object&amp;gt; getProps()&apos; to RpcPlugin? &lt;/p&gt;</comment>
                            <comment id="13139311" author="cutting" created="Sat, 29 Oct 2011 13:55:31 +0000"  >&lt;p&gt;RPCContext, I mean.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 29 Oct 2011 13:54:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>215199</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 13 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3gv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80324</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
