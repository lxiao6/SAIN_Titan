<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:24:11 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2016-10-19+AND+created+%3C%3D+2016-10-26+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="7" total="7"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1935] C++ avro  not reading snappy compressed file properly</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1935</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I am trying to parse a snappy compressed avro file and I am getting the following error:&lt;/p&gt;

&lt;p&gt;Unknown Codec in data file: AVRO_CODEC_KEY = snappy&lt;/p&gt;

&lt;p&gt;Is there support for snappy compression in Avro c++ ? &lt;br/&gt;
Patch ?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Linux&lt;/p&gt;</environment>
        <key id="13013419">AVRO-1935</key>
            <summary>C++ avro  not reading snappy compressed file properly</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="razi">razi</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Oct 2016 07:26:25 +0000</created>
                <updated>Fri, 28 Dec 2018 16:28:58 +0000</updated>
                            <resolved>Tue, 14 Feb 2017 11:56:25 +0000</resolved>
                                    <version>1.8.0</version>
                                                    <component>c++</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="15865659" author="thiru_mg" created="Tue, 14 Feb 2017 11:56:25 +0000"  >&lt;p&gt;The same problem is being addressed by &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1748&quot; title=&quot;Add Snappy Compression to C++ DataFile&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1748&quot;&gt;&lt;del&gt;AVRO-1748&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="16730361" author="thiru_mg" created="Fri, 28 Dec 2018 16:28:58 +0000"  >&lt;p&gt;Closing the issues that got resolved in earlier releases&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 14 Feb 2017 11:56:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i352rr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1936] avrogencpp, includes should have more guards or generate more headers</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1936</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Inside of an avdl file, one can include other avdl files. But the generated only one header file is generated and it does not include guard the enums/structs which were defined in the other avdl files.&lt;/p&gt;

&lt;p&gt;I have some basic records which I&apos;ve defined in there own avdl files, and include them inside of more complicated structures.&lt;br/&gt;
All is well, until I try to include multiple of the avro generated header files.&lt;/p&gt;

&lt;p&gt;Inside of your AvrogencppTests you have gotten around this by giving each generated type there own name space.&lt;/p&gt;

&lt;p&gt;As a test, I quickly modified the existing avrogencpp.cc to include an optional name to CodeGen::guard.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-none&quot;&gt;std::string guard(const string&amp;amp; name=&quot;&quot;);
[...]
string CodeGen::guard(const string&amp;amp; name)
{
    string h = name.empty() ? headerFile_ : name;
    makeCanonical(h, true);
    return h + &quot;_&quot; + lexical_cast&amp;lt;string&amp;gt;(random_()) + &quot;__H_&quot;;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then adding guards around each Enum, Record, Union, Traits, etc.&lt;/p&gt;

&lt;p&gt;Which works well enough. However... the guards do not include the namespace names, so this change breaks your unit tests.&lt;/p&gt;

&lt;p&gt;As long as two higher level classes in the same namespace do not include the same subclasses the generated header files can both be used, but if you have a basic data type like an Point(x,y) which is used throughout the higher level classes then they will both redefine Point(x,y)&lt;/p&gt;

&lt;p&gt;On the Java side, everything is okay. Point(x,y) and all of the classes which include Point are in their own files inside of a package.&lt;/p&gt;

&lt;p&gt;Is there any common way around this problem?&lt;/p&gt;</description>
                <environment></environment>
        <key id="13014270">AVRO-1936</key>
            <summary>avrogencpp, includes should have more guards or generate more headers</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="amoriarty">Alexander Moriarty</reporter>
                        <labels>
                    </labels>
                <created>Fri, 21 Oct 2016 15:26:37 +0000</created>
                <updated>Mon, 31 Dec 2018 06:23:49 +0000</updated>
                                            <version>1.8.1</version>
                                                    <component>c++</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="15595425" author="amoriarty" created="Fri, 21 Oct 2016 15:28:35 +0000"  >&lt;p&gt;sorry, I started talking about avdl files. but these are then turned into avsc files with the java-tool and then given to the generator. &lt;/p&gt;</comment>
                            <comment id="15601809" author="githubbot" created="Mon, 24 Oct 2016 12:20:18 +0000"  >&lt;p&gt;GitHub user moriarty opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/142&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/142&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1936&quot; title=&quot;avrogencpp, includes should have more guards or generate more headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1936&quot;&gt;AVRO-1936&lt;/a&gt;: C++: adds new include guards&lt;/p&gt;

&lt;p&gt;    This change adds additional include guards in a different format.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1936&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1936&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Removes the random numbers from the include guards, instead guarding&lt;br/&gt;
    only by NAMESPACE_TYPE_ where TYPE is the Enum, Record or Union Type.&lt;/p&gt;

&lt;p&gt;    Adds #ifndef NAMESPACE_TYPE_... checks before each struct declaration.&lt;/p&gt;

&lt;p&gt;    Adds #define NAMESPACE_TYPE_... to the generate(Enum/Record/Union)Traits&lt;br/&gt;
    funtion.&lt;/p&gt;

&lt;p&gt;    This allows including multiple of the generated C++ files into one&lt;br/&gt;
    source C++ file, where the avsc files were generated from avdl, and the&lt;br/&gt;
    avdl files contained includes with shared basic types.&lt;/p&gt;

&lt;p&gt;    The previous way to achieve this, as was done in the AvrogencppTests,&lt;br/&gt;
    was to abuse or take advantage adding additional meaningless namespaces.&lt;/p&gt;

&lt;p&gt;    This doesn&apos;t fail the existing AvrogencppTests, but I would like input from avro-cpp users how they&apos;ve gotten around this and if this breaks anything.&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/moriarty/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/moriarty/avro&lt;/a&gt; avro-1936/cpp-include-guards-enhancement/dev&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/142.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/142.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #142&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 92549ed69c56e2f393c361143c3b8ee90e05d538&lt;br/&gt;
Author: Alexander Moriarty &amp;lt;alexander.moriarty@tba.nl&amp;gt;&lt;br/&gt;
Date:   2016-10-24T11:59:19Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1936&quot; title=&quot;avrogencpp, includes should have more guards or generate more headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1936&quot;&gt;AVRO-1936&lt;/a&gt;: C++: adds new include guards&lt;/p&gt;

&lt;p&gt;    This change adds additional include guards in a different format.&lt;/p&gt;

&lt;p&gt;    Removes the random numbers from the include guards, instead guarding&lt;br/&gt;
    only by NAMESPACE_TYPE_ where TYPE is the Enum, Record or Union Type.&lt;/p&gt;

&lt;p&gt;    Adds #ifndef NAMESPACE_TYPE_... checks before each struct declaration.&lt;/p&gt;

&lt;p&gt;    Adds #define NAMESPACE_TYPE_... to the generate(Enum/Record/Union)Traits&lt;br/&gt;
    funtion.&lt;/p&gt;

&lt;p&gt;    This allows including multiple of the generated C++ files into one&lt;br/&gt;
    source C++ file, where the avsc files were generated from avdl, and the&lt;br/&gt;
    avdl files contained includes with shared basic types.&lt;/p&gt;

&lt;p&gt;    The previous way to achieve this, as was done in the AvrogencppTests,&lt;br/&gt;
    was to abuse or take advantage adding additional meaningless namespaces.&lt;/p&gt;

&lt;p&gt;    I have left one line of Commented out Code for input from avro-cpp&lt;br/&gt;
    users on this proposal.&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15602629" author="githubbot" created="Mon, 24 Oct 2016 17:23:01 +0000"  >&lt;p&gt;Github user moriarty closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/142&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/142&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15602631" author="githubbot" created="Mon, 24 Oct 2016 17:23:17 +0000"  >&lt;p&gt;GitHub user moriarty reopened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/142&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/142&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1936&quot; title=&quot;avrogencpp, includes should have more guards or generate more headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1936&quot;&gt;AVRO-1936&lt;/a&gt;: C++: adds new include guards&lt;/p&gt;

&lt;p&gt;    This change adds additional include guards in a different format.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1936&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1936&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Removes the random numbers from the include guards, instead guarding&lt;br/&gt;
    only by NAMESPACE_TYPE_ where TYPE is the Enum, Record or Union Type.&lt;/p&gt;

&lt;p&gt;    Adds #ifndef NAMESPACE_TYPE_... checks before each struct declaration.&lt;/p&gt;

&lt;p&gt;    Adds #define NAMESPACE_TYPE_... to the generate(Enum/Record/Union)Traits&lt;br/&gt;
    funtion.&lt;/p&gt;

&lt;p&gt;    This allows including multiple of the generated C++ files into one&lt;br/&gt;
    source C++ file, where the avsc files were generated from avdl, and the&lt;br/&gt;
    avdl files contained includes with shared basic types.&lt;/p&gt;

&lt;p&gt;    The previous way to achieve this, as was done in the AvrogencppTests,&lt;br/&gt;
    was to abuse or take advantage adding additional meaningless namespaces.&lt;/p&gt;

&lt;p&gt;    This doesn&apos;t fail the existing AvrogencppTests, but I would like input from avro-cpp users how they&apos;ve gotten around this and if this breaks anything.&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/moriarty/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/moriarty/avro&lt;/a&gt; avro-1936/cpp-include-guards-enhancement/dev&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/142.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/142.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #142&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 92549ed69c56e2f393c361143c3b8ee90e05d538&lt;br/&gt;
Author: Alexander Moriarty &amp;lt;alexander.moriarty@tba.nl&amp;gt;&lt;br/&gt;
Date:   2016-10-24T11:59:19Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1936&quot; title=&quot;avrogencpp, includes should have more guards or generate more headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1936&quot;&gt;AVRO-1936&lt;/a&gt;: C++: adds new include guards&lt;/p&gt;

&lt;p&gt;    This change adds additional include guards in a different format.&lt;/p&gt;

&lt;p&gt;    Removes the random numbers from the include guards, instead guarding&lt;br/&gt;
    only by NAMESPACE_TYPE_ where TYPE is the Enum, Record or Union Type.&lt;/p&gt;

&lt;p&gt;    Adds #ifndef NAMESPACE_TYPE_... checks before each struct declaration.&lt;/p&gt;

&lt;p&gt;    Adds #define NAMESPACE_TYPE_... to the generate(Enum/Record/Union)Traits&lt;br/&gt;
    funtion.&lt;/p&gt;

&lt;p&gt;    This allows including multiple of the generated C++ files into one&lt;br/&gt;
    source C++ file, where the avsc files were generated from avdl, and the&lt;br/&gt;
    avdl files contained includes with shared basic types.&lt;/p&gt;

&lt;p&gt;    The previous way to achieve this, as was done in the AvrogencppTests,&lt;br/&gt;
    was to abuse or take advantage adding additional meaningless namespaces.&lt;/p&gt;

&lt;p&gt;    I have left one line of Commented out Code for input from avro-cpp&lt;br/&gt;
    users on this proposal.&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="16730381" author="thiru_mg" created="Fri, 28 Dec 2018 17:03:38 +0000"  >&lt;p&gt;Even though the mechanism of using individual guards for each generated type would work, it is not a common idiom in {{C++ }}. In a single project there&#160;would be multiple definitions of the same type (in multiple header files) and exactly one of them would be used based on the order of {{include}}s. If these multiple definitions are not identical, (it is possible because they are generated using&#160;different&#160;schema files) the &quot;One definition rule&quot; of&#160;{{C++ }} would be broken. Also, IDEs will have difficulty in locating the definition for a given type.&lt;/p&gt;

&lt;p&gt;I think the other approach provided namely, generating separate header files for each type (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1370&quot; title=&quot;C++ code generation should generate individual header files for each type&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1370&quot;&gt;AVRO-1370&lt;/a&gt;) is a better idea. Here the developer has explicit control by deciding to &lt;tt&gt;include&lt;/tt&gt;&#160;specific header or move the header files around to suit their needs. A negative of this approach is that build will be slow because of including several files instead of a single file previously.&lt;/p&gt;

&lt;p&gt;Yet another approach is to allow generating header files from multiple schema files at once where de-duping is done by the code generator.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 Oct 2016 12:20:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3580n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1937] C++ generator for recursive structure crashes</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1937</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I was testing out a Avro specification for a tree type and the generator crashed. I saw that there was a prior bug (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1667&quot; title=&quot;Parser symbol tree flattening is broken for recursive schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1667&quot;&gt;&lt;del&gt;AVRO-1667&lt;/del&gt;&lt;/a&gt;) that fixed some things in the Java parser. &lt;/p&gt;

&lt;p&gt;The same test-case on that bug will cause avrogencpp to segfault.&lt;/p&gt;

&lt;p&gt;$ cat tree.avro&lt;br/&gt;
{&lt;br/&gt;
    &quot;type&quot;:&quot;record&quot;,&lt;br/&gt;
    &quot;name&quot;:&quot;SampleNode&quot;,&lt;br/&gt;
    &quot;namespace&quot;:&quot;org.spf4j.ssdump2.avro&quot;,&lt;br/&gt;
    &quot;fields&quot;:[&lt;br/&gt;
         &lt;/p&gt;
{&quot;name&quot;:&quot;count&quot;,&quot;type&quot;:&quot;int&quot;,&quot;default&quot;:0}
&lt;p&gt;,&lt;br/&gt;
         {&quot;name&quot;:&quot;subNodes&quot;,&quot;type&quot;:&lt;br/&gt;
            {&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&lt;br/&gt;
                &quot;type&quot;:&quot;record&quot;,&quot;name&quot;:&quot;SamplePair&quot;,&lt;br/&gt;
                &quot;fields&quot;:[&lt;br/&gt;
                   {&quot;name&quot;:&quot;method&quot;,&quot;type&quot;:&lt;br/&gt;
                       {&quot;type&quot;:&quot;record&quot;,&quot;name&quot;:&quot;Method&quot;,&lt;br/&gt;
                       &quot;fields&quot;:[&lt;br/&gt;
                          {&quot;name&quot;:&quot;declaringClass&quot;,&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;avro.java.string&quot;:&quot;String&quot;}},&lt;br/&gt;
                          {&quot;name&quot;:&quot;methodName&quot;,&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;avro.java.string&quot;:&quot;String&quot;}}&lt;br/&gt;
                       ]}},&lt;/p&gt;
                   {&quot;name&quot;:&quot;node&quot;,&quot;type&quot;:&quot;SampleNode&quot;}
&lt;p&gt;                ]&lt;br/&gt;
            }}&lt;br/&gt;
        }&lt;br/&gt;
    ]&lt;br/&gt;
} &lt;/p&gt;

&lt;p&gt;$ avrogencpp -i tree.avro -o avro.cpp&lt;br/&gt;
[ segfault ]&lt;/p&gt;</description>
                <environment></environment>
        <key id="13014413">AVRO-1937</key>
            <summary>C++ generator for recursive structure crashes</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jaredgrubb">Jared Grubb</reporter>
                        <labels>
                    </labels>
                <created>Fri, 21 Oct 2016 21:36:43 +0000</created>
                <updated>Fri, 28 Dec 2018 16:25:30 +0000</updated>
                            <resolved>Sat, 18 Feb 2017 02:41:28 +0000</resolved>
                                    <version>1.8.1</version>
                                                    <component>c++</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="15865646" author="thiru_mg" created="Tue, 14 Feb 2017 11:50:23 +0000"  >&lt;p&gt;Here is a patch that fixes the problem. It handles recursive structures through arrays, maps and unions well.&lt;/p&gt;</comment>
                            <comment id="15872924" author="jira-bot" created="Sat, 18 Feb 2017 02:41:09 +0000"  >&lt;p&gt;Commit ce36fffca8dd0bf8f5282041ba473e84193483c1 in avro&apos;s branch refs/heads/master from Thiruvalluvan M G&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=ce36fff&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=ce36fff&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Fixed &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1937&quot; title=&quot;C++ generator for recursive structure crashes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1937&quot;&gt;&lt;del&gt;AVRO-1937&lt;/del&gt;&lt;/a&gt;, C++ code genrator now handles recursive structures well&lt;/p&gt;</comment>
                            <comment id="15872925" author="thiru_mg" created="Sat, 18 Feb 2017 02:41:28 +0000"  >&lt;p&gt;Applied the patch.&lt;/p&gt;</comment>
                            <comment id="16730354" author="thiru_mg" created="Fri, 28 Dec 2018 16:25:30 +0000"  >&lt;p&gt;Closing issues that got resolved in earlier releases.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12852551" name="AVRO-1937.patch" size="7331" author="thiru_mg" created="Tue, 14 Feb 2017 11:50:48 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 14 Feb 2017 11:50:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i358wf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1938] Python (2) support for generating canonical forms of schema</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1938</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The python implementation(s) lack support for generating canonical forms of schema.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13014697">AVRO-1938</key>
            <summary>Python (2) support for generating canonical forms of schema</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="forsberg">Erik Forsberg</reporter>
                        <labels>
                    </labels>
                <created>Mon, 24 Oct 2016 12:10:01 +0000</created>
                <updated>Sun, 30 Dec 2018 04:20:58 +0000</updated>
                                                                            <component>python</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="15601835" author="githubbot" created="Mon, 24 Oct 2016 12:29:07 +0000"  >&lt;p&gt;GitHub user forsberg opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/143&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/143&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1938&quot; title=&quot;Python (2) support for generating canonical forms of schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1938&quot;&gt;AVRO-1938&lt;/a&gt;: Py2 support for generating canonical form of schemas&lt;/p&gt;

&lt;p&gt;    Adds support for generating canonical form of schema in Python 2 implementation.&lt;/p&gt;

&lt;p&gt;    Notes:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Adds dependency on simplejson, since built-in json module lacks support for sorting keys when writing JSON dictionaries.&lt;/li&gt;
	&lt;li&gt;Did not update nor remove lib/simplejson, which means tests don&apos;t pass right now. Should the lib/simplejson directory be updated to the latest version of simplejson, or should it be removed? Is it needed for anything except tests?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/forsberg/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/forsberg/avro&lt;/a&gt; py_canonical_form&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/143.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/143.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #143&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit c52bbd6b32f332f79d22d615baf07e8162c32830&lt;br/&gt;
Author: Erik Forsberg &amp;lt;forsberg@opera.com&amp;gt;&lt;br/&gt;
Date:   2016-10-24T12:10:36Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1938&quot; title=&quot;Python (2) support for generating canonical forms of schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1938&quot;&gt;AVRO-1938&lt;/a&gt;: Py2 support for generating canonical form of schemas&lt;/p&gt;

&lt;hr /&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 Oct 2016 12:29:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 13 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35anj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1939] Add command line tool for generating canonical form of schema</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1939</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Being able to generate canonical form of schemas from avro-tools would be useful, especially when writing canonical schema support in other languages (i.e &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1938&quot; title=&quot;Python (2) support for generating canonical forms of schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1938&quot;&gt;AVRO-1938&lt;/a&gt;).&lt;/p&gt;</description>
                <environment></environment>
        <key id="13014699">AVRO-1939</key>
            <summary>Add command line tool for generating canonical form of schema</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dkulp">Daniel Kulp</assignee>
                                    <reporter username="forsberg">Erik Forsberg</reporter>
                        <labels>
                    </labels>
                <created>Mon, 24 Oct 2016 12:12:51 +0000</created>
                <updated>Tue, 4 Dec 2018 13:05:37 +0000</updated>
                            <resolved>Mon, 3 Dec 2018 19:48:28 +0000</resolved>
                                                    <fixVersion>1.9.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="15601839" author="githubbot" created="Mon, 24 Oct 2016 12:29:55 +0000"  >&lt;p&gt;GitHub user forsberg opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/144&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/144&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1939&quot; title=&quot;Add command line tool for generating canonical form of schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1939&quot;&gt;&lt;del&gt;AVRO-1939&lt;/del&gt;&lt;/a&gt;: Add commandline tool that outputs canonical form of schema&lt;/p&gt;



&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/forsberg/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/forsberg/avro&lt;/a&gt; java_schema_normalization_tool&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/144.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/144.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #144&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 2b29874d705248799de3a6ccdd644389d569a426&lt;br/&gt;
Author: Erik Forsberg &amp;lt;forsberg@opera.com&amp;gt;&lt;br/&gt;
Date:   2016-10-24T12:13:15Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1939&quot; title=&quot;Add command line tool for generating canonical form of schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1939&quot;&gt;&lt;del&gt;AVRO-1939&lt;/del&gt;&lt;/a&gt;: Add commandline tool that outputs canonical form of schema&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="16707701" author="githubbot" created="Mon, 3 Dec 2018 19:48:07 +0000"  >&lt;p&gt;dkulp closed pull request #144: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1939&quot; title=&quot;Add command line tool for generating canonical form of schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1939&quot;&gt;&lt;del&gt;AVRO-1939&lt;/del&gt;&lt;/a&gt;: Add commandline tool that outputs canonical form of schema&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/144&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/144&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/avro/src/main/java/org/apache/avro/SchemaNormalization.java b/lang/java/avro/src/main/java/org/apache/avro/SchemaNormalization.java&lt;br/&gt;
index 16d264258..cf8323992 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/main/java/org/apache/avro/SchemaNormalization.java&lt;br/&gt;
+++ b/lang/java/avro/src/main/java/org/apache/avro/SchemaNormalization.java&lt;br/&gt;
@@ -24,8 +24,8 @@&lt;br/&gt;
 import java.security.MessageDigest;&lt;br/&gt;
 import java.security.NoSuchAlgorithmException;&lt;/p&gt;

&lt;p&gt;-/** Collection of static methods for generating the cannonical form of&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* schemas (see 
{@link #toParsingForm}) &amp;#8211; and fingerprints of cannonical&lt;br/&gt;
+/** Collection of static methods for generating the canonical form of&lt;br/&gt;
+ * schemas (see {@link #toParsingForm}
&lt;p&gt;) &amp;#8211; and fingerprints of canonical&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;forms (
{@link #fingerprint}
&lt;p&gt;).&lt;br/&gt;
  */&lt;br/&gt;
 public class SchemaNormalization &lt;/p&gt;
{
diff --git a/lang/java/tools/src/main/java/org/apache/avro/tool/Main.java b/lang/java/tools/src/main/java/org/apache/avro/tool/Main.java
index 93c827ccd..7a82f41d2 100644
--- a/lang/java/tools/src/main/java/org/apache/avro/tool/Main.java
+++ b/lang/java/tools/src/main/java/org/apache/avro/tool/Main.java
@@ -61,7 +61,8 @@
         new TetherTool(),
         new TrevniCreateRandomTool(),
         new TrevniMetadataTool(),
-        new TrevniToJsonTool()
+        new TrevniToJsonTool(),
+        new SchemaNormalizationTool()
         }
&lt;p&gt;) {&lt;br/&gt;
       Tool prev = tools.put(tool.getName(), tool);&lt;br/&gt;
       if (prev != null) {&lt;br/&gt;
diff --git a/lang/java/tools/src/main/java/org/apache/avro/tool/SchemaNormalizationTool.java b/lang/java/tools/src/main/java/org/apache/avro/tool/SchemaNormalizationTool.java&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 000000000..1cd63c710&lt;/p&gt;
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;/dev/null&lt;br/&gt;
+++ b/lang/java/tools/src/main/java/org/apache/avro/tool/SchemaNormalizationTool.java&lt;br/&gt;
@@ -0,0 +1,47 @@&lt;br/&gt;
+package org.apache.avro.tool;&lt;br/&gt;
+&lt;br/&gt;
+import java.io.BufferedInputStream;&lt;br/&gt;
+import java.io.BufferedOutputStream;&lt;br/&gt;
+import java.io.InputStream;&lt;br/&gt;
+import java.io.PrintStream;&lt;br/&gt;
+import java.util.List;&lt;br/&gt;
+&lt;br/&gt;
+import joptsimple.OptionParser;&lt;br/&gt;
+&lt;br/&gt;
+import joptsimple.OptionSet;&lt;br/&gt;
+import org.apache.avro.Schema;&lt;br/&gt;
+import org.apache.avro.SchemaNormalization;&lt;br/&gt;
+&lt;br/&gt;
+public class SchemaNormalizationTool implements Tool {&lt;br/&gt;
+  @Override&lt;br/&gt;
+  public String getName() 
{ return &quot;schemacanonical&quot;; }
&lt;p&gt;+&lt;br/&gt;
+  @Override&lt;br/&gt;
+  public String getShortDescription() &lt;/p&gt;
{ return &quot;Converts an Avro Schema to its canonical form&quot;; }
&lt;p&gt;+&lt;br/&gt;
+  @Override&lt;br/&gt;
+  public int run(InputStream stdin, PrintStream out, PrintStream err, List&amp;lt;String&amp;gt; args) throws Exception &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+    OptionParser p = new OptionParser();+    OptionSet opts = p.parse(args.toArray(new String[0]));++    if (opts.nonOptionArguments().size() != 2) {
+      err.println(&quot;Expected 2 args: infile outfile (filenames or &apos;-&apos; for stdin/stdout)&quot;);
+      p.printHelpOn(err);
+      return 1;
+    }++    BufferedInputStream inStream = Util.fileOrStdin(args.get(0), stdin);+    BufferedOutputStream outStream = Util.fileOrStdout(args.get(1), out);++    Schema schema = new Schema.Parser().parse(inStream);++    String canonicalForm = SchemaNormalization.toParsingForm(schema);++    outStream.write(canonicalForm.getBytes());++    Util.close(inStream);+    Util.close(outStream);++    return 0;+  }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+}&lt;/p&gt;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16707702" author="jira-bot" created="Mon, 3 Dec 2018 19:48:11 +0000"  >&lt;p&gt;Commit d9d95871441b015353429585baa3ae821fdb39c1 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=erifo_impala_cfda&quot; class=&quot;user-hover&quot; rel=&quot;erifo_impala_cfda&quot;&gt;Erik Forsberg&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=d9d9587&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=d9d9587&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1939&quot; title=&quot;Add command line tool for generating canonical form of schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1939&quot;&gt;&lt;del&gt;AVRO-1939&lt;/del&gt;&lt;/a&gt;: Add commandline tool that outputs canonical form of schema&lt;/p&gt;</comment>
                            <comment id="16708509" author="githubbot" created="Tue, 4 Dec 2018 10:06:42 +0000"  >&lt;p&gt;iemejia opened a new pull request #399: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1939&quot; title=&quot;Add command line tool for generating canonical form of schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1939&quot;&gt;&lt;del&gt;AVRO-1939&lt;/del&gt;&lt;/a&gt;: Add missing Apache license header&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/399&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/399&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16708665" author="githubbot" created="Tue, 4 Dec 2018 13:05:33 +0000"  >&lt;p&gt;nandorKollar closed pull request #399: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1939&quot; title=&quot;Add command line tool for generating canonical form of schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1939&quot;&gt;&lt;del&gt;AVRO-1939&lt;/del&gt;&lt;/a&gt;: Add missing Apache license header&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/399&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/399&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/tools/src/main/java/org/apache/avro/tool/CatTool.java b/lang/java/tools/src/main/java/org/apache/avro/tool/CatTool.java&lt;br/&gt;
index 642b56371..2574b11a2 100644&lt;br/&gt;
&amp;#8212; a/lang/java/tools/src/main/java/org/apache/avro/tool/CatTool.java&lt;br/&gt;
+++ b/lang/java/tools/src/main/java/org/apache/avro/tool/CatTool.java&lt;br/&gt;
@@ -210,7 +210,7 @@ public String getName() {&lt;/p&gt;

&lt;p&gt;   @Override&lt;br/&gt;
   public String getShortDescription() &lt;/p&gt;
{
-    return &quot;extracts samples from files&quot;;
+    return &quot;Extracts samples from files&quot;;
   }

&lt;p&gt; }&lt;br/&gt;
diff --git a/lang/java/tools/src/main/java/org/apache/avro/tool/SchemaNormalizationTool.java b/lang/java/tools/src/main/java/org/apache/avro/tool/SchemaNormalizationTool.java&lt;br/&gt;
index 1cd63c710..28fb74b89 100644&lt;br/&gt;
&amp;#8212; a/lang/java/tools/src/main/java/org/apache/avro/tool/SchemaNormalizationTool.java&lt;br/&gt;
+++ b/lang/java/tools/src/main/java/org/apache/avro/tool/SchemaNormalizationTool.java&lt;br/&gt;
@@ -1,3 +1,20 @@&lt;br/&gt;
+/*&lt;br/&gt;
+ * Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
+ * or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
+ * distributed with this work for additional information&lt;br/&gt;
+ * regarding copyright ownership.  The ASF licenses this file&lt;br/&gt;
+ * to you under the Apache License, Version 2.0 (the&lt;br/&gt;
+ * &quot;License&quot;); you may not use this file except in compliance&lt;br/&gt;
+ * with the License.  You may obtain a copy of the License at&lt;br/&gt;
+ *&lt;br/&gt;
+ *     &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
+ *&lt;br/&gt;
+ * Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
+ * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
+ * See the License for the specific language governing permissions and&lt;br/&gt;
+ * limitations under the License.&lt;br/&gt;
+ */&lt;br/&gt;
 package org.apache.avro.tool;&lt;/p&gt;

&lt;p&gt; import java.io.BufferedInputStream;&lt;br/&gt;
@@ -12,9 +29,12 @@&lt;br/&gt;
 import org.apache.avro.Schema;&lt;br/&gt;
 import org.apache.avro.SchemaNormalization;&lt;/p&gt;

&lt;p&gt;+/**&lt;br/&gt;
+ * Utility to convert an Avro @&lt;/p&gt;
{Schema}
&lt;p&gt; to its canonical form.&lt;br/&gt;
+ */&lt;br/&gt;
 public class SchemaNormalizationTool implements Tool {&lt;br/&gt;
   @Override&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public String getName() 
{ return &quot;schemacanonical&quot;; }
&lt;p&gt;+  public String getName() &lt;/p&gt;
{ return &quot;canonical&quot;; }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   @Override&lt;br/&gt;
   public String getShortDescription() &lt;/p&gt;
{ return &quot;Converts an Avro Schema to its canonical form&quot;; }
&lt;p&gt;diff --git a/lang/java/tools/src/test/java/org/apache/avro/tool/TestMain.java b/lang/java/tools/src/test/java/org/apache/avro/tool/TestMain.java&lt;br/&gt;
index 5a2acc008..f4ee46d96 100644&lt;br/&gt;
&amp;#8212; a/lang/java/tools/src/test/java/org/apache/avro/tool/TestMain.java&lt;br/&gt;
+++ b/lang/java/tools/src/test/java/org/apache/avro/tool/TestMain.java&lt;br/&gt;
@@ -22,8 +22,8 @@&lt;br/&gt;
 import org.junit.Test;&lt;/p&gt;

&lt;p&gt; public class TestMain {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;@Test&lt;br/&gt;
   /** Make sure that tool descriptions fit in 80 characters. */&lt;br/&gt;
+  @Test&lt;br/&gt;
   public void testToolDescriptionLength() {&lt;br/&gt;
     Main m = new Main();&lt;br/&gt;
     for (Tool t : m.tools.values()) {&lt;br/&gt;
@@ -32,4 +32,22 @@ public void testToolDescriptionLength() {&lt;br/&gt;
       }&lt;br/&gt;
     }&lt;br/&gt;
   }&lt;br/&gt;
+&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Make sure that the tool name is not too long, otherwise space for&lt;br/&gt;
+   * description is too short because they are rebalanced in the CLI.&lt;br/&gt;
+   */&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testToolNameLength() {&lt;br/&gt;
+    // 13 chosen for backwards compatibility&lt;br/&gt;
+    final int MAX_NAME_LENGTH = 13;&lt;br/&gt;
+&lt;br/&gt;
+    Main m = new Main();&lt;br/&gt;
+    for (Tool t : m.tools.values()) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+      if (t.getName().length() &amp;gt; MAX_NAME_LENGTH) {
+        fail(&quot;Tool name too long (&quot; + t.getName().length() + &quot;): &quot; +
+          t.getName() + &quot;. Max length is: &quot; + MAX_NAME_LENGTH);
+      }+    }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+  }&lt;br/&gt;
 }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16708666" author="jira-bot" created="Tue, 4 Dec 2018 13:05:37 +0000"  >&lt;p&gt;Commit c5aa1d6962ee16812d8d8c19b167b1b256e8002f in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=iemejia&quot; class=&quot;user-hover&quot; rel=&quot;iemejia&quot;&gt;Isma&#235;l Mej&#237;a&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=c5aa1d6&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=c5aa1d6&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1939&quot; title=&quot;Add command line tool for generating canonical form of schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1939&quot;&gt;&lt;del&gt;AVRO-1939&lt;/del&gt;&lt;/a&gt;: Add missing Apache license header (#399)&lt;/p&gt;

&lt;p&gt;Add missing Apache license header and fix failing test case for schema normalization tool&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 Oct 2016 12:29:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35anz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1940] avrogencpp, scoped enums or c++11 enum class</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1940</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It would be nice if avrogencpp could generated scoped enums.&lt;/p&gt;

&lt;p&gt;Either with C++11 enum class or just adding an additional namespace.&lt;/p&gt;

&lt;p&gt;This sort of relates to the issue I opened a few days ago: #&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1936&quot; title=&quot;avrogencpp, includes should have more guards or generate more headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1936&quot;&gt;AVRO-1936&lt;/a&gt; in that one way this has been gotten around in the existing AvrogencppTests.cc is by generating one namespace per schema.&lt;/p&gt;

&lt;p&gt;This of course could be a breaking change depending how it is implemented.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13014771">AVRO-1940</key>
            <summary>avrogencpp, scoped enums or c++11 enum class</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="amoriarty">Alexander Moriarty</assignee>
                                    <reporter username="amoriarty">Alexander Moriarty</reporter>
                        <labels>
                    </labels>
                <created>Mon, 24 Oct 2016 15:52:12 +0000</created>
                <updated>Thu, 20 Dec 2018 21:06:39 +0000</updated>
                            <resolved>Thu, 20 Dec 2018 21:06:39 +0000</resolved>
                                                    <fixVersion>1.9.0</fixVersion>
                                    <component>c++</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="15602461" author="amoriarty" created="Mon, 24 Oct 2016 16:18:08 +0000"  >&lt;p&gt;Proposal: &lt;a href=&quot;https://github.com/apache/avro/pull/145&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/145&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15602636" author="githubbot" created="Mon, 24 Oct 2016 17:25:56 +0000"  >&lt;p&gt;Github user moriarty closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/145&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/145&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15603204" author="githubbot" created="Mon, 24 Oct 2016 20:59:40 +0000"  >&lt;p&gt;GitHub user moriarty opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/146&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/146&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1940&quot; title=&quot;avrogencpp, scoped enums or c++11 enum class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1940&quot;&gt;&lt;del&gt;AVRO-1940&lt;/del&gt;&lt;/a&gt;: C++: scope enums into own namespaces&lt;/p&gt;

&lt;p&gt;    Adds option to add namespace around all enums with the same name as the enum.&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1940&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1940&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    There are otherways to do this (c++11) but this way introduces less changes and doesn&apos;t break anything.&lt;/p&gt;

&lt;p&gt;    Originally this was PR #145 but I have cherry-picked and cleaned up the commit on top of master instead of on top of PR #142 to make it easier to review. This code passes the original tests, but doesn&apos;t add any additional tests.&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/moriarty/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/moriarty/avro&lt;/a&gt; avro-1940/cpp-namespace-scoped-enums/dev&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/146.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/146.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #146&lt;/p&gt;

&lt;hr /&gt;

&lt;hr /&gt;</comment>
                            <comment id="15872960" author="thiru_mg" created="Sat, 18 Feb 2017 03:31:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1958&quot; title=&quot;The generated C++ code doesn&amp;#39;t compile if there are several enums with identical item names.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1958&quot;&gt;&lt;del&gt;AVRO-1958&lt;/del&gt;&lt;/a&gt; offers a more general approach. We&apos;ll combine this and that issue here.&lt;/p&gt;</comment>
                            <comment id="16362893" author="githubbot" created="Tue, 13 Feb 2018 19:09:12 +0000"  >&lt;p&gt;leppardb commented on issue #146: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1940&quot; title=&quot;avrogencpp, scoped enums or c++11 enum class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1940&quot;&gt;&lt;del&gt;AVRO-1940&lt;/del&gt;&lt;/a&gt;: C++: scope enums into own namespaces&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/146#issuecomment-365371103&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/146#issuecomment-365371103&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Looked at your code. It successfully addresses issue &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1936&quot; title=&quot;avrogencpp, includes should have more guards or generate more headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1936&quot;&gt;AVRO-1936&lt;/a&gt;. However I think you might have misunderstood the request in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1940&quot; title=&quot;avrogencpp, scoped enums or c++11 enum class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1940&quot;&gt;&lt;del&gt;AVRO-1940&lt;/del&gt;&lt;/a&gt;. The requester wanted support for c++11 scoped enum feature. i.e. enums declared as &quot;enum class&quot;. &lt;br/&gt;
   I have a local changeset that does enum class and will post it for review as soon as I figure out how.  I think you can say your patch addresses 1936 but you should not mark 1940 resolved.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16363238" author="githubbot" created="Tue, 13 Feb 2018 23:47:59 +0000"  >&lt;p&gt;moriarty commented on issue #146: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1940&quot; title=&quot;avrogencpp, scoped enums or c++11 enum class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1940&quot;&gt;&lt;del&gt;AVRO-1940&lt;/del&gt;&lt;/a&gt;: C++: scope enums into own namespaces&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/146#issuecomment-365445172&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/146#issuecomment-365445172&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   I made the requist in 1940. it was for either scoped enums OR c++11 enums.&lt;/p&gt;

&lt;p&gt;   But in general the avrocpp doesn&apos;t seem to use C++11 so I just went with scoped enums.&lt;br/&gt;
   I think there is another issue for C++11 support.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16363258" author="githubbot" created="Wed, 14 Feb 2018 00:08:54 +0000"  >&lt;p&gt;moriarty commented on issue #146: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1940&quot; title=&quot;avrogencpp, scoped enums or c++11 enum class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1940&quot;&gt;&lt;del&gt;AVRO-1940&lt;/del&gt;&lt;/a&gt;: C++: scope enums into own namespaces&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/146#issuecomment-365445172&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/146#issuecomment-365445172&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   I made the request in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1940&quot; title=&quot;avrogencpp, scoped enums or c++11 enum class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1940&quot;&gt;&lt;del&gt;AVRO-1940&lt;/del&gt;&lt;/a&gt;. it was for either scoped enums OR c++11 enums.&lt;/p&gt;

&lt;p&gt;   But in general the avrocpp doesn&apos;t seem to use C++11 so I just went with scoped enums.&lt;br/&gt;
   I think there is another issue for C++11 support.&lt;/p&gt;

&lt;p&gt;   Which is why the commit message says there is another way to do this, but would require more changes.&lt;/p&gt;

&lt;p&gt;   #142 addresses &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1936&quot; title=&quot;avrogencpp, includes should have more guards or generate more headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1936&quot;&gt;AVRO-1936&lt;/a&gt;.&lt;br/&gt;
   #146 addresses &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1940&quot; title=&quot;avrogencpp, scoped enums or c++11 enum class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1940&quot;&gt;&lt;del&gt;AVRO-1940&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;   They should be one commit each.&lt;/p&gt;

&lt;p&gt;   This GitHub pull request show&apos;s a few confusing &quot;@moriarty pushed a commit that referenced this pull request&quot; but those are because I&apos;ve pushed my two pull requests #142 and (this) #146 into a topic to further test these patches, which we&apos;re applying in production for some time, because there was no reply to this pull request from Oct 2016 until May 2017.&lt;/p&gt;

&lt;p&gt;   We then did get some feedback, but I haven&apos;t had a chance to figure out how to test the compile time option.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16726216" author="dkulp" created="Thu, 20 Dec 2018 21:06:39 +0000"  >&lt;p&gt;1.9 is using c++11 and now uses enum classes.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="13020061">AVRO-1958</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 24 Oct 2016 17:25:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35b3z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1941] avrogencpp: unlike java, c++ generated code doesn&apos;t include own schema</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1941</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;All the classes generated for java include a copy of their schema. The C++ classes do not.&lt;/p&gt;

&lt;p&gt;Every generated java class has getClassSchema().&lt;br/&gt;
Something similar for C++ would be convenient.&lt;/p&gt;

&lt;p&gt;During generation, the schema is available with n-&amp;gt;printJson(..) which can then be passed through boost::algorithm::erase_all() to remove whitespace and new lines, and then boost::algorithm::replace_all() to add escape characters back.&lt;br/&gt;
and then given to avro::compileJsonSchemaFromString&lt;/p&gt;
</description>
                <environment></environment>
        <key id="13015031">AVRO-1941</key>
            <summary>avrogencpp: unlike java, c++ generated code doesn&apos;t include own schema</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="amoriarty">Alexander Moriarty</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Oct 2016 10:10:57 +0000</created>
                <updated>Thu, 3 Nov 2016 11:08:54 +0000</updated>
                                            <version>1.8.1</version>
                                                    <component>c++</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="15605151" author="githubbot" created="Tue, 25 Oct 2016 12:13:58 +0000"  >&lt;p&gt;GitHub user moriarty opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/147&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/147&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1941&quot; title=&quot;avrogencpp: unlike java, c++ generated code doesn&amp;#39;t include own schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1941&quot;&gt;AVRO-1941&lt;/a&gt;: C++: adds _&lt;em&gt;SCHEMA&lt;/em&gt;_ in generated code&lt;/p&gt;

&lt;p&gt;    This adds an ```avro::ValidSchema _&lt;em&gt;SCHEMA&lt;/em&gt;_``` to each generated struct.&lt;/p&gt;

&lt;p&gt;    ```_&lt;em&gt;SCHEMA&lt;/em&gt;_``` is initialized in constructor using ```avro::compileJsonSchemaFromString```.&lt;/p&gt;

&lt;p&gt;    This is a proposal for convenient way to access a schema similar to the generated Java classes, which have:&lt;br/&gt;
    ```&lt;br/&gt;
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(...);&lt;br/&gt;
    public static org.apache.avro.Schema getClassSchema() &lt;/p&gt;
{return SCHEMA$; }&lt;br/&gt;
    ```&lt;br/&gt;
    &lt;br/&gt;
    This is a proposal and doesn&apos;t add ```_&lt;em&gt;SCHEMA&lt;/em&gt;_``` to enums, which the Java generated classes do have. I couldn&apos;t think of a c++ way to do that, and am still waiting on feedback for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1940&quot; title=&quot;avrogencpp, scoped enums or c++11 enum class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1940&quot;&gt;&lt;del&gt;AVRO-1940&lt;/del&gt;&lt;/a&gt;(&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1940&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1940&lt;/a&gt;) or GH apache/avro#146&lt;br/&gt;
&lt;br/&gt;
You can merge this pull request into a Git repository by running:&lt;br/&gt;
&lt;br/&gt;
    $ git pull &lt;a href=&quot;https://github.com/moriarty/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/moriarty/avro&lt;/a&gt; avro-1941/cpp-include-schema-in-generated-structs/dev&lt;br/&gt;
&lt;br/&gt;
Alternatively you can review and apply these changes as the patch at:&lt;br/&gt;
&lt;br/&gt;
    &lt;a href=&quot;https://github.com/apache/avro/pull/147.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/147.patch&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;br/&gt;
&lt;br/&gt;
    This closes #147&lt;br/&gt;
    &lt;br/&gt;
----&lt;br/&gt;
commit 945b60106b1f775afceb5006575c52e9af893f97&lt;br/&gt;
Author: Alexander Moriarty &amp;lt;alexander.moriarty@tba.nl&amp;gt;&lt;br/&gt;
Date:   2016-10-25T11:50:49Z&lt;br/&gt;
&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1941&quot; title=&quot;avrogencpp: unlike java, c++ generated code doesn&amp;#39;t include own schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1941&quot;&gt;AVRO-1941&lt;/a&gt;: C++: adds _&lt;em&gt;SCHEMA&lt;/em&gt;_ in generated code&lt;br/&gt;
    &lt;br/&gt;
    This adds an avro::ValidSchema _&lt;em&gt;SCHEMA&lt;/em&gt;_ to each generated struct.&lt;br/&gt;
    &lt;br/&gt;
    _&lt;em&gt;SCHEMA&lt;/em&gt;_ is initialized in constructor using avro::compileJsonSchemaFromString.&lt;br/&gt;
    &lt;br/&gt;
    This is a proposal for convenient way to access a schema similar to the generated Java classes, which have:&lt;br/&gt;
    ```&lt;br/&gt;
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(...);&lt;br/&gt;
    public static org.apache.avro.Schema getClassSchema() {return SCHEMA$; }
&lt;p&gt;    ```&lt;/p&gt;

&lt;p&gt;    This is a proposal and doesn&apos;t add _&lt;em&gt;SCHEMA&lt;/em&gt;_ to enums, which the Java generated classes do have. I couldn&apos;t think of a c++ way to do that, and am still waiting on feedback for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1940&quot; title=&quot;avrogencpp, scoped enums or c++11 enum class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1940&quot;&gt;&lt;del&gt;AVRO-1940&lt;/del&gt;&lt;/a&gt; or GH apache/avro#146&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15629077" author="githubbot" created="Wed, 2 Nov 2016 14:08:06 +0000"  >&lt;p&gt;Github user moriarty closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/147&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/147&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15629311" author="githubbot" created="Wed, 2 Nov 2016 15:32:22 +0000"  >&lt;p&gt;GitHub user moriarty reopened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/147&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/147&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1941&quot; title=&quot;avrogencpp: unlike java, c++ generated code doesn&amp;#39;t include own schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1941&quot;&gt;AVRO-1941&lt;/a&gt;: C++: adds _&lt;em&gt;SCHEMA&lt;/em&gt;_ in generated code&lt;/p&gt;

&lt;p&gt;    This adds an `avro::ValidSchema _&lt;em&gt;SCHEMA&lt;/em&gt;_` to each generated struct.&lt;/p&gt;

&lt;p&gt;    `_&lt;em&gt;SCHEMA&lt;/em&gt;_` is initialized in constructor using `avro::compileJsonSchemaFromString`.&lt;/p&gt;

&lt;p&gt;    This is a proposal for convenient way to access a schema similar to the generated Java classes, which have:&lt;/p&gt;

&lt;p&gt;    ```&lt;br/&gt;
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(...);&lt;br/&gt;
    public static org.apache.avro.Schema getClassSchema() &lt;/p&gt;
{return SCHEMA$; }&lt;br/&gt;
    ```&lt;br/&gt;
    &lt;br/&gt;
    This is a proposal and doesn&apos;t add `_&lt;em&gt;SCHEMA&lt;/em&gt;_` to enums, which the Java generated classes do have. I couldn&apos;t think of a c++ way to do that, and am still waiting on feedback for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1940&quot; title=&quot;avrogencpp, scoped enums or c++11 enum class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1940&quot;&gt;&lt;del&gt;AVRO-1940&lt;/del&gt;&lt;/a&gt;(&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1940&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1940&lt;/a&gt;) or GH apache/avro#146&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
You can merge this pull request into a Git repository by running:&lt;br/&gt;
&lt;br/&gt;
    $ git pull &lt;a href=&quot;https://github.com/moriarty/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/moriarty/avro&lt;/a&gt; avro-1941/cpp-include-schema-in-generated-structs/dev&lt;br/&gt;
&lt;br/&gt;
Alternatively you can review and apply these changes as the patch at:&lt;br/&gt;
&lt;br/&gt;
    &lt;a href=&quot;https://github.com/apache/avro/pull/147.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/147.patch&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;br/&gt;
&lt;br/&gt;
    This closes #147&lt;br/&gt;
    &lt;br/&gt;
----&lt;br/&gt;
commit 945b60106b1f775afceb5006575c52e9af893f97&lt;br/&gt;
Author: Alexander Moriarty &amp;lt;alexander.moriarty@tba.nl&amp;gt;&lt;br/&gt;
Date:   2016-10-25T11:50:49Z&lt;br/&gt;
&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1941&quot; title=&quot;avrogencpp: unlike java, c++ generated code doesn&amp;#39;t include own schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1941&quot;&gt;AVRO-1941&lt;/a&gt;: C++: adds _&lt;em&gt;SCHEMA&lt;/em&gt;_ in generated code&lt;br/&gt;
    &lt;br/&gt;
    This adds an avro::ValidSchema _&lt;em&gt;SCHEMA&lt;/em&gt;_ to each generated struct.&lt;br/&gt;
    &lt;br/&gt;
    _&lt;em&gt;SCHEMA&lt;/em&gt;_ is initialized in constructor using avro::compileJsonSchemaFromString.&lt;br/&gt;
    &lt;br/&gt;
    This is a proposal for convenient way to access a schema similar to the generated Java classes, which have:&lt;br/&gt;
    ```&lt;br/&gt;
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(...);&lt;br/&gt;
    public static org.apache.avro.Schema getClassSchema() {return SCHEMA$; }
&lt;p&gt;    ```&lt;/p&gt;

&lt;p&gt;    This is a proposal and doesn&apos;t add _&lt;em&gt;SCHEMA&lt;/em&gt;_ to enums, which the Java generated classes do have. I couldn&apos;t think of a c++ way to do that, and am still waiting on feedback for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1940&quot; title=&quot;avrogencpp, scoped enums or c++11 enum class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1940&quot;&gt;&lt;del&gt;AVRO-1940&lt;/del&gt;&lt;/a&gt; or GH apache/avro#146&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15632396" author="githubbot" created="Thu, 3 Nov 2016 11:08:54 +0000"  >&lt;p&gt;Github user moriarty closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/147&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/147&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 25 Oct 2016 12:13:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 11 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35cpr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
