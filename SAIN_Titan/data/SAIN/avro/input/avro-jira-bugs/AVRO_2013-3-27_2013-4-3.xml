<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:18:29 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2013-3-27+AND+created+%3C%3D+2013-4-3+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="1" total="1"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1285] Avro schema compile does not support circular reference</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1285</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;While declaring a Schema, doing a circular reference is not possible if the Schema for the external reference is in another file. Attached is a project that provides 2 schemas that exhibits this missing feature.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12640105">AVRO-1285</key>
            <summary>Avro schema compile does not support circular reference</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="viji_r">Viji</reporter>
                        <labels>
                    </labels>
                <created>Mon, 1 Apr 2013 10:49:14 +0000</created>
                <updated>Mon, 31 Aug 2015 14:18:19 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13639809" author="cutting" created="Tue, 23 Apr 2013 23:18:13 +0000"  >&lt;p&gt;This is actually possible from Java (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-872&quot; title=&quot;Allow interdependancies across IDL schema imports&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-872&quot;&gt;&lt;del&gt;AVRO-872&lt;/del&gt;&lt;/a&gt;), the command line (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-877&quot; title=&quot;Support compiling multiple input schemas and protocols&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-877&quot;&gt;&lt;del&gt;AVRO-877&lt;/del&gt;&lt;/a&gt;), or from a Maven task (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1188&quot; title=&quot;External Schema Imports via AVSC Schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1188&quot;&gt;&lt;del&gt;AVRO-1188&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13650671" author="houckman" created="Tue, 7 May 2013 10:16:26 +0000"  >&lt;p&gt;Hey Doug, the three cases sited appear to apply to external references, not circular references.  This Jira ticket (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1285&quot; title=&quot;Avro schema compile does not support circular reference&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1285&quot;&gt;AVRO-1285&lt;/a&gt;) was intended for the case with schema A refers to schema B AND schema B refers back to schema A.  Am I missing something?&lt;/p&gt;</comment>
                            <comment id="13650710" author="houckman" created="Tue, 7 May 2013 10:54:38 +0000"  >&lt;p&gt;Thinking a bit more about this request.... I am not sure it is a very good idea.  It is simple, of course, to see how this works from a Java implementation.  Java already supports circular references, so I thought maybe Avro could as well.  However, Avro is not Java.  Just consider the &apos;getSchema().toString()&apos; that this would cause.  Normally, you would get the completely de-referenced  schema of the object.  If Avro supported circular references, this would be infinitely long, continually bouncing back and forth between the references.  Changes could be made to still support how that is represented, but I am not sure I like the impact.&lt;/p&gt;

&lt;p&gt;I think I am the original submitter of this ticket, via Viji.  If that is the case, I respectfully request closure of this issue... it just seems like a bad idea.&lt;/p&gt;</comment>
                            <comment id="13651326" author="cutting" created="Tue, 7 May 2013 21:30:04 +0000"  >&lt;p&gt;Sorry, I missed the &quot;circular&quot; part in the original description!&lt;/p&gt;

&lt;p&gt;Note that Avro can actually parse print a circular schema as a finite expression.&lt;/p&gt;

&lt;p&gt;For example, your A can be defined as:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;A&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[
    {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;x&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;B&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;y&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;A&quot;&lt;/span&gt;}
  ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and B can either be defined as a standalone schema, with:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;B&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[
    {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;y&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;A&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;x&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;B&quot;&lt;/span&gt;}
  ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or, in the context of the above definition of A (using &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-872&quot; title=&quot;Allow interdependancies across IDL schema imports&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-872&quot;&gt;&lt;del&gt;AVRO-872&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-877&quot; title=&quot;Support compiling multiple input schemas and protocols&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-877&quot;&gt;&lt;del&gt;AVRO-877&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1188&quot; title=&quot;External Schema Imports via AVSC Schema&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1188&quot;&gt;&lt;del&gt;AVRO-1188&lt;/del&gt;&lt;/a&gt;), as:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;B&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;y&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;A&quot;&lt;/span&gt;}]}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So A and B can be defined in separate files, but at least one must currently include the definition of the other.  Changing the parser to fix this is possible, but perhaps not trivial.&lt;/p&gt;</comment>
                            <comment id="14247517" author="sachingoyal" created="Tue, 16 Dec 2014 00:47:32 +0000"  >&lt;p&gt;There is an old ticket for circular references in the code as well : &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-695&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-695&lt;/a&gt;&lt;br/&gt;
You might want to use its patch locally if you need to support circular refs in data as well.&lt;/p&gt;</comment>
                            <comment id="14524424" author="zolyfarkas" created="Sat, 2 May 2015 01:17:48 +0000"  >&lt;p&gt;Although Doug&apos;s example works with avsc, it cannot be defined in advl. Is there any effort to improve the advl to support what can be done in avsc? &lt;/p&gt;</comment>
                            <comment id="14527491" author="zolyfarkas" created="Mon, 4 May 2015 22:39:54 +0000"  >&lt;p&gt;I have written a relative simple self contained recursive schema:&lt;/p&gt;

&lt;p&gt;{&quot;type&quot;:&quot;record&quot;,&quot;name&quot;:&quot;SampleNode&quot;,&quot;namespace&quot;:&quot;org.spf4j.ssdump2.avro&quot;,&lt;br/&gt;
 &quot;fields&quot;:[&lt;br/&gt;
    &lt;/p&gt;
{&quot;name&quot;:&quot;count&quot;,&quot;type&quot;:&quot;int&quot;,&quot;default&quot;:0}
&lt;p&gt;,&lt;br/&gt;
    {&quot;name&quot;:&quot;subNodes&quot;,&quot;type&quot;:&lt;br/&gt;
       {&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&lt;br/&gt;
           &quot;type&quot;:&quot;record&quot;,&quot;name&quot;:&quot;SamplePair&quot;,&lt;br/&gt;
           &quot;fields&quot;:[&lt;br/&gt;
              {&quot;name&quot;:&quot;method&quot;,&quot;type&quot;:&lt;br/&gt;
                  {&quot;type&quot;:&quot;record&quot;,&quot;name&quot;:&quot;Method&quot;,&lt;br/&gt;
                  &quot;fields&quot;:[&lt;br/&gt;
                     {&quot;name&quot;:&quot;declaringClass&quot;,&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;avro.java.string&quot;:&quot;String&quot;}},&lt;br/&gt;
                     {&quot;name&quot;:&quot;methodName&quot;,&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;avro.java.string&quot;:&quot;String&quot;}}&lt;br/&gt;
                  ]}},&lt;br/&gt;
              &lt;/p&gt;
{&quot;name&quot;:&quot;node&quot;,&quot;type&quot;:&quot;SampleNode&quot;}
&lt;p&gt;]}}}]}&lt;/p&gt;

&lt;p&gt;Attempting to serialize/deserialize a SampleNode object generated from this schema fails with a NPE in Parser.java:86&lt;br/&gt;
here is the serialization/deserialization code that fails:&lt;br/&gt;
    @Test&lt;br/&gt;
    public void testRw() throws IOException {&lt;br/&gt;
        final SampleNode terminal = SampleNode.newBuilder().setCount(1).setSubNodes(Collections.EMPTY_LIST).build();&lt;br/&gt;
        final Method method = Method.newBuilder().setMethodName(&quot;test&quot;).setDeclaringClass(&quot;test&quot;).build();&lt;br/&gt;
        final SamplePair samplePair = SamplePair.newBuilder()&lt;br/&gt;
                .setMethod(method)&lt;br/&gt;
                .setNode(terminal).build();&lt;br/&gt;
        SampleNode data = SampleNode.newBuilder().setCount(10)&lt;br/&gt;
                .setSubNodes(Arrays.asList(samplePair)).build();&lt;br/&gt;
        try (ByteArrayBuilder bab = new ByteArrayBuilder()) &lt;/p&gt;
{
            SpecificDatumWriter&amp;lt;SampleNode&amp;gt; writer = new SpecificDatumWriter&amp;lt;&amp;gt;(data.getSchema());
            final BinaryEncoder directBinaryEncoder = EncoderFactory.get().directBinaryEncoder(bab, null);
            writer.write(data, directBinaryEncoder);
            directBinaryEncoder.flush();
            ByteArrayInputStream bis = new ByteArrayInputStream(bab.getBuffer(), 0, bab.size());
            SpecificDatumReader&amp;lt;SampleNode&amp;gt; reader = new SpecificDatumReader&amp;lt;&amp;gt;(data.getSchema());
            BinaryDecoder directBinaryDecoder = DecoderFactory.get().directBinaryDecoder(bis, null);
            SampleNode read = reader.read(null, directBinaryDecoder);
            Assert.assertEquals(read, data);
        }
&lt;p&gt;    }&lt;/p&gt;</comment>
                            <comment id="14528911" author="zolyfarkas" created="Tue, 5 May 2015 17:53:39 +0000"  >&lt;p&gt;By digging into this, it looks like a bug in the Symbol tree flattening code.&lt;br/&gt;
What is the purpose on this flattening?&lt;/p&gt;</comment>
                            <comment id="14529359" author="zolyfarkas" created="Tue, 5 May 2015 21:54:09 +0000"  >&lt;p&gt;Created: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1667&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1667&lt;/a&gt; &lt;/p&gt;</comment>
                            <comment id="14540657" author="zolyfarkas" created="Tue, 12 May 2015 20:35:45 +0000"  >&lt;p&gt;I went ahead implemented circular definition support in IDL, would be something useful to integrate.&lt;br/&gt;
details at: &lt;a href=&quot;https://github.com/zolyfarkas/avro/commit/210c50105717149f3daa39b8d4160b8548b8e363&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/zolyfarkas/avro/commit/210c50105717149f3daa39b8d4160b8548b8e363&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14723452" author="zolyfarkas" created="Mon, 31 Aug 2015 14:18:19 +0000"  >&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1723&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1723&lt;/a&gt; for IDL forward declarations...&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12576366" name="multipass.tar" size="20480" author="viji_r" created="Mon, 1 Apr 2013 10:50:16 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 23 Apr 2013 23:18:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>320568</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 21 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1jb7j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>320909</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
