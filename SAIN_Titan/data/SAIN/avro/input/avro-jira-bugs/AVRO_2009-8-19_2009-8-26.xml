<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:12:35 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2009-8-19+AND+created+%3C%3D+2009-8-26+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="6" total="6"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-101] unable to work with nested classes and reflection based API</title>
                <link>https://issues.apache.org/jira/browse/AVRO-101</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It is currently not possible to work with nested classes and the reflection API. Only the package and classname are recorded. The test case that I&apos;ll attach to this issues writes this as the schema: {&quot;type&quot;:&quot;record&quot;,&quot;name&quot;:&quot;BazRecord&quot;,&quot;namespace&quot;:&quot;org.apache.avro&quot;,&quot;fields&quot;:[&lt;/p&gt;
{&quot;name&quot;:&quot;nbr&quot;,&quot;type&quot;:&quot;int&quot;}
&lt;p&gt;]}, even though it is a nested class. The reader then tries to instantiate org.apache.avro.BazRecord, while it should instantiate org.apache.avro.TestDataFileReflect$BazRecord.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12433409">AVRO-101</key>
            <summary>unable to work with nested classes and reflection based API</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ehillenius">Eelco Hillenius</assignee>
                                    <reporter username="ehillenius">Eelco Hillenius</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Aug 2009 04:12:26 +0000</created>
                <updated>Wed, 14 Oct 2009 18:53:04 +0000</updated>
                            <resolved>Fri, 25 Sep 2009 21:56:06 +0000</resolved>
                                    <version>1.0.0</version>
                    <version>1.1.0</version>
                                    <fixVersion>1.2.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12744874" author="ehillenius" created="Wed, 19 Aug 2009 04:36:50 +0000"  >&lt;p&gt;Uploaded unit test that shows the issue.&lt;/p&gt;</comment>
                            <comment id="12759768" author="cutting" created="Fri, 25 Sep 2009 21:55:30 +0000"  >&lt;p&gt;This was fixed as a part of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-120&quot; title=&quot;specific and reflect APIs handle packages poorly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-120&quot;&gt;&lt;del&gt;AVRO-120&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="12759770" author="cutting" created="Fri, 25 Sep 2009 21:56:06 +0000"  >&lt;p&gt;I committed these tests.  Thanks, Eelco!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12436446">AVRO-120</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12416963" name="AVRO-101.patch" size="2001" author="ehillenius" created="Wed, 19 Aug 2009 04:13:40 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 25 Sep 2009 21:55:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94429</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 18 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dy93:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79479</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-102] FooRecord and BarRecord need apache headers</title>
                <link>https://issues.apache.org/jira/browse/AVRO-102</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Sorry, forgot to include those in the patch I supplied for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-95&quot; title=&quot;mixing multiple types in one data file using reflection is not supported&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-95&quot;&gt;&lt;del&gt;AVRO-95&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12433410">AVRO-102</key>
            <summary>FooRecord and BarRecord need apache headers</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21148&amp;avatarType=issuetype">Task</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.svg">Trivial</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ehillenius">Eelco Hillenius</assignee>
                                    <reporter username="ehillenius">Eelco Hillenius</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Aug 2009 04:15:42 +0000</created>
                <updated>Wed, 16 Sep 2009 22:31:46 +0000</updated>
                            <resolved>Fri, 21 Aug 2009 22:44:48 +0000</resolved>
                                    <version>1.0.0</version>
                    <version>1.1.0</version>
                                    <fixVersion>1.1.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12746318" author="cutting" created="Fri, 21 Aug 2009 22:44:48 +0000"  >&lt;p&gt;I committed this. Thanks, Eelco. (We really need to run RAT as a part of &apos;ant test&apos;.) &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12416964" name="AVRO-102.patch" size="2250" author="ehillenius" created="Wed, 19 Aug 2009 04:16:35 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 21 Aug 2009 22:44:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94430</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 23 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dy9b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79480</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-103] Record objects from different packages is not supported with the reflection API</title>
                <link>https://issues.apache.org/jira/browse/AVRO-103</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently it is not possible to work with record objects that come from different packages with the reflection API. ReflectDatumReader&apos;s constructors require a package name to be passed in, which it later uses when trying to instantiate the data it reads. Not sure where that requirement comes from, since the namespace/ package is actually recorded as part of the meta data.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12433411">AVRO-103</key>
            <summary>Record objects from different packages is not supported with the reflection API</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="ehillenius">Eelco Hillenius</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Aug 2009 04:34:27 +0000</created>
                <updated>Wed, 14 Oct 2009 18:53:04 +0000</updated>
                            <resolved>Wed, 30 Sep 2009 21:54:23 +0000</resolved>
                                    <version>1.0.0</version>
                    <version>1.1.0</version>
                                    <fixVersion>1.2.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12744873" author="ehillenius" created="Wed, 19 Aug 2009 04:36:05 +0000"  >&lt;p&gt;Uploaded unit test to help with this feature request.&lt;/p&gt;</comment>
                            <comment id="12746315" author="cutting" created="Fri, 21 Aug 2009 22:43:51 +0000"  >&lt;p&gt;I committed this.  Thanks, Eelco.  (We really need to run RAT as a part of &apos;ant test&apos;.)&lt;/p&gt;</comment>
                            <comment id="12746317" author="cutting" created="Fri, 21 Aug 2009 22:44:28 +0000"  >&lt;p&gt;Oops.  Wrong issue.&lt;/p&gt;</comment>
                            <comment id="12761019" author="cutting" created="Wed, 30 Sep 2009 21:54:23 +0000"  >&lt;p&gt;This was fixed as a part of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-120&quot; title=&quot;specific and reflect APIs handle packages poorly&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-120&quot;&gt;&lt;del&gt;AVRO-120&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12416965" name="AVRO-103.patch" size="6309" author="ehillenius" created="Wed, 19 Aug 2009 04:36:05 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 21 Aug 2009 22:43:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94431</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 17 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dy9j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79481</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-104] Reflective API can&apos;t handle nulls</title>
                <link>https://issues.apache.org/jira/browse/AVRO-104</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It is currently not possible to have fields with null values when using the reflective API.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12433540">AVRO-104</key>
            <summary>Reflective API can&apos;t handle nulls</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ehillenius">Eelco Hillenius</assignee>
                                    <reporter username="ehillenius">Eelco Hillenius</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Aug 2009 07:07:20 +0000</created>
                <updated>Wed, 16 Sep 2009 22:31:46 +0000</updated>
                            <resolved>Tue, 25 Aug 2009 22:53:29 +0000</resolved>
                                    <version>1.0.0</version>
                    <version>1.1.0</version>
                                    <fixVersion>1.1.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12745334" author="ehillenius" created="Thu, 20 Aug 2009 07:09:05 +0000"  >&lt;p&gt;Attached patch for TestReflect to demonstrate the issue&lt;/p&gt;</comment>
                            <comment id="12745668" author="cutting" created="Thu, 20 Aug 2009 21:27:52 +0000"  >&lt;p&gt;This is another part of AVRO--35.&lt;/p&gt;

&lt;p&gt;In Java, any object is permitted to be null, while in Avro that must be specified as a union.  So, if our goal is to exactly mimic Java, the reflect API would generate unions with null for nearly every field.  Currently Avro reflect instead assumes that nulls are not generally used for arbitrary objects, since they require all client code to perform null checks, which is not a great API.&lt;/p&gt;

&lt;p&gt;This is a special case of a more general problem with reflection, that we cannot infer unions.  For example, in Java one might specify an abstract base class as the type of a field, then use concrete subclasses when actually setting the field.  The correct Avro type for such fields would be a union of the subclasses, but the reflect API has no way of knowing that.&lt;/p&gt;</comment>
                            <comment id="12746142" author="ehillenius" created="Fri, 21 Aug 2009 18:48:46 +0000"  >&lt;p&gt;I see. Well, at least those unions are consistently implemented... nice!&lt;/p&gt;

&lt;p&gt;It would be great - for me, but I&apos;m sure for everyone else who wants to use this with Java objects - to be able to workaround this issue. It&apos;s kind of hard to do that elegantly, since ReflectData is implemented as a utility class. I&apos;m submitting a patch that is a bit of a hack; it won&apos;t win prices for elegancy, but it works. I hope this patch is acceptable. Otherwise, I think it would be nice to implement reflection through a separate abstraction where you allow clients to plug in their own implementation in Avro. That would be a more elegant solution, though otoh it will make the framework more verbose/ complex without much actual benefit.&lt;/p&gt;

&lt;p&gt;WDYT?&lt;/p&gt;</comment>
                            <comment id="12746144" author="ehillenius" created="Fri, 21 Aug 2009 18:52:29 +0000"  >&lt;p&gt;Uploaded a patch that implements a workaround that enables clients to &apos;fix&apos; types to schemas upfront with ReflectData. As the patched test case shows, this can be used to fix base types to be a union with NULL so that properties that are null can be supported if that&apos;s what the user wants.&lt;/p&gt;</comment>
                            <comment id="12746163" author="ehillenius" created="Fri, 21 Aug 2009 19:07:04 +0000"  >&lt;p&gt;actually, that doesn&apos;t work either. If a field is a union with a null, it&apos;s value is always written out as a null.&lt;/p&gt;</comment>
                            <comment id="12746166" author="ehillenius" created="Fri, 21 Aug 2009 19:10:32 +0000"  >&lt;p&gt;updated test case to test with a record with null, and one with not null. Unfortunately, currently a union with NULL results in the field always being written as null.&lt;/p&gt;

&lt;p&gt;I think that is a bug, but maybe I&apos;m overlooking something?&lt;/p&gt;</comment>
                            <comment id="12746355" author="ehillenius" created="Fri, 21 Aug 2009 23:18:43 +0000"  >&lt;p&gt;Also wondering whether WeakHashMap might be a problem. I wonder if using WeakHashMap is that much of an advantage when the keys are Type objects.&lt;/p&gt;</comment>
                            <comment id="12747006" author="cutting" created="Mon, 24 Aug 2009 18:46:35 +0000"  >&lt;p&gt;&amp;gt; Otherwise, I think it would be nice to implement reflection through a separate abstraction where you allow clients to plug in their own implementation in Avro.&lt;/p&gt;

&lt;p&gt;Sure, one might make ReflectDatumReader and ReflectDatumWriter each contain a ReflectData instance, and add protected methods that create the schemas for each Java type.&lt;/p&gt;</comment>
                            <comment id="12747013" author="ehillenius" created="Mon, 24 Aug 2009 18:50:55 +0000"  >&lt;p&gt;I&apos;d be happy taking a stab at that. However, it seems that there is currently a deeper problem... even when creating fields as unions of their type and nulls, it doesn&apos;t work. It seems their values are always written out as nulls. As you can see when you run the unit test with the last patch.&lt;/p&gt;</comment>
                            <comment id="12747025" author="cutting" created="Mon, 24 Aug 2009 19:11:35 +0000"  >&lt;p&gt;&amp;gt; I think that is a bug, but maybe I&apos;m overlooking something?&lt;/p&gt;

&lt;p&gt;I think the bug is in your test case.  You read the same object twice.&lt;/p&gt;</comment>
                            <comment id="12747038" author="ehillenius" created="Mon, 24 Aug 2009 19:41:51 +0000"  >&lt;p&gt;Ugh, that was sloppy! Uploaded a new patch that shows that member vars that are null indeed can be supported if they are defined as a union of their type and Avro&apos;s NULL type.&lt;/p&gt;</comment>
                            <comment id="12747213" author="ehillenius" created="Tue, 25 Aug 2009 03:49:48 +0000"  >&lt;p&gt;&amp;gt; Sure, one might make ReflectDatumReader and ReflectDatumWriter each contain a ReflectData instance, and add protected methods that create the schemas for each Java type.&lt;/p&gt;

&lt;p&gt;I&apos;ve looked at supplying a patch that does this, but thanks to the contagious nature of static calls, it would require quite a bit of refactoring. For instance, ReflectRequestor, ReflectResponder and SpecificRequestor getClient methods would need to be made non-static for this to work, and those classes plus ReflectDatumReader/ Writer would need to have the ReflectData instance passed in, since it would be used right away in the constructor, which makes implementing it through a protected (overridable) method (like newReflectData()) dangerous as the object is still being constructed. So it seems that the patch I supply here is the least intrusive, and though not particularly elegant, probably better than the alternative, unless you don&apos;t mind breaking a bunch of clients.&lt;/p&gt;</comment>
                            <comment id="12747221" author="ehillenius" created="Tue, 25 Aug 2009 05:05:56 +0000"  >&lt;p&gt;Uploaded patch with alternative solution. Works through a delegate &apos;ReflectSchemaDelegate&apos; you can set on ReflectData staticaly.&lt;/p&gt;

&lt;p&gt;Imho, It would be more elegant to get rid of a lot of the use of static throughout the AVRO API, but that would mean quite a few breaks, and would make using AVRO also more verbose. This patch imho is a reasonable hack; not as ugly as setting schemas for fields directly, and more flexible.&lt;/p&gt;

&lt;p&gt;People like me who want to allow null values of fields in objects they let AVRO write out, can do this:&lt;/p&gt;

&lt;p&gt;      ReflectData.setReflectSchemaDelegate(&lt;br/&gt;
          ReflectSchemaDelegate.newNullAllowingInstance());&lt;/p&gt;

&lt;p&gt;and AVRO will create a union for every field it comes across with introspection. Clients can also provide a custom strategy if they wish to do so.&lt;/p&gt;</comment>
                            <comment id="12747501" author="cutting" created="Tue, 25 Aug 2009 17:34:22 +0000"  >&lt;p&gt;I&apos;d vote for doing the refactoring to make ReflectData non-static.  We can probably continue to support the existing ReflectDatumReader/Writer constructors back-compatibly, no?  If not, we&apos;d put this in 1.1 rather than 1.0.1.&lt;/p&gt;</comment>
                            <comment id="12747512" author="ehillenius" created="Tue, 25 Aug 2009 17:43:42 +0000"  >&lt;p&gt;ReflectDatumReader/Writer could be done by adding more constructors and setting ReflectData as the default. The problem is with the static getClient methods of ReflectRequestor, ReflectResponder and SpecificRequestor, which do a static call to ReflectData themselves.&lt;/p&gt;

&lt;p&gt;We might be possible is to keep ReflectData#getProtocol static, and getSchema or createSchema overridable as non-static methods. Would that be acceptable?&lt;/p&gt;</comment>
                            <comment id="12747513" author="ehillenius" created="Tue, 25 Aug 2009 17:45:41 +0000"  >&lt;p&gt;Btw, ReflectData#validate is nowhere used nor tested in the Avro code base. Is this a forgotten method (code rot), or does it just need a test case?&lt;/p&gt;</comment>
                            <comment id="12747536" author="cutting" created="Tue, 25 Aug 2009 18:22:10 +0000"  >&lt;p&gt;&amp;gt; The problem is with the static getClient methods of ReflectRequestor, ReflectResponder and SpecificRequestor, which do a static call to ReflectData themselves.&lt;/p&gt;

&lt;p&gt;Folks can easily avoid those methods by calling Proxy.newProxyInstance themselves, or we could add a new version of getClient() that accepts a ReflectData implementation.&lt;/p&gt;

&lt;p&gt;&amp;gt; Btw, ReflectData#validate is nowhere used nor tested in the Avro code base. Is this a forgotten method (code rot), or does it just need a test case? &lt;/p&gt;

&lt;p&gt;Somewhere between.  We should probably add a test.  Can you think of cases where it&apos;d be handy to have?&lt;/p&gt;</comment>
                            <comment id="12747545" author="ehillenius" created="Tue, 25 Aug 2009 18:33:59 +0000"  >&lt;p&gt;&amp;gt;  or we could add a new version of getClient() that accepts a ReflectData implementation.&lt;/p&gt;

&lt;p&gt;Ok. I&apos;ll give that a try when I have the chance.&lt;/p&gt;

&lt;p&gt;&amp;gt; Somewhere between. We should probably add a test. Can you think of cases where it&apos;d be handy to have?&lt;/p&gt;

&lt;p&gt;Not sure. I would think I&apos;d find out quick enough that there are errors when trying to write datum, so I don&apos;t have the need for that method personally. Doesn&apos;t seem to be a bad thing to have in the API, but then imho it needs a test so that we know that at least it works.&lt;/p&gt;</comment>
                            <comment id="12747596" author="ehillenius" created="Tue, 25 Aug 2009 19:35:19 +0000"  >&lt;p&gt;Uploaded patch that gets rid of the static methods of ReflectData in favor of using - now overridable - instances of ReflectData.&lt;/p&gt;

&lt;p&gt;For convenience (and because I would expect more people to want to allow nulls when writing records through introspection, I&apos;m exposing the null allowing specialization of ReflectData like this:&lt;/p&gt;

&lt;p&gt;ReflectData reflectData = ReflectData.newNullAllowingInstance();&lt;/p&gt;

&lt;p&gt;But people can provide any custom implementation.&lt;/p&gt;</comment>
                            <comment id="12747608" author="ehillenius" created="Tue, 25 Aug 2009 19:56:49 +0000"  >&lt;p&gt;Added a test that uses ReflectDatumWriter and found a bug in the process. Had to make schema cache non static. Clients can always cache their own ReflectData instance.&lt;/p&gt;</comment>
                            <comment id="12747609" author="ehillenius" created="Tue, 25 Aug 2009 19:58:25 +0000"  >&lt;p&gt;Patch is in, so we have two alternatives now. The latter, while causing a slight constructor explosion, doesn&apos;t turn out to be as bad as I thought.&lt;/p&gt;

&lt;p&gt;Is this patch acceptable?&lt;/p&gt;</comment>
                            <comment id="12747620" author="cutting" created="Tue, 25 Aug 2009 20:17:09 +0000"  >&lt;p&gt;A few minor nits:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Paranamer might not be thread safe, so it should probably not be static.&lt;/li&gt;
	&lt;li&gt;The null checks seem excessive and not that informative.  Folks will fail soon enough if they pass a null here and this will be caught in debugging, long before production.  None of the other parameters are null-checked.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Other than that, this looks good to me.&lt;/p&gt;</comment>
                            <comment id="12747657" author="ehillenius" created="Tue, 25 Aug 2009 21:26:02 +0000"  >&lt;p&gt;Uploaded patch that removes the null checks and makes PARANAMER non-static.&lt;/p&gt;</comment>
                            <comment id="12747669" author="cutting" created="Tue, 25 Aug 2009 21:43:08 +0000"  >&lt;p&gt;The command &apos;ant clean test&apos; fails on trunk with this patch applied:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;checkstyle&amp;#93;&lt;/span&gt; /home/cutting/src/avro/work/src/java/org/apache/avro/reflect/ReflectData.java:260:27: Name &apos;PARANAMER&apos; must match pattern &apos;^&lt;span class=&quot;error&quot;&gt;&amp;#91;a-z&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;a-zA-Z0-9&amp;#93;&lt;/span&gt;*$&apos;.&lt;/p&gt;

&lt;p&gt;Non-constants should not be all-caps.&lt;/p&gt;</comment>
                            <comment id="12747671" author="ehillenius" created="Tue, 25 Aug 2009 21:46:08 +0000"  >&lt;p&gt;Final patch I hope: include minor check style fixes&lt;/p&gt;</comment>
                            <comment id="12747699" author="cutting" created="Tue, 25 Aug 2009 22:53:29 +0000"  >&lt;p&gt;I just committed this.  Thanks, Eelco!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12426135">AVRO-35</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12417668" name="AVRO-104.patch" size="18741" author="ehillenius" created="Tue, 25 Aug 2009 21:46:08 +0000"/>
                            <attachment id="12417663" name="AVRO-104.patch" size="18460" author="ehillenius" created="Tue, 25 Aug 2009 21:26:02 +0000"/>
                            <attachment id="12417648" name="AVRO-104.patch" size="18791" author="ehillenius" created="Tue, 25 Aug 2009 19:56:49 +0000"/>
                            <attachment id="12417644" name="AVRO-104.patch" size="16355" author="ehillenius" created="Tue, 25 Aug 2009 19:35:19 +0000"/>
                            <attachment id="12417568" name="AVRO-104.patch" size="15882" author="ehillenius" created="Tue, 25 Aug 2009 05:05:56 +0000"/>
                            <attachment id="12417516" name="AVRO-104.patch" size="5620" author="ehillenius" created="Mon, 24 Aug 2009 19:41:51 +0000"/>
                            <attachment id="12417308" name="AVRO-104.patch" size="5646" author="ehillenius" created="Fri, 21 Aug 2009 19:10:32 +0000"/>
                            <attachment id="12417300" name="AVRO-104.patch" size="5285" author="ehillenius" created="Fri, 21 Aug 2009 18:52:29 +0000"/>
                            <attachment id="12417109" name="AVRO-104.patch" size="2688" author="ehillenius" created="Thu, 20 Aug 2009 07:09:05 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 20 Aug 2009 21:27:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94432</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 22 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dy9r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79482</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-105] Avro data file should be able to write binary data using blocking for arrays/maps</title>
                <link>https://issues.apache.org/jira/browse/AVRO-105</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently DataFileWriter uses BinaryEncoder only. It would be better if DataFileWriter can use BlockingBinaryEncoder if user wants to use.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12433548">AVRO-105</key>
            <summary>Avro data file should be able to write binary data using blocking for arrays/maps</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="ravidotg">Ravi Gummadi</assignee>
                                    <reporter username="ravidotg">Ravi Gummadi</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Aug 2009 08:40:41 +0000</created>
                <updated>Fri, 28 Dec 2018 18:57:35 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12745395" author="ravidotg" created="Thu, 20 Aug 2009 11:17:20 +0000"  >&lt;p&gt;Attaching patch that makes DataFileWriter use BlockingBinaryEncoder if user wants to.&lt;br/&gt;
Modified RandomData.java to generate data file that can use blocking for arrays and maps if user wants to.&lt;br/&gt;
Also modified testcases TestSchema, TestReflect to validate blocking also.&lt;br/&gt;
Modified TestDataFile to use schema from the file interop.avsc(this contains all types) instead of just having a record with stringField and longField.&lt;br/&gt;
Removed GenerateBlockingData.java as RandomData itself can genrate blocking data using DataFileWriter and thus removed extra specific code to validate &apos;blocking&apos; from interoptests.py.&lt;/p&gt;

&lt;p&gt;Please review and provide your comments.&lt;/p&gt;</comment>
                            <comment id="12745460" author="sharadag" created="Thu, 20 Aug 2009 15:23:44 +0000"  >&lt;p&gt;I skimmed thru the patch. I think using boolean useBlocking below may not be the good idea:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; DataFileWriter(Schema schema, OutputStream outs, DatumWriter&amp;lt;D&amp;gt; dout, &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; useBlocking) &lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We should be able to plug any Encoder/Decoder.&lt;/p&gt;</comment>
                            <comment id="12745638" author="cutting" created="Thu, 20 Aug 2009 20:57:59 +0000"  >&lt;p&gt;&amp;gt; We should be able to plug any Encoder/Decoder.&lt;/p&gt;

&lt;p&gt;Yes, that would be good.  The DataFileWriter constructor should accept an Encoder then call Encoder#init(buffer).  DataFileReader&apos;s constructor should similarly accept a Decoder.&lt;/p&gt;

&lt;p&gt;We should also add a getEncodingType() method to both Encoder and Decoder that return &quot;avro.text&quot; or &quot;avro.binary&quot;, then have DataFileWriter store the encoder&apos;s type in the metadata under  &quot;encoding&quot;, and DataFileReader check that this matches the decoder used.&lt;/p&gt;
</comment>
                            <comment id="12749868" author="ravidotg" created="Tue, 1 Sep 2009 11:45:10 +0000"  >&lt;p&gt;Attaching a temporary patch that has the suggested changes, but doesn&apos;t work for Json/text format.&lt;/p&gt;

&lt;p&gt;As JsonEncoder and JsonDecoder have parser(and thus validating the schema), I needed to have separate encoders and decoders for &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; footer schema &lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; sync followed by blockCount as another schema and &lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt; the actual objects&apos; schema. Please see DataFileWriter and DataFileReader in the patch.&lt;/p&gt;

&lt;p&gt;The main problem here is that JsonParser.nextToken() called from JsonDecoder.init() seem to be reading much more than required number of bytes(may be in to a buffer?) and thus I see that the &quot;pos&quot; in SeekableBufferedInput is becoming endOfFile &amp;#8212; So after skipSync() and reading &apos;Long&apos; using one JsonDecoder(this is &lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; specified above), I need to seek to the position where the actual objects start within this block to do JsonDecoder(for &lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt; above).init(in).&lt;br/&gt;
Is there a way I can avoid this seek(If JsonParser doesn&apos;t read extra bytes from stream, that would solve the problem. Is there a way to set that ?) ?&lt;/p&gt;

&lt;p&gt;I am thinking of having a union schema of all the 3 schemas shown above. That also makes things complex.&lt;/p&gt;

&lt;p&gt;Thoughts ?&lt;/p&gt;</comment>
                            <comment id="12753442" author="ravidotg" created="Thu, 10 Sep 2009 06:01:29 +0000"  >&lt;p&gt;There are 2 problems if we want to support Json format data file writer/reader: (1) Json encoder/decoder are doing validation of schema, we need different encoders for writing (a) sync (b) footer of data file (c) actual object schema. Similarly different Json decoders for the above 3 schemas.&lt;/p&gt;

&lt;p&gt;(2) JsonParser seem to be reading the file&apos;s content extra into some buffer and we need to seek back to the position till which we actually read.&lt;/p&gt;

&lt;p&gt;So for the time being, we could support only binary format for avro data file and  DataFileWriter&apos;s constructor can take BinaryEncoder as a param. So user can send BinaryEncoder or BlockingBinaryEncoder to DataFIleWriter.&lt;/p&gt;</comment>
                            <comment id="12753984" author="thiru_mg" created="Fri, 11 Sep 2009 04:21:36 +0000"  >&lt;p&gt;I&apos;d like to take a step back and look at the problem at a higher level.&lt;/p&gt;

&lt;p&gt;The current DataFileWriter and DataFileReader are tightly bound to the binary Avro format. This is because:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;They instantiate BinaryEncoder and BinaryDecoder respectively.&lt;/li&gt;
	&lt;li&gt;The format they define is also aligned with the binary Avro format. For example, we have four-byte footer length at the end of the file.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So it is perfectly logical to extend DataFileWriter by adding a boolean flag to the DataFileWriter to indicate that one wants to use the BlockingBinaryEncoder. This will be a simple fix involving changes to a few lines of code. DataFileReader requires no change.&lt;/p&gt;

&lt;p&gt;Now, to the larger goal of making DataFileWriter and DataFileReader that can use any Encoder or Decoder requires much more work. Specifically, we need to answer the following:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;What is the format for Json version of the data file. Do we want to make the whole file look like a single Json object or a sequence of Json objects with some delimiters to separate them. The former is friendly for any Json processor to to consume the file. The latter is useful for resyncing and other nice properties we have with the binary file format.&lt;/li&gt;
	&lt;li&gt;How do we insert the footer length. If it is the 4-byte length as in binary version, it&apos;ll be binary data in the otherwise text file. Also since whitespaces can be freely added in between parts of Json text, it is possible that this footer length becomes incorrect without actually changing the (semantic) content of the footer.&lt;/li&gt;
	&lt;li&gt;Making DataFileWriter and DataFileReader support any kind of Encoder/Decoder requires that the clients of these classes pass on the Encoder/Decoder to outside the Writer/Reader. This requires some change to the client code.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I propose that we go ahead and implement the simple change for supporting blocking for now in this JIRA and file a separate JIRA for the wider support for different encoders/decoders.&lt;/p&gt;</comment>
                            <comment id="12754213" author="cutting" created="Fri, 11 Sep 2009 16:56:23 +0000"  >&lt;p&gt;&amp;gt; I propose that we go ahead and implement the simple change for supporting blocking for now in this JIRA and file a separate JIRA for the wider support for different encoders/decoders.&lt;/p&gt;

&lt;p&gt;+1  Thanks for the great analysis, Thiru.  I had assumed that the JSON encoder would only be used for objects, not for the header, footer, etc., that it would still fundamentally be a binary container file.  But the idea of a fully-JSON file format is interesting and worth discussing separately.&lt;/p&gt;</comment>
                            <comment id="12755454" author="ravidotg" created="Tue, 15 Sep 2009 11:07:01 +0000"  >&lt;p&gt;Attaching patch with the change of constructor of DataFileWriter taking BinaryEncoder as a parameter &amp;#8212; so that user can send BlockingBinaryEncoder also. With this patch, as discussed in earlier comments, avro data file would work for binary data only.&lt;/p&gt;

&lt;p&gt;Please review and provide your comments.&lt;/p&gt;</comment>
                            <comment id="12758220" author="sharadag" created="Tue, 22 Sep 2009 12:10:26 +0000"  >&lt;p&gt;The patch is not applying. Can you please regenerate it ?&lt;br/&gt;
Overall it looks fine to me. Minor nit -&amp;gt; bufOut.flush() is added to DataFileWriter#writeBlock(). Is that needed ?&lt;br/&gt;
Super minor -&amp;gt; build.xml changes do not have correct indentation&lt;/p&gt;</comment>
                            <comment id="12758919" author="cutting" created="Wed, 23 Sep 2009 23:01:35 +0000"  >&lt;p&gt;A nit: we should add a BinaryEncoder constructor with no arguments, rather than create a ByteArrayOutputStream that&apos;s never used.&lt;/p&gt;</comment>
                            <comment id="16730435" author="dsolow" created="Fri, 28 Dec 2018 18:57:35 +0000"  >&lt;p&gt;So, almost 10 years later, is there a way to use&#160;BlockingBinaryEncoder in a DataFileWriter?&#160;&lt;/p&gt;

&lt;p&gt;lol&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12417130" name="AVRO-105.patch" size="13038" author="ravidotg" created="Thu, 20 Aug 2009 11:17:20 +0000"/>
                            <attachment id="12419621" name="AVRO-105.v1.patch" size="13838" author="ravidotg" created="Tue, 15 Sep 2009 11:07:01 +0000"/>
                            <attachment id="12418236" name="temp.patch" size="40498" author="ravidotg" created="Tue, 1 Sep 2009 11:45:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 20 Aug 2009 15:23:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94433</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dy9z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79483</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-106] Patch for Null/ NotNull testing</title>
                <link>https://issues.apache.org/jira/browse/AVRO-106</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Test case tests that a null value for a record field is only accepted when that field is defined when the field is defined as a union between the field&apos;s type and NULL.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12433754">AVRO-106</key>
            <summary>Patch for Null/ NotNull testing</summary>
                <type id="6" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/requirement.png">Test</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="ehillenius">Eelco Hillenius</assignee>
                                    <reporter username="ehillenius">Eelco Hillenius</reporter>
                        <labels>
                    </labels>
                <created>Sat, 22 Aug 2009 00:07:28 +0000</created>
                <updated>Thu, 27 Aug 2009 17:22:44 +0000</updated>
                                            <version>1.0.0</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12748460" author="cutting" created="Thu, 27 Aug 2009 17:22:44 +0000"  >&lt;p&gt;Perhaps this should be renamed TestSpecific, and we can add other tests of the specific API there?&lt;/p&gt;

&lt;p&gt;Also, instead of adding a bunch of .avsc files, we could add a single .avpr file with no messages, e.g. SpecificTests.avpr.  This would create the test classes as nested classes, and better associate them with the code that uses them.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12417346" name="AVRO-106.patch" size="5184" author="ehillenius" created="Sat, 22 Aug 2009 00:10:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 27 Aug 2009 17:22:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94434</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 22 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dya7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79484</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
