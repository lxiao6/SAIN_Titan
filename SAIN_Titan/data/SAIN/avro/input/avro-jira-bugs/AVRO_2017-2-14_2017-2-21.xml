<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:24:40 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2017-2-14+AND+created+%3C%3D+2017-2-21+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="2" total="2"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-2001] Add support for doc in the Ruby library for Avro schemas</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2001</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The Avro schema and protocol specification(&lt;a href=&quot;http://avro.apache.org/docs/current/spec.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/current/spec.html&lt;/a&gt;) allows for an optional attribute &quot;doc&quot; defined as, &quot;a JSON string describing this field for users.&quot; Users should be able to include a doc with each field for &quot;records&quot; (&lt;a href=&quot;http://avro.apache.org/docs/current/spec.html#N10085&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/current/spec.html#N10085&lt;/a&gt;) and &quot;enums&quot; (&lt;a href=&quot;http://avro.apache.org/docs/current/spec.html#N10186&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/current/spec.html#N10186&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;This doc attribute should be stripped when transforming into &quot;Parsing Canonical Form&quot; (&lt;a href=&quot;http://avro.apache.org/docs/current/spec.html#N10815&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/current/spec.html#N10815&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Currently, the Ruby Avro library (&lt;a href=&quot;https://github.com/apache/avro/tree/master/lang/ruby&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/tree/master/lang/ruby&lt;/a&gt;) does not support doc. It is supported in other languages libraries, for example PHP (&lt;a href=&quot;https://github.com/apache/avro/blob/master/lang/php/lib/avro/schema.php#L46&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/master/lang/php/lib/avro/schema.php#L46&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Not supporting doc in Ruby causes confusion for the end user, and prevents that end use from taking advantage of a useful tool for managing complex schema. &lt;/p&gt;

&lt;p&gt;doc should be supported for schema and protocols in the Apache Ruby Avro library.&lt;/p&gt;

&lt;p&gt;Possible implementation: &lt;a href=&quot;https://github.com/lostphilosopher/avro/tree/avro_2001&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/lostphilosopher/avro/tree/avro_2001&lt;/a&gt; based on &lt;a href=&quot;https://github.com/apache/avro/pull/14/commits/164fb49f80dfaac421639e6249a6f92c802a50b6&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/14/commits/164fb49f80dfaac421639e6249a6f92c802a50b6&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13043356">AVRO-2001</key>
            <summary>Add support for doc in the Ruby library for Avro schemas</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="wandersen02">Wyatt Andersen</assignee>
                                    <reporter username="wandersen02">Wyatt Andersen</reporter>
                        <labels>
                            <label>features</label>
                    </labels>
                <created>Wed, 15 Feb 2017 19:37:16 +0000</created>
                <updated>Mon, 3 Apr 2017 23:37:26 +0000</updated>
                            <resolved>Mon, 3 Apr 2017 23:17:57 +0000</resolved>
                                                    <fixVersion>1.9.0</fixVersion>
                                    <component>ruby</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="15868470" author="wandersen02" created="Wed, 15 Feb 2017 19:52:00 +0000"  >&lt;p&gt;This issue is holding up a project I&apos;m working on. While we can use a fork with support for doc I&apos;d much prefer to stay with the core project. I&apos;m happy to write the code to resolve this issue, and I&apos;m actively working on a GitHub PR with proper unit tests and formatting. (First PR to this project so feel free to let me know if I&apos;m going about anything incorrectly.)&lt;/p&gt;</comment>
                            <comment id="15868643" author="githubbot" created="Wed, 15 Feb 2017 21:59:35 +0000"  >&lt;p&gt;GitHub user lostphilosopher opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/197&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/197&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2001&quot; title=&quot;Add support for doc in the Ruby library for Avro schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2001&quot;&gt;&lt;del&gt;AVRO-2001&lt;/del&gt;&lt;/a&gt; Adding support for doc attribute&lt;/p&gt;

&lt;p&gt;    The Avro schema and protocol specification(&lt;a href=&quot;http://avro.apache.org/docs/current/spec.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/current/spec.html&lt;/a&gt;) allows for an optional attribute &quot;doc&quot; defined as, &quot;a JSON string describing this field for users.&quot; Users should be able to include a doc with each field for &quot;records&quot; (&lt;a href=&quot;http://avro.apache.org/docs/current/spec.html#N10085&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/current/spec.html#N10085&lt;/a&gt;) and &quot;enums&quot; (&lt;a href=&quot;http://avro.apache.org/docs/current/spec.html#N10186&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/current/spec.html#N10186&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;    This doc attribute should be stripped when transforming into &quot;Parsing Canonical Form&quot; (&lt;a href=&quot;http://avro.apache.org/docs/current/spec.html#N10815&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/current/spec.html#N10815&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;    Currently, the Ruby Avro library (&lt;a href=&quot;https://github.com/apache/avro/tree/master/lang/ruby&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/tree/master/lang/ruby&lt;/a&gt;) does not support doc. It is supported in other languages libraries, for example PHP (&lt;a href=&quot;https://github.com/apache/avro/blob/master/lang/php/lib/avro/schema.php#L46&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/master/lang/php/lib/avro/schema.php#L46&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/lostphilosopher/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/lostphilosopher/avro&lt;/a&gt; avro_2001&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/197.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/197.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #197&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 654bedf194196b5f6d8ba5f28f516010c0be89b8&lt;br/&gt;
Author: lostphilosopher &amp;lt;wandersen02@gmail.com&amp;gt;&lt;br/&gt;
Date:   2017-02-15T19:05:43Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2001&quot; title=&quot;Add support for doc in the Ruby library for Avro schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2001&quot;&gt;&lt;del&gt;AVRO-2001&lt;/del&gt;&lt;/a&gt; Adding support for doc attribute&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15875039" author="wandersen02" created="Mon, 20 Feb 2017 20:45:51 +0000"  >&lt;p&gt;Based on feedback from Tim Perkins I&apos;m expanding the scope for doc support to include:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;records&lt;/li&gt;
	&lt;li&gt;record fields&lt;/li&gt;
	&lt;li&gt;enums&lt;/li&gt;
	&lt;li&gt;protocols&lt;/li&gt;
	&lt;li&gt;protocol messages&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;(This is all supported in the Avro specs.)&lt;/p&gt;

&lt;p&gt;Future iterations of my PR will reflect this.&lt;/p&gt;</comment>
                            <comment id="15954303" author="jira-bot" created="Mon, 3 Apr 2017 23:12:27 +0000"  >&lt;p&gt;Commit 0550d2cce2793d1b810960a652f03fadf88b02ff in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=wandersen02&quot; class=&quot;user-hover&quot; rel=&quot;wandersen02&quot;&gt;Wyatt Andersen&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=0550d2c&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=0550d2c&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2001&quot; title=&quot;Add support for doc in the Ruby library for Avro schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2001&quot;&gt;&lt;del&gt;AVRO-2001&lt;/del&gt;&lt;/a&gt;: Adding support for doc attribute&lt;/p&gt;

&lt;p&gt;Signed-off-by: sacharya &amp;lt;suraj@apache.org&amp;gt;&lt;br/&gt;
Signed-off-by: Tim Perkins &amp;lt;tjwp@cantab.net&amp;gt;&lt;br/&gt;
Signed-off-by: Sean Busbey &amp;lt;busbey@apache.org&amp;gt;&lt;/p&gt;</comment>
                            <comment id="15954309" author="sacharya" created="Mon, 3 Apr 2017 23:17:57 +0000"  >&lt;p&gt;Thanks for the patch &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=wandersen02&quot; class=&quot;user-hover&quot; rel=&quot;wandersen02&quot;&gt;Wyatt Andersen&lt;/a&gt;.&lt;br/&gt;
Thanks for the reviews &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tjwp&quot; class=&quot;user-hover&quot; rel=&quot;tjwp&quot;&gt;Tim Perkins&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15954336" author="githubbot" created="Mon, 3 Apr 2017 23:37:26 +0000"  >&lt;p&gt;Github user lostphilosopher closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/197&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/197&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 15 Feb 2017 21:59:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 41 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3a4p3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2002] Canonical form strip the default value : Schema resolution may provide 2 different answers with same schema&apos;s fingerprint</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2002</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I understand that the schema&#8216;s fingerprint describes uniquely the Avro Schema. The following example shows 2 different schemas, with the same fingerprint but different behaviours: one can read the writer, the other one can&#8217;t. I guess it is a bug but maybe it&apos;s only a misinterpretation&#8230;  &lt;br/&gt;
Here are the details : &lt;br/&gt;
First, the Canonical form of an Avro Schema is derived using this rule: (see &lt;a href=&quot;http://avro.apache.org/docs/1.8.1/spec.html#Transforming+into+Parsing+Canonical+Form&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/1.8.1/spec.html#Transforming+into+Parsing+Canonical+Form&lt;/a&gt;  )&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;STRIP&amp;#93;&lt;/span&gt; Keep only attributes that are relevant to parsing data, which are: type, name, fields, symbols, items, values, size. Strip all others (e.g., doc and aliases). &lt;/p&gt;&lt;/blockquote&gt;  
&lt;p&gt;So any default attribute is removed.&lt;/p&gt;

&lt;p&gt;On the other hand, Schema Resolution is done using this particular rule: (&lt;a href=&quot;http://avro.apache.org/docs/1.8.1/spec.html#Schema+Resolution&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/1.8.1/spec.html#Schema+Resolution&lt;/a&gt;  )&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;if the reader&apos;s record schema has a field with no default value, and writer&apos;s schema does not have a field with the same name, an error is signalled.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;To illustrate the situation on a simple schema (writer), I have created a new version by adding a new field to the schema with 2 options: one has a default attribute and value, the other one hasn&#8217;t.  The first one can read old version of writer, the second one can&#8217;t.&lt;br/&gt;
In other words, the canonical form does not take into account any default attribute for the record fields but the resolution algorithm uses the default attribute to evaluate the compatibility. The conclusion is that 2 schemas that differ only with a default attribute have the same finger print: one is compatible with the writer schema, the other one is not.&lt;br/&gt;
I understand the different behaviors but not with the same fingerprint.&lt;/p&gt;

&lt;p&gt;I would suggest that the canonical form would not strip the default attribute (but strip the default value which should not interfere with the compatibility).&lt;br/&gt;
The immediate workaround I will use is to systematically use a default value for any additional field.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; Main;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.Collections;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.Schema;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.SchemaCompatibility;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.SchemaNormalization;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.SchemaValidationException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.SchemaValidator;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.SchemaValidatorBuilder;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;Main {

	&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) {
		Schema schemaWriter = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; org.apache.avro.Schema.Parser().parse(
				&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;ExampleAvro\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}&quot;&lt;/span&gt;);
		Schema schemaReader = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; org.apache.avro.Schema.Parser().parse(
				&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;ExampleAvro\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;},{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;newField\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;:0}]}&quot;&lt;/span&gt;);
		Schema schemaReaderNoDefault = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; org.apache.avro.Schema.Parser().parse(
				&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;ExampleAvro\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;field\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;},{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;newField\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}&quot;&lt;/span&gt;);

		&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; fpWriter = SchemaNormalization.parsingFingerprint64(schemaWriter);
		&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; fpReader = SchemaNormalization.parsingFingerprint64(schemaReader);
		&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; fpReaderNoDefault = SchemaNormalization.parsingFingerprint64(schemaReaderNoDefault);
		
		&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Schema writer          &quot;&lt;/span&gt; + fpWriter + &lt;span class=&quot;code-quote&quot;&gt;&quot; &quot;&lt;/span&gt;+ schemaWriter);
		&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Schema reader          &quot;&lt;/span&gt; + fpReader + &lt;span class=&quot;code-quote&quot;&gt;&quot; &quot;&lt;/span&gt;+ schemaReader);
		&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Schema readerNoDefault &quot;&lt;/span&gt; + fpReaderNoDefault + &lt;span class=&quot;code-quote&quot;&gt;&quot; &quot;&lt;/span&gt;+ schemaReaderNoDefault);

		&lt;span class=&quot;code-comment&quot;&gt;// check compatibility : method 1
&lt;/span&gt;		&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; res = SchemaCompatibility.checkReaderWriterCompatibility(schemaReader, schemaWriter).getType().toString() ;
		&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; resNoDefault = SchemaCompatibility.checkReaderWriterCompatibility(schemaReaderNoDefault, schemaWriter).getType().toString() ;
		
		&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(fpReader + &lt;span class=&quot;code-quote&quot;&gt;&quot; is &quot;&lt;/span&gt; + res +  &lt;span class=&quot;code-quote&quot;&gt;&quot; with &quot;&lt;/span&gt; +fpWriter);
		&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(fpReaderNoDefault + &lt;span class=&quot;code-quote&quot;&gt;&quot; is &quot;&lt;/span&gt; + resNoDefault +  &lt;span class=&quot;code-quote&quot;&gt;&quot; with &quot;&lt;/span&gt; +fpWriter);


		&lt;span class=&quot;code-comment&quot;&gt;// check compatibility : method 2 
&lt;/span&gt;		SchemaValidator validator = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SchemaValidatorBuilder().canReadStrategy().validateAll();
		&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; isCompatible=&quot;&quot;;
		&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
			validator.validate(schemaReaderNoDefault,  Collections.singletonList(schemaWriter));
		} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (SchemaValidationException e) {
			isCompatible=&lt;span class=&quot;code-quote&quot;&gt;&quot;not &quot;&lt;/span&gt;;
		}	
		&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(fpReaderNoDefault + &lt;span class=&quot;code-quote&quot;&gt;&quot; is &quot;&lt;/span&gt;+ isCompatible +&lt;span class=&quot;code-quote&quot;&gt;&quot;compatible with &quot;&lt;/span&gt; +fpWriter);

		isCompatible=&quot;&quot;;
		&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
			validator.validate(schemaReader,  Collections.singletonList(schemaWriter));
		} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (SchemaValidationException e) {
			isCompatible=&lt;span class=&quot;code-quote&quot;&gt;&quot;not &quot;&lt;/span&gt;;
		}	
		&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(fpReader + &lt;span class=&quot;code-quote&quot;&gt;&quot; is &quot;&lt;/span&gt;+ isCompatible +&lt;span class=&quot;code-quote&quot;&gt;&quot;compatible with &quot;&lt;/span&gt; +fpWriter);

		&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;------------&quot;&lt;/span&gt;);
	}
	&lt;span class=&quot;code-comment&quot;&gt;//The output is :
&lt;/span&gt;	&lt;span class=&quot;code-comment&quot;&gt;//Schema writer          8957007963871099370 {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;ExampleAvro&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;field&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;}]}
&lt;/span&gt;	&lt;span class=&quot;code-comment&quot;&gt;//Schema reader          489516346825099350 {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;ExampleAvro&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;field&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;},{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;newField&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt;:0}]}
&lt;/span&gt;	&lt;span class=&quot;code-comment&quot;&gt;//Schema readerNoDefault 489516346825099350 {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;ExampleAvro&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;field&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;},{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;newField&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt;}]}
&lt;/span&gt;	&lt;span class=&quot;code-comment&quot;&gt;//489516346825099350 is COMPATIBLE with 8957007963871099370
&lt;/span&gt;	&lt;span class=&quot;code-comment&quot;&gt;//489516346825099350 is INCOMPATIBLE with 8957007963871099370
&lt;/span&gt;	&lt;span class=&quot;code-comment&quot;&gt;//489516346825099350 is not compatible with 8957007963871099370
&lt;/span&gt;	&lt;span class=&quot;code-comment&quot;&gt;//489516346825099350 is compatible with 8957007963871099370
&lt;/span&gt;
	
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="13043649">AVRO-2002</key>
            <summary>Canonical form strip the default value : Schema resolution may provide 2 different answers with same schema&apos;s fingerprint</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="hdeslandes">Deslandes Hugues</reporter>
                        <labels>
                    </labels>
                <created>Thu, 16 Feb 2017 13:53:41 +0000</created>
                <updated>Thu, 16 Feb 2017 17:55:54 +0000</updated>
                                            <version>1.8.1</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="15870374" author="cutting" created="Thu, 16 Feb 2017 17:55:54 +0000"  >&lt;p&gt;I believe you have misunderstood the semantics of fingerprints.  Identical fingerprints mean that one schema can read output of the other without schema resolution, not that both can read a third using schema resolution.&lt;/p&gt;

&lt;p&gt;Schema resolution permits interoperability (in some cases) between a pair of schemas whose fingerprints do not match.  The SchemaCompatiblity class can determine whether a pair of schemas can, through resolution, interoperate.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 16 Feb 2017 17:55:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 48 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3a6i7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
