<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:18:39 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2013-5-1+AND+created+%3C%3D+2013-5-8+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="10" total="10"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1316] IDL code-generation generates too-long literals for very large schemas</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1316</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;When I work from a very large IDL schema, the Java code generated includes a schema JSON literal that exceeds the length of the maximum allowed literal string (&lt;a href=&quot;http://stackoverflow.com/questions/8323082/size-of-initialisation-string-in-java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;65535 characters&lt;/a&gt;).  &lt;/p&gt;

&lt;p&gt;This creates weird Maven errors like: &lt;tt&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; ...FooProtocol.java:&lt;span class=&quot;error&quot;&gt;&amp;#91;13,89&amp;#93;&lt;/span&gt; constant string too long&lt;/tt&gt;.&lt;/p&gt;


&lt;p&gt;It might seem a little crazy, but a 64-kilobyte JSON protocol isn&apos;t outrageous at all for some of the more involved data structures, especially if we&apos;re including documentation strings etc.&lt;/p&gt;

&lt;p&gt;I believe the fix should be a bit more sensitivity to the length of the JSON literal (and a willingness to split it into more than one literal, joined by &lt;tt&gt;+&lt;/tt&gt;), but I haven&apos;t figured out where that change needs to go. Has anyone else encountered this problem?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12645723">AVRO-1316</key>
            <summary>IDL code-generation generates too-long literals for very large schemas</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="trochee">Jeremy Kahn</assignee>
                                    <reporter username="trochee">Jeremy Kahn</reporter>
                        <labels>
                            <label>patch</label>
                    </labels>
                <created>Wed, 1 May 2013 23:31:41 +0000</created>
                <updated>Mon, 19 May 2014 21:54:56 +0000</updated>
                            <resolved>Thu, 9 May 2013 22:15:42 +0000</resolved>
                                                    <fixVersion>1.7.5</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13647205" author="scott_carey" created="Thu, 2 May 2013 02:22:47 +0000"  >&lt;p&gt;I have not, but my schemas are only ~12K.&lt;/p&gt;

&lt;p&gt;I assume the problem is in the creation of the SCHEMA$ static field?&lt;/p&gt;

&lt;p&gt;We could break the string up into 4k chunks.&lt;/p&gt;

&lt;p&gt;However it will be more efficient and significantly less resulting class file size if we use the Schema API programatically.&lt;/p&gt;

&lt;p&gt;This isn&apos;t too hard.&lt;/p&gt;

&lt;p&gt;We go from the below (edited from one line to many for readability):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; org.apache.avro.Schema SCHEMA$ = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; org.apache.avro.Schema.Parser().parse(
  &lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;HandshakeRequest\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;namespace\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;org.apache.avro.ipc\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;fields\&quot;:[
    {\&lt;span class=&quot;code-quote&quot;&gt;&quot;name\&quot;&lt;/span&gt;:\&lt;span class=&quot;code-quote&quot;&gt;&quot;clientHash\&quot;&lt;/span&gt;,\&lt;span class=&quot;code-quote&quot;&gt;&quot;type\&quot;&lt;/span&gt;:{\&lt;span class=&quot;code-quote&quot;&gt;&quot;type\&quot;&lt;/span&gt;:\&lt;span class=&quot;code-quote&quot;&gt;&quot;fixed\&quot;&lt;/span&gt;,\&lt;span class=&quot;code-quote&quot;&gt;&quot;name\&quot;&lt;/span&gt;:\&lt;span class=&quot;code-quote&quot;&gt;&quot;MD5\&quot;&lt;/span&gt;,\&lt;span class=&quot;code-quote&quot;&gt;&quot;size\&quot;&lt;/span&gt;:16}},
    {\&lt;span class=&quot;code-quote&quot;&gt;&quot;name\&quot;&lt;/span&gt;:\&lt;span class=&quot;code-quote&quot;&gt;&quot;clientProtocol\&quot;&lt;/span&gt;,\&lt;span class=&quot;code-quote&quot;&gt;&quot;type\&quot;&lt;/span&gt;:[\&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;\&quot;&lt;/span&gt;,{\&lt;span class=&quot;code-quote&quot;&gt;&quot;type\&quot;&lt;/span&gt;:\&lt;span class=&quot;code-quote&quot;&gt;&quot;string\&quot;&lt;/span&gt;,\&lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string\&quot;&lt;/span&gt;:\&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;\&quot;&lt;/span&gt;}]},
    {\&lt;span class=&quot;code-quote&quot;&gt;&quot;name\&quot;&lt;/span&gt;:\&lt;span class=&quot;code-quote&quot;&gt;&quot;serverHash\&quot;&lt;/span&gt;,\&lt;span class=&quot;code-quote&quot;&gt;&quot;type\&quot;&lt;/span&gt;:\&lt;span class=&quot;code-quote&quot;&gt;&quot;MD5\&quot;&lt;/span&gt;},
    {\&lt;span class=&quot;code-quote&quot;&gt;&quot;name\&quot;&lt;/span&gt;:\&lt;span class=&quot;code-quote&quot;&gt;&quot;meta\&quot;&lt;/span&gt;,\&lt;span class=&quot;code-quote&quot;&gt;&quot;type\&quot;&lt;/span&gt;:[\&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;\&quot;&lt;/span&gt;,{\&lt;span class=&quot;code-quote&quot;&gt;&quot;type\&quot;&lt;/span&gt;:\&lt;span class=&quot;code-quote&quot;&gt;&quot;map\&quot;&lt;/span&gt;,\&lt;span class=&quot;code-quote&quot;&gt;&quot;values\&quot;&lt;/span&gt;:\&lt;span class=&quot;code-quote&quot;&gt;&quot;bytes\&quot;&lt;/span&gt;,\&lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string\&quot;&lt;/span&gt;:\&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;\&quot;&lt;/span&gt;}]}
  ]}&quot;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to use the new SchemaBuilder:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; org.apache.avro.Schema SCHEMA$;
  &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; {
    SCHEMA$ = SchemaBuilder
      .recordType(&lt;span class=&quot;code-quote&quot;&gt;&quot;HandshakeRequest&quot;&lt;/span&gt;)
      .namespace(&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.avro.ipc&quot;&lt;/span&gt;)
      .requiredFixed(&lt;span class=&quot;code-quote&quot;&gt;&quot;clientHash&quot;&lt;/span&gt;, MD5.SCHEMA$)
      .unionType(&lt;span class=&quot;code-quote&quot;&gt;&quot;clientProtocol&quot;&lt;/span&gt;, SchemaBuilder.unionType(
          SchemaBuilder.NULL,
          SchemaBuilder.STRING)
          .build())
          .addProp(&lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&quot;&lt;/span&gt;)
      .requiredFixed(&lt;span class=&quot;code-quote&quot;&gt;&quot;serverHash&quot;&lt;/span&gt;, MD5.SCHEMA$)
      .unionType(&lt;span class=&quot;code-quote&quot;&gt;&quot;meta&quot;&lt;/span&gt;, SchemaBuilder.unionType(
          SchemaBuilder.NULL,
          SchemaBuilder.mapType(SchemaBuilder.BYTES)
            .addProp(&lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&quot;&lt;/span&gt;)
            .build())
          .build())
      .build();
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13647235" author="mhuff" created="Thu, 2 May 2013 03:23:04 +0000"  >&lt;p&gt;To tack on to &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=trochee&quot; class=&quot;user-hover&quot; rel=&quot;trochee&quot;&gt;Jeremy Kahn&lt;/a&gt;&apos;s comment, this is an issue for the generated Protocol files as well. Both will encounter the same java compiler issue. &lt;/p&gt;</comment>
                            <comment id="13647479" author="cutting" created="Thu, 2 May 2013 12:45:18 +0000"  >&lt;p&gt;I think using SchemaBuilder here would add maintenance costs without much benefit.  We&apos;d need to add and maintain code that serializes a schema as SchenmaBuilder code.  We already have a well-documented and supported string serialization for schemas.  Let&apos;s just chop that string into chunks when we generate code.&lt;/p&gt;</comment>
                            <comment id="13647620" author="mhuff" created="Thu, 2 May 2013 15:21:07 +0000"  >&lt;p&gt;I agree with that approach &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;. I am working on a patch at the moment that should address the issue of splitting the strings up.&lt;/p&gt;</comment>
                            <comment id="13647757" author="mhuff" created="Thu, 2 May 2013 18:02:43 +0000"  >&lt;p&gt;Instead of a single string constant, we split the String up into 65K chunks as a variable &apos;partX&apos;. There is a new parse method for both Protocol and Schema that now accepts an array of string variables (e.g. parse(new String[] &lt;/p&gt;
{ part1, part2 }
&lt;p&gt;)); If the protocol is not large enough to encounter this issue, the output of the generated java files does not change.&lt;/p&gt;</comment>
                            <comment id="13647758" author="mhuff" created="Thu, 2 May 2013 18:03:24 +0000"  >&lt;p&gt;Instead of a single string constant, we split the String up into 65K chunks as a variable &apos;partX&apos;. There is a new parse method for both Protocol and Schema that now accepts an array of string variables (e.g. parse(new String[]&lt;/p&gt;
{ part1, part2}
&lt;p&gt;)); If the protocol is not large enough to encounter this issue, the output of the generated java files does not change.&lt;/p&gt;</comment>
                            <comment id="13648047" author="scott_carey" created="Fri, 3 May 2013 00:13:36 +0000"  >&lt;p&gt;The limit in the (Sun) java compiler is 64KB in encoded UTF-8 bytes, not 64K characters.  If any identifier is a multibyte utf8 character breaking at that boundary will fail.  We probably want to break at a smaller boundary than 2^16.  How about 2^14 (16KB)?&lt;/p&gt;
</comment>
                            <comment id="13648053" author="mhuff" created="Fri, 3 May 2013 00:22:33 +0000"  >&lt;p&gt;You are correct. I mis-spoke in my comment attached. I take the string representation of the object passed in, split it into multiple 64K chunks (not 65 as I said), and return those. For our particular use-case (the one &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=trochee&quot; class=&quot;user-hover&quot; rel=&quot;trochee&quot;&gt;Jeremy Kahn&lt;/a&gt; mentions above) using this approach resolved our issue and the java code compiles correctly.&lt;/p&gt;

&lt;p&gt;The resulting code looks like this in the case where the protocol / schema is too large:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; part1 = &lt;span class=&quot;code-quote&quot;&gt;&quot;......&quot;&lt;/span&gt;;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; part2 = &lt;span class=&quot;code-quote&quot;&gt;&quot;......&quot;&lt;/span&gt;;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; org.apache.avro.Protocol PROTOCOL = org.apache.avro.Protocol.parse(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] {part1, part2});
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Unfortunately, using the static{} block as you suggested above won&apos;t work for the protocol case unless we converted that from an interface to an abstract class. Also, I can&apos;t just concatenate the parts together to make a single variable &amp;#8211; same error of &quot;constant too long&quot; is emitted by javac. I decided to go down the route of multiple part variables to make the line that actually parses the whole thing very readable.&lt;/p&gt;</comment>
                            <comment id="13648060" author="trochee" created="Fri, 3 May 2013 00:28:51 +0000"  >&lt;p&gt;Scott&apos;s right about reducing the character count to 2^14: UTF 8 characters may be up to four bytes each (though that is a &lt;a href=&quot;http://stackoverflow.com/questions/9533258/what-is-the-maximum-number-of-bytes-for-a-utf-8-encoded-character&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;gross overestimate&lt;/a&gt;. I think it would be more likely to be readable in 2^14 character chunks, too.&lt;/p&gt;</comment>
                            <comment id="13648076" author="mhuff" created="Fri, 3 May 2013 00:59:25 +0000"  >&lt;p&gt;That makes sense about needing to accommodate unicode 4-byte characters. In making this change I found an interesting edge case to this patch. Because I am splitting arbitrarily on number of bytes, we can end up with this using the current patch (note that I changed partX to _partX to denote a field that shouldn&apos;t be referenced directly):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; _part1 = &lt;span class=&quot;code-quote&quot;&gt;&quot;....\&quot;&lt;/span&gt;;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; _part2 = &lt;span class=&quot;code-quote&quot;&gt;&quot;&quot;SOME ESCAPED VALUE\&quot;&lt;/span&gt;&quot;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I need to modify this patch to detect an escape character as the last character in the string and shift the bytes as appropriate. That said, I probably also need to find a way to detect that possibly, for the 4-byte unicode characters (or even 2-byte characters) that I chopped the byte array off part-way through those byte sequences. I&apos;ll work on this addendum to the patch tonight / tomorrow.&lt;/p&gt;</comment>
                            <comment id="13648676" author="mhuff" created="Fri, 3 May 2013 18:52:50 +0000"  >&lt;p&gt;Here is the latest version of this patch. This accounts for the troubles we may have encountered when a unicode character got split up into 2 different strings. I chose to go with 2^15 bytes per string as there is plenty of room remaining between that and the max of 2^16. This way, if there is some spill-over when generating the array of bytes from unicode characters, we still will not encounter the &quot;constant too long&quot; error.&lt;/p&gt;</comment>
                            <comment id="13648862" author="cutting" created="Fri, 3 May 2013 22:52:58 +0000"  >&lt;p&gt;Do the static _part fields need to be public?  Shouldn&apos;t they instead be private?&lt;/p&gt;

&lt;p&gt;Also, can we use varargs to parse them, so we don&apos;t need the &apos;new String[] &lt;/p&gt;
{...}
&lt;p&gt;&apos;?&lt;/p&gt;</comment>
                            <comment id="13649782" author="mhuff" created="Mon, 6 May 2013 14:56:12 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; &amp;#8211; I&apos;ve updated the parse methods for both schema and protocol to be a varargs definition. I&apos;ve also updated the record template to output the _part variables as private variables. However, I cannot do the same for protocols as this is an interface. Without some substantive work, we cannot easily convert that to an abstract class as it will break everybody&apos;s code who implements that interface as it exists now.&lt;/p&gt;

&lt;p&gt;Let me know if you see anything else that needs to change.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Micah&lt;/p&gt;</comment>
                            <comment id="13649984" author="cutting" created="Mon, 6 May 2013 18:54:49 +0000"  >&lt;p&gt;We might optimize the parse methods a bit so that:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;calls with a single string don&apos;t copy that string;&lt;/li&gt;
	&lt;li&gt;calls with multiple strings are not quadratic.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This might look something like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Schema parse(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; json, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;... moreJson) {
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (moreJson.length &amp;gt; 0) {
    StringBuilder b = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StringBuilder(json);
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; s : moreJson)
      b.append(s);
    json = b.toString();
  }
  ...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and similarly for Protocol.&lt;/p&gt;

&lt;p&gt;Also, with varargs we can get rid of the _part variables, since the string is not a compile-time constant, so the template could contain just something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; org.apache.avro.Schema SCHEMA$ 
  = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; org.apache.avro.Schema.Parser().parse(${&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.javaSplit($schema.toString())});
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Where javaSplit is defined to split, add escapes to each chunk, then insert commas &amp;amp; quotes.  That would minimize template logic, making it simpler for folks who have alternate templates.&lt;/p&gt;

&lt;p&gt;The javaSplit logic will be simpler if we split before escaping.  We just need to be sure to split into small enough chunks that escapes, UTF-8, etc. won&apos;t cause them to pass the 64k limit.  We might choose something as low as 1k to be safe.  We can then loop calling substring() to break out chunks.  As we create each chunk we can append them to a StringBuilder that&apos;s initialized with the opening quote, then insert quote-comma-quote between each chunk and add a final quote at the end.&lt;/p&gt;</comment>
                            <comment id="13650162" author="mhuff" created="Mon, 6 May 2013 22:07:33 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;--attached is the updated patch with your comments addressed. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=trochee&quot; class=&quot;user-hover&quot; rel=&quot;trochee&quot;&gt;Jeremy Kahn&lt;/a&gt; also did code review of this latest version of the patch. We decided to break down the &lt;tt&gt;splitJavaEscape&lt;/tt&gt; function into just a function that splits an object into strings of length &lt;tt&gt;MAX_BYTES&lt;/tt&gt; or less. On each of those string, in the template call &lt;tt&gt;javaEscape&lt;/tt&gt; independently.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13650249" author="cutting" created="Mon, 6 May 2013 23:49:37 +0000"  >&lt;p&gt;Here&apos;s a version of the patch with a few modifications:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;use a StringBuilder to append strings, to avoid quadratic complexity&lt;/li&gt;
	&lt;li&gt;simpler splitter&lt;/li&gt;
	&lt;li&gt;no added template complexity&lt;/li&gt;
	&lt;li&gt;tests that run Java compiler on split Avro compiler output&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13650253" author="cutting" created="Mon, 6 May 2013 23:52:27 +0000"  >&lt;p&gt;Version without debug print statements.&lt;/p&gt;</comment>
                            <comment id="13650816" author="mhuff" created="Tue, 7 May 2013 13:52:09 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;--That looks good. I ran our code through your patch and it works just as well as ours. &lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;

&lt;p&gt;Micah&lt;/p&gt;</comment>
                            <comment id="13651081" author="cutting" created="Tue, 7 May 2013 17:19:51 +0000"  >&lt;p&gt;Micah, thanks for validating the patch.&lt;/p&gt;

&lt;p&gt;Here&apos;s a slightly updated version.  I kept the old method parse signatures so this is now binary-compatible, so when folks upgrade from 1.7.4 they won&apos;t need to recompile their generated Java.  I also fixed a test where these changes somehow tickled a Java 7/JUnit problem.&lt;/p&gt;

&lt;p&gt;I&apos;ll commit this soon unless someone objects.&lt;/p&gt;</comment>
                            <comment id="13651117" author="mhuff" created="Tue, 7 May 2013 17:59:34 +0000"  >&lt;p&gt;Looks good! Thank you Doug.&lt;/p&gt;</comment>
                            <comment id="13651254" author="scott_carey" created="Tue, 7 May 2013 20:17:52 +0000"  >&lt;p&gt;Looks good.  +1&lt;/p&gt;</comment>
                            <comment id="13651392" author="mhuff" created="Tue, 7 May 2013 22:39:23 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; &amp;#8211; We&apos;re having some troubles with a 1.7.4--&amp;gt;1.7.5 compatibility issue specifically around the updated signatures for the parse methods. I&apos;m working on trying to put together a repro case to see if it is something on our end or an issue in the Avro project itself. Just FYI that there still appears to be an issue here.&lt;/p&gt;</comment>
                            <comment id="13651402" author="cutting" created="Tue, 7 May 2013 22:52:48 +0000"  >&lt;p&gt;Micah, is that with my most recent version of the patch?  That should be back-compatible, in that code compiled against 1.7.4 should run against 1.7.5, but not vice-versa for schemas longer than 1024 characters.&lt;/p&gt;

&lt;p&gt;This might be a reason to bump that back up to a larger value, so that, for most folks, the compiled code is also forward-compatible, so that for schemas shorter than 64k bytes, compiling against 1.7.5 will generate code that also works against 1.7.4 jar files.&lt;/p&gt;

&lt;p&gt;We could work harder to only generate the new signature when needed.  For example, if there are more than 16k characters then we could convert the string to UTF-8 and only use the new encoding if that&apos;s over 64kB, otherwise stick with a single string.  Then we&apos;d only use the new signature in cases that couldn&apos;t compile at all before.&lt;/p&gt;</comment>
                            <comment id="13651921" author="mhuff" created="Wed, 8 May 2013 14:13:26 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;--I&apos;m not positive this is actually an issue with this code change. We are still looking into it but it appears it could be an issue with how our hadoop environment is configured and that it is not pulling in avro 1.7.5-SNAPSHOT for our files with the very large schemas but rather an old version which then results in the &apos;NoSuchMethodException&apos; being thrown.&lt;/p&gt;

&lt;p&gt;I tried to repro this using a simple test case as described here and everything worked. I generated a protocol definition that was beyond the 1K scope. I compiled the protocol using 1.7.4 Avro. Once I had my protocol, I generated a file using Avro 1.7.4 of data types from that sample protocol. I then swapped out 1.7.4 Avro in favor of 1.7.5-SNAPSHOT and tried to read in that file I had just generated. I was able to read everything out just fine.&lt;/p&gt;

&lt;p&gt;We plan on continuing to march through this today and will hopefully have more information soon.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="13653023" author="cutting" created="Thu, 9 May 2013 15:53:37 +0000"  >&lt;p&gt;Micah: any update here?  I&apos;d like to commit this.&lt;/p&gt;</comment>
                            <comment id="13653062" author="scott_carey" created="Thu, 9 May 2013 16:38:59 +0000"  >&lt;p&gt;We could make it so that 1.7.4 code can read classes generated with 1.7.5.&lt;/p&gt;

&lt;p&gt;If the method that takes the split strings and merges them into one with the string buffer before parsing is inside the generated class rather than Schema.Parser, the change would be two-way compatible.  This is not quite as elegant however, and I think the requirement to run code generated by 1.7.5 with 1.7.5 is reasonable.&lt;/p&gt;</comment>
                            <comment id="13653259" author="mhuff" created="Thu, 9 May 2013 21:40:38 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;--This ticket can be merged in. Thank you for following up. &lt;/p&gt;</comment>
                            <comment id="13653308" author="cutting" created="Thu, 9 May 2013 22:15:42 +0000"  >&lt;p&gt;I committed this.  Thanks, Jeremy.&lt;/p&gt;</comment>
                            <comment id="13653409" author="hudson" created="Fri, 10 May 2013 00:08:59 +0000"  >&lt;p&gt;Integrated in AvroJava #372 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/372/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/372/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1316&quot; title=&quot;IDL code-generation generates too-long literals for very large schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1316&quot;&gt;&lt;del&gt;AVRO-1316&lt;/del&gt;&lt;/a&gt;. Java: Fix compiler to split long schema string constants so javac can compile them.  Contributed by Jeremy Kahn. (Revision 1480808)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
cutting : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/Protocol.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/Schema.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/TestProtocol.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/compiler/src/main/java/org/apache/avro/compiler/specific/SpecificCompiler.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/classic/protocol.vm&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/classic/record.vm&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/test/java/org/apache/avro/tool/TestSpecificCompilerTool.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14002465" author="jinalshah2007" created="Mon, 19 May 2014 21:54:56 +0000"  >&lt;p&gt;I&apos;m using 1.7.5 but still getting the error. So is there something else that needs to be added for this to work?&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12636588">AVRO-1274</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12582132" name="AVRO-1316.patch" size="13547" author="cutting" created="Tue, 7 May 2013 17:19:51 +0000"/>
                            <attachment id="12582001" name="AVRO-1316.patch" size="11607" author="cutting" created="Mon, 6 May 2013 23:52:27 +0000"/>
                            <attachment id="12581999" name="AVRO-1316.patch" size="9206" author="cutting" created="Mon, 6 May 2013 23:49:37 +0000"/>
                            <attachment id="12581973" name="AVRO-1316.patch" size="15626" author="mhuff" created="Mon, 6 May 2013 22:07:33 +0000"/>
                            <attachment id="12581894" name="AVRO-1316.patch" size="17138" author="mhuff" created="Mon, 6 May 2013 14:56:12 +0000"/>
                            <attachment id="12581728" name="AVRO-1316.patch" size="16259" author="mhuff" created="Fri, 3 May 2013 18:52:50 +0000"/>
                            <attachment id="12581558" name="AVRO-1316.patch" size="15007" author="mhuff" created="Thu, 2 May 2013 18:03:24 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 2 May 2013 02:22:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326082</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 35 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1k987:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326427</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Correct java compilation error when schema is too large to be stored in a single String constant</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>IDL</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1317] Support for get subschema from the outer one</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1317</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;C++ should add the feature of get nested schema from the outer one. &lt;br/&gt;
Java using the Parser.getTypes() to access the nested schema map, and C has a function named as avro_schema_get_subschema(), C++ should implement a similar feature, it is helpful to reduce schema definition copies.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12645804">AVRO-1317</key>
            <summary>Support for get subschema from the outer one</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="fjcyue">Zhenghua Chen</reporter>
                        <labels>
                    </labels>
                <created>Thu, 2 May 2013 13:02:06 +0000</created>
                <updated>Thu, 2 May 2013 13:02:06 +0000</updated>
                                            <version>1.7.4</version>
                                                    <component>c++</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326163</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 38 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1k9q7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326508</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1318] Python schema should store fingerprints</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1318</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Python schema objects need to produce a simple representation that demonstrates their field identity.   &lt;/p&gt;
{avro.schema.Schema}
&lt;p&gt; objects need to provide a &lt;/p&gt;
{fingerprint}
&lt;p&gt; member field to enable quick checking of schema matching (even when the schema has other, possibly changed decoration).&lt;/p&gt;

&lt;p&gt;Based on a patch pulled from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=laserson&quot; class=&quot;user-hover&quot; rel=&quot;laserson&quot;&gt;Uri Laserson&lt;/a&gt;&apos;s proposed changes to make a collection of C-typing hints.  These changes will be backwards-compatible.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12646272">AVRO-1318</key>
            <summary>Python schema should store fingerprints</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="trochee">Jeremy Kahn</assignee>
                                    <reporter username="trochee">Jeremy Kahn</reporter>
                        <labels>
                            <label>features</label>
                    </labels>
                <created>Mon, 6 May 2013 19:04:58 +0000</created>
                <updated>Wed, 7 Oct 2015 20:42:58 +0000</updated>
                                                                            <component>python</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13650214" author="trochee" created="Mon, 6 May 2013 23:14:44 +0000"  >&lt;p&gt;Patch from &lt;a href=&quot;https://github.com/jkahn/avro/tree/AVRO-1318&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.  A copy of changes from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=laserson&quot; class=&quot;user-hover&quot; rel=&quot;laserson&quot;&gt;Uri Laserson&lt;/a&gt; for fingerprinting files.&lt;/p&gt;</comment>
                            <comment id="13650216" author="trochee" created="Mon, 6 May 2013 23:15:07 +0000"  >&lt;p&gt;Tests pass &lt;tt&gt;ant clean build&lt;/tt&gt; for me.&lt;/p&gt;</comment>
                            <comment id="13650219" author="trochee" created="Mon, 6 May 2013 23:17:00 +0000"  >&lt;p&gt;Oh, to be clear: when &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1323&quot; title=&quot;Python request schemas should report fullname&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1323&quot;&gt;AVRO-1323&lt;/a&gt; is included, then &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1318&quot; title=&quot;Python schema should store fingerprints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1318&quot;&gt;AVRO-1318&lt;/a&gt; passes. The &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1318&quot; title=&quot;Python schema should store fingerprints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1318&quot;&gt;AVRO-1318&lt;/a&gt; changes trigger the bug that &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1323&quot; title=&quot;Python request schemas should report fullname&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1323&quot;&gt;AVRO-1323&lt;/a&gt; addresses.&lt;/p&gt;</comment>
                            <comment id="13652062" author="trochee" created="Wed, 8 May 2013 17:09:00 +0000"  >&lt;p&gt;Nudging this issue to ask for review from a Pythonista and/or a committer. It&apos;d be great if &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1318&quot; title=&quot;Python schema should store fingerprints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1318&quot;&gt;AVRO-1318&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1323&quot; title=&quot;Python request schemas should report fullname&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1323&quot;&gt;AVRO-1323&lt;/a&gt; could be included in Avro 1.7.5 release.&lt;/p&gt;</comment>
                            <comment id="13696996" author="cutting" created="Mon, 1 Jul 2013 17:36:35 +0000"  >&lt;p&gt;This is a different notion of &quot;fingerprint&quot; than is used in the Avro specification:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://avro.apache.org/docs/current/spec.html#Schema+Fingerprints&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/current/spec.html#Schema+Fingerprints&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Is the purpose the same?  If so, perhaps this should implement the specification.  If not, can you please explain the purpose?&lt;/p&gt;</comment>
                            <comment id="13697032" author="trochee" created="Mon, 1 Jul 2013 18:13:37 +0000"  >&lt;p&gt;The purpose is roughly the same, if I understand correctly. This &quot;fingerprint&quot; notion is copied from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=laserson&quot; class=&quot;user-hover&quot; rel=&quot;laserson&quot;&gt;Uri Laserson&lt;/a&gt;&apos;s &lt;a href=&quot;https://github.com/laserson/avro/tree/perf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;perf branch&lt;/a&gt; to avoid recomputation of evolution decisions (to &quot;to cache encoder and decoder objects&quot;, quoting the spec).&lt;/p&gt;

&lt;p&gt;This delta does most of the &quot;parsing canonical form&quot; part of the spec, if I understand correctly, but should be reviewed in light of that, for sure.&lt;/p&gt;

&lt;p&gt;I&apos;ve found Uri&apos;s work on this useful to support Cython extensions, but adapting the Python decoder and encoder to cache those encoders and decoders is a pretty big change. I thought this one bit should be safe enough to include without requiring a 1.8.0 bump, so I pushed it forward as a proposal.&lt;/p&gt;</comment>
                            <comment id="13697059" author="cutting" created="Mon, 1 Jul 2013 18:48:02 +0000"  >&lt;p&gt;I&apos;d prefer we don&apos;t overload the term &apos;fingerprint&apos;.  Perhaps this could be called &apos;profile&apos; or &apos;signature&apos; instead?  Or it might be reworked to actually be &quot;parsing canonical form&quot;.&lt;/p&gt;

&lt;p&gt;It&apos;s also strange to me to add something like this without adding a use of it.  It doesn&apos;t seem like an end-user feature.  If it&apos;s to aid performance, then the performance improvements should probably be added too, validating these changes.&lt;/p&gt;

&lt;p&gt;Perhaps we should we try to get Uri to contribute his Perf branch?&lt;/p&gt;</comment>
                            <comment id="13697076" author="trochee" created="Mon, 1 Jul 2013 19:05:08 +0000"  >&lt;p&gt;It is not an end-user use case. it&apos;s a useful performance win, if you&apos;re caching encoder and decoder objects, as Uri&apos;s changes do. I&apos;ve written my own extensions based heavily on this &quot;signature&quot; behavior.&lt;/p&gt;

&lt;p&gt;I&apos;d be happy to have &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=laserson&quot; class=&quot;user-hover&quot; rel=&quot;laserson&quot;&gt;Uri Laserson&lt;/a&gt;&apos;s perf branch added. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;, perhaps you can go chat with him about this? He&apos;s a Clouderian, if I understand correctly.&lt;/p&gt;</comment>
                            <comment id="13698466" author="laserson" created="Wed, 3 Jul 2013 01:02:46 +0000"  >&lt;p&gt;I&apos;d be happy to contribute, though it requires some additional cleanup.  The only issue is that implementing these performance improvements would substantially change (and simplify) the read/write API.&lt;/p&gt;</comment>
                            <comment id="13698498" author="trochee" created="Wed, 3 Jul 2013 02:05:01 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=laserson&quot; class=&quot;user-hover&quot; rel=&quot;laserson&quot;&gt;Uri Laserson&lt;/a&gt;, glad you&apos;re game to contribute!&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;what cleanup do you think is needed?&lt;/li&gt;
	&lt;li&gt;would it be possible to use your work &lt;em&gt;without&lt;/em&gt; requiring a change to the read/write API? (could the old API be preserved in terms of your new one?)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13699190" author="cutting" created="Wed, 3 Jul 2013 17:13:42 +0000"  >&lt;p&gt;An alternative is to add an entirely new API and deprecate the old one.&lt;/p&gt;

&lt;p&gt;If we add a new API it would be good to have it object-based rather than dictionary-based (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-283&quot; title=&quot;Change the new Python implementation from dictionaries to objects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-283&quot;&gt;AVRO-283&lt;/a&gt;), and for it to correctly resolve unions, using record names rather than recursive validation (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1343&quot; title=&quot;Python: validate too permissive on records with extra fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1343&quot;&gt;AVRO-1343&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13699249" author="trochee" created="Wed, 3 Jul 2013 17:52:20 +0000"  >&lt;p&gt;I prefer the approach you (&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;) suggest &amp;#8211; especially the object aspects of it, and especially if the objects can be derived from &lt;tt&gt;collections.Sequence&lt;/tt&gt; and &lt;tt&gt;collections.Mapping&lt;/tt&gt; so that existing accessors can keep working the same way.&lt;/p&gt;

&lt;p&gt;Unfortunately, I don&apos;t have any free cycles for this, though I&apos;d be happy to contribute later in July. I don&apos;t know if this should block 1.7.5 release though.&lt;/p&gt;
</comment>
                            <comment id="13699355" author="laserson" created="Wed, 3 Jul 2013 19:36:57 +0000"  >&lt;p&gt;I don&apos;t have bandwidth at this exact moment either.  Probably better in August.&lt;/p&gt;

&lt;p&gt;Switching to object-based is also another larger effort I think, though not a bad idea, since the python dicts don&apos;t exactly correspond to Avro records IIRC.&lt;/p&gt;</comment>
                            <comment id="14940384" author="sohlemac" created="Thu, 1 Oct 2015 20:48:52 +0000"  >&lt;p&gt;It&apos;s been 2+ years since this was touched. Any hope of getting python2/3 schema normalization and fingerprinting into a release? (I believe there is even an open pull request for a python2 implementation: &lt;a href=&quot;https://github.com/apache/avro/pull/48&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/48&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="14947543" author="rdblue" created="Wed, 7 Oct 2015 20:42:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sohlemac&quot; class=&quot;user-hover&quot; rel=&quot;sohlemac&quot;&gt;Scott Ohlemacher&lt;/a&gt;, sure. I&apos;ll have a look. Thanks for bumping it. Since this is a long-stale issue are you comfortable making any changes need to the patch to get it in?&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12646323">AVRO-1323</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12581992" name="AVRO-1318.patch" size="2971" author="trochee" created="Mon, 6 May 2013 23:14:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 1 Jul 2013 17:36:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326630</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 15 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kclz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326975</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1319] Two new tools: random &amp; totrevni</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1319</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I&apos;ve added two new tools:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&quot;random&quot; to generate a data file of random records given a schema&lt;/li&gt;
	&lt;li&gt;&quot;totrevni&quot; to convert an Avro data file to trevni format&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;These have proven useful to me in debugging, so I thought I&apos;d share them.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12646283">AVRO-1319</key>
            <summary>Two new tools: random &amp; totrevni</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Mon, 6 May 2013 20:10:29 +0000</created>
                <updated>Tue, 20 Aug 2013 17:46:07 +0000</updated>
                            <resolved>Thu, 9 May 2013 20:57:58 +0000</resolved>
                                                    <fixVersion>1.7.5</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13652417" author="cutting" created="Wed, 8 May 2013 22:22:20 +0000"  >&lt;p&gt;Here&apos;s a new version of this patch that includes tests for each of the new tools.&lt;/p&gt;

&lt;p&gt;I&apos;ll commit this soon unless there are objections.&lt;/p&gt;</comment>
                            <comment id="13653185" author="cutting" created="Thu, 9 May 2013 20:57:58 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                            <comment id="13653407" author="hudson" created="Fri, 10 May 2013 00:08:58 +0000"  >&lt;p&gt;Integrated in AvroJava #372 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/372/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/372/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1319&quot; title=&quot;Two new tools: random &amp;amp; totrevni&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1319&quot;&gt;&lt;del&gt;AVRO-1319&lt;/del&gt;&lt;/a&gt;. Java: Add command line tools to generate random data files and to convert Avro to Trevni. (Revision 1480766)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
cutting : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/CreateRandomFileTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/Main.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/ToTrevniTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/test/java/org/apache/avro/tool/TestCreateRandomFileTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/test/java/org/apache/avro/tool/TestToTrevniTool.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12582371" name="AVRO-1319.patch" size="14912" author="cutting" created="Wed, 8 May 2013 22:22:20 +0000"/>
                            <attachment id="12581944" name="AVRO-1319.patch" size="8093" author="cutting" created="Mon, 6 May 2013 20:12:39 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 10 May 2013 00:08:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326641</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 37 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kcof:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326986</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1320] Java: Trevni incorrectly reads specific enums.</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1320</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Enums generated by the specific compiler are not read correctly when written to an Avro data file.&lt;/p&gt;

&lt;p&gt;Reported by Bernd Fondermann on the developer mailing list.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12646286">AVRO-1320</key>
            <summary>Java: Trevni incorrectly reads specific enums.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Mon, 6 May 2013 20:24:05 +0000</created>
                <updated>Tue, 20 Aug 2013 17:46:08 +0000</updated>
                            <resolved>Wed, 8 May 2013 17:36:05 +0000</resolved>
                                                    <fixVersion>1.7.5</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13650078" author="cutting" created="Mon, 6 May 2013 20:28:09 +0000"  >&lt;p&gt;Here&apos;s a patch that should fix this.&lt;/p&gt;

&lt;p&gt;Bernd, can you please verify whether this fixes things for you?&lt;/p&gt;</comment>
                            <comment id="13650880" author="brainlounge" created="Tue, 7 May 2013 14:27:43 +0000"  >&lt;p&gt;the patch itself works, but does not resolve things for me.&lt;br/&gt;
after applying the patch, WPPage now contains in put()&lt;br/&gt;
    case 3: type = (generated.WPPageType)value$; break;&lt;br/&gt;
However, even with a freshly generated trevi file, when reading it I still get:&lt;br/&gt;
   Exception in thread &quot;main&quot; java.lang.ClassCastException: java.lang.Integer cannot be cast to generated.WPPageType&lt;br/&gt;
It seems the deserialization still creates an Integer.&lt;/p&gt;


</comment>
                            <comment id="13650984" author="cutting" created="Tue, 7 May 2013 15:53:54 +0000"  >&lt;p&gt;Can you please post the full schema and stack trace?  Thanks!&lt;/p&gt;</comment>
                            <comment id="13651183" author="brainlounge" created="Tue, 7 May 2013 19:04:59 +0000"  >&lt;p&gt;stack trace:&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; java.lang.ClassCastException: java.lang.Integer cannot be cast to generated.WPPageType&lt;br/&gt;
	at generated.WPPage.put(WPPage.java:50)&lt;br/&gt;
	at org.apache.avro.generic.GenericData.setField(GenericData.java:530)&lt;br/&gt;
	at org.apache.trevni.avro.AvroColumnReader.read(AvroColumnReader.java:221)&lt;br/&gt;
	at org.apache.trevni.avro.AvroColumnReader.next(AvroColumnReader.java:190)&lt;br/&gt;
	at trevni.TrevniFileDump.main(TrevniFileDump.java:38)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)&lt;/p&gt;

&lt;p&gt;schema:&lt;br/&gt;
{&lt;br/&gt;
    &quot;namespace&quot;: &quot;generated&quot;,&lt;br/&gt;
    &quot;type&quot;: &quot;record&quot;,&lt;br/&gt;
    &quot;name&quot;: &quot;WPPage&quot;,&lt;br/&gt;
    &quot;fields&quot;: [&lt;br/&gt;
        &lt;/p&gt;
{
            &quot;name&quot;: &quot;name&quot;,
            &quot;type&quot;: &quot;string&quot;
        }
&lt;p&gt;,&lt;br/&gt;
        &lt;/p&gt;
{
            &quot;name&quot;: &quot;size&quot;,
            &quot;type&quot;: &quot;int&quot;
        }
&lt;p&gt;,&lt;br/&gt;
        {&lt;br/&gt;
            &quot;name&quot;: &quot;links&quot;,&lt;br/&gt;
            &quot;type&quot;: &lt;/p&gt;
{
                &quot;type&quot;: &quot;array&quot;,
                &quot;items&quot;: &quot;string&quot;
            }
&lt;p&gt;        },&lt;br/&gt;
        {&lt;br/&gt;
            &quot;name&quot;: &quot;type&quot;,&lt;br/&gt;
            &quot;type&quot;: [&lt;br/&gt;
                &lt;/p&gt;
{
                    &quot;namespace&quot;: &quot;generated&quot;,
                    &quot;name&quot;: &quot;WPPageType&quot;,
                    &quot;type&quot;: &quot;enum&quot;,
                    &quot;symbols&quot;: [&quot;article&quot;, &quot;redirect&quot;, &quot;disambiguation&quot;]
                }
&lt;p&gt;,&lt;br/&gt;
                &quot;null&quot;&lt;br/&gt;
            ]&lt;br/&gt;
        }&lt;br/&gt;
    ]&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;I&apos;ll try again without the union.&lt;/p&gt;</comment>
                            <comment id="13651220" author="brainlounge" created="Tue, 7 May 2013 19:41:40 +0000"  >&lt;p&gt;with a simple nested enum type the patch fixes this issue.&lt;/p&gt;</comment>
                            <comment id="13651309" author="cutting" created="Tue, 7 May 2013 21:03:58 +0000"  >&lt;p&gt;I found the problem with the union.  The wrong schema was passed down.  Here&apos;s a patch that fixes that too and adds a test for it.&lt;/p&gt;</comment>
                            <comment id="13651675" author="brainlounge" created="Wed, 8 May 2013 07:18:51 +0000"  >&lt;p&gt;problem is fixed for me. thanks for the quick help.&lt;/p&gt;</comment>
                            <comment id="13652101" author="cutting" created="Wed, 8 May 2013 17:36:05 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12582167" name="AVRO-1320.patch" size="5213" author="cutting" created="Tue, 7 May 2013 21:03:58 +0000"/>
                            <attachment id="12581948" name="AVRO-1320.patch" size="3861" author="cutting" created="Mon, 6 May 2013 20:28:09 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 May 2013 14:27:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326644</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 37 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kcp3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326989</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1321] Avro-ipc-tests in compile scope instead of test in Avro-mapred</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1321</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;org.apache.avro:avro-ipc:1.7.3:tests is listed in &quot;compile&quot; scope instead of &quot;test&quot; scope.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12646293">AVRO-1321</key>
            <summary>Avro-ipc-tests in compile scope instead of test in Avro-mapred</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.svg">Trivial</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="bewang.tech">Benyi Wang</reporter>
                        <labels>
                    </labels>
                <created>Mon, 6 May 2013 21:01:00 +0000</created>
                <updated>Sun, 30 Dec 2018 04:17:18 +0000</updated>
                                            <version>1.7.3</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326651</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 37 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kcqn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326996</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1322] Publish trevni-avro artifact with Hadoop version classifier</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1322</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The avro-mapred maven artifact is published with a classifier based on the version of hadoop (1 or 2) is was built against. It would be great if trevni-avro did the same.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12646299">AVRO-1322</key>
            <summary>Publish trevni-avro artifact with Hadoop version classifier</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="massie">Matt Massie</assignee>
                                    <reporter username="massie">Matt Massie</reporter>
                        <labels>
                    </labels>
                <created>Mon, 6 May 2013 21:26:02 +0000</created>
                <updated>Tue, 20 Aug 2013 17:46:07 +0000</updated>
                            <resolved>Thu, 9 May 2013 21:15:26 +0000</resolved>
                                    <version>1.7.4</version>
                                    <fixVersion>1.7.5</fixVersion>
                                    <component>trevni</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13650180" author="cutting" created="Mon, 6 May 2013 22:30:59 +0000"  >&lt;p&gt;Can we move the profile stuff up to lang/java/pom.xml so it&apos;s not duplicated in two modules but rather shared?&lt;/p&gt;</comment>
                            <comment id="13650184" author="cutting" created="Mon, 6 May 2013 22:34:46 +0000"  >&lt;p&gt;Also, the Trevni change can probably be pushed down to lang/java/trevni/avro/pom.xml, since that&apos;s where the Trevni mapreduce code is, no?&lt;/p&gt;</comment>
                            <comment id="13650241" author="massie" created="Mon, 6 May 2013 23:42:05 +0000"  >&lt;p&gt;I&apos;ll fix this patch.&lt;/p&gt;

&lt;p&gt;1. I&apos;ll move the new profiles into trevni/avro&lt;br/&gt;
2. I&apos;ll change trenvi/avro to depend on the correct version of avro-mapreduce (instead of hadoop-*)&lt;/p&gt;</comment>
                            <comment id="13650318" author="massie" created="Tue, 7 May 2013 01:02:34 +0000"  >&lt;p&gt;Tested this patch by running&lt;/p&gt;

&lt;p&gt;$ mvn -Dhadoop.version=1 clean install&lt;br/&gt;
$ mvn -Dhadoop.version=2 clean install&lt;/p&gt;
</comment>
                            <comment id="13650340" author="massie" created="Tue, 7 May 2013 01:12:03 +0000"  >&lt;p&gt;Actually, to build the hadoop1 version the command is `mvn clean install` without the &lt;tt&gt;-Dhadoop.version=1&lt;/tt&gt;. You only need the define to build hadoop version 2.&lt;/p&gt;</comment>
                            <comment id="13652033" author="cutting" created="Wed, 8 May 2013 16:28:39 +0000"  >&lt;p&gt;Matt, this looks good.  I&apos;ll commit it soon unless someone objects.&lt;/p&gt;</comment>
                            <comment id="13653220" author="cutting" created="Thu, 9 May 2013 21:15:26 +0000"  >&lt;p&gt;I committed this.  Thanks, Matt.&lt;/p&gt;</comment>
                            <comment id="13653406" author="hudson" created="Fri, 10 May 2013 00:08:58 +0000"  >&lt;p&gt;Integrated in AvroJava #372 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/372/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/372/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1322&quot; title=&quot;Publish trevni-avro artifact with Hadoop version classifier&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1322&quot;&gt;&lt;del&gt;AVRO-1322&lt;/del&gt;&lt;/a&gt;. Java: Add Hadoop version classifier to trevni-avro Maven artifacts.  Contributed by massie. (Revision 1480775)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
cutting : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/trevni/avro/pom.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12582016" name="0001-AVRO-1322.-Publish-trevni-avro-artifact-with-Hadoop-.patch" size="4641" author="massie" created="Tue, 7 May 2013 01:02:34 +0000"/>
                            <attachment id="12581959" name="0001-POM-Fixup.patch" size="3126" author="massie" created="Mon, 6 May 2013 21:29:35 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 6 May 2013 22:30:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326657</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 37 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kcrz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>327002</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1323] Python request schemas should report fullname</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1323</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Avro request objects in the Python library are treated as a special kind of record schema without a name. But such objects should have a name &amp;#8211; if nothing else, they should have the same name as the message that they belong to.&lt;/p&gt;

&lt;p&gt;Blocks &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1318&quot; title=&quot;Python schema should store fingerprints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1318&quot;&gt;AVRO-1318&lt;/a&gt;, in which fingerprints require every schema type &amp;#8211; including requests &amp;#8211; to report a fingerprint (usually their name).&lt;/p&gt;

&lt;p&gt;It&apos;s an easy fix; I&apos;ll attach a patch in a few minutes.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12646323">AVRO-1323</key>
            <summary>Python request schemas should report fullname</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="trochee">Jeremy Kahn</assignee>
                                    <reporter username="trochee">Jeremy Kahn</reporter>
                        <labels>
                    </labels>
                <created>Mon, 6 May 2013 23:05:23 +0000</created>
                <updated>Wed, 8 May 2013 20:13:58 +0000</updated>
                                                                            <component>python</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13650212" author="trochee" created="Mon, 6 May 2013 23:09:22 +0000"  >&lt;p&gt;Patch work done &lt;a href=&quot;https://github.com/jkahn/avro/tree/AVRO-1323&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12646272">AVRO-1318</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12581989" name="AVRO-1323.patch" size="1362" author="trochee" created="Mon, 6 May 2013 23:07:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326681</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 37 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kcx3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>327026</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1324] Avro-C: namespace lookup and inherited namespaces</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1324</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It seems that the C version of Avro doesn&apos;t resolve fully-qualified type names, and it doesn&apos;t&lt;br/&gt;
understand inherited namespaces.&lt;/p&gt;

&lt;p&gt;For example this doesn&apos;t work:&lt;/p&gt;

&lt;p&gt;{&quot;type&quot;: &quot;record&quot;, &quot;namespace&quot;: &quot;x&quot;, &quot;name&quot;: &quot;Y&quot;, &quot;fields&quot;: [&lt;br/&gt;
  {&quot;name&quot;: &quot;e&quot;, &quot;type&quot;: {&quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;Z&quot;, &quot;fields&quot;: [&lt;/p&gt;
    {&quot;name&quot;: &quot;f&quot;, &quot;type&quot;: &quot;x.Z&quot;}
&lt;p&gt;  ]}}&lt;br/&gt;
]}&lt;/p&gt;

&lt;p&gt;It can&apos;t find the type &quot;x.Z&quot;.&lt;/p&gt;

&lt;p&gt;(this is similar to a Ruby problem &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-635&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-635&lt;/a&gt;).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12646398">AVRO-1324</key>
            <summary>Avro-C: namespace lookup and inherited namespaces</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="bw123">Ben Walsh</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 May 2013 11:46:13 +0000</created>
                <updated>Fri, 24 May 2013 16:10:58 +0000</updated>
                            <resolved>Fri, 24 May 2013 13:49:42 +0000</resolved>
                                    <version>1.7.4</version>
                    <version>1.7.5</version>
                    <version>1.8.0</version>
                                                    <component>c</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13650746" author="bw123" created="Tue, 7 May 2013 11:50:09 +0000"  >&lt;p&gt;This patch also adds more testing to test_avro_schema.c so that it does a read-write-read and compares the two schemas read.&lt;/p&gt;

&lt;p&gt;Also schema writing doesn&apos;t write the namespace where it&apos;s the same as the inherited one.&lt;/p&gt;</comment>
                            <comment id="13651764" author="bw123" created="Wed, 8 May 2013 10:27:23 +0000"  >&lt;p&gt;Resubmitted patch file with name that matches issue code.&lt;/p&gt;</comment>
                            <comment id="13666313" author="dcreager" created="Fri, 24 May 2013 13:49:42 +0000"  >&lt;p&gt;Looks good.  Thanks for including a test case.  Merged into SVN.&lt;/p&gt;</comment>
                            <comment id="13666416" author="hudson" created="Fri, 24 May 2013 16:10:58 +0000"  >&lt;p&gt;Integrated in AvroJava #376 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/376/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/376/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1324&quot; title=&quot;Avro-C: namespace lookup and inherited namespaces&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1324&quot;&gt;&lt;del&gt;AVRO-1324&lt;/del&gt;&lt;/a&gt;. C: Handle namespaces when parsing schemas&lt;/p&gt;

&lt;p&gt;The schema parser can now handle fully-qualified schema references, and it&lt;br/&gt;
understands inherited namespaces.&lt;/p&gt;

&lt;p&gt;Contributed by Ben Walsh. (Revision 1486053)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
dcreager : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/c/src/allocation.c&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/c/src/avro/allocation.h&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/c/src/avro_private.h&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/c/src/schema.c&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/c/src/schema_equal.c&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/c/tests/schema_tests/pass/namespace_recursive&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/c/tests/schema_tests/pass/namespace_simple&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/c/tests/test_avro_schema.c&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12582278" name="AVRO-1324.patch" size="18659" author="bw123" created="Wed, 8 May 2013 10:27:23 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 24 May 2013 13:49:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326756</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 35 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kddr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>327101</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1325] Enhanced Schema Builder API</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1325</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The schema builder from &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1274&quot; title=&quot;Add a schema builder API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1274&quot;&gt;&lt;del&gt;AVRO-1274&lt;/del&gt;&lt;/a&gt; has a few key limitations.  I have proposed changes to make before it is released and the public API is locked in.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12646492">AVRO-1325</key>
            <summary>Enhanced Schema Builder API</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="scott_carey">Scott Carey</assignee>
                                    <reporter username="scott_carey">Scott Carey</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 May 2013 20:19:36 +0000</created>
                <updated>Tue, 20 Aug 2013 17:46:06 +0000</updated>
                            <resolved>Sun, 28 Jul 2013 22:11:28 +0000</resolved>
                                                    <fixVersion>1.7.5</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13651288" author="scott_carey" created="Tue, 7 May 2013 20:49:27 +0000"  >&lt;p&gt;Below are the limitations that concern me from &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1274&quot; title=&quot;Add a schema builder API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1274&quot;&gt;&lt;del&gt;AVRO-1274&lt;/del&gt;&lt;/a&gt;, in approximate priority of my concern.&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Arbitrary properties are not supported, for example 
{&quot;type&quot;:&quot;string&quot;, &quot;avro.java.string&quot;:&quot;String&quot;}
&lt;p&gt; can not be built.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;SchemaBuilder.INT and other constants are public.  Unfortunately, these are mutable, and anyone could call addProp() on these, affecting others.&lt;/li&gt;
	&lt;li&gt;Scopes are confusing, it is not always obvious when a&lt;/li&gt;
	&lt;li&gt;Does not chain to nested types.  Although there is limited chaining for record fields, nested calls to the builder are required which prevents supporting namespace nesting or other passing of context from outer to inner scopes.&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;I have a prototype patch that builds on the work in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1274&quot; title=&quot;Add a schema builder API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1274&quot;&gt;&lt;del&gt;AVRO-1274&lt;/del&gt;&lt;/a&gt;.  The major changes are to how scopes are handled for fields and unions, since adding property support is not trivial on top of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1274&quot; title=&quot;Add a schema builder API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1274&quot;&gt;&lt;del&gt;AVRO-1274&lt;/del&gt;&lt;/a&gt; because there is much ambiguity in what a call to add a property would apply to (the field, or the type of the field?)&lt;/p&gt;

&lt;p&gt;The following schema:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;HandshakeRequest&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.avro.ipc&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:[
    {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;clientHash&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:{&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;fixed&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;MD5&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;size&quot;&lt;/span&gt;:16}},
    {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;clientProtocol&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:[
      &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;&quot;&lt;/span&gt;,
      {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&quot;&lt;/span&gt;}]},
    {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;serverHash&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;MD5&quot;&lt;/span&gt;},
    {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;meta&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:[
      &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;&quot;&lt;/span&gt;,
      {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;map&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;values&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;bytes&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&quot;&lt;/span&gt;}]}
  ]}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;looks like this in the builder:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  Schema result = SchemaBuilder
    .recordType(&lt;span class=&quot;code-quote&quot;&gt;&quot;HandshakeRequest&quot;&lt;/span&gt;).namespace(&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.avro.ipc&quot;&lt;/span&gt;).fields()
      .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;clientHash&quot;&lt;/span&gt;).type().fixed(&lt;span class=&quot;code-quote&quot;&gt;&quot;MD5&quot;&lt;/span&gt;).size(16).noDefault()
      .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;clientProtocol&quot;&lt;/span&gt;).type().unionOf()
        .nullType().and()
        .stringWith().prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&quot;&lt;/span&gt;).endString().endUnion().noDefault()
      .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;serverHash&quot;&lt;/span&gt;).type(&lt;span class=&quot;code-quote&quot;&gt;&quot;MD5&quot;&lt;/span&gt;)
      .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;meta&quot;&lt;/span&gt;).type().unionOf()
        .nullType().and()
        .map().prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&quot;&lt;/span&gt;).values().bytesType().endUnion().withDefault(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
      .record();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It supports the same feature set that JSON schemas do:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;nesting of namespaces (&quot;MD5&quot; above automatically picks up the &quot;org.apache.avro.ipc&quot; namespace)&lt;/li&gt;
	&lt;li&gt;reference of named types by name .type(&quot;MD5&quot;) above for serverHash&lt;br/&gt;
And enforces other rules:&lt;/li&gt;
	&lt;li&gt;union defaults are required to be the same as the first type in the union&lt;/li&gt;
	&lt;li&gt;properties, doc(), namespace, and aliases work only in the contexts that they are supported.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Supported features are scoped with many internal nested types, for example, the field assembler returned by the record builder&apos;s fields() method has only two methods &amp;#8211; name(String) and record(), and the type builder that name(String) returns type builder for a field, which has prop(String, String) for the field and the available types, such as map().  A call to map() returns a map builder, which has prop(String, String) again but for the map, and values() ends the use of the map builder, changing scope to the nested type and returning down to the fields assembler when that is complete. &lt;/p&gt;


&lt;h4&gt;&lt;a name=&quot;RemainingWork&quot;&gt;&lt;/a&gt;Remaining Work&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;All primitive types are not supported yet (trivial)&lt;/li&gt;
	&lt;li&gt;Shortcut methods need to be added for common use cases such as an optional field.&lt;/li&gt;
	&lt;li&gt;Naming of some things needs review &amp;#8211; it would be easier if enum, int, long, default, etc were not reserved java key words &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/li&gt;
	&lt;li&gt;Javadoc is nearly absent.&lt;/li&gt;
	&lt;li&gt;There is some room for pushing more common work into parent types.&lt;/li&gt;
	&lt;li&gt;Tests&lt;/li&gt;
	&lt;li&gt;Attempt to replace the Schema.Parser logic with it, at minimum to test for areas of improvement or missing features.&lt;/li&gt;
	&lt;li&gt;No protocol support yet (e.g. error, protocol, request, response).  It probably makes sense to extend this to cover all Avro things, including fields and protocols.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I want to checkpoint the work so far and gather feedback.&lt;/p&gt;</comment>
                            <comment id="13651368" author="scott_carey" created="Tue, 7 May 2013 22:07:43 +0000"  >&lt;p&gt;One more bug in the &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1274&quot; title=&quot;Add a schema builder API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1274&quot;&gt;&lt;del&gt;AVRO-1274&lt;/del&gt;&lt;/a&gt; implementation that will be fixed here:&lt;br/&gt;
Default values for bytes/fixed were not properly encoded.  A default of new byte[] &lt;/p&gt;
{0, 1, -1}
&lt;p&gt; results in an exception due to lack of escaping.  If I use Jackson&apos;s escaping, we get a string &quot;\u0000\u0000\uFFFF&quot;.  A bug in Jackson 1.8.8 causes the 1 byte to not escape properly, and the code is casting byte to char without a 0xFF mask, so -1 becomes 655535 instead of 255.&lt;/p&gt;</comment>
                            <comment id="13651373" author="scott_carey" created="Tue, 7 May 2013 22:12:10 +0000"  >&lt;p&gt;Preliminary work in progress &amp;#8211; mostly complete but requires more doc, tests, and feedback.&lt;/p&gt;</comment>
                            <comment id="13654599" author="tomwhite" created="Fri, 10 May 2013 16:56:11 +0000"  >&lt;p&gt;I&apos;m still concerned about the complexity this is added for casual schema writers. E.g. there are 6 overloaded type() methods after fields().name(&quot;f0&quot;). What is the difference between intWith() and intType()?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;1. Arbitrary properties are not supported, for example {&quot;type&quot;:&quot;string&quot;, &quot;avro.java.string&quot;:&quot;String&quot;} can not be built.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this is easy to add to the existing SchemaBuilder by adding an addProp(String key, String value) method to the builders (RecordBuilder, FieldBuilder, ArrayBuilder). For FieldBuilder we could also have a addPropToType(String key, String value) method to distinguish between properties that are added to the underlying type, not the field itself.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;2. SchemaBuilder.INT and other constants are public. Unfortunately, these are mutable, and anyone could call addProp() on these, affecting others.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree we need to fix this too. It can be done by changing the constants to methods, e.g. SchemaBuilder.intType(), and constructing a new Schema each time.&lt;/p&gt;</comment>
                            <comment id="13654852" author="scott_carey" created="Fri, 10 May 2013 21:18:39 +0000"  >&lt;p&gt;I&apos;ll need to clean up the doc a little w.r.t. complexity in a couple places.  &lt;/p&gt;

&lt;p&gt;BaseTypeBuilder has three overloads for type(), FieldBuilder has three more due to defaults.&lt;br/&gt;
What do you think would be confusing to the causal user?  What could not be satisfied with javadoc?  I expect users to have IDEs set up with Maven so that javadoc is available at autocomplete/suggestion.  Are you concerned that will not be the case for most users?&lt;br/&gt;
We could rename the string name reference variants for FieldBuilder&apos;s to typeReference().   I named all of them type() because when writing the doc, it was easy to say:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  /**
   * Builds a Field in the context of a {@link FieldAssembler}.
   * 
   * Usage is to first configure any of the optional parameters and then to call one
   * of the type methods to complete the field.  For example
   * &amp;lt;pre&amp;gt;
   *   .namespace(&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.example&quot;&lt;/span&gt;).orderDecending().type()
   * &amp;lt;/pre&amp;gt;
   * Optional parameters &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; a field are namespace, doc, order, and aliases.
   */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We could change the name of the ones that select a name by reference to &quot;typeRef&quot;, or remove the ones that select default values and instead force the user to call an additional noDefaults() or withDefault() method afterwards to reduce the number of methods named &apos;type&apos;.&lt;/p&gt;

&lt;p&gt;For a generic type builder, used by map and array, values() and items() returns a builder that has three variants of type() on it, these could be rolled in to the map and array instead:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  map().values().intType()
  map().values().type(&lt;span class=&quot;code-quote&quot;&gt;&quot;MD5&quot;&lt;/span&gt;)
  map().values().type(someSchema)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;we could have:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  map().values().intType()
  map().values(&lt;span class=&quot;code-quote&quot;&gt;&quot;MD5&quot;&lt;/span&gt;)
  map().values(someSchema)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I did not do this because it shared more code and consistency &amp;#8211;  SchemaBuilder itself has the same API.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What is the difference between intWith() and intType()&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I need feedback/suggestions on naming and API here.&lt;br/&gt;
The javadoc for intType would say &quot;select an int type without custom properties.  A shortcut for intWith().endInt()&quot;.  The javadoc for intWith would say &quot;return an int type builder for creating an int with properties. If properties are not required use the #intType() shortcut&quot;.&lt;/p&gt;

&lt;p&gt;intWith() exists only for the case where you need to add a property to the int, which is uncommon, so I wanted a shortcut for the common case.  I did not want to have the context for optional properties to bleed into the following context after type selection, since that adds extra methods to the later context and applies to doc() and namespace() as well.  After selecting a type, the context either returns to an earlier scope or to a field default selection.  In the former case, properties are ambiguous with the outer scope (a field, array, map, or record context).  In the latter case, having a prop() method in scope is not applicable to default value selection.&lt;/p&gt;

&lt;p&gt;I decided to have the methods available in any scope be unambiguous and correspond with the JSON declaration and the spec.  This reduces how many methods are available in all contexts significantly from the current version in trunk and is intended to prevent user error.&lt;/p&gt;

&lt;p&gt;Alternatively we could name &quot;intWith() to &quot;intBuilder()&quot;, or &quot;intWithProps()&quot;, or change intType() to be the builder, and have intSimple() for the shortcut, but I wanted the common case to be the most obvious.  I think the naming and documentation here could certainly be improved.   Making it clear to a user which &quot;intXYZ&quot; (and the similar methods for all other primitive types) is critical.  The vast majority of the time users will not need to set properties on primitive types.&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;I think this is easy to add to the existing SchemaBuilder by adding an addProp(String key, String value) method to the builders (RecordBuilder, FieldBuilder, ArrayBuilder). For FieldBuilder we could also have a addPropToType(String key, String value) method to distinguish between properties that are added to the underlying type, not the field itself.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It is complicated and confusing to scope properties correctly.  The context for setting a property is easily ambiguous in all cases where it is not contained in its own scope.   For example:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;Rec&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;recProp&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;r&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [
  {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;locations&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fieldProp&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;map&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;mapProp&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;m&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;values&quot;&lt;/span&gt;:{&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;valProp&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;v&quot;&lt;/span&gt;}}}
]}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What would this look like with the API in trunk now if extended to support properties?  I had trouble reasoning about making it obvious to the user when the field&apos;s type contexts bled into the record context.  If you add the ability to chain the builder to build a nested type in the map, it gets even more messy.  The scoping and nesting allows for chaining, and thus propagation of default namespace and references by name to schemas already defined by the builder.  I plan to try this out in Schema.Parser() to simplify that code and share logic related to Schemas and the spec.&lt;/p&gt;

&lt;p&gt;In the proposal here (slightly tweaked locally), the schema above is:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;SchemaBuilder.type().record(&lt;span class=&quot;code-quote&quot;&gt;&quot;Rec&quot;&lt;/span&gt;).prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;recProp&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;r&quot;&lt;/span&gt;).fields()
  .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;locations&quot;&lt;/span&gt;).prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;fieldProp&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;f&quot;&lt;/span&gt;).type().map().prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;mapProp&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;m&quot;&lt;/span&gt;).values().stringWith().prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;valProp&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;v&quot;&lt;/span&gt;).endString().noDefault()
  .endRecord();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is very similar to the JSON.  I am hoping that it is very easy for developers familiar with the JSON spec to use.&lt;/p&gt;

&lt;p&gt;It is not possible to call prop(String, String) in a context that is ambiguous, as it is only available immediately after declaring a type, before completing the required information for the type.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;For records, after record(String name) but before fields()&lt;/li&gt;
	&lt;li&gt;For fields, after name(String name) but before one of the type() variants&lt;/li&gt;
	&lt;li&gt;For map, after map() but before values()&lt;/li&gt;
	&lt;li&gt;For types in general, after the creation of the type builder (stringWith(), map(), array(), record(), etc) but before its completion or delegation to another type builder (endString(), values(), items(), fields()).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The same principle is applied to namespace() doc(), order(), etc to prevent ambiguity and limit the number of methods available in any context.&lt;/p&gt;</comment>
                            <comment id="13654909" author="scott_carey" created="Fri, 10 May 2013 21:59:24 +0000"  >&lt;blockquote&gt;
&lt;p&gt;What is the difference between intWith() and intType()&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Dealing with properties or not could be as follows for primitive types.&lt;br/&gt;
JSON:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;map&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;values&quot;&lt;/span&gt;:{&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&quot;&lt;/span&gt;}}
{&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;map&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;values&quot;&lt;/span&gt;:{&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;}} &lt;span class=&quot;code-comment&quot;&gt;// same as {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;map&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;values&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;trunk:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  Schema strWithProps = Schema.create(Schema.Type.STRING); strWithProps.addProp(&lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&quot;&lt;/span&gt;); SchemaBuilder.mapType(strWithProps);
  SchemaBiulder.mapType(SchemaBuilder.STRING);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Current proposal:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  SchemaBuilder.map().values().stringWith().prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string&quot;&lt;/span&gt;).endInt();
  SchemaBuilder.map().values().stringType();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Alternative:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  SchemaBuilder.map().values().stringType().prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&quot;&lt;/span&gt;).endString();
  SchemaBuilder.map().values().stringType().endString();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The benefit of the alternative is fewer methods on the type builder &amp;#8211; only one for each primitive type.  The drawback is the common case &amp;#8211;  no props &amp;#8211; requires another method call to close the property setting context.  &lt;/p&gt;

&lt;p&gt;Another alternative is to significantly increase the number of methods available on the map for setting values to shorten the common case:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  SchemaBuilder.map().values().stringType().prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&quot;&lt;/span&gt;).endString();
  SchemaBuilder.map().valuesString();  &lt;span class=&quot;code-comment&quot;&gt;// looks a lot like {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;map&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;values&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&apos;valuesString()&apos; is shortcut for &apos;values().stringType().endString()&apos;, and it also looks a lot like the json.&lt;br/&gt;
I did not like this variation because it adds a lot of methods to the array and map cases and makes their APIs differ more.  It is also less consitent with unions, and I wanted to have unions, maps, arrays, and fields be similar in API look/feel where possible.  Fewer public methods are also easier to document. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13658172" author="scott_carey" created="Wed, 15 May 2013 08:37:02 +0000"  >&lt;p&gt;Updated patch contains:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Completed functionality.&lt;/li&gt;
	&lt;li&gt;Cleaned up API &amp;#8211;
	&lt;ul&gt;
		&lt;li&gt;&quot;intWith()&quot; now &quot;intBuilder()&quot;&lt;/li&gt;
		&lt;li&gt;added nullable() and optional() shortcut builders&lt;/li&gt;
		&lt;li&gt;reduce number of methods named &apos;type&apos; for the field builder (default values are set afterwards)&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Very large increase in javadoc&lt;/li&gt;
	&lt;li&gt;Unit test coverage at 99.9% instruction coverage&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13658519" author="tomwhite" created="Wed, 15 May 2013 16:34:56 +0000"  >&lt;p&gt;I haven&apos;t had a chance to look at the latest patch yet, but for comparison here&apos;s a small patch demonstrating property support in the SchemaBuilder from &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1274&quot; title=&quot;Add a schema builder API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1274&quot;&gt;&lt;del&gt;AVRO-1274&lt;/del&gt;&lt;/a&gt;. Scott&apos;s earlier example would be written like this:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Schema schema = SchemaBuilder.recordType(&quot;Rec&quot;).prop(&quot;recProp&quot;, &quot;r&quot;)
    .requiredMap(&quot;locations&quot;,
        SchemaBuilder.mapType(
            SchemaBuilder.stringType().prop(&quot;valProp&quot;, &quot;v&quot;).build()
        ).prop(&quot;mapProp&quot;, &quot;m&quot;).build())
      .prop(&quot;fieldProp&quot;, &quot;f&quot;)
    .build();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13658744" author="scott_carey" created="Wed, 15 May 2013 20:19:59 +0000"  >&lt;p&gt;This patch includes an additional 180 lines of javadoc introduction to SchemaBuilder.&lt;/p&gt;</comment>
                            <comment id="13658758" author="scott_carey" created="Wed, 15 May 2013 20:32:03 +0000"  >&lt;p&gt;My most recent patch deals with the annoying &apos;everything has a property&apos; case as follows:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Schema schema = SchemaBuilder.record(&lt;span class=&quot;code-quote&quot;&gt;&quot;Rec&quot;&lt;/span&gt;).prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;recProp&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;r&quot;&lt;/span&gt;).fields()
  .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;locations&quot;&lt;/span&gt;).prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;fieldProp&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;f&quot;&lt;/span&gt;).map().prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;mapProp&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;m&quot;&lt;/span&gt;).values()
    .stringBuilder().prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;valProp&quot;&lt;/span&gt;,&lt;span class=&quot;code-quote&quot;&gt;&quot;v&quot;&lt;/span&gt;).endString()
  .endRecord()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The example from the first comment, based on the schema in the Avro spec page:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Schema schema = SchemaBuilder.record(&lt;span class=&quot;code-quote&quot;&gt;&quot;HandshakeRequest&quot;&lt;/span&gt;).namespace(&lt;span class=&quot;code-quote&quot;&gt;&quot;org.apache.avro.ipc&quot;&lt;/span&gt;).fields()
  .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;clientHash&quot;&lt;/span&gt;).type().fixed(&lt;span class=&quot;code-quote&quot;&gt;&quot;MD5&quot;&lt;/span&gt;).size(16).noDefault() &lt;span class=&quot;code-comment&quot;&gt;// namespace is inherited
&lt;/span&gt;  .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;clientProtocol&quot;&lt;/span&gt;).type().nullable().stringBuilder()  &lt;span class=&quot;code-comment&quot;&gt;// nullable() is union of type and &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
&lt;/span&gt;    .prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&quot;&lt;/span&gt;).endString().noDefault()
  .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;serverHash&quot;&lt;/span&gt;).type(&lt;span class=&quot;code-quote&quot;&gt;&quot;MD5&quot;&lt;/span&gt;).noDefault()  &lt;span class=&quot;code-comment&quot;&gt;//reference by name
&lt;/span&gt;  .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;meta&quot;&lt;/span&gt;).type().optional().map().prop(&lt;span class=&quot;code-quote&quot;&gt;&quot;avro.java.string&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&quot;&lt;/span&gt;).values().bytesType() &lt;span class=&quot;code-comment&quot;&gt;// optional is union of &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; and type with &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;
&lt;/span&gt;  .endRecord();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13659467" author="tomwhite" created="Thu, 16 May 2013 12:10:21 +0000"  >&lt;p&gt;Scott, thanks for all the effort you&apos;ve put into this!&lt;/p&gt;

&lt;p&gt;The major difference between this and &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1274&quot; title=&quot;Add a schema builder API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1274&quot;&gt;&lt;del&gt;AVRO-1274&lt;/del&gt;&lt;/a&gt; is that there are now more method calls. One of the design points of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1274&quot; title=&quot;Add a schema builder API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1274&quot;&gt;&lt;del&gt;AVRO-1274&lt;/del&gt;&lt;/a&gt; was that you would specify all the required arguments in one method call. For example, &lt;tt&gt;SchemaBuilder.fixedType(&quot;myfixed&quot;, 16).build()&lt;/tt&gt; has become &lt;tt&gt;SchemaBuilder.fixed(&quot;myfixed&quot;).size(16)&lt;/tt&gt;. For the &lt;tt&gt;fixed&lt;/tt&gt; example that is not really an issue, but it does become more cumbersome when building records, due to the requiredX/optionalX shortcuts in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1274&quot; title=&quot;Add a schema builder API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1274&quot;&gt;&lt;del&gt;AVRO-1274&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&apos;table-wrap&apos;&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1274&quot; title=&quot;Add a schema builder API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1274&quot;&gt;&lt;del&gt;AVRO-1274&lt;/del&gt;&lt;/a&gt; field syntax &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1325&quot; title=&quot;Enhanced Schema Builder API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1325&quot;&gt;&lt;del&gt;AVRO-1325&lt;/del&gt;&lt;/a&gt; field syntax &lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; JSON field syntax &lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; .requiredInt(&quot;f0&quot;) &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; .name(&quot;f0&quot;).type().intType().noDefault() &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; { &quot;name&quot; : &quot;f0&quot;, &quot;type&quot; : &quot;int&quot; } &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; .optionalInt(&quot;f0&quot;) &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; .name(&quot;f0&quot;).type().optional().intType() &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; { &quot;name&quot; : &quot;f0&quot;, &quot;type&quot; : [ &quot;null&quot;, &quot;int&quot; ], &quot;default&quot; : null } &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; .optionalInt(&quot;f0&quot;, 1) &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; .name(&quot;f0&quot;).type().nullable().intType().intDefault(1) &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; { &quot;name&quot; : &quot;f0&quot;, &quot;type&quot; : [ &quot;int&quot;, &quot;null&quot; ], &quot;default&quot; : 1 } &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;


&lt;p&gt;This JIRA is more faithful to the JSON, which I can see the value of. However, there&apos;s a tension between full generality and ease of use, so I&apos;m thinking that it might be useful to have a RecordSchemaBuilder which is more like &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1274?focusedCommentId=13600838&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13600838&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Josh&apos;s original&lt;/a&gt;, which is dedicated to building simple record schemas (without properties and other advanced features) using the required/optional language for fields. If there&apos;s interest in this we could add that separately. Thoughts?&lt;/p&gt;

&lt;p&gt;Other comments&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;The documentation is excellent.&lt;/li&gt;
	&lt;li&gt;Why have type() and type(Schema)? The latter doesn&apos;t seem to add anything (it&apos;s used in one test, but that&apos;s not the point of the test), and indeed is potentially confusing, so could it be removed?&lt;/li&gt;
	&lt;li&gt;Error type is missing, but this can be easily added.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13659923" author="scott_carey" created="Thu, 16 May 2013 20:16:21 +0000"  >&lt;p&gt;The field syntax could have shortcuts too &amp;#8211; since the FieldsBuilder currently has only two methods (name() and endRecord()), we could add a few shortcut methods for the most common use cases.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Why have type() and type(Schema)?&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Schema person = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Parser().parse(Person.avsc);  &lt;span class=&quot;code-comment&quot;&gt;// or lookup from schema repo
&lt;/span&gt;
Schema job = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SchemaBuilder.record(&lt;span class=&quot;code-quote&quot;&gt;&quot;Job&quot;&lt;/span&gt;).fields()
  .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;title&quot;&lt;/span&gt;).type().stringType().noDefault()
  .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;who&quot;&lt;/span&gt;).type(person).noDefault()
  .endRecord();

Schema meeting = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SchemaBuilder.record(&lt;span class=&quot;code-quote&quot;&gt;&quot;Meeting&quot;&lt;/span&gt;).fields()
  .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;location&quot;&lt;/span&gt;).type().stringType().noDefault()
  .name(&lt;span class=&quot;code-quote&quot;&gt;&quot;attendees&quot;&lt;/span&gt;).type().array().items(person).noDefault()
  .endRecord();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;blockquote&gt;&lt;p&gt;Error type is missing, but this can be easily added.&lt;/p&gt;&lt;/blockquote&gt;  
&lt;p&gt;I wondered what to do here, since Error is for Protocols only, perhaps add it when we add a ProtocolBuilder or extend SchemaBuilder to support protocols?&lt;/p&gt;</comment>
                            <comment id="13659927" author="scott_carey" created="Thu, 16 May 2013 20:18:22 +0000"  >&lt;p&gt;That brings up one more thing about this design:  I had in mind later supporting Protocols, and the nested type-parameterized context (Completion&amp;lt;R&amp;gt;) allows a ProtocolBuilder to nest a SchemaBuilder &amp;#8211; a TypeBuilder&amp;lt;Protocol&amp;gt; would share API and code. &lt;/p&gt;</comment>
                            <comment id="13659945" author="scott_carey" created="Thu, 16 May 2013 20:35:55 +0000"  >&lt;p&gt;Another option would be to have record() and recordSimple() on this API &amp;#8211; the latter could return a record builder with simpler syntax but lacking support for some things.&lt;/p&gt;</comment>
                            <comment id="13660687" author="tomwhite" created="Fri, 17 May 2013 12:59:25 +0000"  >&lt;p&gt;The case for type(Schema) seems reasonable.&lt;/p&gt;

&lt;p&gt;&amp;gt; I wondered what to do here, since Error is for Protocols only, perhaps add it when we add a ProtocolBuilder or extend SchemaBuilder to support protocols?&lt;/p&gt;

&lt;p&gt;I agree.&lt;/p&gt;

&lt;p&gt;&amp;gt; Another option would be to have record() and recordSimple() on this API &#8211; the latter could return a record builder with simpler syntax but lacking support for some things.&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;
</comment>
                            <comment id="13701816" author="scott_carey" created="Mon, 8 Jul 2013 06:38:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1325&quot; title=&quot;Enhanced Schema Builder API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1325&quot;&gt;&lt;del&gt;AVRO-1325&lt;/del&gt;&lt;/a&gt;-v3.patch  Adds shortcut methods to the FieldAssembler.&lt;/p&gt;

&lt;p&gt;see the new test &quot;testFieldShortcuts&quot; in TestSchemaBuilder.&lt;/p&gt;

&lt;p&gt;For example, optionalInt(&quot;fieldName&quot;) is a shortcut for name(&quot;fieldName&quot;).optional().intType()&lt;/p&gt;

&lt;p&gt;There are shortcuts for &apos;required&apos;, &apos;optional&apos; and &apos;nullable&apos; primitive avro types.  Nested and named types do not have shortcuts.&lt;/p&gt;

&lt;p&gt;Shortcuts do not support field aliases, doc, or custom properties.&lt;/p&gt;</comment>
                            <comment id="13703465" author="tomwhite" created="Tue, 9 Jul 2013 16:37:23 +0000"  >&lt;p&gt;The shortcut methods look good to me. Thanks for adding them Scott.&lt;/p&gt;

&lt;p&gt;+1 on the latest patch.&lt;/p&gt;</comment>
                            <comment id="13704662" author="scott_carey" created="Wed, 10 Jul 2013 15:42:37 +0000"  >&lt;p&gt;&lt;br/&gt;
I&apos;ll commit this tonight (July 10, ~9PM or so Pacific Time) if there are no objections.&lt;/p&gt;</comment>
                            <comment id="13705945" author="scott_carey" created="Thu, 11 Jul 2013 16:05:52 +0000"  >&lt;p&gt;After updating to the latest trunk, one test in here is not passing with my patch.  I will have to narrow it down and fix it before commit, and will not have time to do until tonight.&lt;/p&gt;</comment>
                            <comment id="13709569" author="scott_carey" created="Tue, 16 Jul 2013 07:29:17 +0000"  >&lt;p&gt;This patch (-v4) includes the update of the jackson library and the default encoding bug there.  The new unit test coverage fails without it.  The Jackson bug is &lt;a href=&quot;http://jira.codehaus.org/browse/JACKSON-884&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jira.codehaus.org/browse/JACKSON-884&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13710349" author="scott_carey" created="Tue, 16 Jul 2013 22:02:22 +0000"  >&lt;p&gt;I will commit this if there are no objections by this time tomorrow.&lt;/p&gt;</comment>
                            <comment id="13722061" author="jira-bot" created="Sun, 28 Jul 2013 22:10:13 +0000"  >&lt;p&gt;Commit 1507862 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=scott_carey&quot; class=&quot;user-hover&quot; rel=&quot;scott_carey&quot;&gt;Scott Carey&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1507862&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1507862&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1325&quot; title=&quot;Enhanced Schema Builder API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1325&quot;&gt;&lt;del&gt;AVRO-1325&lt;/del&gt;&lt;/a&gt; Enhanced Schema Builder API&lt;/p&gt;</comment>
                            <comment id="13722062" author="scott_carey" created="Sun, 28 Jul 2013 22:10:32 +0000"  >&lt;p&gt;committed in revision 1507862.&lt;/p&gt;</comment>
                            <comment id="13722063" author="scott_carey" created="Sun, 28 Jul 2013 22:11:28 +0000"  >&lt;p&gt;Additionally required upgrading Jackson to 1.9.13 and some pom.xml changes to make builds work on mac.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12582182" name="AVRO-1325-preliminary.patch" size="71720" author="scott_carey" created="Tue, 7 May 2013 22:12:10 +0000"/>
                            <attachment id="12583335" name="AVRO-1325-properties.patch" size="6446" author="tomwhite" created="Wed, 15 May 2013 16:34:56 +0000"/>
                            <attachment id="12583362" name="AVRO-1325-v2.patch" size="146837" author="scott_carey" created="Wed, 15 May 2013 20:19:59 +0000"/>
                            <attachment id="12591180" name="AVRO-1325-v3.patch" size="156790" author="scott_carey" created="Mon, 8 Jul 2013 06:38:17 +0000"/>
                            <attachment id="12592499" name="AVRO-1325-v4.patch" size="158960" author="scott_carey" created="Tue, 16 Jul 2013 07:29:17 +0000"/>
                            <attachment id="12583295" name="AVRO-1325.patch" size="140084" author="scott_carey" created="Wed, 15 May 2013 08:37:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 10 May 2013 16:56:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>326850</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 26 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kdyn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>327195</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
