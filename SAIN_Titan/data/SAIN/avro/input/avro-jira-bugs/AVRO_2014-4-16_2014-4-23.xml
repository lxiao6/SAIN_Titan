<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:20:11 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2014-4-16+AND+created+%3C%3D+2014-4-23+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="3" total="3"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1496] Avro aliases support for C++</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1496</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently Avro C++ doesn&apos;t have avro aliases support and other languages like Java and C# supporte this feature. Please implement this feature in C++ and enhance the resolving decoder to handle aliases&lt;/p&gt;</description>
                <environment></environment>
        <key id="12709074">AVRO-1496</key>
            <summary>Avro aliases support for C++</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="thiru_mg">Thiruvalluvan M. G.</assignee>
                                    <reporter username="ramanasv">Ramana Suvarapu</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 Apr 2014 15:19:00 +0000</created>
                <updated>Mon, 31 Dec 2018 06:23:49 +0000</updated>
                                                                            <component>c++</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>387397</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 40 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1uqh3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>387659</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1497] Add LogicalType support to Java</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1497</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1402&quot; title=&quot;Support for DECIMAL type&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1402&quot;&gt;&lt;del&gt;AVRO-1402&lt;/del&gt;&lt;/a&gt; updates the Avro spec to include logical types, which are stored as existing types but interpreted as others. The next step is to implement LogicalType (in Java) that provides tools to attach a logical type to a schema, read a logical type, and validate logical types.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12709140">AVRO-1497</key>
            <summary>Add LogicalType support to Java</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rdblue">Ryan Blue</assignee>
                                    <reporter username="rdblue">Ryan Blue</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 Apr 2014 20:35:06 +0000</created>
                <updated>Fri, 8 Dec 2017 14:28:07 +0000</updated>
                            <resolved>Thu, 28 May 2015 22:57:34 +0000</resolved>
                                                    <fixVersion>1.7.8</fixVersion>
                    <fixVersion>1.8.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                                                            <comments>
                            <comment id="14211364" author="zolyfarkas" created="Thu, 13 Nov 2014 22:07:57 +0000"  >&lt;p&gt;I have implemented the logicalType based on the spec at:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zolyfarkas/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/LogicalType.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/zolyfarkas/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/LogicalType.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;also wrote an extension for joda types as logical types.:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zolyfarkas/avro/tree/trunk/lang/java/avro-joda&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/zolyfarkas/avro/tree/trunk/lang/java/avro-joda&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let me know if the implementation looks OK  and I can make a patch .&lt;/p&gt;</comment>
                            <comment id="14211654" author="rdblue" created="Fri, 14 Nov 2014 01:18:52 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zolyfarkas&quot; class=&quot;user-hover&quot; rel=&quot;zolyfarkas&quot;&gt;Zoltan Farkas&lt;/a&gt;, thanks for doing this! After a quick look, the only thing I noticed is that the LogicalType extends JsonProperties (from my original patch). But I know that Tom is trying to avoid exposing Jackson in the Avro API, so we should probably figure out a way to add this without it. I also need to take a longer look after reviewing where I left &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1402&quot; title=&quot;Support for DECIMAL type&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1402&quot;&gt;&lt;del&gt;AVRO-1402&lt;/del&gt;&lt;/a&gt;, but I&apos;ll try to have more feedback for you soon. Again, thanks for picking this up!&lt;/p&gt;</comment>
                            <comment id="14214697" author="zolyfarkas" created="Mon, 17 Nov 2014 14:36:21 +0000"  >&lt;p&gt;I will keep an eye on the the JsonProperties rework, and will update the logical types as well.&lt;br/&gt;
Currently in my code I implemented support for extensions (like the joda extension). &lt;br/&gt;
In java 1.6 and upwards there is a a more standard way of doing this: &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/api/java/util/ServiceLoader.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://docs.oracle.com/javase/7/docs/api/java/util/ServiceLoader.html&lt;/a&gt;&lt;br/&gt;
and maybe I should change to that? what do you guys think?&lt;/p&gt;</comment>
                            <comment id="14214834" author="rdblue" created="Mon, 17 Nov 2014 16:57:40 +0000"  >&lt;p&gt;I prefer to avoid using a ServiceLoader if there is an alternative that doesn&apos;t involve automatic registration. It would be better to configure the data model for logical types you prefer, like joda vs java-8 dates. That works out well because we will need to have a method to turn on or off the logical type handling anyway, so that process can just pass a handler for a type into the data model code. But if we did want automatic registration, ServiceLoader would be the way to go at the moment.&lt;/p&gt;</comment>
                            <comment id="14217752" author="cutting" created="Wed, 19 Nov 2014 11:12:44 +0000"  >&lt;p&gt;The JsonProperties changes in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1585&quot; title=&quot;Deprecate Jackson classes in public API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1585&quot;&gt;&lt;del&gt;AVRO-1585&lt;/del&gt;&lt;/a&gt; have been committed, so this may require an update.  Can you please provide it as a patch file?  Also, we should add unit tests before we commit this.&lt;/p&gt;</comment>
                            <comment id="14218139" author="rdblue" created="Wed, 19 Nov 2014 16:59:45 +0000"  >&lt;p&gt;I took a closer look at this last night. It looks like we still need to address Doug&apos;s initial feedback on my original patch that the LogicalType should act as a utility to access local type information on the Schema, but shouldn&apos;t change the Schema class itself.&lt;/p&gt;

&lt;p&gt;I also noticed that this adds serialization and deserialization methods to the LogicalType. I&apos;d rather handle that in the data model and reader/writer code so that the logical type doesn&apos;t force a particular implementation. A good example of why we wan this to be flexible is that we expect people to use both Joda objects and Java 8 date/time objects. Moving this to a follow-on issue would simplify the patch quite a bit so we could get it in for the next release.&lt;/p&gt;

&lt;p&gt;If the LogicalType is just additional JSON properties in the Schema, then we need to consider schema evolution. Additional properties aren&apos;t currently checked when determining if schemas are compatible, so it&apos;s possible to drop or change a logical type. I think we need to make sure that we don&apos;t create inconsistent objects across files when using the same read schema.&lt;/p&gt;</comment>
                            <comment id="14218943" author="zolyfarkas" created="Thu, 20 Nov 2014 03:22:21 +0000"  >&lt;p&gt;Makes sense,&lt;br/&gt;
I will rework the implementation to separate the encoding from the logical type, and also decouple from JsonProperties.&lt;br/&gt;
regarding schema evolution, I think we need to consider the logical type when checking compatibility....&lt;br/&gt;
We should probably figure out the compatibility rules first and update the spec....&lt;/p&gt;</comment>
                            <comment id="14219161" author="tomwhite" created="Thu, 20 Nov 2014 09:20:33 +0000"  >&lt;p&gt;We defined schema resolution (evolution) rules for decimal(&lt;a href=&quot;http://avro.apache.org/docs/1.7.7/spec.html#Decimal&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/1.7.7/spec.html#Decimal&lt;/a&gt;), but not for the date/time types or logical types in general. I think it&apos;s a question of saying both the reader and writer schema&apos;s logicalType attributes must match.&lt;/p&gt;</comment>
                            <comment id="14385566" author="rdblue" created="Sat, 28 Mar 2015 23:21:33 +0000"  >&lt;p&gt;I&apos;ve been working on a solution for this lately, prompted by Sachin&apos;s work on &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1554&quot; title=&quot;Avro should have support for common constructs like UUID and Date&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1554&quot;&gt;&lt;del&gt;AVRO-1554&lt;/del&gt;&lt;/a&gt;. I have a preliminary fix in github that patches the generic and reflect read paths: &lt;a href=&quot;https://github.com/rdblue/avro/commit/6effab9fecf45ad34a2cf0cfc9a125a483534187&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/rdblue/avro/commit/6effab9fecf45ad34a2cf0cfc9a125a483534187&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14386026" author="githubbot" created="Sun, 29 Mar 2015 23:55:40 +0000"  >&lt;p&gt;GitHub user rdblue opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/29&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add Java logical type implementation&lt;/p&gt;



&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/rdblue/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/rdblue/avro&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;-logical-types&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/29.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/29.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #29&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit ca1d2b1635b802a476c8834d609ccf6cfe8c3fe3&lt;br/&gt;
Author: Ryan Blue &amp;lt;blue@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-03-28T23:09:26Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add LogicalTypes and read-side implementation.&lt;/p&gt;

&lt;p&gt;commit 442a917947ba9ffeacc9709765fd2092f5f7a1a7&lt;br/&gt;
Author: Ryan Blue &amp;lt;blue@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-03-29T06:16:10Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add logical type support to schema reflection.&lt;/p&gt;

&lt;p&gt;commit ec8d6d47d1962f3b87cdc367e4bdc216f13e82d7&lt;br/&gt;
Author: Ryan Blue &amp;lt;blue@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-03-29T07:07:24Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add logical type writes to generic and reflect.&lt;/p&gt;

&lt;p&gt;commit e6e97616ff7093674f29f278eb8708c0d617fe8a&lt;br/&gt;
Author: Ryan Blue &amp;lt;blue@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-03-29T23:25:45Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Clean up Conversion and LogicalType classes.&lt;/p&gt;

&lt;p&gt;    This moves the implementations into Conversions and LogicalTypes.&lt;/p&gt;

&lt;p&gt;commit 8fe954a0153c011634be3a651bfe5e7cf37a8839&lt;br/&gt;
Author: Ryan Blue &amp;lt;blue@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-03-29T23:53:40Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add Conversion and LogicalType javadoc.&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="14386031" author="rdblue" created="Mon, 30 Mar 2015 00:02:49 +0000"  >&lt;p&gt;I think this is ready for a review. I have the conversions working for reflect and generic (specific doesn&apos;t generate the types and can be added later) and I have tests for both read and write sides. I&apos;ve submitted PR #29 and I&apos;m happy to add the patch here if that&apos;s more convenient.&lt;/p&gt;</comment>
                            <comment id="14483242" author="tomwhite" created="Tue, 7 Apr 2015 14:26:02 +0000"  >&lt;p&gt;This looks like a good addition. I made a couple of comments on the pull request. Since it modifies the datum readers and writers, it would be a good idea to run Perf to see the impact of this change. It might be possible to optimize the case where no conversions are in use, to avoid calling getConversionFor(), should it be needed.&lt;/p&gt;</comment>
                            <comment id="14488669" author="rdblue" created="Fri, 10 Apr 2015 00:55:56 +0000"  >&lt;p&gt;I ran the performance tests on the current master and on the logical types branch and created a &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1wiLHryLOAfxRnkrrNZWJYJloqWUj5r9xPCL4XB8uIo4/edit?usp=sharing&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;spreadsheet with the results&lt;/a&gt;. I&apos;ll upload the CSV as well, but I&apos;ve added formatting to make the spreadsheet version easier to read.&lt;/p&gt;

&lt;p&gt;There are 8 rows that are above a 5% change. What I didn&apos;t expect is that several of these run faster with the changes. For example, ReflectDoubleArray&lt;/p&gt;
{Read,Write} are more than 10% faster, while ReflectLongArray{Read,Write}
&lt;p&gt; are 14% and 10% slower. What kind of variance should I expect here? I was running on my laptop with nothing else running besides X, a terminal, and system processes. I ran the tests on master and then the branch.&lt;/p&gt;

&lt;p&gt;The one that is concerning is that ValidatingRecordRead was about 44% slower. I&apos;m not entirely sure what is happening there, or whether that is expected. Part of the reason why I think it is a good idea to implement high-level types this way is to avoid using those validations.&lt;/p&gt;</comment>
                            <comment id="14492501" author="tomwhite" created="Mon, 13 Apr 2015 15:21:06 +0000"  >&lt;p&gt;Generally, we shouldn&apos;t add more than 5%. Did you average the times over a few runs? &lt;/p&gt;</comment>
                            <comment id="14492655" author="rdblue" created="Mon, 13 Apr 2015 16:56:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;Did you average the times over a few runs?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, I haven&apos;t but I&apos;ll run a few more tests. It looks like most of the ones that have changed more than 5% are either not going through the data model (like &lt;tt&gt;ValidatingRecordRead&lt;/tt&gt; and &lt;tt&gt;GenericNestedFake_Write&lt;/tt&gt;) or are for other reasons likely due to variance (&lt;tt&gt;IntRead&lt;/tt&gt; is small, &lt;tt&gt;GenericStringsWrite&lt;/tt&gt; is faster). The ones I&apos;m still not sure about are the reflect double and long array tests I noted above, but those are reading approximately the same amount of data and going through the same methods, other than the underlying decoder. I&apos;ll run some more tests, but I don&apos;t see a reason for either performance gain or loss. Overall I think that these runs don&apos;t flag any concerns with the addition, which makes sense because it is essentially a hash table lookup and a couple additional null tests.&lt;/p&gt;</comment>
                            <comment id="14494717" author="rdblue" created="Tue, 14 Apr 2015 19:30:16 +0000"  >&lt;p&gt;I ran the performance tests no the current trunk a few times to find out what the variability in the perf tests looks like. I used a physical machine I had access to with nothing running on it other than an occasional monitoring service. I&apos;ve added the results as a &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1wiLHryLOAfxRnkrrNZWJYJloqWUj5r9xPCL4XB8uIo4/edit#gid=1264216576&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;second page in the spreadsheet&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;18 of the 68 tests had a difference of 5% or more on one if the 4 runs. The farthest from the average was fairly well balanced across the runs, and the difference was equally both positive (slower) and negative (faster). The patterns of behavior I see are:&lt;/p&gt;

&lt;p&gt;1. The first run is generally a bit slower, though not always: one test was 13% faster than any other run, see line 54.&lt;br/&gt;
2. The last run was a bit faster in the second half of the run, with several substantially faster reflection tests&lt;br/&gt;
3. The reflect tests and validating tests seem to have the largest variability.&lt;/p&gt;

&lt;p&gt;I also ran the logical types code to compare it to the averaged normal runs. It is significantly slower (see the other sheets) than the average, so I think I need to do some more work to make this better. I&apos;m not sure why this didn&apos;t show up on my laptop, but it does consistently now.&lt;/p&gt;</comment>
                            <comment id="14496273" author="tomwhite" created="Wed, 15 Apr 2015 14:46:30 +0000"  >&lt;p&gt;Thanks for doing the analysis Ryan. One possible optimization would be to see if the expected schema in GenericDatumReader contains any logical type properties at construction time, and only enable the logic to do the conversion if any were found. This way the read method just has to do a boolean check. The downside is that if you add a single logical type to your schema it slows things down quite substantially.&lt;/p&gt;</comment>
                            <comment id="14547441" author="rdblue" created="Mon, 18 May 2015 01:27:20 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tomwhite&quot; class=&quot;user-hover&quot; rel=&quot;tomwhite&quot;&gt;Tom White&lt;/a&gt;, could you take another look at this?&lt;/p&gt;

&lt;p&gt;I think I&apos;ve gotten the performance back to normal. There were a couple of major issues that I&apos;ve now fixed:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Looking up Schema properties was too slow, even for just one (logicalType). To work around that, I needed to add it to the schema so properties are read when the schema is parsed. Because modifying the Schema is required for performance, I went ahead and cached the logical type rather than just the name. That allows us to do validation on the logical type later and makes the performance when there is a conversion much better.&lt;/li&gt;
	&lt;li&gt;Logical type conversions are now cached by the converion&apos;s class. This means a conversion works with a certain class, not its children.&lt;/li&gt;
	&lt;li&gt;I also started interning persistent strings in the Schema that are used in comparisons a lot, like record names, field names, enum symbols, and properties. That makes common lookups faster.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ve updated the performance doc with the latest run. The second sheet compares the current PR code against trunk. There are a couple of anomalous tests, like GenericNested_Write. I&apos;ve left the data from run 16 in one of the sheets, which shows the anomalous tests with normal performance. That was the run just before I fixed arrays on the read side, so the write side should not have that large of a performance problem unless it is due to something else. Another data point supporting that is the fact that RecordWrite shows the same behavior: in run 16 it was fine, but with no changes it is way off for run 17. I think this is due to some external factor because all of the anomalous tests seem to do this at the same time.&lt;/p&gt;</comment>
                            <comment id="14550653" author="tomwhite" created="Tue, 19 May 2015 15:51:30 +0000"  >&lt;p&gt;Thanks for the update Ryan. I think this is getting close now.&lt;/p&gt;

&lt;p&gt;&amp;gt; I also started interning persistent strings in the Schema that are used in comparisons a lot, like record names, field names, enum symbols, and properties.&lt;/p&gt;

&lt;p&gt;Let&apos;s move that into a separate JIRA. Interning is not recommended on Java 6 since it pollutes permgen, and in Java 7 it may need tuning (&lt;a href=&quot;http://java-performance.info/string-intern-in-java-6-7-8/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java-performance.info/string-intern-in-java-6-7-8/&lt;/a&gt;), so we should be cautious about when we do it, and then only for demonstrable gain.&lt;/p&gt;</comment>
                            <comment id="14550895" author="zolyfarkas" created="Tue, 19 May 2015 18:00:22 +0000"  >&lt;p&gt;Agree about interning, String.intern is slow in jdk 1.6 - 1.7. Using an Interner (from guava) which has a ConcurentHashMap underneath is significantly faster...&lt;/p&gt;</comment>
                            <comment id="14551241" author="rdblue" created="Tue, 19 May 2015 21:14:00 +0000"  >&lt;p&gt;I&apos;ve removed the interning in Schema to unblock this and added another page to the spreadsheet with the performance numbers without interning. It looks like it is a few percent slower for most tests, but nothing huge.&lt;/p&gt;</comment>
                            <comment id="14552476" author="tomwhite" created="Wed, 20 May 2015 15:25:07 +0000"  >&lt;p&gt;This looks good to me. Can you attach as a patch please? If there&apos;s no other feedback we can commit it soon.&lt;/p&gt;</comment>
                            <comment id="14552562" author="rdblue" created="Wed, 20 May 2015 16:05:29 +0000"  >&lt;p&gt;I&apos;ve added the patch. Thanks for looking at it, Tom!&lt;/p&gt;</comment>
                            <comment id="14559392" author="rdblue" created="Tue, 26 May 2015 17:01:43 +0000"  >&lt;p&gt;If no one objects and wants to take a closer look, I&apos;ll commit this today.&lt;/p&gt;</comment>
                            <comment id="14560401" author="jira-bot" created="Wed, 27 May 2015 04:49:00 +0000"  >&lt;p&gt;Commit 1681906 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=blue%40cloudera.com&quot; class=&quot;user-hover&quot; rel=&quot;blue@cloudera.com&quot;&gt;Ryan Blue&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1681906&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1681906&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add LogicalType implementation.&lt;/p&gt;

&lt;p&gt;This closes PR #29 and includes the following commits:&lt;/p&gt;

&lt;p&gt;ca1d2b1 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add LogicalTypes and read-side implementation.&lt;br/&gt;
442a917 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add logical type support to schema reflection.&lt;br/&gt;
ec8d6d4 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add logical type writes to generic and reflect.&lt;br/&gt;
e6e9761 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Clean up Conversion and LogicalType classes.&lt;br/&gt;
8fe954a &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add Conversion and LogicalType javadoc.&lt;br/&gt;
3abf042 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Fix ByteBuffer bug in DecimalConversion.&lt;br/&gt;
2293a18 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Fix review items.&lt;br/&gt;
207afd3 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add logical type registration and record test.&lt;br/&gt;
d2377b2 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Maven CLI and checkstyle fixes.&lt;br/&gt;
1e628b2 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Fix test failures.&lt;br/&gt;
15ed857 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Fix performance issues with logical types.&lt;br/&gt;
fb84364 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Check logical type once per array.&lt;br/&gt;
7de6edc &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Remove unnecessary changes to Schema.&lt;/p&gt;</comment>
                            <comment id="14560407" author="githubbot" created="Wed, 27 May 2015 04:52:18 +0000"  >&lt;p&gt;Github user rdblue closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/29&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/29&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14560440" author="hudson" created="Wed, 27 May 2015 05:35:51 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #518 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/518/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/518/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add LogicalType implementation.&lt;/p&gt;

&lt;p&gt;This closes PR #29 and includes the following commits:&lt;/p&gt;

&lt;p&gt;ca1d2b1 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add LogicalTypes and read-side implementation.&lt;br/&gt;
442a917 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add logical type support to schema reflection.&lt;br/&gt;
ec8d6d4 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add logical type writes to generic and reflect.&lt;br/&gt;
e6e9761 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Clean up Conversion and LogicalType classes.&lt;br/&gt;
8fe954a &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add Conversion and LogicalType javadoc.&lt;br/&gt;
3abf042 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Fix ByteBuffer bug in DecimalConversion.&lt;br/&gt;
2293a18 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Fix review items.&lt;br/&gt;
207afd3 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Add logical type registration and record test.&lt;br/&gt;
d2377b2 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Maven CLI and checkstyle fixes.&lt;br/&gt;
1e628b2 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Fix test failures.&lt;br/&gt;
15ed857 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Fix performance issues with logical types.&lt;br/&gt;
fb84364 &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Check logical type once per array.&lt;br/&gt;
7de6edc &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1497&quot; title=&quot;Add LogicalType support to Java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1497&quot;&gt;&lt;del&gt;AVRO-1497&lt;/del&gt;&lt;/a&gt;: Remove unnecessary changes to Schema. (blue: rev 1681906)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/Conversion.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/Conversions.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/LogicalType.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/LogicalTypes.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/Schema.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericData.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumReader.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumWriter.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectData.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectDatumReader.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15070214" author="vincentye38" created="Wed, 23 Dec 2015 21:32:42 +0000"  >&lt;p&gt;It&apos;s good idea to add cache to improve the performance. But the synchronization put up some cost. Without synchronization will cause thread-safe problem. I ran into a infinite loop caused by multiple threads accessing org.apache.avro.LogicalTypes#fromSchemaIgnoreInvalid to update CACHE simultaneously. CACHE is simply backed by a java hashmap without any synchronization. So It run into this race condition problem &lt;a href=&quot;http://mailinator.blogspot.com/2009/06/beautiful-race-condition.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mailinator.blogspot.com/2009/06/beautiful-race-condition.html&lt;/a&gt; .&lt;br/&gt;
Please take a look at it.&lt;/p&gt;


&lt;p&gt;Thank you&lt;/p&gt;</comment>
                            <comment id="16283656" author="dsebastien" created="Fri, 8 Dec 2017 14:27:38 +0000"  >&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;This is probably a silly question, but is it possible to add annotations to a Java type to specify the logicalType?&lt;br/&gt;
In my case, I have a UUID field thus I&apos;d like to set the logicalType to &quot;uuid&quot;.&lt;/p&gt;

&lt;p&gt;I&apos;d like to annotate my existing classes and derive the Avro schema using ReflectData&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12778071">AVRO-1643</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10020">
                    <name>Cloners</name>
                                                                <inwardlinks description="is cloned by">
                                        <issuelink>
            <issuekey id="12844407">AVRO-1702</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12937448">AVRO-1796</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12858422">AVRO-1721</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12712630">AVRO-1503</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12679032">AVRO-1402</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is depended upon by">
                                        <issuelink>
            <issuekey id="12998967">NIFI-2624</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12734146" name="AVRO-1497-1.diff" size="92092" author="rdblue" created="Wed, 20 May 2015 16:04:03 +0000"/>
                            <attachment id="12724421" name="Logical Types Performance Comparison - Sheet1.csv" size="8145" author="rdblue" created="Fri, 10 Apr 2015 00:56:23 +0000"/>
                    </attachments>
                <subtasks>
                            <subtask id="12924093">AVRO-1773</subtask>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 13 Nov 2014 22:07:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>387463</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 6 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1uqvr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>387725</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1498] Custom Encoding with @AvroEncode does not work when FieldAccessReflect is used</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1498</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Custom Encoding with @AvroEncode does not work if the field access is done via reflection and not via the sun.misc.unsafe API.&lt;br/&gt;
This can be reproduced in a normal JVM with the unit tests (TestReflect.testAvroEncodeIO fails) after deactivating the use of the sun.misc.unsafe API in the ReflectionUtil class.&lt;/p&gt;</description>
                <environment>&lt;p&gt;All environments where sun.misc.unsafe is not available, especially Android devices. &lt;/p&gt;</environment>
        <key id="12709773">AVRO-1498</key>
            <summary>Custom Encoding with @AvroEncode does not work when FieldAccessReflect is used</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="christophermann">Christopher Mann</assignee>
                                    <reporter username="christophermann">Christopher Mann</reporter>
                        <labels>
                    </labels>
                <created>Tue, 22 Apr 2014 13:53:48 +0000</created>
                <updated>Thu, 24 Jul 2014 20:16:18 +0000</updated>
                            <resolved>Tue, 15 Jul 2014 20:23:31 +0000</resolved>
                                    <version>1.7.5</version>
                    <version>1.7.6</version>
                                    <fixVersion>1.7.7</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13976973" author="christophermann" created="Tue, 22 Apr 2014 16:10:27 +0000"  >&lt;p&gt;Adds custom encoding support to FieldAccessReflect&lt;/p&gt;</comment>
                            <comment id="14020496" author="cutting" created="Fri, 6 Jun 2014 22:58:59 +0000"  >&lt;p&gt;Here&apos;s a version of the patch that includes the test.  Testing required some other changes, but those don&apos;t seem to affect performance.&lt;/p&gt;</comment>
                            <comment id="14020499" author="cutting" created="Fri, 6 Jun 2014 23:00:05 +0000"  >&lt;p&gt;I&apos;ll commit this soon unless there are objections.&lt;/p&gt;</comment>
                            <comment id="14051797" author="jira-bot" created="Thu, 3 Jul 2014 18:35:42 +0000"  >&lt;p&gt;Commit 1607711 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1607711&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1607711&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1498&quot; title=&quot;Custom Encoding with @AvroEncode does not work when FieldAccessReflect is used&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1498&quot;&gt;&lt;del&gt;AVRO-1498&lt;/del&gt;&lt;/a&gt;. Java: Fix custom encodings to work in reflect without Unsafe access.  Contributed by Christopher Mann.&lt;/p&gt;</comment>
                            <comment id="14051867" author="hudson" created="Thu, 3 Jul 2014 20:11:00 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #463 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/463/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/463/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1498&quot; title=&quot;Custom Encoding with @AvroEncode does not work when FieldAccessReflect is used&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1498&quot;&gt;&lt;del&gt;AVRO-1498&lt;/del&gt;&lt;/a&gt;. Java: Fix custom encodings to work in reflect without Unsafe access.  Contributed by Christopher Mann. (cutting: rev 1607711)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/FieldAccessReflect.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectData.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectionUtil.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12649704">AVRO-1341</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12648749" name="AVRO-1498.patch" size="5221" author="cutting" created="Fri, 6 Jun 2014 22:58:59 +0000"/>
                            <attachment id="12641265" name="FieldAccessReflect.patch" size="3132" author="christophermann" created="Tue, 22 Apr 2014 16:10:27 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 6 Jun 2014 22:58:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>388095</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 29 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1uurj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>388353</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>reflection, custom encoding, AvroEncode</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
