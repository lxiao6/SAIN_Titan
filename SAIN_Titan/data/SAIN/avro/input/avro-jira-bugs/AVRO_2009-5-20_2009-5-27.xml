<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:12:11 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2009-5-20+AND+created+%3C%3D+2009-5-27+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="4" total="4"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-35] document limitations of reflect implementation</title>
                <link>https://issues.apache.org/jira/browse/AVRO-35</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The reflect code can only correctly serialize and deserialze a subset of Java classes and interfaces.  That subset should be clearly described.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12426135">AVRO-35</key>
            <summary>document limitations of reflect implementation</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21148&amp;avatarType=issuetype">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 May 2009 17:57:58 +0000</created>
                <updated>Fri, 25 Sep 2009 22:31:39 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                    <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12433540">AVRO-104</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12430900">AVRO-80</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12433163">AVRO-93</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12433350">AVRO-96</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94364</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 36 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dxtz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79411</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-36] binary default values do not decode base64</title>
                <link>https://issues.apache.org/jira/browse/AVRO-36</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The specification says that default values for binary data are base64 encoded text, but the Java implementation uses the raw bytes of the textual value, and does not perform base64 decoded as specified.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12426144">AVRO-36</key>
            <summary>binary default values do not decode base64</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 May 2009 19:38:57 +0000</created>
                <updated>Thu, 7 Jan 2010 22:44:15 +0000</updated>
                            <resolved>Tue, 23 Jun 2009 20:29:42 +0000</resolved>
                                                    <fixVersion>1.0.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12714827" author="anomalizer" created="Sun, 31 May 2009 08:25:10 +0000"  >&lt;p&gt;From &lt;a href=&quot;http://people.apache.org/~cutting/avro/spec.html#serialize_primitive&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://people.apache.org/~cutting/avro/spec.html#serialize_primitive&lt;/a&gt;&lt;br/&gt;
&quot;bytes are serialized as a long followed by that many bytes of data.&quot;&lt;/p&gt;

&lt;p&gt;Maybe the doc needs updating?&lt;/p&gt;</comment>
                            <comment id="12715360" author="anomalizer" created="Tue, 2 Jun 2009 03:59:11 +0000"  >&lt;p&gt;A more elementary question is the rationale for using base64 to encode the binary data. It seems to offer neither storage nor computational advantages. Come to think of it, I like the spec the way it is i.e. length + actual bytes&lt;/p&gt;</comment>
                            <comment id="12715590" author="cutting" created="Tue, 2 Jun 2009 17:09:55 +0000"  >&lt;p&gt;&amp;gt; I like the spec the way it is i.e. length + actual bytes &lt;/p&gt;

&lt;p&gt;The question is not how to encode binary values in Avro, but rather, how to encode default values for binary fields in JSON-based schemas, which has no support for binary values but only UTF-8 strings.&lt;/p&gt;

&lt;p&gt;It is possible to encode arbitrary binary values in UTF-8, by encoding each byte as a code point.  The number of bytes encoded will differ than the raw binary, as bytes between 128 and 255 must be encoded as two bytes.  This has the advantage of rendering ASCII portions of binary data in a readable manner, but, in pathological cases, it can double data size.  Base64 is more opaque, but guarantees data size at 1.5 times the number of bytes.&lt;/p&gt;

&lt;p&gt;For default values I&apos;m not worried about the size, but base64 is a more standard way of encoding binary values in text than perverting unicode.  In particular, base64 is designed to survive email and text editors, which makes it easier to process as source code, as schemas will sometimes be.&lt;/p&gt;

&lt;p&gt;Ideally we&apos;d use an encoding that was both text-editor/email friendly and transparent.  URL encoding might thus be a better choice than base64 or raw UTF-8.  It&apos;s also readily available on most platforms.  How would folks feel about using URL encoding for default values of binary fields in JSON schemas?&lt;/p&gt;</comment>
                            <comment id="12715749" author="anomalizer" created="Tue, 2 Jun 2009 23:38:20 +0000"  >&lt;p&gt;From reading the existing spec, it is clear that schema type data is expected to be JSON compliant. However, it is not clear if Avro data is also expected to be a legitimate JSON fragment. The serialization scheme for all complex types has the potential to generate arbitrary byte streams.&lt;/p&gt;

&lt;p&gt;As far as base64 v/s url encoding is concerned, base 64 routine implementations across various programming languages are more portable than url encoding routines. A classic example is PHP&apos;s urlencode converts spaces to + but rawurlencode converts it to %20 whereas perl&apos;s routines believes that spaces should always exist as %20.&lt;/p&gt;

&lt;p&gt;Also, base64 has a consistent overhead (33%) whereas, url encoding can go bonkers and bloat by 200% for around 75% of the byte values. So, if sending a video clip (thus removing the probablity of most bytes being printable US-ASCII), then url encoding will produce a significantly larger result than base64.&lt;/p&gt;</comment>
                            <comment id="12715758" author="cutting" created="Wed, 3 Jun 2009 00:05:49 +0000"  >&lt;p&gt;&amp;gt; However, it is not clear if Avro data is also expected to be a legitimate JSON fragment.&lt;/p&gt;

&lt;p&gt;No.  The only concern here is the encoding within JSON of the default value for binary field.&lt;/p&gt;

&lt;p&gt;&amp;gt; base 64 routine implementations across various programming languages are more portable than url encoding routines&lt;/p&gt;

&lt;p&gt;Although different url encoders may provide different encodings, won&apos;t they all decode to the same byte string?  The specification permits space to be encoded in multiple ways, but either a + or a %20 must decode to 32, no?  So, unless I&apos;m missing something, I don&apos;t see this as a problem.&lt;/p&gt;

&lt;p&gt;&amp;gt; if sending a video clip ...&lt;/p&gt;

&lt;p&gt;I would not expect something as large as a video clip as the default value in a schema for a binary field.&lt;/p&gt;</comment>
                            <comment id="12715839" author="anomalizer" created="Wed, 3 Jun 2009 06:57:16 +0000"  >&lt;p&gt;Perfect. So we stick to a JSON compliant scheme (base 64) for definition of default values of a binary field and use the hex bytes for data.&lt;/p&gt;</comment>
                            <comment id="12715960" author="cutting" created="Wed, 3 Jun 2009 15:38:45 +0000"  >&lt;p&gt;&amp;gt; So we stick to a JSON compliant scheme (base 64) for definition of default values of a binary field&lt;/p&gt;

&lt;p&gt;URL encoding would be just as JSON compliant.&lt;/p&gt;

&lt;p&gt;&amp;gt; and use the hex bytes for data.&lt;/p&gt;

&lt;p&gt;Binary data is not encoded, not with hex or otherwise.  It&apos;s just written as a sequence of 8-bit bytes.&lt;/p&gt;</comment>
                            <comment id="12716753" author="cutting" created="Fri, 5 Jun 2009 21:13:52 +0000"  >&lt;p&gt;Another possibility, suggested by Owen O&apos;Malley, is that default values for binary fields could be arrays of numbers, e.g.:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;bytes&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt;: [0,0,0,0]}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12716770" author="scott_carey" created="Fri, 5 Jun 2009 22:09:22 +0000"  >&lt;p&gt;I can think of two common cases.&lt;/p&gt;

&lt;p&gt;1.  The default is true binary data completely unrelated to strings.  In this case URL encoding is messy and unintuitive, essentially &apos;%&apos; delimited hex.  Arrays of numbers or hex are the most &apos;natural&apos; text representations for this kind of data for programmers.&lt;/p&gt;

&lt;p&gt;2.  The data is related to strings, perhaps a non-UTF-8 encoding like ASCII or 8859-1 &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_8859-1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/ISO_8859-1&lt;/a&gt; .   For these, URL encoding is the most &apos;natural&apos; fit in my opinion.&lt;/p&gt;

&lt;p&gt;Base 64 is complicated and a lot harder for humans to decode than any of the above.  Its only benefit is space efficiency, but hex is only 50% larger.&lt;/p&gt;

&lt;p&gt;Both types could be supported simultaneously, for example:&lt;/p&gt;

&lt;p&gt;The first use case can be satisfied with &quot;hexdefault&quot;  (or the array one)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;bytes&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;hexdefault&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;A8C11F00&quot;&lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The second with URL encoding&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;bar&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;bytes&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;%2Fdefault%2F%00&quot;&lt;/span&gt;}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12716777" author="cutting" created="Fri, 5 Jun 2009 22:29:20 +0000"  >&lt;p&gt;If we support two representations, I&apos;d vote for using different JSON types (array versus string) to distinguish them rather than different parameters.&lt;/p&gt;

&lt;p&gt;But is &quot;%FF%FF%FF%FF&quot; really any less readable than &lt;span class=&quot;error&quot;&gt;&amp;#91;255,255,255,255&amp;#93;&lt;/span&gt;?  If not, then we might as well stick with just urlencoded strings, no?&lt;/p&gt;</comment>
                            <comment id="12716779" author="scott_carey" created="Fri, 5 Jun 2009 22:41:59 +0000"  >&lt;p&gt;True, URL encoding isn&apos;t very hard to read if every character is encoded.  There is no rule that says you can&apos;t encode &apos;A&apos; to &apos;%41&apos; to avoid URL encoding ugliness when used on binary data.&lt;/p&gt;</comment>
                            <comment id="12720970" author="cutting" created="Wed, 17 Jun 2009 22:58:23 +0000"  >&lt;p&gt;Looking at &lt;a href=&quot;http://www.json.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.json.org/&lt;/a&gt; I see that we can encode arbitrary code points in JSON strings, albeit verbosely.&lt;/p&gt;

&lt;p&gt;So, for example, a bytes containing a single zero could be encoded with &quot;\u0000&quot;.  This inflates non-printing characters in binary data 6x, but is perhaps the most simple, standard encoding we can use.&lt;/p&gt;</comment>
                            <comment id="12721029" author="scott_carey" created="Thu, 18 Jun 2009 01:44:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;So, for example, a bytes containing a single zero could be encoded with &quot;\u0000&quot;. This inflates non-printing characters in binary data 6x, but is perhaps the most simple, standard encoding we can use.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This seems ambiguous.  Code points in strings make sense.  Code points representing binary are more confusing.&lt;/p&gt;

&lt;p&gt;How do you encode a default value of 0xFFFF &amp;#8211; two bytes?  No code point encodes to that in binary representation by any defined UTF serialization I know of.  If the code points are interpreted as code points, the principle of least astonishment would indicate they encode like them with a character encoding.  If they are meant to be interpreted as &apos;raw&apos; values this would work, but may be confusing.  Code points can have intrinsic values much larger than 255 which brings up interesting questions:&lt;/p&gt;

&lt;p&gt;Do the strings &quot;\uFFFF&quot; and&quot;\u00FF\u00FF&quot; represent the same binary data?  Or is the latter 0x00FF00FF ?  It can&apos;t be the latter since there would be no way of representing one byte.  But I&apos;m sure this would confuse some users.  It could be a requirement that only code points between \u0000 and \u00FF be used to guarantee that the number of bytes equals the number of characters.&lt;/p&gt;

&lt;p&gt;I suppose any string representation of default binary values raises the question of what to do with a character with value &amp;gt; 255.  URL encoding forbids such characters, as does a hex literal.&lt;/p&gt;</comment>
                            <comment id="12721350" author="cutting" created="Thu, 18 Jun 2009 17:16:16 +0000"  >&lt;p&gt;&amp;gt; How do you encode a default value of 0xFFFF - two bytes?&lt;/p&gt;

&lt;p&gt;We&apos;d map 1 code point to 1 byte.  So the two byte sequence &lt;span class=&quot;error&quot;&gt;&amp;#91;FF, FF&amp;#93;&lt;/span&gt; would be encoded in JSON as  &quot;\u00FF\u00FF&quot;.&lt;/p&gt;

&lt;p&gt;&amp;gt; Do the strings &quot;\uFFFF&quot; and&quot;\u00FF\u00FF&quot; represent the same binary data?&lt;/p&gt;

&lt;p&gt;No.  We&apos;d only use code points 0-255.  So &quot;\uFFFF&quot; would be illegal.&lt;/p&gt;

&lt;p&gt;I&apos;d much prefer we avoid encodings that render text unreadable, since binary values often include text.  So that rules out base64, hex, etc., leaving us with a choice between URL encoding and the bytes-as-codepoints encoding.  URL encoding is more compact in some cases, but transforms many textual characters, like turning spaces to pluses.  So I am currently leaning towards the codepoint encoding.  It seems the most natural in JSON.  In particular, it is the simplest to implement, since a JSON library is already required to implement AVRO, and one must merely construct a string whose codepoints are the bytes and then the JSON library will implement the coding and decoding.&lt;/p&gt;</comment>
                            <comment id="12722051" author="cutting" created="Fri, 19 Jun 2009 22:06:04 +0000"  >&lt;p&gt;We need to resolve this soon.  Unless there are objections, I will implement the codepoint proposal outlined above: binary values will be encoded in JSON as a string with a 1:1 mapping between the bytes and the codepoints in the JSON string.  E.g., &lt;span class=&quot;error&quot;&gt;&amp;#91;0,65,66,67,255&amp;#93;&lt;/span&gt; will be represented as the JSON string &quot;\u0000ABC\u00FF&quot;.&lt;/p&gt;</comment>
                            <comment id="12722118" author="scott_carey" created="Sat, 20 Jun 2009 01:35:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;URL encoding is more compact in some cases, but transforms many textual characters, like turning spaces to pluses.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Only if it is required that the string be fully URL encoded.  It merely needs to be able to be URL decoded properly.  So spaces, slashes, dots, colons and other things illegal in an URL don&apos;t have to be url encoded &amp;#8211; its only the decoder that has to work, so I think only &apos;%&apos;,  &apos;+&apos;, and anything that can&apos;t go inside a JSON string are illegal printable characters that have to be escaped.&lt;/p&gt;

&lt;p&gt;Therefore, &lt;span class=&quot;error&quot;&gt;&amp;#91;0,65,66, 20,67,255&amp;#93;&lt;/span&gt; could be valid as:&lt;br/&gt;
&quot;%00AB+C%FF&quot;  OR&lt;br/&gt;
&quot;%00AB C%FF&quot;   OR&lt;br/&gt;
&quot;%00AB%20%FF&quot; &lt;/p&gt;

&lt;p&gt;And &quot;This is a default !? /$#@()&quot; would be valid as well in the URL encoding case&lt;/p&gt;

&lt;p&gt;Furthermore, this is not incompatible with the code point proposal.  Unprintable bytes could be represented with code points or url encode escapes.  Only &quot;+&quot; and &quot;%&quot; are required to be escaped.    The built-in JSON string converter would parse out code points and other stuff ( does it turn \t into tab and \n into newline, etc?), and a url decode pass could convert the rest.&lt;/p&gt;

&lt;p&gt;I guess this really just complicates it, but it is an option. &lt;/p&gt;</comment>
                            <comment id="12722795" author="cutting" created="Mon, 22 Jun 2009 20:17:33 +0000"  >&lt;p&gt;Here&apos;s a patch that implements the straightforward JSON encoding, where each codepoint in the JSON string corresponds to a single byte.  I&apos;ll commit this tomorrow, barring objections.&lt;/p&gt;</comment>
                            <comment id="12723290" author="cutting" created="Tue, 23 Jun 2009 20:29:41 +0000"  >&lt;p&gt;I just committed this.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12427816">AVRO-50</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12444972">AVRO-294</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12411447" name="AVRO-36.patch" size="2487" author="cutting" created="Mon, 22 Jun 2009 20:17:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 31 May 2009 08:25:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94365</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 31 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dxu7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79412</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-37] Documentation now generated with Doxygen</title>
                <link>https://issues.apache.org/jira/browse/AVRO-37</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;This patch will provide the following:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;commit 784477cc41ea1065fa5763ddcd9a99c9731b2406
Author: matt &amp;lt;matt@cloudera.com&amp;gt;
Date:   Fri May 22 15:08:28 2009 -0700

    Updated the build.xml to run doxygen on the C source

:100644 100644 391f0bd... d673aae... M	build.xml

commit 9654dc775d6fc660fef850584599d4fc23ff1610
Author: matt &amp;lt;matt@cloudera.com&amp;gt;
Date:   Fri May 22 11:27:50 2009 -0700

    Allow the C doxygen output directory to be set by an environment variable

:100644 100644 73fcee2... 5e6e1f5... M	src/c/Makefile.am
:100644 100644 8cf280f... e76bc87... M	src/c/avro.h
:100644 100644 c1cd5dd... e7a63b4... M	src/c/docs/doxygen.conf

commit e81c638d8d01196dba26172f45cee8b0237b79d8
Author: matt &amp;lt;matt@cloudera.com&amp;gt;
Date:   Sun May 17 20:11:02 2009 -0700

    Put back in the fix to allow C++ apps to use avro.h without extern &quot;C&quot;

:100644 100644 fd3377a... 73fcee2... M	src/c/Makefile.am
:100644 100644 daaa725... 8cf280f... M	src/c/avro.h

commit 7e2886b30701237914fea4d9ffcb483732c6780d
Author: matt &amp;lt;matt@cloudera.com&amp;gt;
Date:   Sun May 17 20:09:16 2009 -0700

    Fixed small type warning for unit test

:100644 100644 94b87db... 7d05c23... M	src/c/test_avro_float_double.c

commit a8c8a9371923ff7360324a9ea7c45dd990ccf0f3
Author: matt &amp;lt;matt@cloudera.com&amp;gt;
Date:   Sun May 17 15:04:36 2009 -0700

    Stub for avro array function

:000000 100644 0000000... 1908d17... A	src/c/avro_array.c

commit cc4ecc14bf4e587ebf07ee0661b59391d7973fd8
Author: matt &amp;lt;matt@cloudera.com&amp;gt;
Date:   Fri May 15 23:53:43 2009 -0700

    Added documentation for avro array processing

:100644 100644 01a922a... daaa725... M	src/c/avro.h

commit 5e1e273afce80e7f0151234dd032cc80b36133a3
Author: matt &amp;lt;matt@cloudera.com&amp;gt;
Date:   Fri May 15 23:17:35 2009 -0700

    Update avro.h to be C++ friendly

:100644 100644 c112423... 01a922a... M	src/c/avro.h

commit bce6b06d0facf645d1f087714f9bee856d530082
Author: matt &amp;lt;matt@cloudera.com&amp;gt;
Date:   Thu May 14 17:53:17 2009 -0700

    First shot at adding file and socket backed Avro handles

:100644 100644 3f2ff2d... d880e3f... M	src/c/avro_file.c
:100644 100644 6fb66a5... 96e8ebb... M	src/c/avro_socket.c

commit 92da91876343d5b7c90ddb95f169c014eda5e516
Author: matt &amp;lt;matt@cloudera.com&amp;gt;
Date:   Thu May 14 17:02:38 2009 -0700

    Updated to build clean Doxygen documentation on the C API

:100644 100644 e1e8cd6... fd3377a... M	src/c/Makefile.am
:100644 100644 f23b7e0... c112423... M	src/c/avro.h
:000000 100644 0000000... c1cd5dd... A	src/c/docs/doxygen.conf

commit 4a60bbc15bda5b1e85cb73e0b007d38a8e63f2a3
Author: matt &amp;lt;matt@cloudera.com&amp;gt;
Date:   Thu May 14 15:49:53 2009 -0700

    Ignore the INSTALL file

:100644 100644 8f41889... 1e48c4a... M	src/c/.gitignore

commit 745d43361dde448b1c8c42aa05a2528b76256ad0
Author: matt &amp;lt;matt@cloudera.com&amp;gt;
Date:   Thu May 14 14:47:56 2009 -0700

    Packaging the Avro C code should depend on test-c instead of compile-c

:100644 100644 0228859... 391f0bd... M	build.xml
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment>&lt;p&gt;Linux / MacOS X&lt;/p&gt;</environment>
        <key id="12426155">AVRO-37</key>
            <summary>Documentation now generated with Doxygen</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="massie">Matt Massie</assignee>
                                    <reporter username="massie">Matt Massie</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 May 2009 22:16:09 +0000</created>
                <updated>Tue, 14 Jul 2009 22:50:09 +0000</updated>
                            <resolved>Tue, 26 May 2009 18:06:47 +0000</resolved>
                                                    <fixVersion>1.0.0</fixVersion>
                                    <component>c</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12712291" author="massie" created="Fri, 22 May 2009 22:22:45 +0000"  >&lt;p&gt;Here is the patch&lt;/p&gt;</comment>
                            <comment id="12712292" author="massie" created="Fri, 22 May 2009 22:24:30 +0000"  >&lt;p&gt;Here is the patch&lt;/p&gt;</comment>
                            <comment id="12712309" author="cutting" created="Fri, 22 May 2009 23:39:55 +0000"  >&lt;p&gt;&amp;gt;  Packaging the Avro C code should depend on test-c instead of compile-c&lt;/p&gt;

&lt;p&gt;I don&apos;t follow this.  Creating the package shouldn&apos;t automatically run tests first, should it?&lt;/p&gt;</comment>
                            <comment id="12712311" author="cutting" created="Fri, 22 May 2009 23:41:33 +0000"  >&lt;p&gt;Also, shouldn&apos;t we have the forrest docs link to the C docs, like they do to the Java docs?&lt;/p&gt;</comment>
                            <comment id="12712313" author="massie" created="Fri, 22 May 2009 23:43:20 +0000"  >&lt;p&gt;I&apos;m ok if this change is reverted.&lt;/p&gt;

&lt;p&gt;I&apos;m thinking (for example) of the &quot;distcheck&quot; target in autotools that requires all your unit tests pass before allowing you to package your software.  It&apos;s a nice check to make sure that you didn&apos;t forget to run tests before you built the package.&lt;/p&gt;

&lt;p&gt;Again, feel free to drop this change if you want.&lt;/p&gt;</comment>
                            <comment id="12712314" author="massie" created="Fri, 22 May 2009 23:49:44 +0000"  >&lt;p&gt;I tried to add the C API to forrest but I kept getting errors.  I&apos;ve never used forrest before so I&apos;m not sure exactly how to add it.   Here was my naive attempted change to &lt;tt&gt;site.xml&lt;/tt&gt;...&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&amp;lt;site label=&lt;span class=&quot;code-quote&quot;&gt;&quot;Avro&quot;&lt;/span&gt; href=&lt;span class=&quot;code-quote&quot;&gt;&quot;&quot; xmlns=&quot;&lt;/span&gt;http:&lt;span class=&quot;code-comment&quot;&gt;//apache.org/forrest/linkmap/1.0&quot;&amp;gt;
&lt;/span&gt;
  &amp;lt;docs label=&lt;span class=&quot;code-quote&quot;&gt;&quot;Documentation&quot;&lt;/span&gt;&amp;gt;
    &amp;lt;overview   label=&lt;span class=&quot;code-quote&quot;&gt;&quot;Overview&quot;&lt;/span&gt;          href=&lt;span class=&quot;code-quote&quot;&gt;&quot;index.html&quot;&lt;/span&gt; /&amp;gt;
    &amp;lt;spec       label=&lt;span class=&quot;code-quote&quot;&gt;&quot;Specification&quot;&lt;/span&gt;     href=&lt;span class=&quot;code-quote&quot;&gt;&quot;spec.html&quot;&lt;/span&gt; /&amp;gt;
    &amp;lt;api       label=&lt;span class=&quot;code-quote&quot;&gt;&quot;API Docs&quot;&lt;/span&gt;           href=&lt;span class=&quot;code-quote&quot;&gt;&quot;ext:api/index&quot;&lt;/span&gt; /&amp;gt;
    &amp;lt;capi     label=&lt;span class=&quot;code-quote&quot;&gt;&quot;C API Docs&quot;&lt;/span&gt;    href=&lt;span class=&quot;code-quote&quot;&gt;&quot;ext:c-api/index&quot;&lt;/span&gt; /&amp;gt;   
    &amp;lt;wiki      label=&lt;span class=&quot;code-quote&quot;&gt;&quot;Wiki&quot;&lt;/span&gt;               href=&lt;span class=&quot;code-quote&quot;&gt;&quot;ext:wiki&quot;&lt;/span&gt; /&amp;gt;
    &amp;lt;faq       label=&lt;span class=&quot;code-quote&quot;&gt;&quot;FAQ&quot;&lt;/span&gt;                href=&lt;span class=&quot;code-quote&quot;&gt;&quot;ext:faq&quot;&lt;/span&gt; /&amp;gt;
  &amp;lt;/docs&amp;gt;

  &amp;lt;external-refs&amp;gt;
    &amp;lt;site      href=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//hadoop.apache.org/avro/&quot;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;    &amp;lt;lists     href=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//hadoop.apache.org/avro/mailing_lists.html&quot;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;    &amp;lt;archive   href=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//mail-archives.apache.org/mod_mbox/hadoop-avro-commits/&quot;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;    &amp;lt;releases  href=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//hadoop.apache.org/avro/releases.html&quot;&lt;/span&gt;&amp;gt;
&lt;/span&gt;      &amp;lt;download href=&lt;span class=&quot;code-quote&quot;&gt;&quot;#Download&quot;&lt;/span&gt; /&amp;gt;
    &amp;lt;/releases&amp;gt;
    &amp;lt;jira      href=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//hadoop.apache.org/avro/issue_tracking.html&quot;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;    &amp;lt;wiki      href=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//wiki.apache.org/hadoop/avro/&quot;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;    &amp;lt;faq       href=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//wiki.apache.org/hadoop/avro/FAQ&quot;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;    &amp;lt;json      href=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//www.json.org/&quot;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;    &amp;lt;vint      href=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//lucene.apache.org/java/2_4_0/fileformats.html#VInt&quot;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;    &amp;lt;zigzag    href=&lt;span class=&quot;code-quote&quot;&gt;&quot;http:&lt;span class=&quot;code-comment&quot;&gt;//code.google.com/apis/protocolbuffers/docs/encoding.html#types&quot;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;    &amp;lt;api href=&lt;span class=&quot;code-quote&quot;&gt;&quot;api/&quot;&lt;/span&gt;&amp;gt;
      &amp;lt;index href=&lt;span class=&quot;code-quote&quot;&gt;&quot;index.html&quot;&lt;/span&gt; /&amp;gt;
    &amp;lt;/api&amp;gt;
    &amp;lt;c-api href=&lt;span class=&quot;code-quote&quot;&gt;&quot;c-api/&quot;&lt;/span&gt;&amp;gt;
       &amp;lt;index href=&lt;span class=&quot;code-quote&quot;&gt;&quot;index.html&quot;&lt;/span&gt; /&amp;gt;
   &amp;lt;/c-api&amp;gt;
  &amp;lt;/external-refs&amp;gt;
&amp;lt;/site&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but I kept getting errors about broken links.  &lt;/p&gt;</comment>
                            <comment id="12713168" author="cutting" created="Tue, 26 May 2009 18:06:46 +0000"  >&lt;p&gt;&amp;gt; I&apos;m thinking (for example) of the &quot;distcheck&quot; target in autotools that requires all your unit tests pass before allowing you to package your software.&lt;/p&gt;

&lt;p&gt;I see how that could make sense.  Perhaps we could add a test-and-package target, but if we do so we should do it for all languages and as a separate patch.&lt;/p&gt;

&lt;p&gt;&amp;gt; I kept getting errors about broken links.&lt;/p&gt;

&lt;p&gt;The example you provided doesn&apos;t link to an actual file.  The file was c-api/html/index.html.&lt;/p&gt;

&lt;p&gt;I reorganized the API docs into doc/api/&lt;/p&gt;
{c,java,py}
&lt;p&gt;, linked to all of these from forrest and committed this.&lt;/p&gt;

&lt;p&gt;Thanks, Matt!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12408852" name="AVRO-37.patch" size="13432" author="massie" created="Fri, 22 May 2009 22:24:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 22 May 2009 23:39:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94366</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 35 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dxuf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79413</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-38] python: add fixed type</title>
                <link>https://issues.apache.org/jira/browse/AVRO-38</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Add fixed type to python&lt;/p&gt;</description>
                <environment></environment>
        <key id="12426334">AVRO-38</key>
            <summary>python: add fixed type</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sharadag">Sharad Agarwal</assignee>
                                    <reporter username="sharadag">Sharad Agarwal</reporter>
                        <labels>
                    </labels>
                <created>Tue, 26 May 2009 08:55:56 +0000</created>
                <updated>Tue, 14 Jul 2009 22:50:09 +0000</updated>
                            <resolved>Tue, 26 May 2009 17:39:09 +0000</resolved>
                                                    <fixVersion>1.0.0</fixVersion>
                                    <component>python</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12712968" author="sharadag" created="Tue, 26 May 2009 11:38:03 +0000"  >&lt;p&gt;all java and python tests passed.&lt;/p&gt;</comment>
                            <comment id="12713145" author="cutting" created="Tue, 26 May 2009 17:39:09 +0000"  >&lt;p&gt;I just committed this.  Thanks, Sharad!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12409025" name="AVRO-38" size="17000" author="sharadag" created="Tue, 26 May 2009 11:38:03 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 26 May 2009 17:39:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94367</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 35 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dxun:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79414</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
