<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:22:58 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2016-1-26+AND+created+%3C%3D+2016-2-2+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="1" total="1"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1788] python api differs unnecessarily between python2 and python3</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1788</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It is difficult to use the python avro module in projects that maintain simultaneous compatibility between python 2 and python 3, because there are small differences in the API between the two versions in the module that seem unnecessary.&lt;/p&gt;

&lt;p&gt;For example, to parse a schema string in python 2:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;from avro.schema &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; parse
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and in python 3:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;from avro.schema &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; Parse
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In Python2, DatumReader&apos;s constructor has keyword argument &quot;writers_schema&quot;, and in Python 3 it becomes &quot;writer_schema&quot; (no s).&lt;/p&gt;

&lt;p&gt;Would it be possible to align method names and arguments across the two modules?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12935015">AVRO-1788</key>
            <summary>python api differs unnecessarily between python2 and python3</summary>
                <type id="5" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Wish</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="ahasha@gmail.com">Alexander Hasha</reporter>
                        <labels>
                    </labels>
                <created>Fri, 29 Jan 2016 04:58:57 +0000</created>
                <updated>Sat, 18 Mar 2017 19:10:29 +0000</updated>
                                                                            <component>python</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="15126830" author="thieman" created="Mon, 1 Feb 2016 19:18:00 +0000"  >&lt;p&gt;+1. This is a major issue for trying to write anything that can support Avro in both Python 2 and 3. Additionally, the Python 3 code is not idiomatic at all according to PEP-8. In the original poster&apos;s example, function names should always be lowercase. &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/#function-names&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://www.python.org/dev/peps/pep-0008/#function-names&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15126835" author="thieman" created="Mon, 1 Feb 2016 19:20:06 +0000"  >&lt;p&gt;I couldn&apos;t find a way to edit my comment but I&apos;d also advocate changing this from Wish to Bug, this isn&apos;t a styling problem, it&apos;s actively preventing other people from writing any code using Avro which is compatible with both major Python versions.&lt;/p&gt;</comment>
                            <comment id="15524837" author="saamuel" created="Tue, 27 Sep 2016 02:36:39 +0000"  >&lt;p&gt;This is an issue. I&apos;m happy to work on this if someone can point me in the right direction!&lt;/p&gt;</comment>
                            <comment id="15526341" author="sacharya" created="Tue, 27 Sep 2016 14:40:25 +0000"  >&lt;p&gt;To make it consistent you will need to change the way the fuction is called. Make it &lt;tt&gt;parse&lt;/tt&gt;.&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/avro/blob/master/lang/py/src/avro/schema.py#L771&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;py2&lt;/a&gt; and &lt;a href=&quot;https://github.com/apache/avro/blob/master/lang/py3/avro/schema.py#L1261&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;py3&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Do note you will need to see to it any reference made in the tests or in the other classes also changes. I would recommend a IDE.&lt;/p&gt;

&lt;p&gt;For &lt;tt&gt;writers_schema&lt;/tt&gt; this is the offending line &lt;a href=&quot;https://github.com/apache/avro/blob/master/lang/py/src/avro/io.py#L379&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;py2&lt;/a&gt;. Again make sure to change all the places from where it is referenced.&lt;/p&gt;</comment>
                            <comment id="15526607" author="ahasha@gmail.com" created="Tue, 27 Sep 2016 16:12:43 +0000"  >&lt;p&gt;For reference, here is what I was working on when I submitted the issue.  This commit shows changes I had to make to make a python app using `avro` Python 2 and 3 compatible.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/blaze/odo/pull/386/commits/ee5e6f384fb809decbcf709aaf74df072a99d067&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/blaze/odo/pull/386/commits/ee5e6f384fb809decbcf709aaf74df072a99d067&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15527776" author="githubbot" created="Tue, 27 Sep 2016 23:31:09 +0000"  >&lt;p&gt;GitHub user ssaamm opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/133&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/133&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1788&quot; title=&quot;python api differs unnecessarily between python2 and python3&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1788&quot;&gt;AVRO-1788&lt;/a&gt;: Implement Python 2 API&lt;/p&gt;

&lt;p&gt;    The Python 2 API and the Python 3 API differ unnecessarily, making it more difficult to write code that supports both major Python versions. Additionally, a lot of these function names were non-Pythonic.&lt;/p&gt;

&lt;p&gt;    This contribution is my original work, and I license the work to the project under the project&apos;s open source license.&lt;/p&gt;

&lt;p&gt;    Tests pass:&lt;/p&gt;

&lt;p&gt;    ```&lt;br/&gt;
    /Users/sam/dev/avro/lang/py3/env/lib/python3.5/site-packages/setuptools/dist.py:294: UserWarning: The version specified (&apos;1.9.0-SNAPSHOT&apos;) is an invalid version, this may not work as expected with newer versions of setuptools, pip, and PyPI. Please see PEP 440 for more details.&lt;br/&gt;
      &quot;details.&quot; % self.metadata.version&lt;br/&gt;
    testCsv (avro.tests.test_script.TestCat) ... ok&lt;br/&gt;
    testCsvHeader (avro.tests.test_script.TestCat) ... ok&lt;br/&gt;
    testFields (avro.tests.test_script.TestCat) ... ok&lt;br/&gt;
    testFiles (avro.tests.test_script.TestCat) ... ok&lt;br/&gt;
    testFilter (avro.tests.test_script.TestCat) ... ok&lt;br/&gt;
    testHelp (avro.tests.test_script.TestCat) ... ok&lt;br/&gt;
    testJsonPretty (avro.tests.test_script.TestCat) ... ok&lt;br/&gt;
    testPrint (avro.tests.test_script.TestCat) ... ok&lt;br/&gt;
    testPrintSchema (avro.tests.test_script.TestCat) ... ok&lt;br/&gt;
    testSkip (avro.tests.test_script.TestCat) ... ok&lt;br/&gt;
    testVersion (avro.tests.test_script.TestCat) ... ok&lt;br/&gt;
    testAppend (avro.tests.test_datafile.TestDataFile) ... ok&lt;br/&gt;
    testContextManager (avro.tests.test_datafile.TestDataFile) ... ok&lt;br/&gt;
    testMetadata (avro.tests.test_datafile.TestDataFile) ... ok&lt;br/&gt;
    testRoundTrip (avro.tests.test_datafile.TestDataFile) ... ok&lt;br/&gt;
    testInterop (avro.tests.test_datafile_interop.TestDataFileInterop) ... ok&lt;br/&gt;
    testSymbolsInOrder (avro.tests.test_enum.TestEnum) ... ok&lt;br/&gt;
    testSymbolsInReverseOrder (avro.tests.test_enum.TestEnum) ... ok&lt;br/&gt;
    testBinaryIntEncoding (avro.tests.test_io.TestIO) ... ok&lt;br/&gt;
    testBinaryLongEncoding (avro.tests.test_io.TestIO) ... ok&lt;br/&gt;
    testDefaultValue (avro.tests.test_io.TestIO) ... ok&lt;br/&gt;
    testFieldOrder (avro.tests.test_io.TestIO) ... ok&lt;br/&gt;
    testNoDefaultValue (avro.tests.test_io.TestIO) ... ok&lt;br/&gt;
    testProjection (avro.tests.test_io.TestIO) ... ok&lt;br/&gt;
    testRoundTrip (avro.tests.test_io.TestIO) ... ok&lt;br/&gt;
    testSchemaPromotion (avro.tests.test_io.TestIO) ... ok&lt;br/&gt;
    testSkipInt (avro.tests.test_io.TestIO) ... ok&lt;br/&gt;
    testSkipLong (avro.tests.test_io.TestIO) ... ok&lt;br/&gt;
    testTypeException (avro.tests.test_io.TestIO) ... ok&lt;br/&gt;
    testUnknownSymbol (avro.tests.test_io.TestIO) ... ok&lt;br/&gt;
    testValidate (avro.tests.test_io.TestIO) ... ok&lt;br/&gt;
    testEchoService (avro.tests.test_ipc.TestIPC)&lt;br/&gt;
    Tests client-side of the Echo service. ... 2016-09-27 18:14:00,348 INFO test_ipc.py:118 : Echo RPC Server listening on 127.0.0.1:57632&lt;br/&gt;
    2016-09-27 18:14:00,348 INFO test_ipc.py:119 : RPC socket: &amp;lt;socket.socket fd=4, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&apos;127.0.0.1&apos;, 57632)&amp;gt;&lt;br/&gt;
    2016-09-27 18:14:00,349 INFO ipc.py:179 : Sending handshake request: &lt;/p&gt;
{&apos;serverHash&apos;: b&apos;\xcc9\x86\xfb\xb6\xad\x8a\ni\xf9X\xbb\x06\xc6\x15\xb2&apos;, &apos;clientHash&apos;: b&apos;\xcc9\x86\xfb\xb6\xad\x8a\ni\xf9X\xbb\x06\xc6\x15\xb2&apos;}
&lt;p&gt;    2016-09-27 18:14:00,350 INFO ipc.py:204 : writing request: {&apos;ping&apos;: {&apos;text&apos;: &apos;hello ping&apos;, &apos;timestamp&apos;: 31415}}&lt;br/&gt;
    2016-09-27 18:14:00,350 INFO ipc.py:654 : Serialized request: b&apos;\xcc9\x86\xfb\xb6\xad\x8a\ni\xf9X\xbb\x06\xc6\x15\xb2\x00\xcc9\x86\xfb\xb6\xad\x8a\ni\xf9X\xbb\x06\xc6\x15\xb2\x00\x00\x08ping\xee\xea\x03\x14hello ping&apos;&lt;br/&gt;
    2016-09-27 18:14:00,351 INFO ipc.py:412 : Processing handshake request: &lt;/p&gt;
{&apos;serverHash&apos;: b&apos;\xcc9\x86\xfb\xb6\xad\x8a\ni\xf9X\xbb\x06\xc6\x15\xb2&apos;, &apos;clientProtocol&apos;: None, &apos;meta&apos;: None, &apos;clientHash&apos;: b&apos;\xcc9\x86\xfb\xb6\xad\x8a\ni\xf9X\xbb\x06\xc6\x15\xb2&apos;}
&lt;p&gt;    2016-09-27 18:14:00,351 INFO ipc.py:441 : Handshake response: &lt;/p&gt;
{&apos;match&apos;: &apos;BOTH&apos;}
&lt;p&gt;    2016-09-27 18:14:00,351 INFO ipc.py:375 : Processing request: {&apos;ping&apos;: {&apos;text&apos;: &apos;hello ping&apos;, &apos;timestamp&apos;: 31415}}&lt;br/&gt;
    2016-09-27 18:14:00,351 INFO test_ipc.py:90 : Message: {&quot;response&quot;: {&quot;type&quot;: &quot;record&quot;, &quot;namespace&quot;: &quot;org.apache.avro.ipc.echo&quot;, &quot;name&quot;: &quot;Pong&quot;, &quot;fields&quot;: [&lt;/p&gt;
{&quot;type&quot;: &quot;long&quot;, &quot;name&quot;: &quot;timestamp&quot;, &quot;default&quot;: -1}
&lt;p&gt;, &lt;/p&gt;
{&quot;type&quot;: &quot;org.apache.avro.ipc.echo.Ping&quot;, &quot;name&quot;: &quot;ping&quot;}
&lt;p&gt;]}, &quot;errors&quot;: [], &quot;request&quot;: [{&quot;type&quot;: {&quot;type&quot;: &quot;record&quot;, &quot;namespace&quot;: &quot;org.apache.avro.ipc.echo&quot;, &quot;name&quot;: &quot;Ping&quot;, &quot;fields&quot;: [&lt;/p&gt;
{&quot;type&quot;: &quot;long&quot;, &quot;name&quot;: &quot;timestamp&quot;, &quot;default&quot;: -1}
&lt;p&gt;, &lt;/p&gt;
{&quot;type&quot;: &quot;string&quot;, &quot;name&quot;: &quot;text&quot;, &quot;default&quot;: &quot;&quot;}
&lt;p&gt;]}, &quot;name&quot;: &quot;ping&quot;}]}&lt;br/&gt;
    2016-09-27 18:14:00,351 INFO test_ipc.py:91 : Request: {&apos;ping&apos;: {&apos;text&apos;: &apos;hello ping&apos;, &apos;timestamp&apos;: 31415}}&lt;br/&gt;
    2016-09-27 18:14:00,352 INFO ipc.py:656 : Serialized response: b&apos;\x00\x00\x00\x00\x00\x00\xbe\x90\xe9\xde\xedU\xee\xea\x03\x14hello ping&apos;&lt;br/&gt;
    127.0.0.1 - - &lt;span class=&quot;error&quot;&gt;&amp;#91;27/Sep/2016 18:14:00&amp;#93;&lt;/span&gt; &quot;POST / HTTP/1.1&quot; 200 -&lt;br/&gt;
    2016-09-27 18:14:00,352 INFO ipc.py:665 : Response sent&lt;br/&gt;
    2016-09-27 18:14:00,353 INFO ipc.py:219 : Processing handshake response: &lt;/p&gt;
{&apos;serverHash&apos;: None, &apos;match&apos;: &apos;BOTH&apos;, &apos;meta&apos;: None, &apos;serverProtocol&apos;: None}
&lt;p&gt;    2016-09-27 18:14:00,353 INFO test_ipc.py:143 : Received echo response: {&apos;timestamp&apos;: 1475018040351, &apos;ping&apos;: {&apos;text&apos;: &apos;hello ping&apos;, &apos;timestamp&apos;: 31415}}&lt;br/&gt;
    2016-09-27 18:14:00,353 INFO ipc.py:179 : Sending handshake request: &lt;/p&gt;
{&apos;serverHash&apos;: b&apos;\xcc9\x86\xfb\xb6\xad\x8a\ni\xf9X\xbb\x06\xc6\x15\xb2&apos;, &apos;clientHash&apos;: b&apos;\xcc9\x86\xfb\xb6\xad\x8a\ni\xf9X\xbb\x06\xc6\x15\xb2&apos;}
&lt;p&gt;    2016-09-27 18:14:00,353 INFO ipc.py:204 : writing request: {&apos;ping&apos;: {&apos;text&apos;: &apos;hello again&apos;, &apos;timestamp&apos;: 123456}}&lt;br/&gt;
    2016-09-27 18:14:00,354 INFO ipc.py:654 : Serialized request: b&apos;\xcc9\x86\xfb\xb6\xad\x8a\ni\xf9X\xbb\x06\xc6\x15\xb2\x00\xcc9\x86\xfb\xb6\xad\x8a\ni\xf9X\xbb\x06\xc6\x15\xb2\x00\x00\x08ping\x80\x89\x0f\x16hello again&apos;&lt;br/&gt;
    2016-09-27 18:14:00,354 INFO ipc.py:412 : Processing handshake request: &lt;/p&gt;
{&apos;serverHash&apos;: b&apos;\xcc9\x86\xfb\xb6\xad\x8a\ni\xf9X\xbb\x06\xc6\x15\xb2&apos;, &apos;clientProtocol&apos;: None, &apos;meta&apos;: None, &apos;clientHash&apos;: b&apos;\xcc9\x86\xfb\xb6\xad\x8a\ni\xf9X\xbb\x06\xc6\x15\xb2&apos;}
&lt;p&gt;    2016-09-27 18:14:00,355 INFO ipc.py:441 : Handshake response: &lt;/p&gt;
{&apos;match&apos;: &apos;BOTH&apos;}
&lt;p&gt;    2016-09-27 18:14:00,355 INFO ipc.py:375 : Processing request: {&apos;ping&apos;: {&apos;text&apos;: &apos;hello again&apos;, &apos;timestamp&apos;: 123456}}&lt;br/&gt;
    2016-09-27 18:14:00,355 INFO test_ipc.py:90 : Message: {&quot;response&quot;: {&quot;type&quot;: &quot;record&quot;, &quot;namespace&quot;: &quot;org.apache.avro.ipc.echo&quot;, &quot;name&quot;: &quot;Pong&quot;, &quot;fields&quot;: [&lt;/p&gt;
{&quot;type&quot;: &quot;long&quot;, &quot;name&quot;: &quot;timestamp&quot;, &quot;default&quot;: -1}
&lt;p&gt;, &lt;/p&gt;
{&quot;type&quot;: &quot;org.apache.avro.ipc.echo.Ping&quot;, &quot;name&quot;: &quot;ping&quot;}
&lt;p&gt;]}, &quot;errors&quot;: [], &quot;request&quot;: [{&quot;type&quot;: {&quot;type&quot;: &quot;record&quot;, &quot;namespace&quot;: &quot;org.apache.avro.ipc.echo&quot;, &quot;name&quot;: &quot;Ping&quot;, &quot;fields&quot;: [&lt;/p&gt;
{&quot;type&quot;: &quot;long&quot;, &quot;name&quot;: &quot;timestamp&quot;, &quot;default&quot;: -1}
&lt;p&gt;, &lt;/p&gt;
{&quot;type&quot;: &quot;string&quot;, &quot;name&quot;: &quot;text&quot;, &quot;default&quot;: &quot;&quot;}
&lt;p&gt;]}, &quot;name&quot;: &quot;ping&quot;}]}&lt;br/&gt;
    2016-09-27 18:14:00,355 INFO test_ipc.py:91 : Request: {&apos;ping&apos;: {&apos;text&apos;: &apos;hello again&apos;, &apos;timestamp&apos;: 123456}}&lt;br/&gt;
    2016-09-27 18:14:00,355 INFO ipc.py:656 : Serialized response: b&apos;\x00\x00\x00\x00\x00\x00\xc6\x90\xe9\xde\xedU\x80\x89\x0f\x16hello again&apos;&lt;br/&gt;
    127.0.0.1 - - &lt;span class=&quot;error&quot;&gt;&amp;#91;27/Sep/2016 18:14:00&amp;#93;&lt;/span&gt; &quot;POST / HTTP/1.1&quot; 200 -&lt;br/&gt;
    2016-09-27 18:14:00,355 INFO ipc.py:665 : Response sent&lt;br/&gt;
    2016-09-27 18:14:00,356 INFO ipc.py:219 : Processing handshake response: &lt;/p&gt;
{&apos;serverHash&apos;: None, &apos;match&apos;: &apos;BOTH&apos;, &apos;meta&apos;: None, &apos;serverProtocol&apos;: None}
&lt;p&gt;    2016-09-27 18:14:00,356 INFO test_ipc.py:149 : Received echo response: {&apos;timestamp&apos;: 1475018040355, &apos;ping&apos;: {&apos;text&apos;: &apos;hello again&apos;, &apos;timestamp&apos;: 123456}}&lt;br/&gt;
    ok&lt;br/&gt;
    testEquivalenceAfterRoundTrip (avro.tests.test_protocol.TestProtocol) ... ok&lt;br/&gt;
    testInnerNamespaceNotRendered (avro.tests.test_protocol.TestProtocol) ... ok&lt;br/&gt;
    testInnerNamespaceSet (avro.tests.test_protocol.TestProtocol) ... ok&lt;br/&gt;
    testParse (avro.tests.test_protocol.TestProtocol) ... ok&lt;br/&gt;
    testValidCastToStringAfterParse (avro.tests.test_protocol.TestProtocol) ... ok&lt;br/&gt;
    testCorrectRecursiveExtraction (avro.tests.test_schema.TestSchema) ... ok&lt;br/&gt;
    testDocAttributes (avro.tests.test_schema.TestSchema) ... ok&lt;br/&gt;
    testEquivalenceAfterRoundTrip (avro.tests.test_schema.TestSchema) ... ok&lt;br/&gt;
    testFullname (avro.tests.test_schema.TestSchema)&lt;br/&gt;
    The fullname is determined in one of the following ways: ... ok&lt;br/&gt;
    testOtherAttributes (avro.tests.test_schema.TestSchema) ... ok&lt;br/&gt;
    testParse (avro.tests.test_schema.TestSchema) ... ok&lt;br/&gt;
    testValidCastToStringAfterParse (avro.tests.test_schema.TestSchema) ... ok&lt;br/&gt;
    testMultiFile (avro.tests.test_script.TestWrite) ... ok&lt;br/&gt;
    testOutfile (avro.tests.test_script.TestWrite) ... ok&lt;br/&gt;
    testStdin (avro.tests.test_script.TestWrite) ... ok&lt;br/&gt;
    testVersion (avro.tests.test_script.TestWrite) ... ok&lt;br/&gt;
    testWriteCsv (avro.tests.test_script.TestWrite) ... ok&lt;br/&gt;
    testWriteJson (avro.tests.test_script.TestWrite) ... ok&lt;/p&gt;

&lt;p&gt;    ----------------------------------------------------------------------&lt;br/&gt;
    Ran 50 tests in 2.305s&lt;/p&gt;

&lt;p&gt;    OK&lt;br/&gt;
    ```&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/ssaamm/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/ssaamm/avro&lt;/a&gt; master&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/133.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/133.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #133&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 846ac19a1c944865f1d96cc767e713ee1f25c4ea&lt;br/&gt;
Author: Samuel Taylor &amp;lt;github@samueltaylor.org&amp;gt;&lt;br/&gt;
Date:   2016-09-27T23:08:58Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1788&quot; title=&quot;python api differs unnecessarily between python2 and python3&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1788&quot;&gt;AVRO-1788&lt;/a&gt;: Implement Python 2 API&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15931334" author="manu-chroma" created="Sat, 18 Mar 2017 19:10:29 +0000"  >&lt;p&gt;What is the status of this bug? I am contributing to a project which is working towards supporting both python2.7 and python3, and it relies very heavily on avro.  &lt;/p&gt;

&lt;p&gt;It would be great if we can have a unified API for avro. This would make the support for python 3 really smooth. Otherwise, we&apos;ll be struggling unnecessarily and will end up writing more code.&lt;/p&gt;

&lt;p&gt;I&apos;m willing put work into resolving this issue. I&apos;d be grateful if someone could point me to what needs to be done. &lt;br/&gt;
Thanks. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 1 Feb 2016 19:18:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 44 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2s4pj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
