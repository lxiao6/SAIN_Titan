<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:18:31 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2013-4-3+AND+created+%3C%3D+2013-4-10+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="7" total="7"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1286] Python script avro cat should be able to read from stdin</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1286</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently, you have to specify a target file on the command line.  But it would be nice to be able to stream data through avro cat.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12640416">AVRO-1286</key>
            <summary>Python script avro cat should be able to read from stdin</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="laserson">Uri Laserson</reporter>
                        <labels>
                    </labels>
                <created>Wed, 3 Apr 2013 00:46:11 +0000</created>
                <updated>Fri, 27 Feb 2015 23:05:17 +0000</updated>
                                                                            <component>python</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13620615" author="trochee" created="Wed, 3 Apr 2013 05:03:25 +0000"  >&lt;p&gt;Biggest headache here is that the python avro data file library requires that the file be seekable. Standard in is not seekable.&lt;/p&gt;

&lt;p&gt;I think this is a bug or a misfeature in the python library and probably deserves a ticket of its own.&lt;/p&gt;</comment>
                            <comment id="13620696" author="qwertymaniac" created="Wed, 3 Apr 2013 07:33:00 +0000"  >&lt;p&gt;Dupe of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-959&quot; title=&quot;python implementation calls seek on input, unable to read avros from a stream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-959&quot;&gt;AVRO-959&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="13620946" author="trochee" created="Wed, 3 Apr 2013 14:15:09 +0000"  >&lt;p&gt;Oops. &lt;b&gt;my&lt;/b&gt; request was a dupe of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-959&quot; title=&quot;python implementation calls seek on input, unable to read avros from a stream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-959&quot;&gt;AVRO-959&lt;/a&gt;. This issue should be considered blocked by &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-959&quot; title=&quot;python implementation calls seek on input, unable to read avros from a stream&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-959&quot;&gt;AVRO-959&lt;/a&gt;. Thanks Harsh.&lt;/p&gt;</comment>
                            <comment id="14056277" author="nottings" created="Wed, 9 Jul 2014 14:16:21 +0000"  >&lt;p&gt;What you are trying to do can be easily accomplished as follows:&lt;br/&gt;
import cStringIO&lt;br/&gt;
file_like_obj = cStringIO.StringIO()&lt;br/&gt;
file_like_obj.write(sys.stdin.read())&lt;br/&gt;
file_like_obj.seek(0)&lt;/p&gt;

&lt;p&gt;now you can pass this file_like_obj into avro&apos;s read method.&lt;/p&gt;</comment>
                            <comment id="14063902" author="laserson" created="Wed, 16 Jul 2014 18:53:09 +0000"  >&lt;p&gt;I&apos;ve been a little out of the loop with Avro Python development, but do you mean pass the &lt;tt&gt;file_like_object&lt;/tt&gt; to the &lt;tt&gt;DataFileReader&lt;/tt&gt; constructor?  But IIRC, this will then seek to the end of the file in order to get the number of bytes to expect.  What happens if you seek to the end of the file in this case?  Will it try to buffer the entire input stream in memory?&lt;/p&gt;</comment>
                            <comment id="14063938" author="nottings" created="Wed, 16 Jul 2014 19:11:32 +0000"  >&lt;p&gt;I was just trying to challenge the OP comment that &quot;Standard in is not seekable&quot;. Using the method I posted, something from the command line can be piped ( | ) to a python script as standard in and used by the DataFileReader constructor as if it were a file being read.  This could be useful in map/reduce jobs where Hadoop will try to send mapped data to a reduce python script as stdin. For a continuous stream ( as it sounds like you are describing ) I don&apos;t think this method would work. &lt;/p&gt;</comment>
                            <comment id="14092571" author="sjg" created="Mon, 11 Aug 2014 08:45:27 +0000"  >&lt;p&gt;@nottings your solution works for small Avros because it reads the whole thing in memory. The Python library should be able to extract avro records from a non-seekable stream.&lt;/p&gt;</comment>
                            <comment id="14340963" author="ahasha@gmail.com" created="Fri, 27 Feb 2015 22:44:06 +0000"  >&lt;p&gt;Has anyone thought any more about this recently?  I&apos;m looking at this issue for my own purposes.  As far as I can tell so far, the calls to `seek` are not inherently necessary to parsing the data stream.  There is one seek to determine the file length, but that looks like a convenience method for determining if the end of the file has been reached.  (You can tell when that happens on a stream fairly easily.)  You do need to seek backwards by `SYNC_SIZE`, but it seems like this could be accomplished by buffering a whole number of blocks in memory, not necessarily the whole file.&lt;/p&gt;

&lt;p&gt;I&apos;d like to give this a shot, but am worried I&apos;m failing to understand an important detail.  &lt;/p&gt;</comment>
                            <comment id="14340983" author="sjg" created="Fri, 27 Feb 2015 23:02:34 +0000"  >&lt;p&gt;I really haven&apos;t. &lt;/p&gt;

&lt;p&gt;When I entered Avro-959 I wanted to use python in a streaming job to process avro files. The whole stack was broken with respect to that goal, not just seeking in the avro reader code.  I made a 4 hour attempt at using a buffer and removing the seek calls. I personally wouldn&apos;t spend a ton of time on it. &lt;/p&gt;

&lt;p&gt;It might be better to use &lt;a href=&quot;https://cffi.readthedocs.org/en/release-0.8/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cffi.readthedocs.org/en/release-0.8/&lt;/a&gt; to interface to the C Avro implementation. One gets speed, less memory overhead and library usable across all python implementations.&lt;/p&gt;</comment>
                            <comment id="14340989" author="laserson" created="Fri, 27 Feb 2015 23:05:17 +0000"  >&lt;p&gt;I have used this as a workaround:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/laserson/8941547&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gist.github.com/laserson/8941547&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12532512">AVRO-959</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 3 Apr 2013 05:03:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>320879</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 47 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1jd4n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>321220</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1287] Interop tests should test codecs as well</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1287</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently the interop tests for data files only generate and parse a data file with null codec in each language. Given that the deflate codec is also a required codec in the spec, we should be testing interop on deflate (and optionally snappy, too).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12640439">AVRO-1287</key>
            <summary>Interop tests should test codecs as well</summary>
                <type id="6" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/requirement.png">Test</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="martinkl">Martin Kleppmann</assignee>
                                    <reporter username="martinkl">Martin Kleppmann</reporter>
                        <labels>
                    </labels>
                <created>Wed, 3 Apr 2013 04:45:50 +0000</created>
                <updated>Tue, 20 Aug 2013 17:46:06 +0000</updated>
                            <resolved>Sat, 13 Apr 2013 04:46:50 +0000</resolved>
                                    <version>1.7.4</version>
                                    <fixVersion>1.7.5</fixVersion>
                                    <component>build</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13620606" author="martinkl" created="Wed, 3 Apr 2013 04:51:45 +0000"  >&lt;p&gt;Attached is a start at this: making the Java implementation generate an example data file with deflate codec as well as the existing one with null codec.&lt;/p&gt;

&lt;p&gt;This deflate passes the interop tests for Java, Python and C. I&apos;ve not been able to test PHP. It fails on Ruby, since the Ruby implementation doesn&apos;t yet support deflate; I&apos;ve created &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1288&quot; title=&quot;Ruby: support deflate codec in data files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1288&quot;&gt;&lt;del&gt;AVRO-1288&lt;/del&gt;&lt;/a&gt; for that.&lt;/p&gt;</comment>
                            <comment id="13624598" author="martinkl" created="Sun, 7 Apr 2013 02:45:48 +0000"  >&lt;p&gt;Would someone who knows their way around Maven be able to review this? Not sure if the way I&apos;ve integrated this into the build is sane.&lt;/p&gt;</comment>
                            <comment id="13630760" author="cutting" created="Fri, 12 Apr 2013 23:35:23 +0000"  >&lt;p&gt;This looks like a fine way to add this into the build, but it causes PHP tests to fail.&lt;/p&gt;

&lt;p&gt;If I update the regex in InterOpTest.php as follows:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;-      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (0 &amp;lt; preg_match(&lt;span class=&quot;code-quote&quot;&gt;&apos;/.*\.avro$/&apos;&lt;/span&gt;, $file))
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (0 &amp;lt; preg_match(&lt;span class=&quot;code-quote&quot;&gt;&apos;/^[a-z]+\.avro$/&apos;&lt;/span&gt;, $file))
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then tests pass.&lt;/p&gt;</comment>
                            <comment id="13630931" author="martinkl" created="Sat, 13 Apr 2013 04:46:50 +0000"  >&lt;p&gt;Thanks for the review Doug. I committed this (r1467548), including your change to ignore deflate data files in the PHP test suite, and a similar change to ignore deflate in Ruby. This keeps the interop test suite passing on this commit.&lt;/p&gt;

&lt;p&gt;I will shortly commit deflate support for Ruby (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1288&quot; title=&quot;Ruby: support deflate codec in data files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1288&quot;&gt;&lt;del&gt;AVRO-1288&lt;/del&gt;&lt;/a&gt;) and undo the ignoring of deflated files in Ruby.&lt;/p&gt;</comment>
                            <comment id="13630966" author="hudson" created="Sat, 13 Apr 2013 06:41:46 +0000"  >&lt;p&gt;Integrated in AvroJava #361 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/361/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/361/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1287&quot; title=&quot;Interop tests should test codecs as well&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1287&quot;&gt;&lt;del&gt;AVRO-1287&lt;/del&gt;&lt;/a&gt;. Add data file with deflate codec to the interoperability test suite. (Revision 1467548)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
martinkl : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/build.sh&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/RandomData.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/php/test/InterOpTest.php&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/interop/test_interop.rb&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12640440">AVRO-1288</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12576719" name="AVRO-1287.patch" size="4959" author="martinkl" created="Wed, 3 Apr 2013 04:51:45 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 12 Apr 2013 23:35:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>320902</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 41 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1jd9r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>321243</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1288] Ruby: support deflate codec in data files</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1288</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The current Ruby implementation of data files only supports the &quot;null&quot; codec. Given that &quot;deflate&quot; is required by the spec, it should really be supported too.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12640440">AVRO-1288</key>
            <summary>Ruby: support deflate codec in data files</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="martinkl">Martin Kleppmann</assignee>
                                    <reporter username="martinkl">Martin Kleppmann</reporter>
                        <labels>
                    </labels>
                <created>Wed, 3 Apr 2013 04:51:12 +0000</created>
                <updated>Tue, 20 Aug 2013 17:46:06 +0000</updated>
                            <resolved>Sat, 13 Apr 2013 04:51:42 +0000</resolved>
                                                    <fixVersion>1.7.5</fixVersion>
                                    <component>ruby</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13620607" author="martinkl" created="Wed, 3 Apr 2013 04:54:10 +0000"  >&lt;p&gt;Attached a patch that adds deflate support to Avro::DataFile::Reader; it is able to parse deflated files generated by the Java implementation (see &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1287&quot; title=&quot;Interop tests should test codecs as well&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1287&quot;&gt;&lt;del&gt;AVRO-1287&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="13624585" author="martinkl" created="Sun, 7 Apr 2013 01:57:59 +0000"  >&lt;p&gt;Attached an updated patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1288&quot; title=&quot;Ruby: support deflate codec in data files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1288&quot;&gt;&lt;del&gt;AVRO-1288&lt;/del&gt;&lt;/a&gt;-2.patch) that factors codecs into pluggable classes, adds deflate support for writing as well as reading, and adds tests. I&apos;ve tested with Ruby 1.8.7 and 1.9.3, and tested interop with Java, C and Python.&lt;/p&gt;

&lt;p&gt;I think this is ok to be committed now &#8212;&#160;would appreciate review.&lt;/p&gt;</comment>
                            <comment id="13630764" author="cutting" created="Fri, 12 Apr 2013 23:36:54 +0000"  >&lt;p&gt;+1 This looks good to me (a non-Ruby programmer).  Existing tests and interop tests pass.&lt;/p&gt;</comment>
                            <comment id="13630935" author="martinkl" created="Sat, 13 Apr 2013 04:51:42 +0000"  >&lt;p&gt;Thanks for reviewing it, Doug! I committed this (r1467549).&lt;/p&gt;</comment>
                            <comment id="13630967" author="hudson" created="Sat, 13 Apr 2013 06:41:46 +0000"  >&lt;p&gt;Integrated in AvroJava #361 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/361/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/361/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1288&quot; title=&quot;Ruby: support deflate codec in data files&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1288&quot;&gt;&lt;del&gt;AVRO-1288&lt;/del&gt;&lt;/a&gt;. Ruby: Add support for deflate codec in data files. (Revision 1467549)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
martinkl : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/Rakefile&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/interop/test_interop.rb&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/lib/avro.rb&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/lib/avro/data_file.rb&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/test/test_datafile.rb&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12640439">AVRO-1287</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12577419" name="AVRO-1288-2.patch" size="9336" author="martinkl" created="Sun, 7 Apr 2013 01:57:59 +0000"/>
                            <attachment id="12576720" name="AVRO-1288.patch" size="3074" author="martinkl" created="Wed, 3 Apr 2013 04:54:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 12 Apr 2013 23:36:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>320903</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 41 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1jd9z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>321244</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1289] Python: Schema objects should polymorphically interact with data-walker interface</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1289</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Python &lt;tt&gt;avro.schema&lt;/tt&gt; objects should be able to call back to a general data-and-schema parallel-walker (&quot;validate&quot; would be one of those, but so could be &quot;default-filler&quot;). &lt;/p&gt;

&lt;p&gt;There should be an &lt;tt&gt;avro.walker&lt;/tt&gt; interface that owns the parallel state (a datum-reader/deserializer, a datum-writer/serializer, a validator, or a default-filler &amp;#8211; see &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1265&quot; title=&quot;Python: schema objects should support builder() default-filling behavior&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1265&quot;&gt;AVRO-1265&lt;/a&gt;). Schema polymorphism would allow us to eliminate the large (and highly redundant) function-dispatch methods in &lt;tt&gt;avro.io&lt;/tt&gt; by making the &lt;tt&gt;avro.schema.Schema&lt;/tt&gt; subclass responsible for calling back to the &lt;tt&gt;avro.walker&lt;/tt&gt; object.&lt;/p&gt;

&lt;p&gt;Assigning this to v1.8.0 because it may be difficult to duplicate &lt;b&gt;every&lt;/b&gt; behavior of 1.7.* with the same function signatures, especially where this refactor may be eliminate entire classes.&lt;/p&gt;

&lt;p&gt;This factoring ought to make it easier to improve or extend objects that meet this &lt;tt&gt;walker&lt;/tt&gt; interface &amp;#8211; validators &amp;amp; serializers might be able to store more state about their position within a record, for example, to yield more informative error messages upon mismatch (as requested by Jonathan Coveney on the user mailing list).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12640827">AVRO-1289</key>
            <summary>Python: Schema objects should polymorphically interact with data-walker interface</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="trochee">Jeremy Kahn</assignee>
                                    <reporter username="trochee">Jeremy Kahn</reporter>
                        <labels>
                            <label>features</label>
                    </labels>
                <created>Thu, 4 Apr 2013 18:14:02 +0000</created>
                <updated>Fri, 29 Jan 2016 12:35:32 +0000</updated>
                                            <version>1.7.5</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>python</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>321286</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 42 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1jfnz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>321631</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1290] Handling NaN and positive and negative infinities in C++ Json</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1290</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;If you use the json encoder and pass it a double with value e.g. std::numeric_limits&amp;lt;double&amp;gt;::infinity() it happily writes the literal &quot;inf&quot;. However, the decoder chokes on that literal.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12640885">AVRO-1290</key>
            <summary>Handling NaN and positive and negative infinities in C++ Json</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="drussel">Daniel Russel</assignee>
                                    <reporter username="drussel">Daniel Russel</reporter>
                        <labels>
                    </labels>
                <created>Thu, 4 Apr 2013 22:27:54 +0000</created>
                <updated>Fri, 28 Dec 2018 16:25:30 +0000</updated>
                            <resolved>Thu, 13 Jun 2013 19:03:14 +0000</resolved>
                                    <version>1.7.3</version>
                                                    <component>c++</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13680577" author="thiru_mg" created="Tue, 11 Jun 2013 19:27:42 +0000"  >&lt;p&gt;JSON specification does not say how to encode +infinity, -infinity or NaN. Consequently other language bindings of Avro do not honor infinity etc.&lt;/p&gt;

&lt;p&gt;Interestingly, Jackson, a popular Java JSON library, encodes +infinity, -infinity and Nan as strings &quot;Infinity&quot;, &quot;-Infinity&quot; and &quot;NaN&quot; respectively. It is also able to decode them properly back to appropriate data. Ruby&apos;s string conversion of these are exactly the same as Jackson convention. However, Ruby&apos;s to_json method that comes with the language runtime refuses to encode +infinity, -infinity or NaN. Apparently PHP does something very different: &lt;a href=&quot;http://stackoverflow.com/questions/13581843/php-how-to-encode-infinity-or-nan-numbers-to-json&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/13581843/php-how-to-encode-infinity-or-nan-numbers-to-json&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can do either of the following:&lt;/p&gt;

&lt;p&gt;1. Throw an exception if we encounter +infinity, -infinity or NaN while encoding into JSON. (Ruby behavior)&lt;br/&gt;
2. Stick to Jackson/Ruby convention. This is better than inventing a new convention of our own.&lt;/p&gt;

&lt;p&gt;My personal preference is for (1), because that conforms to JSON standard. But if others think (2) is better, we can go with it as well.&lt;/p&gt;

&lt;p&gt;If we go with option (2), the format for serialization would be as follows. Let&apos;s say we have an object with a single double field &quot;d&quot; in it. Examples of encoded JSON are:&lt;/p&gt;

{ &quot;d&quot;: 1.45 }
{ &quot;d&quot;: &quot;Infinity&quot; }
{ &quot;d&quot;: &quot;-Infinity&quot; }
{ &quot;d&quot;: &quot;NaN&quot; }

&lt;p&gt;Please note that the double is encoded a string if it is one of the special values.&lt;/p&gt;</comment>
                            <comment id="13680579" author="thiru_mg" created="Tue, 11 Jun 2013 19:31:00 +0000"  >&lt;p&gt;If we choose to go with Jackson style encoding of +/- infinity and NaN, this patch implements it.&lt;/p&gt;</comment>
                            <comment id="13680887" author="drussel" created="Wed, 12 Jun 2013 01:56:11 +0000"  >&lt;p&gt;While either of the above options (throw an exception or using the Jackson/Ruby convention) is an improvement for me, I do find that being able to work with infinity/nan as values is often useful and allows me to avoid various special casing and checks in my code. So I would prefer 2. As a particular example here, I need a sentinel value (as well as being able to support normal double values). Being able to use NaN or infinity works quite naturally and avoids fussing with edge cases caused by conversion precision or such.&lt;/p&gt;</comment>
                            <comment id="13682575" author="jira-bot" created="Thu, 13 Jun 2013 19:02:47 +0000"  >&lt;p&gt;Commit 1492821 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thiru_mg&quot; class=&quot;user-hover&quot; rel=&quot;thiru_mg&quot;&gt;Thiruvalluvan M. G.&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1492821&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1492821&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1290&quot; title=&quot;Handling NaN and positive and negative infinities in C++ Json&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1290&quot;&gt;&lt;del&gt;AVRO-1290&lt;/del&gt;&lt;/a&gt;. Handling NaN and positive and negative infinities in C++ Json&lt;/p&gt;</comment>
                            <comment id="13682577" author="thiru_mg" created="Thu, 13 Jun 2013 19:03:14 +0000"  >&lt;p&gt;Committed revision 1492821.&lt;/p&gt;

&lt;p&gt;Thank you Daniel.&lt;/p&gt;</comment>
                            <comment id="13682618" author="hudson" created="Thu, 13 Jun 2013 19:40:41 +0000"  >&lt;p&gt;Integrated in AvroJava #377 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/377/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/377/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1290&quot; title=&quot;Handling NaN and positive and negative infinities in C++ Json&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1290&quot;&gt;&lt;del&gt;AVRO-1290&lt;/del&gt;&lt;/a&gt;. Handling NaN and positive and negative infinities in C++ Json (Revision 1492821)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
thiru : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/c++/impl/json/JsonIO.cc&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/c++/impl/json/JsonIO.hh&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/c++/impl/parsing/JsonCodec.cc&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/c++/test/CodecTests.cc&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16730355" author="thiru_mg" created="Fri, 28 Dec 2018 16:25:30 +0000"  >&lt;p&gt;Closing issues that got resolved in earlier releases.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12587287" name="AVRO-1290.patch" size="7492" author="thiru_mg" created="Tue, 11 Jun 2013 19:31:00 +0000"/>
                            <attachment id="12577089" name="patch" size="1340" author="drussel" created="Thu, 4 Apr 2013 22:31:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Jun 2013 19:27:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>321344</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1jg0v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>321689</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1291] Python library missing strict JSON encode/decoe</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1291</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The Python Avro libraries don&apos;t actually have a proper JSON decoder or encoder, because they don&apos;t handle the &lt;a href=&quot;http://avro.apache.org/docs/current/spec.html#json_encoding&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;type-hinting for unions&lt;/a&gt; properly.&lt;/p&gt;

&lt;p&gt;The Python &lt;tt&gt;avro.io&lt;/tt&gt; library should provide a pair of &lt;tt&gt;StrictJsonEncoder,StrictJsonDecoder&lt;/tt&gt;} classes that correctly include (and decode) the type hints when the schema expects a union.&lt;/p&gt;

&lt;p&gt;Jonathan Coveney &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/avro-user/201304.mbox/%3CCAKne9Z6nkYXwb4QzPr4qNyH1o7TnL1674MspgnHuKMuD2imguQ%40mail.gmail.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;raised this concern&lt;/a&gt; on the Avro User mailing list.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12641659">AVRO-1291</key>
            <summary>Python library missing strict JSON encode/decoe</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="trochee">Jeremy Kahn</reporter>
                        <labels>
                    </labels>
                <created>Tue, 9 Apr 2013 16:23:52 +0000</created>
                <updated>Fri, 30 Sep 2016 07:31:45 +0000</updated>
                                            <version>1.7.7</version>
                                                    <component>python</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="14256321" author="ksa" created="Mon, 22 Dec 2014 23:43:01 +0000"  >&lt;p&gt;Now you may supply avro.HINTS_NONE (default), HINTS_PEGASUS (Pegasus style de-/serialization), and HINTS_ALL (strict JSON de-/serialization) to DatumReader/Writer&lt;/p&gt;</comment>
                            <comment id="14270091" author="rdblue" created="Thu, 8 Jan 2015 21:50:01 +0000"  >&lt;p&gt;Hi Sergei, sorry to keep you waiting on a review.&lt;/p&gt;

&lt;p&gt;Could you clarify what your additions do to help me review the patch? I think that the &quot;hinting&quot; referenced in the description was in reference to the way that unions are encoded in JSON: as an object that tells you both the union branch as well as the value. Your patch uses HINTS_ALL for to turn this on, with an additional option for Pegasus-style JSON?&lt;/p&gt;

&lt;p&gt;The primary changes look like they are to the DatumReader/DatumWriter - why are they there instead of in the encoder/decoder?&lt;/p&gt;

&lt;p&gt;What are the changes to schema.py for?&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="14270215" author="ksa" created="Thu, 8 Jan 2015 23:33:29 +0000"  >&lt;p&gt;Argument passed defines how the object persist in memory. With default HINTS_NONE this is current behavior (no Type hinting).&lt;br/&gt;
With HINTS_ALL this is strict JSON hinting. I.e. you can do json.dumps(my_avro_object) and get correct JSON Avro Serialization (no extra JSONDecoder/Encoder required)&lt;br/&gt;
With HINTS_PEGASUS you get Linkedin Pegasus representation of the object. You can use this for example to deserialize object from avro file and then make a REST.li call:&lt;br/&gt;
requests.put(RESTLI_SERVER_URL, json.dumps(my_avro_object))&lt;/p&gt;</comment>
                            <comment id="14270220" author="ksa" created="Thu, 8 Jan 2015 23:35:16 +0000"  >&lt;p&gt;Restli info: &lt;a href=&quot;http://rest.li/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://rest.li/&lt;/a&gt;&lt;br/&gt;
Pegasus objects: &lt;a href=&quot;https://github.com/linkedin/rest.li/wiki/DATA-Data-Schema-and-Templates&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/linkedin/rest.li/wiki/DATA-Data-Schema-and-Templates&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14270299" author="ksa" created="Fri, 9 Jan 2015 00:41:19 +0000"  >&lt;p&gt;Changes in schema.py ensure that all schemas (including Primitive) now have fullname which one can access. Useful for special processing.&lt;br/&gt;
Changes in validate() are to report particular sub-entity with error. Very useful in hierarchical records where some internal item has problem.&lt;br/&gt;
Having this functionality is a way more logical:&lt;br/&gt;
1) compatibility with current clients who make use of the current datum&lt;br/&gt;
2) possibility to use strict JSON style datum which allows to unambiguously map avro blob&amp;lt;-&amp;gt;memory (which is currently not the case).&lt;br/&gt;
3) possibility to map into Pegasus style datum which is a way nicer than (2), still allows unambiguous mapping, and doesn&apos;t require you to specify type then accessing simple optional field.&lt;br/&gt;
Assume this (writing in pseudo syntax):&lt;br/&gt;
Person = &lt;/p&gt;
{ name: string, alias: [null, string], comment:[null, string]}
&lt;p&gt; // alias is optional field/union with null&lt;br/&gt;
Business = &lt;/p&gt;
{name: string, alias: [null, string], comment:[null, string]}
&lt;p&gt; // alias and founder are optional&lt;br/&gt;
Entity = &lt;span class=&quot;error&quot;&gt;&amp;#91;null, Person, Business&amp;#93;&lt;/span&gt; // union with multiple types&lt;br/&gt;
Then we have instance of Person &quot;Vasya&quot; with alias &quot;Pupkin&quot; and empty comment.&lt;br/&gt;
Strict datum (for json just do json.dumps): { &quot;Person&quot; : {&quot;name&quot;: &quot;Vasya&quot;, &quot;alias&quot; : &lt;/p&gt;
{&quot;string&quot;: &quot;Pupkin&quot;}
&lt;p&gt;, &quot;comment&quot;: None}}, access: entry&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;Person&amp;quot;&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;alias&amp;quot;&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;string&amp;quot;&amp;#93;&lt;/span&gt; -&amp;gt; &quot;Pupkin&quot;&lt;br/&gt;
Current datum : &lt;/p&gt;
{&quot;name&quot;: &quot;Vasya&quot;, alias: &quot;Pupkin&quot;, &quot;comment&quot;: None}
&lt;p&gt; - no way to understand is it Person or Business. Access: entry&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;alias&amp;quot;&amp;#93;&lt;/span&gt; -&amp;gt; &quot;Pupking&quot;&lt;br/&gt;
Pegasus style: {&quot;Person&quot; : { &quot;name&quot; : &quot;Vasya&quot;, &quot;alias&quot;: &quot;Pupkin&quot;}}. &quot;Person&quot; identifies the class, no need to specify &quot;string&quot; for an alias (just an optional field). Comment has default value, so not present in the map. Access: entry&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;Person&amp;quot;&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;alias&amp;quot;&amp;#93;&lt;/span&gt; -&amp;gt; &quot;Pupkin&quot;&lt;/p&gt;</comment>
                            <comment id="15535308" author="ksa" created="Fri, 30 Sep 2016 07:31:45 +0000"  >&lt;p&gt;Let&apos;s evaluate if the change is still useful.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12760331">AVRO-1618</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12688742" name="avro.diff" size="11077" author="ksa" created="Mon, 22 Dec 2014 23:47:15 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 22 Dec 2014 23:43:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>322075</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 16 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1jkiv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>322420</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>This patch modifies DatumReader and DatumWriter to allow memory serialization/deserialization to plain format (already supported), strict JSON (json.dumps produces valid strict avro json), and linkedin Pegasus format (you can attach attach json.dumps(myobject) while making calls to rest.li servers)&lt;br/&gt;
</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                </customfields>
    </item>


<item>
            <title>[AVRO-1292] NettyTransceiver: Client threads can block under certain connection failure scenarios</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1292</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I&apos;ve recently found a couple of different failure scenarios with NettyTransceiver that result in:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Client threads blocking for long periods of time (uninterruptibly at that) while holding the &lt;tt&gt;stateLock&lt;/tt&gt; write lock&lt;/li&gt;
	&lt;li&gt;RPCs (either sync or async) never returning because a failure in sending the RPC was not propagated back up to the caller&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The patch I&apos;m going to submit will probably be a lot easier to understand, but I&apos;ll try to explain the main problems I found.  There is a single type of underlying connectivity issue that seems to trigger both of these problems in NettyTransceiver: a failure at the network layer causes all packets to be dropped somewhere between the RPC client and server.  You might think this would be a rare scenario, but it has happened several times in our production environment and usually occurs after the RPC server machine becomes unresponsive and needs to be physically rebooted.  The only way I&apos;ve been able to reproduce this scenario for testing purposes has been to set up an iptables rule on the RPC server that simply drops all incoming packets from the client.  For example, if the client&apos;s IP is 10.0.0.1 I would use the following iptables rule on the server to reproduce the failure:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;iptables -t mangle -A INPUT --source 10.0.0.1 -j DROP
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After looking through a lot of stack traces I think I&apos;ve identified 2 main problems:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Problem 1:&lt;/b&gt; NettyTransceiver calls &lt;tt&gt;ChannelFuture#awaitUninterruptibly(long)&lt;/tt&gt; in a couple places, &lt;tt&gt;getChannel()&lt;/tt&gt; and &lt;tt&gt;disconnect(boolean,boolean,Throwable)&lt;/tt&gt;.  Under the dropped packet scenario I outlined above, the client thread ends up blocking uninterruptibly for the entire connection timeout duration while holding the &lt;tt&gt;stateLock&lt;/tt&gt; write lock.  The stack trace for this situation looks like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-quote&quot;&gt;&quot;RPC Executor - 11 - 1363627762930&quot;&lt;/span&gt; daemon prio=10 tid=0x00002aaad005f000 nid=0x56cf in &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait() [0x0000000049344000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: TIMED_WAITING (on object monitor)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(Native Method)
        at java.lang.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.wait(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;.java:443)
        at org.jboss.netty.channel.DefaultChannelFuture.await0(DefaultChannelFuture.java:265)
        - locked &amp;lt;0x0000000703acfa00&amp;gt; (a org.jboss.netty.channel.DefaultChannelFuture)
        at org.jboss.netty.channel.DefaultChannelFuture.awaitUninterruptibly(DefaultChannelFuture.java:237)
        at org.apache.avro.ipc.NettyTransceiver.getChannel(NettyTransceiver.java:248)
        at org.apache.avro.ipc.NettyTransceiver.&amp;lt;init&amp;gt;(NettyTransceiver.java:199)
        at org.apache.avro.ipc.NettyTransceiver.&amp;lt;init&amp;gt;(NettyTransceiver.java:148)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At a minimum it should be possible to interrupt these connection attempts.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Problem 2:&lt;/b&gt; When an error occurs writing to the Netty channel the error is not passed back up the stack or callback chain (whether it&apos;s a sync or async RPC), so the client can end up waiting indefinitely for an RPC that will never return because an error occurred sending the Netty packet (i.e. it was never sent to the server in the first place).  This scenario might yield a stack trace like the following:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-quote&quot;&gt;&quot;main&quot;&lt;/span&gt; prio=10 tid=0x00007f9400008800 nid=0x379b waiting on condition [0x00007f9406bc6000]
   java.lang.&lt;span class=&quot;code-object&quot;&gt;Thread&lt;/span&gt;.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt;  &amp;lt;0x00000007af677960&amp;gt; (a java.util.concurrent.CountDownLatch$Sync)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)
        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:207)
        at org.apache.avro.ipc.CallFuture.await(CallFuture.java:141)
        at org.apache.avro.ipc.Requestor.request(Requestor.java:150)
        at org.apache.avro.ipc.Requestor.request(Requestor.java:101)
        at org.apache.avro.ipc.specific.SpecificRequestor.invoke(SpecificRequestor.java:88)
        at $Proxy9.send(Unknown Source)

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It&apos;s difficult to provide a unit test for these issues because a connection refused error alone will not trigger it.  The only way I&apos;ve been able to reliably reproduce it is by setting the iptables rule I mentioned above.  Hopefully a code review will be sufficient, but if necessary I can try to find a way to create a unit test.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12641725">AVRO-1292</key>
            <summary>NettyTransceiver: Client threads can block under certain connection failure scenarios</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jbaldassari">James Baldassari</assignee>
                                    <reporter username="jbaldassari">James Baldassari</reporter>
                        <labels>
                            <label>avro</label>
                            <label>ipc</label>
                            <label>netty</label>
                    </labels>
                <created>Tue, 9 Apr 2013 21:23:19 +0000</created>
                <updated>Tue, 20 Aug 2013 17:46:03 +0000</updated>
                            <resolved>Tue, 2 Jul 2013 18:00:32 +0000</resolved>
                                    <version>1.7.4</version>
                                    <fixVersion>1.7.5</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13627134" author="jbaldassari" created="Tue, 9 Apr 2013 21:26:10 +0000"  >&lt;p&gt;Attaching Part 1 of the patch:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Changed all &lt;tt&gt;awaitUninterruptibly(long)&lt;/tt&gt; calls to &lt;tt&gt;await(long)&lt;/tt&gt; with a try/catch that resets the interrupt flag and then rethrows the InterruptedException as an IOException&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13627135" author="jbaldassari" created="Tue, 9 Apr 2013 21:26:48 +0000"  >&lt;p&gt;Attaching Part 2 of the patch:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Add a ChannelFutureListener on all async transceive calls that will pass errors to the callback if an exception is thrown while writing data to the netty channel&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;writeBuffers (synchronous call) now waits for the data to be written to the OS network stack before returning so that it can pass up any errors that may occur&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Increased visibility on a few methods and inner classes from private/package to protected to allow subclasses to override some behaviors since NettyTransceiver doesn&apos;t allow much customization currently (e.g. no event listener interface for when a connection is closed).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Enabled tcp keep-alive by default.  I can&apos;t think of a reason why a client wouldn&apos;t want to use this feature to preemptively detect connectivity issues
	&lt;ul&gt;
		&lt;li&gt;This was also brought up by Frank Grimes about a little over a year ago in this thread: &lt;a href=&quot;http://apache-avro.679487.n3.nabble.com/NettyServer-not-setting-TCP-keep-alive-leading-to-leaked-connections-td3788498.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://apache-avro.679487.n3.nabble.com/NettyServer-not-setting-TCP-keep-alive-leading-to-leaked-connections-td3788498.html&lt;/a&gt;&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13627170" author="jbaldassari" created="Tue, 9 Apr 2013 21:58:30 +0000"  >&lt;p&gt;Noticed one minor issue with Part 2 of the patch.  The correct keep-alive parameter for the client bootstrap is keepAlive rather than child.keepAlive.  The latter is the option for the server bootstrap.&lt;/p&gt;</comment>
                            <comment id="13660028" author="cutting" created="Thu, 16 May 2013 21:37:02 +0000"  >&lt;p&gt;James, is this ready to commit?  What kind of testing have you done?  Is it possible to add tests for this?&lt;/p&gt;</comment>
                            <comment id="13663284" author="jbaldassari" created="Tue, 21 May 2013 19:23:20 +0000"  >&lt;p&gt;Hi Doug.  Yes, it&apos;s ready to commit.  The only way I&apos;ve found to reproduce this issue is by using iptables to cause packets to suddenly be dropped as described above.  I can&apos;t think of a way to unit test this fix since the problem seems to be triggered by things happening at the network layer.  It might be possible to simulate the issue in a unit test using a modified version of NettyServer that is designed to hang in certain situations.  If you&apos;d like me to give that a shot I can try it.&lt;/p&gt;</comment>
                            <comment id="13663767" author="jbaldassari" created="Wed, 22 May 2013 04:55:03 +0000"  >&lt;p&gt;I&apos;ve been trying to come up with a unit test that will reproduce these problems, but unfortunately I haven&apos;t been able to do so.  It seems that these issues are triggered by certain failure conditions at the network layer only, such as when packets are dropped.  I &lt;em&gt;have&lt;/em&gt; tested this patch in a manual way as described in my earlier comment by using VMs and iptables to simulate network problems.  If you can think of a way to simulate packet loss in a unit test, let me know, but otherwise I don&apos;t think it&apos;s going to be possible to come up with a good unit test for this.&lt;/p&gt;</comment>
                            <comment id="13697738" author="jbaldassari" created="Tue, 2 Jul 2013 12:43:20 +0000"  >&lt;p&gt;Although I haven&apos;t been able to come up with a unit test to easily reproduce this issue, my organization has been running with this patch in production for several weeks now, and we haven&apos;t seen this deadlock occur since deploying the patch.&lt;/p&gt;</comment>
                            <comment id="13698044" author="jira-bot" created="Tue, 2 Jul 2013 18:00:12 +0000"  >&lt;p&gt;Commit 1499040 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1499040&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1499040&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1292&quot; title=&quot;NettyTransceiver: Client threads can block under certain connection failure scenarios&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1292&quot;&gt;&lt;del&gt;AVRO-1292&lt;/del&gt;&lt;/a&gt;. Java: Fix potential client blocking in NettyTransceiver.  Contributed by James Baldassari.&lt;/p&gt;</comment>
                            <comment id="13698045" author="cutting" created="Tue, 2 Jul 2013 18:00:33 +0000"  >&lt;p&gt;I committed this.  Thanks, James!&lt;/p&gt;</comment>
                            <comment id="13698086" author="hudson" created="Tue, 2 Jul 2013 18:40:36 +0000"  >&lt;p&gt;Integrated in AvroJava #381 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/381/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/381/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1292&quot; title=&quot;NettyTransceiver: Client threads can block under certain connection failure scenarios&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1292&quot;&gt;&lt;del&gt;AVRO-1292&lt;/del&gt;&lt;/a&gt;. Java: Fix potential client blocking in NettyTransceiver.  Contributed by James Baldassari. (Revision 1499040)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
cutting : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/ipc/src/main/java/org/apache/avro/ipc/NettyTransceiver.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12577896" name="AVRO-1292-Part1.patch" size="1411" author="jbaldassari" created="Tue, 9 Apr 2013 21:26:10 +0000"/>
                            <attachment id="12577902" name="AVRO-1292-Part2-v2.patch" size="5951" author="jbaldassari" created="Tue, 9 Apr 2013 21:58:30 +0000"/>
                            <attachment id="12577897" name="AVRO-1292-Part2.patch" size="5957" author="jbaldassari" created="Tue, 9 Apr 2013 21:26:48 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 16 May 2013 21:37:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>322140</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 29 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1jkxb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>322485</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
