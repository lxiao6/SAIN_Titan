<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:22:03 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2015-7-1+AND+created+%3C%3D+2015-7-8+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="5" total="5"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1692] Allow more than one logical type for a Java class</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1692</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The initial logical types implementation assumed that there would only be one logical type per concrete class and kept a lookup table from class to conversion. There are cases where this assumption doesn&apos;t work. For example, both time-millis and time-micros can be represented by the same class, LocalTime, and the write path should use the correct logical type&apos;s conversion depending on the schema.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12842944">AVRO-1692</key>
            <summary>Allow more than one logical type for a Java class</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21148&amp;avatarType=issuetype">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rdblue">Ryan Blue</assignee>
                                    <reporter username="rdblue">Ryan Blue</reporter>
                        <labels>
                    </labels>
                <created>Mon, 6 Jul 2015 17:56:42 +0000</created>
                <updated>Wed, 3 Feb 2016 19:15:56 +0000</updated>
                            <resolved>Tue, 14 Jul 2015 14:09:04 +0000</resolved>
                                                    <fixVersion>1.8.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="14615409" author="githubbot" created="Mon, 6 Jul 2015 18:02:04 +0000"  >&lt;p&gt;GitHub user rdblue opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/39&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/39&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1692&quot; title=&quot;Allow more than one logical type for a Java class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1692&quot;&gt;&lt;del&gt;AVRO-1692&lt;/del&gt;&lt;/a&gt;: Allow multiple logical types for a Java class.&lt;/p&gt;

&lt;p&gt;    This changes the class to conversion lookup to store multiple&lt;br/&gt;
    conversions and choose based on the logical type name. This still&lt;br/&gt;
    assumes that only one conversion is registered for each logical type.&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/rdblue/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/rdblue/avro&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1692&quot; title=&quot;Allow more than one logical type for a Java class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1692&quot;&gt;&lt;del&gt;AVRO-1692&lt;/del&gt;&lt;/a&gt;-logical-type-fix&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/39.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/39.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #39&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit a0ed5925274a75654b0003150d3db69c33b13a0d&lt;br/&gt;
Author: Ryan Blue &amp;lt;blue@apache.org&amp;gt;&lt;br/&gt;
Date:   2015-07-06T17:57:01Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1692&quot; title=&quot;Allow more than one logical type for a Java class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1692&quot;&gt;&lt;del&gt;AVRO-1692&lt;/del&gt;&lt;/a&gt;: Allow multiple logical types for a Java class.&lt;/p&gt;

&lt;p&gt;    This changes the class to conversion lookup to store multiple&lt;br/&gt;
    conversions and choose based on the logical type name. This still&lt;br/&gt;
    assumes that only one conversion is registered for each logical type.&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="14615411" author="rdblue" created="Mon, 6 Jul 2015 18:03:16 +0000"  >&lt;p&gt;Adding a patch that matches the current pull request.&lt;/p&gt;</comment>
                            <comment id="14616536" author="tomwhite" created="Tue, 7 Jul 2015 11:17:37 +0000"  >&lt;p&gt;This looks fine. Are there some tests in related JIRAs?&lt;/p&gt;</comment>
                            <comment id="14617073" author="rdblue" created="Tue, 7 Jul 2015 17:55:10 +0000"  >&lt;p&gt;I can add tests as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1672&quot; title=&quot;Add logical types and conversions for date, time, and timestamp.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1672&quot;&gt;&lt;del&gt;AVRO-1672&lt;/del&gt;&lt;/a&gt;, or I can add the circular reference test that I posted to the mailing list for Sachin. Either one demonstrates the problem.&lt;/p&gt;</comment>
                            <comment id="14617076" author="rdblue" created="Tue, 7 Jul 2015 17:55:42 +0000"  >&lt;p&gt;Actually, since &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1672&quot; title=&quot;Add logical types and conversions for date, time, and timestamp.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1672&quot;&gt;&lt;del&gt;AVRO-1672&lt;/del&gt;&lt;/a&gt; is ready to merge, I&apos;ll merge that and then add tests to this. Thanks, Tom!&lt;/p&gt;</comment>
                            <comment id="14618695" author="tomwhite" created="Wed, 8 Jul 2015 14:34:23 +0000"  >&lt;p&gt;Sounds good to me.&lt;/p&gt;</comment>
                            <comment id="14623615" author="rdblue" created="Sat, 11 Jul 2015 22:54:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tomwhite&quot; class=&quot;user-hover&quot; rel=&quot;tomwhite&quot;&gt;Tom White&lt;/a&gt;, I&apos;ve updated the PR for Sean&apos;s review comments and added the test I made that demonstrates using logical types to implement circular references, &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-695&quot; title=&quot;Cycle Reference Support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-695&quot;&gt;&lt;del&gt;AVRO-695&lt;/del&gt;&lt;/a&gt;. I didn&apos;t use the time types because they are not yet synced in github, but the circular reference test validates using multiple logical types with the same underlying Java class.&lt;/p&gt;

&lt;p&gt;I think this is ready to go now. Thanks!&lt;/p&gt;</comment>
                            <comment id="14624968" author="tomwhite" created="Mon, 13 Jul 2015 17:14:49 +0000"  >&lt;p&gt;Thanks for adding the test. Looks good to me.&lt;/p&gt;</comment>
                            <comment id="14626375" author="jira-bot" created="Tue, 14 Jul 2015 14:07:25 +0000"  >&lt;p&gt;Commit 1690939 from tomwhite@apache.org in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1690939&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1690939&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1692&quot; title=&quot;Allow more than one logical type for a Java class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1692&quot;&gt;&lt;del&gt;AVRO-1692&lt;/del&gt;&lt;/a&gt;. Allow more than one logical type for a Java class. Contributed by Ryan Blue.&lt;/p&gt;</comment>
                            <comment id="14626378" author="tomwhite" created="Tue, 14 Jul 2015 14:09:04 +0000"  >&lt;p&gt;I committed this. Thanks Ryan!&lt;/p&gt;</comment>
                            <comment id="14626499" author="hudson" created="Tue, 14 Jul 2015 15:37:25 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #532 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/532/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/532/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1692&quot; title=&quot;Allow more than one logical type for a Java class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1692&quot;&gt;&lt;del&gt;AVRO-1692&lt;/del&gt;&lt;/a&gt;. Allow more than one logical type for a Java class. Contributed by Ryan Blue. (tomwhite: rev 1690939)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericData.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumWriter.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectData.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectDatumReader.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/TestCircularReferences.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14626631" author="rdblue" created="Tue, 14 Jul 2015 16:46:50 +0000"  >&lt;p&gt;Thanks, Tom!&lt;/p&gt;</comment>
                            <comment id="14626632" author="githubbot" created="Tue, 14 Jul 2015 16:47:12 +0000"  >&lt;p&gt;Github user rdblue closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/39&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/39&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15130921" author="sachingoyal" created="Wed, 3 Feb 2016 19:12:38 +0000"  >&lt;p&gt;I guess we can now close &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-695&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-695&lt;/a&gt; too?&lt;/p&gt;</comment>
                            <comment id="15130926" author="rdblue" created="Wed, 3 Feb 2016 19:15:56 +0000"  >&lt;p&gt;Thanks, Sachin. Will do.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12833604">AVRO-1672</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12743762" name="AVRO-1692.1.patch" size="6168" author="rdblue" created="Mon, 6 Jul 2015 18:03:16 +0000"/>
                            <attachment id="12744911" name="AVRO-1692.2.patch" size="22201" author="rdblue" created="Sat, 11 Jul 2015 22:55:24 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 6 Jul 2015 18:02:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 50 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2gwaf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1693] Allow writing arbitrary metadata with the Ruby library</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1693</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently, the Ruby library only supports writing the `avro.codec` and `avro.schema` fields. I&apos;d like to use custom metadata.&lt;/p&gt;

&lt;p&gt;Pull request: &lt;a href=&quot;https://github.com/apache/avro/pull/28&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/28&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12843177">AVRO-1693</key>
            <summary>Allow writing arbitrary metadata with the Ruby library</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dasch">Daniel Schierbeck</assignee>
                                    <reporter username="dasch">Daniel Schierbeck</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Jul 2015 12:53:26 +0000</created>
                <updated>Mon, 1 Feb 2016 14:55:55 +0000</updated>
                            <resolved>Wed, 8 Jul 2015 14:32:52 +0000</resolved>
                                                    <fixVersion>1.8.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="14616837" author="busbey" created="Tue, 7 Jul 2015 15:11:51 +0000"  >&lt;p&gt;Attaching patch from &lt;a href=&quot;https://github.com/apache/avro/pull/28&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;github pr #28&lt;/a&gt;, with commit message modified to match the contributor guide.&lt;/p&gt;

&lt;p&gt;+1 (non-binding) patch looks good to me. It&apos;s backwards compatible, so could go into 1.7 and 1.8. It passes ruby tests.&lt;/p&gt;</comment>
                            <comment id="14618690" author="jira-bot" created="Wed, 8 Jul 2015 14:31:51 +0000"  >&lt;p&gt;Commit 1689889 from tomwhite@apache.org in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1689889&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1689889&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1693&quot; title=&quot;Allow writing arbitrary metadata with the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1693&quot;&gt;&lt;del&gt;AVRO-1693&lt;/del&gt;&lt;/a&gt;. Ruby: Allow writing arbitrary metadata to data files. Contributed by Daniel Schierbeck.&lt;/p&gt;</comment>
                            <comment id="14618691" author="tomwhite" created="Wed, 8 Jul 2015 14:32:52 +0000"  >&lt;p&gt;I committed this. Thanks Daniel and Sean!&lt;/p&gt;</comment>
                            <comment id="14618779" author="hudson" created="Wed, 8 Jul 2015 15:36:27 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #528 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/528/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/528/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1693&quot; title=&quot;Allow writing arbitrary metadata with the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1693&quot;&gt;&lt;del&gt;AVRO-1693&lt;/del&gt;&lt;/a&gt;. Ruby: Allow writing arbitrary metadata to data files. Contributed by Daniel Schierbeck. (tomwhite: rev 1689889)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/lib/avro/data_file.rb&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/test/test_datafile.rb&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14620062" author="dasch" created="Thu, 9 Jul 2015 07:43:00 +0000"  >&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="14620498" author="githubbot" created="Thu, 9 Jul 2015 13:34:26 +0000"  >&lt;p&gt;Github user dasch closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/28&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/28&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12743972" name="AVRO-1693.1.patch" size="3217" author="busbey" created="Tue, 7 Jul 2015 15:11:51 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Jul 2015 15:11:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 28 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2gxq7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1694] Support for schema fingerprints in the Ruby library</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1694</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;There does not seem to be any support for generating schema fingerprints in the Ruby library. In order to avoid inlining schemas in my Avro-encoded messages I&apos;d like to store them separately and instead write the fingerprint in the Avro metadata, thus allowing a reader to fetch and cache the actual schema from the schema registry.&lt;/p&gt;

&lt;p&gt;In order for that to work, my Ruby writer needs to be able to actually generate a fingerprint for a schema.&lt;/p&gt;

&lt;p&gt;Is the Ruby library being actively maintained? I would be willing to work on this myself if someone would review and merge the work.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12843182">AVRO-1694</key>
            <summary>Support for schema fingerprints in the Ruby library</summary>
                <type id="5" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Wish</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dasch">Daniel Schierbeck</assignee>
                                    <reporter username="dasch">Daniel Schierbeck</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Jul 2015 13:29:13 +0000</created>
                <updated>Mon, 1 Feb 2016 14:55:53 +0000</updated>
                            <resolved>Mon, 14 Sep 2015 00:17:58 +0000</resolved>
                                                    <fixVersion>1.7.8</fixVersion>
                    <fixVersion>1.8.0</fixVersion>
                                    <component>ruby</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="14616858" author="busbey" created="Tue, 7 Jul 2015 15:25:47 +0000"  >&lt;p&gt;I remain happy to provide reviews for hte Ruby library. I don&apos;t have a commit bit, but I know how to nettle the committers. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14629425" author="dasch" created="Thu, 16 Jul 2015 08:28:48 +0000"  >&lt;p&gt;I implemented schema normalization and MD5 and SHA256 fingerprints: &lt;a href=&quot;https://github.com/apache/avro/pull/40&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/40&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&apos;d like to validate the MD5 and SHA256 implementations, but I can&apos;t find any explicit test cases in the Java version.&lt;/p&gt;</comment>
                            <comment id="14742139" author="busbey" created="Sat, 12 Sep 2015 17:23:21 +0000"  >&lt;p&gt;Attaching Daniel&apos;s current patch from PR-40.&lt;/p&gt;</comment>
                            <comment id="14742140" author="busbey" created="Sat, 12 Sep 2015 17:24:41 +0000"  >&lt;p&gt;copy of my comment from PR-40:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I used the proposed tool in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1738&quot; title=&quot;add java tool for outputting schema fingerprints&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1738&quot;&gt;AVRO-1738&lt;/a&gt;() and IRB to verify the given MD5 and SHA-256 for the int schema and things look fine.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;busbey2-MBA:avro-help busbey$ echo &lt;span class=&quot;code-quote&quot;&gt;&apos;&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt;&apos;&lt;/span&gt; | java -jar avro-tools-1.9.0-SNAPSHOT.jar fingerprint  -
8f5c393f1ad57572 -
busbey2-MBA:avro-help busbey$ echo &lt;span class=&quot;code-quote&quot;&gt;&apos;{&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt;}&apos;&lt;/span&gt; | java -jar avro-tools-1.9.0-SNAPSHOT.jar fingerprint  -
8f5c393f1ad57572 -
busbey2-MBA:avro-help busbey$ echo &lt;span class=&quot;code-quote&quot;&gt;&apos;{&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt;}&apos;&lt;/span&gt; | java -jar avro-tools-1.9.0-SNAPSHOT.jar fingerprint --fingerprint MD5 -
ef524ea1b91e73173d938ade36c1db32 -
busbey2-MBA:avro-help busbey$ echo &lt;span class=&quot;code-quote&quot;&gt;&apos;&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt;&apos;&lt;/span&gt; | java -jar avro-tools-1.9.0-SNAPSHOT.jar fingerprint --fingerprint MD5  -
ef524ea1b91e73173d938ade36c1db32 -
busbey2-MBA:avro-help busbey$ echo &lt;span class=&quot;code-quote&quot;&gt;&apos;&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt;&apos;&lt;/span&gt; | java -jar avro-tools-1.9.0-SNAPSHOT.jar fingerprint --fingerprint SHA-256  -
3f2b87a9fe7cc9b13835598c3981cd45e3e355309e5090aa0933d7becb6fba45 -
busbey2-MBA:avro-help busbey$ irb
jruby-1.7.3 :001 &amp;gt; &lt;span class=&quot;code-quote&quot;&gt;&apos;ef524ea1b91e73173d938ade36c1db32&apos;&lt;/span&gt;.to_i(16)
 =&amp;gt; 318112854175969537208795771590915775282 
jruby-1.7.3 :002 &amp;gt; &lt;span class=&quot;code-quote&quot;&gt;&apos;3f2b87a9fe7cc9b13835598c3981cd45e3e355309e5090aa0933d7becb6fba45&apos;&lt;/span&gt;.to_i(16)
 =&amp;gt; 28572620203319713300323544804233350633246234624932075150020181448463213378117 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;d like some additional test schemas, but I&apos;m fine with those as a follow-on.&lt;/p&gt;

&lt;p&gt;As an aside, from looking at the shared test data for schema normalization it&apos;s going to be awkward to use as-is since it relies on converting to signed-longs instead of a hex string.&lt;/p&gt;

&lt;p&gt;I&apos;ll push this in a bit unless someone else has concerns.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                            <comment id="14742738" author="jira-bot" created="Mon, 14 Sep 2015 00:03:53 +0000"  >&lt;p&gt;Commit 1702839 from busbey@apache.org in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1702839&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1702839&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1694&quot; title=&quot;Support for schema fingerprints in the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1694&quot;&gt;&lt;del&gt;AVRO-1694&lt;/del&gt;&lt;/a&gt;. Ruby: Schema normaliation and fingerprints. Contributed by Daniel Schierbeck.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Avro::SchemaNormalization.to_parsing_form converts a schema to Parsing&lt;br/&gt;
Canonical Form&lt;/li&gt;
	&lt;li&gt;support for MD5 and SHA256 fingerprints&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This closes #40&lt;/p&gt;</comment>
                            <comment id="14742739" author="jira-bot" created="Mon, 14 Sep 2015 00:07:09 +0000"  >&lt;p&gt;Commit 1702840 from busbey@apache.org in branch &apos;avro/branches/branch-1.8&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1702840&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1702840&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1694&quot; title=&quot;Support for schema fingerprints in the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1694&quot;&gt;&lt;del&gt;AVRO-1694&lt;/del&gt;&lt;/a&gt;. Ruby: Schema normaliation and fingerprints. Contributed by Daniel Schierbeck.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Avro::SchemaNormalization.to_parsing_form converts a schema to Parsing&lt;br/&gt;
Canonical Form&lt;/li&gt;
	&lt;li&gt;support for MD5 and SHA256 fingerprints&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This closes #40&lt;/p&gt;</comment>
                            <comment id="14742745" author="jira-bot" created="Mon, 14 Sep 2015 00:16:24 +0000"  >&lt;p&gt;Commit 1702841 from busbey@apache.org in branch &apos;avro/branches/branch-1.7&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1702841&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1702841&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1694&quot; title=&quot;Support for schema fingerprints in the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1694&quot;&gt;&lt;del&gt;AVRO-1694&lt;/del&gt;&lt;/a&gt;. Ruby: Schema normaliation and fingerprints. Contributed by Daniel Schierbeck.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Avro::SchemaNormalization.to_parsing_form converts a schema to Parsing&lt;br/&gt;
Canonical Form&lt;/li&gt;
	&lt;li&gt;support for MD5 and SHA256 fingerprints&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This closes #40&lt;/p&gt;</comment>
                            <comment id="14742747" author="busbey" created="Mon, 14 Sep 2015 00:17:58 +0000"  >&lt;p&gt;pushed to 1.7+. Thanks Daniel!&lt;/p&gt;</comment>
                            <comment id="14742751" author="busbey" created="Mon, 14 Sep 2015 00:25:44 +0000"  >&lt;p&gt;I filed &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1740&quot; title=&quot;Add CRC-64-AVRO fingerprint to Ruby implementation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1740&quot;&gt;AVRO-1740&lt;/a&gt; as the follow-on to add the other major fingerprint type.&lt;/p&gt;</comment>
                            <comment id="14742759" author="hudson" created="Mon, 14 Sep 2015 00:39:34 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #546 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/546/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/546/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1694&quot; title=&quot;Support for schema fingerprints in the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1694&quot;&gt;&lt;del&gt;AVRO-1694&lt;/del&gt;&lt;/a&gt;. Ruby: Schema normaliation and fingerprints. Contributed by Daniel Schierbeck.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Avro::SchemaNormalization.to_parsing_form converts a schema to Parsing&lt;br/&gt;
Canonical Form&lt;/li&gt;
	&lt;li&gt;support for MD5 and SHA256 fingerprints&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This closes #40 (busbey: rev 1702839)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/lib/avro.rb&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/lib/avro/schema.rb&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/lib/avro/schema_normalization.rb&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/test/case_finder.rb&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/test/test_fingerprints.rb&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/test/test_schema_normalization.rb&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12932552">AVRO-1785</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12845611">AVRO-1706</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12863721">AVRO-1740</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12755570" name="AVRO-1694.1.patch" size="12890" author="busbey" created="Sat, 12 Sep 2015 17:23:21 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Jul 2015 15:25:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 19 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2gxrb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1695] Add LogicalType support to the Ruby library</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1695</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It would be nice if the Ruby library had feature parity. I would be willing to contribute work if someone could review and merge the code.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12843185">AVRO-1695</key>
            <summary>Add LogicalType support to the Ruby library</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="unchuckable">Martin Jubelgas</assignee>
                                    <reporter username="dasch">Daniel Schierbeck</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Jul 2015 13:36:46 +0000</created>
                <updated>Wed, 7 Nov 2018 21:50:49 +0000</updated>
                            <resolved>Wed, 7 Nov 2018 21:50:49 +0000</resolved>
                                                    <fixVersion>1.9.0</fixVersion>
                                    <component>ruby</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="14617092" author="rdblue" created="Tue, 7 Jul 2015 18:01:46 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dasch&quot; class=&quot;user-hover&quot; rel=&quot;dasch&quot;&gt;Daniel Schierbeck&lt;/a&gt;, I&apos;ll review.&lt;/p&gt;</comment>
                            <comment id="14618250" author="dasch" created="Wed, 8 Jul 2015 09:00:34 +0000"  >&lt;p&gt;Okay, I&apos;ll take a stab at it then.&lt;/p&gt;</comment>
                            <comment id="14631323" author="dasch" created="Fri, 17 Jul 2015 13:18:44 +0000"  >&lt;p&gt;WIP PR: &lt;a href=&quot;https://github.com/apache/avro/pull/44&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/44&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15133239" author="githubbot" created="Thu, 4 Feb 2016 22:53:43 +0000"  >&lt;p&gt;Github user asfgit closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/44&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/44&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15433385" author="githubbot" created="Tue, 23 Aug 2016 18:51:26 +0000"  >&lt;p&gt;GitHub user tjwp opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/116&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/116&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;: Ruby support for logical types revisited&lt;/p&gt;

&lt;p&gt;    This is a continuation of the changes originally submitted in &lt;a href=&quot;https://github.com/apache/avro/pull/44&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/44&lt;/a&gt; for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1695&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;    Original description:&lt;/p&gt;

&lt;p&gt;        Add Ruby support for logical types&lt;/p&gt;

&lt;p&gt;        Only logical types that map directly to Ruby standard library types are supported:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;date maps to Date;&lt;/li&gt;
	&lt;li&gt;timestamp-millis and timestamp-micros map to Time.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;        The remaining types are difficult to cleanly map to Ruby types, so I&apos;ve refrained from doing so.   &lt;br/&gt;
        Furthermore, there&apos;s no direct support for plugging in custom mappers &#8211; I&apos;m unsure if this is     &lt;br/&gt;
        needed.&lt;/p&gt;

&lt;p&gt;    I&apos;ve tried to add address the feedback from the original PR, primarily pushing some of the implementation into `Avro::Schema.real_parse` and ensuring that the Ruby tests cover all the same cases as the Java conversion tests.&lt;/p&gt;

&lt;p&gt;    One change I&apos;ve made here is to have `Avro::Schema#logical_type` return the name of the logical type.&lt;/p&gt;

&lt;p&gt;    For now I&apos;ve preserved the original changes as a separate commit, but I can rebase the changes if this gets accepted.&lt;/p&gt;

&lt;p&gt;    CC @dasch&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/salsify/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/salsify/avro&lt;/a&gt; tjwp/ruby-logical-types&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/116.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/116.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #116&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit cde8338f652b9a5f0864fb2d7c679720f9c71efd&lt;br/&gt;
Author: Daniel Schierbeck &amp;lt;dasch@zendesk.com&amp;gt;&lt;br/&gt;
Date:   2016-08-23T14:48:59Z&lt;/p&gt;

&lt;p&gt;    Add Ruby support for logical types&lt;/p&gt;

&lt;p&gt;    Only logical types that map directly to Ruby standard library types are&lt;br/&gt;
    supported:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;`date` maps to Date;&lt;/li&gt;
	&lt;li&gt;`timestamp-millis` and `timestamp-micros` map to Time.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;commit f1a616857b8c9eeca04335ed851ee8831234bc1c&lt;br/&gt;
Author: Tim Perkins &amp;lt;tperkins@salsify.com&amp;gt;&lt;br/&gt;
Date:   2016-08-23T16:50:33Z&lt;/p&gt;

&lt;p&gt;    PR Feedback&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Move logical_type determination into `.real_parse`.&lt;/li&gt;
	&lt;li&gt;`#logical_type` now returns the logical type name.&lt;/li&gt;
	&lt;li&gt;Change logical type &quot;adapters&quot; to modules since there will be no instances.&lt;/li&gt;
	&lt;li&gt;Parity with Java conversion tests.&lt;/li&gt;
&lt;/ul&gt;


&lt;hr /&gt;</comment>
                            <comment id="15445652" author="tjwp" created="Mon, 29 Aug 2016 11:58:41 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdblue&quot; class=&quot;user-hover&quot; rel=&quot;rdblue&quot;&gt;Ryan Blue&lt;/a&gt;, you reviewed the original work on this. Could you take a look at &lt;a href=&quot;https://github.com/apache/avro/pull/116?&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/116?&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15446047" author="busbey" created="Mon, 29 Aug 2016 14:33:47 +0000"  >&lt;p&gt;moving to patch available status so it&apos;ll show up in review queues.&lt;/p&gt;</comment>
                            <comment id="15453692" author="jira-bot" created="Wed, 31 Aug 2016 23:21:28 +0000"  >&lt;p&gt;Commit be1639c44b16ddec8c54ecfca050364048daf896 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=be1639c&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=be1639c&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;. Java: Fix GenericData#deepCopy() to support logical types.&lt;/p&gt;</comment>
                            <comment id="15453754" author="jira-bot" created="Wed, 31 Aug 2016 23:45:46 +0000"  >&lt;p&gt;Commit 9456db01859dd3619fb09a6d4205ab433b357b02 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=9456db0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=9456db0&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;. Fix deepCopy() to get correct logical type conversion.&lt;/p&gt;</comment>
                            <comment id="15455440" author="jira-bot" created="Thu, 1 Sep 2016 13:48:20 +0000"  >&lt;p&gt;Commit 5d45505b85fb55d4d3753b695bd3afc3f15b0c30 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=5d45505&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=5d45505&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Revert &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;. Fix deepCopy() to get correct logical type conversion.&quot;&lt;/p&gt;

&lt;p&gt;This reverts commit 9456db01859dd3619fb09a6d4205ab433b357b02.&lt;/p&gt;

&lt;p&gt;Incorrect JIRA key&lt;/p&gt;</comment>
                            <comment id="15455441" author="jira-bot" created="Thu, 1 Sep 2016 13:48:23 +0000"  >&lt;p&gt;Commit 07c8f328603a4cacca087133ec3fb45337867aaf in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=07c8f32&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=07c8f32&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Revert &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;. Java: Fix GenericData#deepCopy() to support logical types.&quot;&lt;/p&gt;

&lt;p&gt;This reverts commit be1639c44b16ddec8c54ecfca050364048daf896.&lt;/p&gt;

&lt;p&gt;Incorrect JIRA key&lt;/p&gt;</comment>
                            <comment id="16678338" author="githubbot" created="Wed, 7 Nov 2018 14:55:33 +0000"  >&lt;p&gt;Fokko commented on issue #116: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;: Ruby support for logical types revisited&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/116#issuecomment-436650091&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/116#issuecomment-436650091&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   @tjwp Can you rebase onto master?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16678726" author="githubbot" created="Wed, 7 Nov 2018 20:13:13 +0000"  >&lt;p&gt;tjwp commented on issue #116: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;: Ruby support for logical types revisited&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/116#issuecomment-436761632&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/116#issuecomment-436761632&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   @Fokko rebased and tested with:&lt;/p&gt;

&lt;p&gt;   SUCCESS rvm: 1.9.3-p551&lt;br/&gt;
   SUCCESS rvm: 2.0.0-p648&lt;br/&gt;
   SUCCESS rvm: 2.1.10&lt;br/&gt;
   SUCCESS rvm: 2.2.8&lt;br/&gt;
   SUCCESS rvm: 2.3.8&lt;br/&gt;
   SUCCESS rvm: 2.4.5&lt;br/&gt;
   SUCCESS rvm: 2.5.3&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16678763" author="githubbot" created="Wed, 7 Nov 2018 20:57:38 +0000"  >&lt;p&gt;tjwp commented on issue #116: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;: Ruby support for logical types revisited&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/116#issuecomment-436774591&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/116#issuecomment-436774591&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Rebased again with a fix for the ruby tests and the additional change referenced here: &lt;a href=&quot;https://github.com/salsify/avro-patches/pull/18#issue-202225742&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/salsify/avro-patches/pull/18#issue-202225742&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16678770" author="githubbot" created="Wed, 7 Nov 2018 21:04:25 +0000"  >&lt;p&gt;Fokko commented on issue #116: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;: Ruby support for logical types revisited&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/116#issuecomment-436776740&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/116#issuecomment-436776740&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   @tjwp Travis is still not happy, can you take a peek?&lt;br/&gt;
   ```&lt;br/&gt;
   .................../testptch/unknown/lang/ruby/lib/avro/schema.rb:318: warning: too many arguments for format string&lt;br/&gt;
   ..........................F&lt;br/&gt;
   ===============================================================================&lt;br/&gt;
   Failure: test_timestamp_micros_long_conversion(TestLogicalTypes)&lt;br/&gt;
   /testptch/unknown/lang/ruby/test/test_logical_types.rb:83:in `test_timestamp_micros_long_conversion&apos;&lt;br/&gt;
        80: &lt;br/&gt;
        81:     now = Time.now.utc&lt;br/&gt;
        82: &lt;br/&gt;
     =&amp;gt; 83:     assert_equal now, type.decode(type.encode(now))&lt;br/&gt;
        84:     assert_equal 1432849613221843, type.encode(Time.utc(2015, 5, 28, 21, 46, 53, 221843))&lt;br/&gt;
        85:     assert_equal 1432849613221843, type.encode(DateTime.new(2015, 5, 28, 21, 46, 53.221843))&lt;br/&gt;
        86:     assert_equal Time.utc(2015, 5, 28, 21, 46, 53, 221843), type.decode(1432849613221843)&lt;br/&gt;
   &amp;lt;2018-11-07 20:38:27 UTC&amp;gt; expected but was&lt;br/&gt;
   &amp;lt;2018-11-07 20:38:27 UTC&amp;gt;&lt;/p&gt;

&lt;p&gt;   diff:&lt;br/&gt;
     2018-11-07 20:38:27 UTC&lt;br/&gt;
   ===============================================================================&lt;br/&gt;
   ```&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16678828" author="githubbot" created="Wed, 7 Nov 2018 21:50:13 +0000"  >&lt;p&gt;Fokko closed pull request #116: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;: Ruby support for logical types revisited&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/116&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/116&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/ruby/Manifest b/lang/ruby/Manifest&lt;br/&gt;
index 87bfd98aa..9fc48c2a3 100644&lt;br/&gt;
&amp;#8212; a/lang/ruby/Manifest&lt;br/&gt;
+++ b/lang/ruby/Manifest&lt;br/&gt;
@@ -9,6 +9,7 @@ lib/avro.rb&lt;br/&gt;
 lib/avro/data_file.rb&lt;br/&gt;
 lib/avro/io.rb&lt;br/&gt;
 lib/avro/ipc.rb&lt;br/&gt;
+lib/avro/logical_types.rb&lt;br/&gt;
 lib/avro/protocol.rb&lt;br/&gt;
 lib/avro/schema.rb&lt;br/&gt;
 lib/avro/schema_compatibility.rb&lt;br/&gt;
@@ -24,6 +25,7 @@ test/test_datafile.rb&lt;br/&gt;
 test/test_fingerprints.rb&lt;br/&gt;
 test/test_help.rb&lt;br/&gt;
 test/test_io.rb&lt;br/&gt;
+test/test_logical_types.rb&lt;br/&gt;
 test/test_protocol.rb&lt;br/&gt;
 test/test_schema.rb&lt;br/&gt;
 test/test_schema_compatibility.rb&lt;br/&gt;
diff --git a/lang/ruby/lib/avro/io.rb b/lang/ruby/lib/avro/io.rb&lt;br/&gt;
index b04a19a78..26bda973a 100644&lt;br/&gt;
&amp;#8212; a/lang/ruby/lib/avro/io.rb&lt;br/&gt;
+++ b/lang/ruby/lib/avro/io.rb&lt;br/&gt;
@@ -254,7 +254,7 @@ def read_data(writers_schema, readers_schema, decoder)&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;function dispatch for reading data based on type of writer&apos;s&lt;/li&gt;
	&lt;li&gt;schema&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;case writers_schema.type_sym&lt;br/&gt;
+        datum = case writers_schema.type_sym&lt;br/&gt;
         when :null;    decoder.read_null&lt;br/&gt;
         when :boolean; decoder.read_boolean&lt;br/&gt;
         when :string;  decoder.read_string&lt;br/&gt;
@@ -272,6 +272,8 @@ def read_data(writers_schema, readers_schema, decoder)&lt;br/&gt;
         else&lt;br/&gt;
           raise AvroError, &quot;Cannot read unknown schema type: #
{writers_schema.type}
&lt;p&gt;&quot;&lt;br/&gt;
         end&lt;br/&gt;
+&lt;br/&gt;
+        readers_schema.type_adapter.decode(datum)&lt;br/&gt;
       end&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;       def read_fixed(writers_schema, readers_schema, decoder)&lt;br/&gt;
@@ -499,8 +501,10 @@ def write(datum, encoder)&lt;br/&gt;
         write_data(writers_schema, datum, encoder)&lt;br/&gt;
       end&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;def write_data(writers_schema, datum, encoder)&lt;/li&gt;
	&lt;li&gt;unless Schema.validate(writers_schema, datum)&lt;br/&gt;
+      def write_data(writers_schema, logical_datum, encoder)&lt;br/&gt;
+        datum = writers_schema.type_adapter.encode(logical_datum)&lt;br/&gt;
+&lt;br/&gt;
+        unless Schema.validate(writers_schema, datum, encoded = true)&lt;br/&gt;
           raise AvroTypeError.new(writers_schema, datum)&lt;br/&gt;
         end&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;diff --git a/lang/ruby/lib/avro/logical_types.rb b/lang/ruby/lib/avro/logical_types.rb&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 000000000..e1b219d72&lt;br/&gt;
&amp;#8212; /dev/null&lt;br/&gt;
+++ b/lang/ruby/lib/avro/logical_types.rb&lt;br/&gt;
@@ -0,0 +1,90 @@&lt;br/&gt;
+# &lt;del&gt;&lt;b&gt;&lt;/del&gt; coding: utf-8 &lt;del&gt;&lt;/b&gt;&lt;/del&gt;&lt;br/&gt;
+# Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
+# or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
+# distributed with this work for additional information&lt;br/&gt;
+# regarding copyright ownership.  The ASF licenses this file&lt;br/&gt;
+# to you under the Apache License, Version 2.0 (the&lt;br/&gt;
+# &quot;License&quot;); you may not use this file except in compliance&lt;br/&gt;
+# with the License.  You may obtain a copy of the License at&lt;br/&gt;
+#&lt;br/&gt;
+# &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
+#&lt;br/&gt;
+# Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
+# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
+# See the License for the specific language governing permissions and&lt;br/&gt;
+# limitations under the License.&lt;br/&gt;
+&lt;br/&gt;
+require &apos;date&apos;&lt;br/&gt;
+&lt;br/&gt;
+module Avro&lt;br/&gt;
+  module LogicalTypes&lt;br/&gt;
+    module IntDate&lt;br/&gt;
+      EPOCH_START = Date.new(1970, 1, 1)&lt;br/&gt;
+&lt;br/&gt;
+      def self.encode(date)&lt;br/&gt;
+        return date.to_i if date.is_a?(Numeric)&lt;br/&gt;
+&lt;br/&gt;
+        (date - EPOCH_START).to_i&lt;br/&gt;
+      end&lt;br/&gt;
+&lt;br/&gt;
+      def self.decode(int)&lt;br/&gt;
+        EPOCH_START + int&lt;br/&gt;
+      end&lt;br/&gt;
+    end&lt;br/&gt;
+&lt;br/&gt;
+    module TimestampMillis&lt;br/&gt;
+      def self.encode(value)&lt;br/&gt;
+        return value.to_i if value.is_a?(Numeric)&lt;br/&gt;
+&lt;br/&gt;
+        time = value.to_time&lt;br/&gt;
+        time.to_i * 1000 + time.usec / 1000&lt;br/&gt;
+      end&lt;br/&gt;
+&lt;br/&gt;
+      def self.decode(int)&lt;br/&gt;
+        s, ms = int / 1000, int % 1000&lt;br/&gt;
+        Time.at(s, ms * 1000).utc&lt;br/&gt;
+      end&lt;br/&gt;
+    end&lt;br/&gt;
+&lt;br/&gt;
+    module TimestampMicros&lt;br/&gt;
+      def self.encode(value)&lt;br/&gt;
+        return value.to_i if value.is_a?(Numeric)&lt;br/&gt;
+&lt;br/&gt;
+        time = value.to_time&lt;br/&gt;
+        time.to_i * 1000_000 + time.usec&lt;br/&gt;
+      end&lt;br/&gt;
+&lt;br/&gt;
+      def self.decode(int)&lt;br/&gt;
+        s, us = int / 1000_000, int % 1000_000&lt;br/&gt;
+        Time.at(s, us).utc&lt;br/&gt;
+      end&lt;br/&gt;
+    end&lt;br/&gt;
+&lt;br/&gt;
+    module Identity&lt;br/&gt;
+      def self.encode(datum)&lt;br/&gt;
+        datum&lt;br/&gt;
+      end&lt;br/&gt;
+&lt;br/&gt;
+      def self.decode(datum)&lt;br/&gt;
+        datum&lt;br/&gt;
+      end&lt;br/&gt;
+    end&lt;br/&gt;
+&lt;br/&gt;
+    TYPES = {&lt;br/&gt;
+      &quot;int&quot; =&amp;gt; &lt;/p&gt;
{
+        &quot;date&quot; =&amp;gt; IntDate
+      }
&lt;p&gt;,&lt;br/&gt;
+      &quot;long&quot; =&amp;gt; &lt;/p&gt;
{
+        &quot;timestamp-millis&quot; =&amp;gt; TimestampMillis,
+        &quot;timestamp-micros&quot; =&amp;gt; TimestampMicros
+      }
&lt;p&gt;,&lt;br/&gt;
+    }.freeze&lt;br/&gt;
+&lt;br/&gt;
+    def self.type_adapter(type, logical_type)&lt;br/&gt;
+      return unless logical_type&lt;br/&gt;
+&lt;br/&gt;
+      TYPES.fetch(type, {}.freeze).fetch(logical_type, Identity)&lt;br/&gt;
+    end&lt;br/&gt;
+  end&lt;br/&gt;
+end&lt;br/&gt;
diff --git a/lang/ruby/lib/avro/schema.rb b/lang/ruby/lib/avro/schema.rb&lt;br/&gt;
index 024d56230..3acd07b7f 100644&lt;br/&gt;
&amp;#8212; a/lang/ruby/lib/avro/schema.rb&lt;br/&gt;
+++ b/lang/ruby/lib/avro/schema.rb&lt;br/&gt;
@@ -14,6 +14,8 @@&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;See the License for the specific language governing permissions and&lt;/li&gt;
	&lt;li&gt;limitations under the License.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;+require &apos;avro/logical_types&apos;&lt;br/&gt;
+&lt;br/&gt;
 module Avro&lt;br/&gt;
   class Schema&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Sets of strings, for backwards compatibility. See below for sets of symbols,&lt;br/&gt;
@@ -40,6 +42,7 @@ def self.parse(json_string)&lt;br/&gt;
     def self.real_parse(json_obj, names=nil, default_namespace=nil)&lt;br/&gt;
       if json_obj.is_a? Hash&lt;br/&gt;
         type = json_obj&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;type&amp;#39;&amp;#93;&lt;/span&gt;&lt;br/&gt;
+        logical_type = json_obj&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;logicalType&amp;#39;&amp;#93;&lt;/span&gt;&lt;br/&gt;
         raise SchemaParseError, %Q(No &quot;type&quot; property: #
{json_obj}
&lt;p&gt;) if type.nil?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;ol&gt;
	&lt;li&gt;Check that the type is valid before calling #to_sym, since symbols are never garbage&lt;br/&gt;
@@ -50,7 +53,7 @@ def self.real_parse(json_obj, names=nil, default_namespace=nil)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;         type_sym = type.to_sym&lt;br/&gt;
         if PRIMITIVE_TYPES_SYM.include?(type_sym)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return PrimitiveSchema.new(type_sym)&lt;br/&gt;
+          return PrimitiveSchema.new(type_sym, logical_type)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         elsif NAMED_TYPES_SYM.include? type_sym&lt;br/&gt;
           name = json_obj&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;name&amp;#39;&amp;#93;&lt;/span&gt;&lt;br/&gt;
@@ -58,7 +61,7 @@ def self.real_parse(json_obj, names=nil, default_namespace=nil)&lt;br/&gt;
           case type_sym&lt;br/&gt;
           when :fixed&lt;br/&gt;
             size = json_obj&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;size&amp;#39;&amp;#93;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return FixedSchema.new(name, namespace, size, names)&lt;br/&gt;
+            return FixedSchema.new(name, namespace, size, names, logical_type)&lt;br/&gt;
           when :enum&lt;br/&gt;
             symbols = json_obj&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;symbols&amp;#39;&amp;#93;&lt;/span&gt;&lt;br/&gt;
             doc     = json_obj&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;doc&amp;#39;&amp;#93;&lt;/span&gt;&lt;br/&gt;
@@ -93,23 +96,29 @@ def self.real_parse(json_obj, names=nil, default_namespace=nil)&lt;br/&gt;
     end&lt;/li&gt;
&lt;/ul&gt;


&lt;ol&gt;
	&lt;li&gt;Determine if a ruby datum is an instance of a schema&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;def self.validate(expected_schema, datum)&lt;/li&gt;
	&lt;li&gt;SchemaValidator.validate!(expected_schema, datum)&lt;br/&gt;
+    def self.validate(expected_schema, logical_datum, encoded = false)&lt;br/&gt;
+      SchemaValidator.validate!(expected_schema, logical_datum, encoded)&lt;br/&gt;
       true&lt;br/&gt;
     rescue SchemaValidator::ValidationError&lt;br/&gt;
       false&lt;br/&gt;
     end&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;def initialize(type)&lt;br/&gt;
+    def initialize(type, logical_type=nil)&lt;br/&gt;
       @type_sym = type.is_a?(Symbol) ? type : type.to_sym&lt;br/&gt;
+      @logical_type = logical_type&lt;br/&gt;
     end&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     attr_reader :type_sym&lt;br/&gt;
+    attr_reader :logical_type&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Returns the type as a string (rather than a symbol), for backwards compatibility.&lt;/li&gt;
	&lt;li&gt;Deprecated in favor of 
{#type_sym}
&lt;p&gt;.&lt;br/&gt;
     def type; @type_sym.to_s; end&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;+    def type_adapter&lt;br/&gt;
+      @type_adapter ||= LogicalTypes.type_adapter(type, logical_type) || LogicalTypes::Identity&lt;br/&gt;
+    end&lt;br/&gt;
+&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Returns the MD5 fingerprint of the schema as an Integer.&lt;br/&gt;
     def md5_fingerprint&lt;br/&gt;
       parsing_form = SchemaNormalization.to_parsing_form(self)&lt;br/&gt;
@@ -157,7 +166,9 @@ def subparse(json_obj, names=nil, namespace=nil)&lt;br/&gt;
     end&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;     def to_avro(names=nil)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;{&apos;type&apos; =&amp;gt; type}&lt;br/&gt;
+      props = {&apos;type&apos; =&amp;gt; type}
&lt;p&gt;+      props&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;logicalType&amp;#39;&amp;#93;&lt;/span&gt; = logical_type if logical_type&lt;br/&gt;
+      props&lt;br/&gt;
     end&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     def to_s&lt;br/&gt;
@@ -166,8 +177,9 @@ def to_s&lt;/p&gt;

&lt;p&gt;     class NamedSchema &amp;lt; Schema&lt;br/&gt;
       attr_reader :name, :namespace&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;def initialize(type, name, namespace=nil, names=nil, doc=nil)&lt;/li&gt;
	&lt;li&gt;super(type)&lt;br/&gt;
+&lt;br/&gt;
+      def initialize(type, name, namespace=nil, names=nil, doc=nil, logical_type=nil)&lt;br/&gt;
+        super(type, logical_type)&lt;br/&gt;
         @name, @namespace = Name.extract_namespace(name, namespace)&lt;br/&gt;
         @doc  = doc&lt;br/&gt;
         names = Name.add_name(names, self)&lt;br/&gt;
@@ -318,11 +330,11 @@ def to_avro(names=Set.new)&lt;/li&gt;
&lt;/ul&gt;


&lt;ol&gt;
	&lt;li&gt;Valid primitive types are in PRIMITIVE_TYPES.&lt;br/&gt;
     class PrimitiveSchema &amp;lt; Schema&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;def initialize(type)&lt;br/&gt;
+      def initialize(type, logical_type=nil)&lt;br/&gt;
         if PRIMITIVE_TYPES_SYM.include?(type)&lt;/li&gt;
	&lt;li&gt;super(type)&lt;br/&gt;
+          super(type, logical_type)&lt;br/&gt;
         elsif PRIMITIVE_TYPES.include?(type)&lt;/li&gt;
	&lt;li&gt;super(type.to_sym)&lt;br/&gt;
+          super(type.to_sym, logical_type)&lt;br/&gt;
         else&lt;br/&gt;
           raise AvroError.new(&quot;#
{type}
&lt;p&gt; is not a valid primitive type.&quot;)&lt;br/&gt;
         end&lt;br/&gt;
@@ -336,12 +348,12 @@ def to_avro(names=nil)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     class FixedSchema &amp;lt; NamedSchema&lt;br/&gt;
       attr_reader :size&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;def initialize(name, space, size, names=nil)&lt;br/&gt;
+      def initialize(name, space, size, names=nil, logical_type=nil)&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
	&lt;li&gt;Ensure valid cto args&lt;br/&gt;
         unless size.is_a?(Integer)&lt;br/&gt;
           raise AvroError, &apos;Fixed Schema requires a valid integer for size property.&apos;&lt;br/&gt;
         end&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;super(:fixed, name, space, names)&lt;br/&gt;
+        super(:fixed, name, space, names, logical_type)&lt;br/&gt;
         @size = size&lt;br/&gt;
       end&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;diff --git a/lang/ruby/lib/avro/schema_validator.rb b/lang/ruby/lib/avro/schema_validator.rb&lt;br/&gt;
index 89b0a9c1e..67464fbfe 100644&lt;br/&gt;
&amp;#8212; a/lang/ruby/lib/avro/schema_validator.rb&lt;br/&gt;
+++ b/lang/ruby/lib/avro/schema_validator.rb&lt;br/&gt;
@@ -62,16 +62,22 @@ def to_s&lt;br/&gt;
     TypeMismatchError = Class.new(ValidationError)&lt;/p&gt;

&lt;p&gt;     class &amp;lt;&amp;lt; self&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;def validate!(expected_schema, datum)&lt;br/&gt;
+      def validate!(expected_schema, logical_datum, encoded = false)&lt;br/&gt;
         result = Result.new&lt;/li&gt;
	&lt;li&gt;validate_recursive(expected_schema, datum, ROOT_IDENTIFIER, result)&lt;br/&gt;
+        validate_recursive(expected_schema, logical_datum, ROOT_IDENTIFIER, result, encoded)&lt;br/&gt;
         fail ValidationError, result if result.failure?&lt;br/&gt;
         result&lt;br/&gt;
       end&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;       private&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;def validate_recursive(expected_schema, datum, path, result)&lt;br/&gt;
+      def validate_recursive(expected_schema, logical_datum, path, result, encoded = false)&lt;br/&gt;
+        datum = if encoded&lt;br/&gt;
+                  logical_datum&lt;br/&gt;
+                else&lt;br/&gt;
+                  expected_schema.type_adapter.encode(logical_datum) rescue nil&lt;br/&gt;
+                end&lt;br/&gt;
+&lt;br/&gt;
         case expected_schema.type_sym&lt;br/&gt;
         when :null&lt;br/&gt;
           fail TypeMismatchError unless datum.nil?&lt;br/&gt;
diff --git a/lang/ruby/test/random_data.rb b/lang/ruby/test/random_data.rb&lt;br/&gt;
index 9d276f7d2..54fa8781d 100644
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/ruby/test/random_data.rb&lt;br/&gt;
+++ b/lang/ruby/test/random_data.rb&lt;br/&gt;
@@ -27,15 +27,17 @@ def next&lt;br/&gt;
   end&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   def nextdata(schm, d=0)&lt;br/&gt;
+    return logical_nextdata(schm, d=0) unless schm.type_adapter.eql?(Avro::LogicalTypes::Identity)&lt;br/&gt;
+&lt;br/&gt;
     case schm.type_sym&lt;br/&gt;
     when :boolean&lt;br/&gt;
       rand &amp;gt; 0.5&lt;br/&gt;
     when :string&lt;br/&gt;
       randstr()&lt;br/&gt;
     when :int&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;rand(Avro::Schema::INT_MAX_VALUE - Avro::Schema::INT_MIN_VALUE) + Avro::Schema::INT_MIN_VALUE&lt;br/&gt;
+      rand_int&lt;br/&gt;
     when :long&lt;/li&gt;
	&lt;li&gt;rand(Avro::Schema::LONG_MAX_VALUE - Avro::Schema::LONG_MIN_VALUE) + Avro::Schema::LONG_MIN_VALUE&lt;br/&gt;
+      rand_long&lt;br/&gt;
     when :float&lt;br/&gt;
       (-1024 + 2048 * rand).round.to_f&lt;br/&gt;
     when :double&lt;br/&gt;
@@ -79,6 +81,15 @@ def nextdata(schm, d=0)&lt;br/&gt;
     end&lt;br/&gt;
   end&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+  def logical_nextdata(schm, _d=0)&lt;br/&gt;
+    case schm.logical_type&lt;br/&gt;
+    when &apos;date&apos;&lt;br/&gt;
+      Avro::LogicalTypes::IntDate.decode(rand_int)&lt;br/&gt;
+    when &apos;timestamp-millis&apos;, &apos;timestamp-micros&apos;&lt;br/&gt;
+      Avro::LogicalTypes::TimestampMicros.decode(rand_long)&lt;br/&gt;
+    end&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
   CHARPOOL = &apos;abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789&apos;&lt;br/&gt;
   BYTEPOOL = &apos;12345abcd&apos;&lt;/p&gt;

&lt;p&gt;@@ -87,4 +98,12 @@ def randstr(chars=CHARPOOL, length=20)&lt;br/&gt;
     rand(length+1).times &lt;/p&gt;
{ str &amp;lt;&amp;lt; chars[rand(chars.size)] }
&lt;p&gt;     str&lt;br/&gt;
   end&lt;br/&gt;
+&lt;br/&gt;
+  def rand_int&lt;br/&gt;
+    rand(Avro::Schema::INT_MAX_VALUE - Avro::Schema::INT_MIN_VALUE) + Avro::Schema::INT_MIN_VALUE&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
+  def rand_long&lt;br/&gt;
+    rand(Avro::Schema::LONG_MAX_VALUE - Avro::Schema::LONG_MIN_VALUE) + Avro::Schema::LONG_MIN_VALUE&lt;br/&gt;
+  end&lt;br/&gt;
 end&lt;br/&gt;
diff --git a/lang/ruby/test/test_io.rb b/lang/ruby/test/test_io.rb&lt;br/&gt;
index fc0088b41..70bb4d60c 100644&lt;br/&gt;
&amp;#8212; a/lang/ruby/test/test_io.rb&lt;br/&gt;
+++ b/lang/ruby/test/test_io.rb&lt;br/&gt;
@@ -84,6 +84,17 @@ def test_record&lt;br/&gt;
     check_default(record_schema, &apos;&lt;/p&gt;
{&quot;f&quot;: 11}
&lt;p&gt;&apos;, &lt;/p&gt;
{&quot;f&quot; =&amp;gt; 11}
&lt;p&gt;)&lt;br/&gt;
   end&lt;/p&gt;

&lt;p&gt;+  def test_record_with_logical_type&lt;br/&gt;
+    record_schema = &amp;lt;&amp;lt;EOS&lt;br/&gt;
+      {&quot;type&quot;: &quot;record&quot;,&lt;br/&gt;
+       &quot;name&quot;: &quot;Test&quot;,&lt;br/&gt;
+       &quot;fields&quot;: [{&quot;name&quot;: &quot;ts&quot;,&lt;br/&gt;
+                   &quot;type&quot;: {&quot;type&quot;: &quot;long&quot;,&lt;br/&gt;
+                            &quot;logicalType&quot;: &quot;timestamp-micros&quot;}}]}&lt;br/&gt;
+EOS&lt;br/&gt;
+    check(record_schema)&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
   def test_error&lt;br/&gt;
     error_schema = &amp;lt;&amp;lt;EOS&lt;br/&gt;
       {&quot;type&quot;: &quot;error&quot;,&lt;br/&gt;
@@ -115,6 +126,7 @@ def test_recursive&lt;br/&gt;
   def test_union&lt;br/&gt;
     union_schema = &amp;lt;&amp;lt;EOS&lt;br/&gt;
       [&quot;string&quot;,&lt;br/&gt;
+       &lt;/p&gt;
{&quot;type&quot;: &quot;int&quot;, &quot;logicalType&quot;: &quot;date&quot;}
&lt;p&gt;,&lt;br/&gt;
        &quot;null&quot;,&lt;br/&gt;
        &quot;long&quot;,&lt;br/&gt;
        {&quot;type&quot;: &quot;record&quot;,&lt;br/&gt;
@@ -451,7 +463,7 @@ def check(str)&lt;/p&gt;

&lt;p&gt;   def checkser(schm, randomdata)&lt;br/&gt;
     datum = randomdata.next&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;assert validate(schm, datum)&lt;br/&gt;
+    assert validate(schm, datum), &apos;datum is not valid for schema&apos;&lt;br/&gt;
     w = Avro::IO::DatumWriter.new(schm)&lt;br/&gt;
     writer = StringIO.new &quot;&quot;, &quot;w&quot;&lt;br/&gt;
     w.write(datum, Avro::IO::BinaryEncoder.new(writer))&lt;br/&gt;
diff --git a/lang/ruby/test/test_logical_types.rb b/lang/ruby/test/test_logical_types.rb&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 000000000..5416e117d
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;/dev/null&lt;br/&gt;
+++ b/lang/ruby/test/test_logical_types.rb&lt;br/&gt;
@@ -0,0 +1,120 @@&lt;br/&gt;
+# &lt;del&gt;&lt;b&gt;&lt;/del&gt; coding: utf-8 &lt;del&gt;&lt;/b&gt;&lt;/del&gt;&lt;br/&gt;
+# Licensed to the Apache Software Foundation (ASF) under one&lt;br/&gt;
+# or more contributor license agreements.  See the NOTICE file&lt;br/&gt;
+# distributed with this work for additional information&lt;br/&gt;
+# regarding copyright ownership.  The ASF licenses this file&lt;br/&gt;
+# to you under the Apache License, Version 2.0 (the&lt;br/&gt;
+# &quot;License&quot;); you may not use this file except in compliance&lt;br/&gt;
+# with the License.  You may obtain a copy of the License at&lt;br/&gt;
+#&lt;br/&gt;
+# &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
+#&lt;br/&gt;
+# Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
+# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
+# See the License for the specific language governing permissions and&lt;br/&gt;
+# limitations under the License.&lt;br/&gt;
+&lt;br/&gt;
+require &apos;test_help&apos;&lt;br/&gt;
+&lt;br/&gt;
+class TestLogicalTypes &amp;lt; Test::Unit::TestCase&lt;br/&gt;
+  def test_int_date&lt;br/&gt;
+    schema = Avro::Schema.parse &amp;lt;&amp;lt;-SCHEMA&lt;br/&gt;
+      
{ &quot;type&quot;: &quot;int&quot;, &quot;logicalType&quot;: &quot;date&quot; }
&lt;p&gt;+    SCHEMA&lt;br/&gt;
+&lt;br/&gt;
+    assert_equal &apos;date&apos;, schema.logical_type&lt;br/&gt;
+    today = Date.today&lt;br/&gt;
+    assert_encode_and_decode today, schema&lt;br/&gt;
+    assert_preencoded Avro::LogicalTypes::IntDate.encode(today), schema, today&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
+  def test_int_date_conversion&lt;br/&gt;
+    type = Avro::LogicalTypes::IntDate&lt;br/&gt;
+&lt;br/&gt;
+    assert_equal 5, type.encode(Date.new(1970, 1, 6))&lt;br/&gt;
+    assert_equal 0, type.encode(Date.new(1970, 1, 1))&lt;br/&gt;
+    assert_equal -5, type.encode(Date.new(1969, 12, 27))&lt;br/&gt;
+&lt;br/&gt;
+    assert_equal Date.new(1970, 1, 6), type.decode(5)&lt;br/&gt;
+    assert_equal Date.new(1970, 1, 1), type.decode(0)&lt;br/&gt;
+    assert_equal Date.new(1969, 12, 27), type.decode(-5)&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
+  def test_timestamp_millis_long&lt;br/&gt;
+    schema = Avro::Schema.parse &amp;lt;&amp;lt;-SCHEMA&lt;br/&gt;
+      &lt;/p&gt;
{ &quot;type&quot;: &quot;long&quot;, &quot;logicalType&quot;: &quot;timestamp-millis&quot; }
&lt;p&gt;+    SCHEMA&lt;br/&gt;
+&lt;br/&gt;
+    # The Time.at format is (seconds, microseconds) since Epoch.&lt;br/&gt;
+    time = Time.at(628232400, 12000)&lt;br/&gt;
+&lt;br/&gt;
+    assert_equal &apos;timestamp-millis&apos;, schema.logical_type&lt;br/&gt;
+    assert_encode_and_decode time, schema&lt;br/&gt;
+    assert_preencoded Avro::LogicalTypes::TimestampMillis.encode(time), schema, time.utc&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
+  def test_timestamp_millis_long_conversion&lt;br/&gt;
+    type = Avro::LogicalTypes::TimestampMillis&lt;br/&gt;
+&lt;br/&gt;
+    now = Time.now.utc&lt;br/&gt;
+    now_millis = Time.utc(now.year, now.month, now.day, now.hour, now.min, now.sec, now.usec / 1000 * 1000)&lt;br/&gt;
+&lt;br/&gt;
+    assert_equal now_millis, type.decode(type.encode(now_millis))&lt;br/&gt;
+    assert_equal 1432849613221, type.encode(Time.utc(2015, 5, 28, 21, 46, 53, 221000))&lt;br/&gt;
+    assert_equal 1432849613221, type.encode(DateTime.new(2015, 5, 28, 21, 46, 53.221))&lt;br/&gt;
+    assert_equal Time.utc(2015, 5, 28, 21, 46, 53, 221000), type.decode(1432849613221)&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
+  def test_timestamp_micros_long&lt;br/&gt;
+    schema = Avro::Schema.parse &amp;lt;&amp;lt;-SCHEMA&lt;br/&gt;
+      &lt;/p&gt;
{ &quot;type&quot;: &quot;long&quot;, &quot;logicalType&quot;: &quot;timestamp-micros&quot; }
&lt;p&gt;+    SCHEMA&lt;br/&gt;
+&lt;br/&gt;
+    # The Time.at format is (seconds, microseconds) since Epoch.&lt;br/&gt;
+    time = Time.at(628232400, 12345)&lt;br/&gt;
+&lt;br/&gt;
+    assert_equal &apos;timestamp-micros&apos;, schema.logical_type&lt;br/&gt;
+    assert_encode_and_decode time, schema&lt;br/&gt;
+    assert_preencoded Avro::LogicalTypes::TimestampMicros.encode(time), schema, time.utc&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
+  def test_timestamp_micros_long_conversion&lt;br/&gt;
+    type = Avro::LogicalTypes::TimestampMicros&lt;br/&gt;
+&lt;br/&gt;
+    now = Time.now.utc&lt;br/&gt;
+&lt;br/&gt;
+    assert_equal Time.utc(now.year, now.month, now.day, now.hour, now.min, now.sec, now.usec), type.decode(type.encode(now))&lt;br/&gt;
+    assert_equal 1432849613221843, type.encode(Time.utc(2015, 5, 28, 21, 46, 53, 221843))&lt;br/&gt;
+    assert_equal 1432849613221843, type.encode(DateTime.new(2015, 5, 28, 21, 46, 53.221843))&lt;br/&gt;
+    assert_equal Time.utc(2015, 5, 28, 21, 46, 53, 221843), type.decode(1432849613221843)&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
+  def encode(datum, schema)&lt;br/&gt;
+    buffer = StringIO.new(&quot;&quot;)&lt;br/&gt;
+    encoder = Avro::IO::BinaryEncoder.new(buffer)&lt;br/&gt;
+&lt;br/&gt;
+    datum_writer = Avro::IO::DatumWriter.new(schema)&lt;br/&gt;
+    datum_writer.write(datum, encoder)&lt;br/&gt;
+&lt;br/&gt;
+    buffer.string&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
+  def decode(encoded, schema)&lt;br/&gt;
+    buffer = StringIO.new(encoded)&lt;br/&gt;
+    decoder = Avro::IO::BinaryDecoder.new(buffer)&lt;br/&gt;
+&lt;br/&gt;
+    datum_reader = Avro::IO::DatumReader.new(schema, schema)&lt;br/&gt;
+    datum_reader.read(decoder)&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
+  def assert_encode_and_decode(datum, schema)&lt;br/&gt;
+    encoded = encode(datum, schema)&lt;br/&gt;
+    assert_equal datum, decode(encoded, schema)&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
+  def assert_preencoded(datum, schema, decoded)&lt;br/&gt;
+    encoded = encode(datum, schema)&lt;br/&gt;
+    assert_equal decoded, decode(encoded, schema)&lt;br/&gt;
+  end&lt;br/&gt;
+end&lt;br/&gt;
diff --git a/lang/ruby/test/test_schema.rb b/lang/ruby/test/test_schema.rb&lt;br/&gt;
index 48fe0a554..66ea77b75 100644&lt;/p&gt;&lt;/li&gt;
			&lt;li&gt;a/lang/ruby/test/test_schema.rb&lt;br/&gt;
+++ b/lang/ruby/test/test_schema.rb&lt;br/&gt;
@@ -132,6 +132,21 @@ def test_to_avro_includes_namespaces&lt;br/&gt;
     }, schema.to_avro)&lt;br/&gt;
   end&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+  def test_to_avro_includes_logical_type&lt;br/&gt;
+    schema = Avro::Schema.parse &amp;lt;&amp;lt;-SCHEMA&lt;br/&gt;
+      {&quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;has_logical&quot;, &quot;fields&quot;: [&lt;br/&gt;
+        {&quot;name&quot;: &quot;dt&quot;, &quot;type&quot;: {&quot;type&quot;: &quot;int&quot;, &quot;logicalType&quot;: &quot;date&quot;}}]&lt;br/&gt;
+      }&lt;br/&gt;
+    SCHEMA&lt;br/&gt;
+&lt;br/&gt;
+    assert_equal schema.to_avro, {&lt;br/&gt;
+      &apos;type&apos; =&amp;gt; &apos;record&apos;, &apos;name&apos; =&amp;gt; &apos;has_logical&apos;,&lt;br/&gt;
+      &apos;fields&apos; =&amp;gt; [&lt;br/&gt;
+        {&apos;name&apos; =&amp;gt; &apos;dt&apos;, &apos;type&apos; =&amp;gt; {&apos;type&apos; =&amp;gt; &apos;int&apos;, &apos;logicalType&apos; =&amp;gt; &apos;date&apos;}}&lt;br/&gt;
+      ]&lt;br/&gt;
+    }&lt;br/&gt;
+  end&lt;br/&gt;
+&lt;br/&gt;
   def test_unknown_named_type&lt;br/&gt;
     error = assert_raise Avro::UnknownSchemaError do&lt;br/&gt;
       Avro::Schema.parse &amp;lt;&amp;lt;-SCHEMA&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16678829" author="jira-bot" created="Wed, 7 Nov 2018 21:50:17 +0000"  >&lt;p&gt;Commit 33f7177e66e04c4843676e3d7a9cf739ba812304 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=timperkins&quot; class=&quot;user-hover&quot; rel=&quot;timperkins&quot;&gt;Tim Perkins&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=33f7177&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=33f7177&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;: Ruby support for logical types revisited (#116)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;: Ruby support for logical types&lt;/li&gt;
	&lt;li&gt;Support values for logical types that were already encoded&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16678830" author="githubbot" created="Wed, 7 Nov 2018 21:50:19 +0000"  >&lt;p&gt;Fokko commented on issue #116: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;: Ruby support for logical types revisited&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/116#issuecomment-436790180&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/116#issuecomment-436790180&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Thanks @tjwp &lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16678831" author="jira-bot" created="Wed, 7 Nov 2018 21:50:19 +0000"  >&lt;p&gt;Commit 33f7177e66e04c4843676e3d7a9cf739ba812304 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=timperkins&quot; class=&quot;user-hover&quot; rel=&quot;timperkins&quot;&gt;Tim Perkins&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=33f7177&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=33f7177&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;: Ruby support for logical types revisited (#116)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1695&quot; title=&quot;Add LogicalType support to the Ruby library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1695&quot;&gt;&lt;del&gt;AVRO-1695&lt;/del&gt;&lt;/a&gt;: Ruby support for logical types&lt;/li&gt;
	&lt;li&gt;Support values for logical types that were already encoded&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12858422">AVRO-1721</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Jul 2015 18:01:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2gxrz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1696] Handshake request is not handled causing an OutOfMemoryError</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1696</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;A handshake request is not read because connection.isConnected() == true here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/avro/blob/trunk/lang/java/ipc/src/main/java/org/apache/avro/ipc/Responder.java#L208&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/trunk/lang/java/ipc/src/main/java/org/apache/avro/ipc/Responder.java#L208&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This should be an invalid state, but we see this happening in production which causes the agent to have OOM errors. Seems to happen when there are rapid client disconnects and connects or connection reset by peer and broken pipe errors.&lt;/p&gt;

&lt;p&gt;Here is the base64 encoded form of buffers.get(0).array() when this occurs:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;hqra4sRUdMD+k//Q8jUKZQCGqtrixFR0wP6T/9DyNQplAgAADGFwcGVuZA==
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;which appears to be the serialized handshake info.&lt;/p&gt;

&lt;p&gt;The handshake is not read because this code is skipped:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/avro/blob/trunk/lang/java/ipc/src/main/java/org/apache/avro/ipc/Responder.java#L210&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/trunk/lang/java/ipc/src/main/java/org/apache/avro/ipc/Responder.java#L210&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When not read by the handshakeReader, the BinaryDecoder&apos;s position in the internal byte array is not advanced (to 19).&lt;/p&gt;

&lt;p&gt;Causing this code:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/avro/blob/trunk/lang/java/ipc/src/main/java/org/apache/avro/ipc/Responder.java#L124&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/trunk/lang/java/ipc/src/main/java/org/apache/avro/ipc/Responder.java#L124&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;to use index 0 of the handshake byte array as the size of the map it is expecting to deserialize.&lt;/p&gt;

&lt;p&gt;At this point:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumReader.java#L308&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumReader.java#L308&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The size of the hash map is determined to be 1452339317379, or 640371331 when cast to an int here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumReader.java#L311&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumReader.java#L311&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and we get an OOM error:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;2015-06-29 15:30:24,590 (New I/O worker #4) [WARN - org.apache.avro.ipc.NettyServer$NettyServerAvroHandler.exceptionCaught(NettyServer.java:201)] Unexpected exception from downstream.
java.lang.OutOfMemoryError: Java heap space
        at java.util.HashMap.&amp;lt;init&amp;gt;(HashMap.java:187)
        at java.util.HashMap.&amp;lt;init&amp;gt;(HashMap.java:199)
        at org.apache.avro.generic.GenericDatumReader.newMap(GenericDatumReader.java:330)
        at org.apache.avro.generic.GenericDatumReader.readMap(GenericDatumReader.java:239)
        at org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:151)
        at org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:139)
        at org.apache.avro.ipc.Responder.respond(Responder.java:124)
        at org.apache.avro.ipc.NettyServer$NettyServerAvroHandler.messageReceived(NettyServer.java:188)
        at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
        at org.apache.avro.ipc.NettyServer$NettyServerAvroHandler.handleUpstream(NettyServer.java:173)
        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
        at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
        at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
        at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:462)
        at org.jboss.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:443)
        at org.jboss.netty.handler.codec.frame.FrameDecoder.messageReceived(FrameDecoder.java:303)
        at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
        at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
        at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
        at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
        at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
        at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
        at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
        at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
        at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
        at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
        at java.lang.Thread.run(Thread.java:695)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment>&lt;p&gt;Flume Agent : 1.6.0&lt;br/&gt;
OS : Mac OS X 10.7.5 and CentOS release 6.6 2.6.32-504.1.3.el6.x86_64&lt;br/&gt;
avro : 1.7.4&lt;br/&gt;
avro-ipc : 1.7.4&lt;br/&gt;
JDK: 1.6.0_65 and 1.7.0-45&lt;/p&gt;

&lt;p&gt;Flume Client - NettyAvroRpcClient&lt;br/&gt;
flume-ng-sdk : 1.6.0&lt;br/&gt;
OS : Mac OS X 10.7.5&lt;br/&gt;
avro : 1.7.4&lt;br/&gt;
avro-ipc : 1.7.4&lt;br/&gt;
JDK: 1.6.0_65&lt;/p&gt;


&lt;p&gt;The agent config:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;# Define a memory channel called ch1 on agent1
agent1.channels.ch1.type = memory
agent1.channels.ch1.capacity = 10000

# Define an Avro source called avro-source1 on agent1 and tell it
# to bind to 0.0.0.0:41414. Connect it to channel ch1.
agent1.sources.avro-source1.channels = ch1
agent1.sources.avro-source1.type = avro
agent1.sources.avro-source1.bind = 0.0.0.0
agent1.sources.avro-source1.port = 41414

# Define a logger sink that simply logs all events it receives
# and connect it to the other end of the same channel.
agent1.sinks.log-sink1.channel = ch1
#agent1.sinks.log-sink1.type = logger
agent1.sinks.log-sink1.type = null
agent1.sinks.log-sink1.batchSize = 10

# Finally, now that we&apos;ve defined all of our components, tell
# agent1 which ones we want to activate.
agent1.channels = ch1
agent1.sources = avro-source1
agent1.sinks = log-sink1
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The client config:&lt;/p&gt;

&lt;p&gt;batch-size = 1&lt;br/&gt;
connect-timeout = 10s&lt;br/&gt;
request-timout = 10s&lt;/p&gt;</environment>
        <key id="12843290">AVRO-1696</key>
            <summary>Handshake request is not handled causing an OutOfMemoryError</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="wildsheep">Masanobu Horiyama</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Jul 2015 20:09:41 +0000</created>
                <updated>Tue, 7 Jul 2015 20:10:22 +0000</updated>
                                            <version>1.7.4</version>
                    <version>1.8.0</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                                                    <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12841715">FLUME-2731</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 28 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2gyen:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
