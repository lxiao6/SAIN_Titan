<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:20:50 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2014-9-10+AND+created+%3C%3D+2014-9-17+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="3" total="3"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1584] Json output doesn&apos;t generate base64 for byte arrays</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1584</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The Json output of java generated code doesn&apos;t correctly encode byte arrays.&lt;/p&gt;

&lt;p&gt;Using this simple schema : &lt;br/&gt;
{&quot;namespace&quot;: &quot;example.avro&quot;,&lt;br/&gt;
 &quot;type&quot;: &quot;record&quot;,&lt;br/&gt;
 &quot;name&quot;: &quot;ByteArrayEncoding&quot;,&lt;br/&gt;
 &quot;fields&quot;: [     &lt;/p&gt;
{&quot;name&quot;: &quot;data&quot;, &quot;type&quot;: &quot;bytes&quot;}
&lt;p&gt; ]&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;The toString()  &lt;br/&gt;
	System.out.println(new ByteArrayEncoding(ByteBuffer.wrap(new byte[]&lt;/p&gt;
{0,31,65,66,67,(byte)255,(byte)182}
&lt;p&gt;)));&lt;/p&gt;

&lt;p&gt;Returns raw bytes to string in the json :&lt;br/&gt;
{&quot;data&quot;: {&quot;bytes&quot;: &quot;  ABC??&quot;}}&lt;/p&gt;

&lt;p&gt;As a byte array is not tied to be a valid string, it should be converted back and forth to Base64 like other Json implementations : &lt;/p&gt;

&lt;p&gt;{&quot;data&quot;: {&quot;bytes&quot;: &quot;AB9BQkP/tg==&quot;}}&lt;/p&gt;
</description>
                <environment>&lt;p&gt;Pure java.&lt;/p&gt;</environment>
        <key id="12740369">AVRO-1584</key>
            <summary>Json output doesn&apos;t generate base64 for byte arrays</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="killertoffy">Christophe Lorenz</reporter>
                        <labels>
                    </labels>
                <created>Wed, 10 Sep 2014 10:42:39 +0000</created>
                <updated>Tue, 15 Dec 2015 04:11:15 +0000</updated>
                            <resolved>Tue, 15 Dec 2015 00:59:29 +0000</resolved>
                                    <version>1.7.7</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="15038210" author="rdblue" created="Thu, 3 Dec 2015 18:00:12 +0000"  >&lt;p&gt;I agree that this seems like a bug, but while looking at &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1746&quot; title=&quot;JSON encoder and decoder for Ruby&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1746&quot;&gt;AVRO-1746&lt;/a&gt; recently I found out that the spec actually states that &lt;a href=&quot;https://avro.apache.org/docs/1.7.7/spec.html#schema_record&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;bytes 0-255 should be mapped to unicode code points 0-255&lt;/a&gt;. After that, several characters need to be escaped as required by the JSON spec, but otherwise the unicode characters are allowed in JSON. So I think what Java does currently is the correct behavior, however it does seem odd.&lt;/p&gt;</comment>
                            <comment id="15038447" author="lemieud" created="Thu, 3 Dec 2015 19:43:38 +0000"  >&lt;p&gt;Hi Ryan,&lt;/p&gt;

&lt;p&gt;Re-reading the bug, I realize there is some confusion. Maybe I hijacked the bug, maybe the title is misleading.&lt;/p&gt;

&lt;p&gt;The patch is actually not touching the JSON ser/des, only the toString() implementation which outputs JSON like data.&lt;br/&gt;
The current implementation of toString() will output each byte casted as a char without escaping or anything.&lt;br/&gt;
The net result is that logging quickly become useless as some characters will corrupt the console or logs.&lt;/p&gt;
</comment>
                            <comment id="15047650" author="rdblue" created="Tue, 8 Dec 2015 23:07:19 +0000"  >&lt;p&gt;David, you&apos;re right. There are actually two different code paths to transform a record to JSON. The encoder, and the &lt;tt&gt;GenericData#toString(Object)&lt;/tt&gt; path. I&apos;m not entirely sure what the history is there. Maybe &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; or &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tomwhite&quot; class=&quot;user-hover&quot; rel=&quot;tomwhite&quot;&gt;Tom White&lt;/a&gt; knows?&lt;/p&gt;

&lt;p&gt;I don&apos;t think the output of toString here is covered by the spec since it doesn&apos;t appear to implement the spec, as you can see with the addition of the extra object layer with a &quot;bytes&quot; key. I&apos;m a little reluctant to change what this currently produces, since the method claims to produce JSON and it is probably used by someone to produce data files, but the 1.8.0 release is coming up so we can.&lt;/p&gt;

&lt;p&gt;Your patch adds a method for converting bytes to base64. Is it possible to use a library method there instead of adding an implementation to maintain? Also, could you apply a similar change to how Fixed is handled? I think we should probably fix both at the same time.&lt;/p&gt;</comment>
                            <comment id="15047821" author="lemieud" created="Wed, 9 Dec 2015 01:17:34 +0000"  >&lt;p&gt;Ryan,&lt;/p&gt;

&lt;p&gt;I am not quite sure what you mean by Fixed. Are you talking about org.apache.avro.specific.SpecificFixed ?&lt;br/&gt;
If so, I can look into it.&lt;/p&gt;

&lt;p&gt;As for using a library method, I can as well.&lt;br/&gt;
I opted for that implementation because I could not find a library that would work on ByteBuffer without making a copy to a byte[] first.&lt;br/&gt;
I think saving a copy is worth it, but I don&apos;t have that much time to spend on this either.&lt;br/&gt;
Your call.&lt;/p&gt;

&lt;p&gt;If we keep to the currently proposed version and I also look into Fixed.&lt;br/&gt;
It will make sense to extract that method to some common ground.&lt;br/&gt;
Without knowing the code base that well, I would put it into org.apache.avro.util.Base64&lt;br/&gt;
Do you know a better place?&lt;/p&gt;

&lt;p&gt;I&apos;ll wait for your answer before jumping on it.&lt;/p&gt;</comment>
                            <comment id="15049388" author="rdblue" created="Wed, 9 Dec 2015 21:13:16 +0000"  >&lt;p&gt;I think using a helper library would be good. My main concern here is correctly representing the data and not performance, but there&apos;s a base64 helper lib from Jackson you can use that allows you to add a character or byte at a time (Base64Variants.defaultVariant()) that would work for ByteBuffer. I think a helper method would be fine.&lt;/p&gt;

&lt;p&gt;For fixed, I&apos;m referring to the GenericData.Fixed class for generic. That corresponds to the &quot;fixed&quot; type in the spec that is a fixed-length byte array. Right now, those become a JSON list of integers. Thanks, David!&lt;/p&gt;</comment>
                            <comment id="15054585" author="lemieud" created="Sat, 12 Dec 2015 19:43:57 +0000"  >&lt;p&gt;New version &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1584&quot; title=&quot;Json output doesn&amp;#39;t generate base64 for byte arrays&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1584&quot;&gt;&lt;del&gt;AVRO-1584&lt;/del&gt;&lt;/a&gt;-Jackson-Base64-Default-Variant.patch using jackson  Base64 default variant to do the encoding.&lt;/p&gt;</comment>
                            <comment id="15056532" author="cutting" created="Mon, 14 Dec 2015 19:26:02 +0000"  >&lt;p&gt;The problem you originally cite (question marks in output) is caused by using a non-UTF8 encoding when printing the value of toString(), not with that value itself.  So there&apos;s not actually a bug here.  The string produced by toString() loses no information.  Rather, you seek either a (incompatible) change or a new feature.&lt;/p&gt;

&lt;p&gt;Changing the format of toString() for binary values incompatibly to base64 seems likely to break applications, e.g. those that that use toString() to supply default values to the schema builder API.  I question that this is of sufficient benefit to be worth doing even in a release that permits incompatibilities.  There is no perfect string format for binary values.  The one currently used here (and by the spec for default values) makes textual values more legible, while base64 makes non-textual values more tolerant of non-UTF8-safe i/o.&lt;/p&gt;

&lt;p&gt;Perhaps we should instead add a flag that one can set to change GenericData#toString() so that it generates base64?  We should also certainly add some tests for the current format if there are none.&lt;/p&gt;</comment>
                            <comment id="15056701" author="rdblue" created="Mon, 14 Dec 2015 20:55:12 +0000"  >&lt;p&gt;It looks like the conversion used for default values is independent of toString. Callers can pass either a JsonNode, which bypasses the problem, or an object that gets &lt;a href=&quot;https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/util/internal/JacksonUtils.java#L73&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;converted in JacksonUtils&lt;/a&gt;. That converts a byte array to a string using ISO-8859-1, which correctly implements the spec. When the JSON is written, the characters that aren&apos;t allowed in JSON strings are escaped by the generator. Changing the output of toString won&apos;t break the case that Doug mentions, but I think it is a fair point that changing what is currently produced could break applications.&lt;/p&gt;

&lt;p&gt;However, the JSON currently produced by toString is broken because it doesn&apos;t convert control characters to escape sequences (0x0a to \n). We could safely fix that problem without moving to base64 and I think at a minimum we should do that.&lt;/p&gt;

&lt;p&gt;But this still leaves a problem: what do we do about toString not conforming to the JSON required by the Avro spec?&lt;/p&gt;</comment>
                            <comment id="15056779" author="cutting" created="Mon, 14 Dec 2015 21:53:53 +0000"  >&lt;p&gt;Ryan, I agree this is a bug in the current implementation.  According to section RFC 4627, control characters must be escaped.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;All Unicode characters may be placed within the quotation marks except for the characters that must be escaped: quotation mark, reverse solidus, and the control characters (U+0000 through U+001F).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I note that this was fixed for strings in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-713&quot; title=&quot;GenericRecord.toString can produce invalid JSON&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-713&quot;&gt;&lt;del&gt;AVRO-713&lt;/del&gt;&lt;/a&gt; and we can probably share this logic.&lt;/p&gt;

&lt;p&gt;The difference between toString() JSON and Avro&apos;s JSON data encoding is longstanding and primarily around the encoding of unions.  For full read/write fidelity, many union values must be tagged with their type, so that&apos;s what the JSON encoding requires.  The toString() encoding was not intended for data fidelity but for debugging, so a simpler version was implemented.  (It actually pre-dates the specification of the JSON encoding.)  It so happens that default values in schemas do not need to be tagged, so the toString() format is identical to the default-value format.&lt;/p&gt;

&lt;p&gt;However there are frequent requests for a reader that accepts such an untagged format, for interaction with other JSON-generating software.  In retrospect, the JSON encoding should perhaps not require tagging for unions with null or unions between a primitive and a non-primitive, i.e., only tag unions when it&apos;s required.  We instead opted for simplicity of specification implementation, to ease interoperability between various Avro implementations, when perhaps in this case we should have optimized for ease of interoperability with non-Avro producers and consumers of JSON.&lt;/p&gt;

&lt;p&gt;So long-term we might add an encoder/decoder that doesn&apos;t handle unions at all or that handles them more parsimoniously, then perhaps implement default values and toString() using this encoding.  But I don&apos;t think we should alter the currently specified JSON encoding, nor change the default or toString() format.&lt;/p&gt;
</comment>
                            <comment id="15057042" author="rdblue" created="Tue, 15 Dec 2015 00:19:24 +0000"  >&lt;p&gt;Thanks for the context, Doug.&lt;/p&gt;

&lt;p&gt;I agree that we shouldn&apos;t change the specified JSON encoding or toString behavior. I think we have some flexibility with toString, since it was intended for debugging (so it isn&apos;t used to encode default values) and doesn&apos;t encode either bytes or fixed as expected. For bytes, an extra object layer is added and fixed is encoded as an array of integers. I think that makes it unlikely that anyone would use it to serialize data as JSON, but I have no problem being cautious and not breaking anything unless we have a plan for what toString should produce.&lt;/p&gt;

&lt;p&gt;I&apos;m attaching a patch that uses the fix from &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-713&quot; title=&quot;GenericRecord.toString can produce invalid JSON&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-713&quot;&gt;&lt;del&gt;AVRO-713&lt;/del&gt;&lt;/a&gt; to fix just the escape problem. It also adds tests to validate the current behavior of toString for bytes and fixed.&lt;/p&gt;</comment>
                            <comment id="15057074" author="cutting" created="Tue, 15 Dec 2015 00:43:09 +0000"  >&lt;p&gt;Ryan, your patch looks good to me.  +1&lt;/p&gt;</comment>
                            <comment id="15057086" author="jira-bot" created="Tue, 15 Dec 2015 00:50:13 +0000"  >&lt;p&gt;Commit 1720055 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=blue%40cloudera.com&quot; class=&quot;user-hover&quot; rel=&quot;blue@cloudera.com&quot;&gt;Ryan Blue&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1720055&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1720055&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1584&quot; title=&quot;Json output doesn&amp;#39;t generate base64 for byte arrays&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1584&quot;&gt;&lt;del&gt;AVRO-1584&lt;/del&gt;&lt;/a&gt;: Java: Escape characters not allowed in JSON in toString.&lt;/p&gt;

&lt;p&gt;From the JSON spec: &quot;All Unicode characters may be placed within the&lt;br/&gt;
quotation marks except for the characters that must be escaped:&lt;br/&gt;
quotation mark, reverse solidus, and the control characters (U+0000&lt;br/&gt;
through U+001F).&quot;&lt;/p&gt;

&lt;p&gt;This uses the existing string escape function.&lt;/p&gt;</comment>
                            <comment id="15057087" author="rdblue" created="Tue, 15 Dec 2015 00:50:25 +0000"  >&lt;p&gt;Committed. Thanks for taking a look, Doug!&lt;/p&gt;</comment>
                            <comment id="15057097" author="rdblue" created="Tue, 15 Dec 2015 00:58:51 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=lemieud&quot; class=&quot;user-hover&quot; rel=&quot;lemieud&quot;&gt;David Lemieux&lt;/a&gt;, thank you for your work to get this addressed! I think that the fix we ended up with should fix the problem you were seeing since the control characters will be properly escaped. If moving to base64 is important to you as well, then I think the right way forward is to help standardize a different JSON encoding, like Doug suggested for the long term. For now, I&apos;m going to mark this issue resolved since we&apos;ve decided the way forward in the short term.&lt;/p&gt;</comment>
                            <comment id="15057147" author="hudson" created="Tue, 15 Dec 2015 01:37:02 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #560 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/560/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/560/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1584&quot; title=&quot;Json output doesn&amp;#39;t generate base64 for byte arrays&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1584&quot;&gt;&lt;del&gt;AVRO-1584&lt;/del&gt;&lt;/a&gt;: Java: Escape characters not allowed in JSON in toString.&lt;/p&gt;

&lt;p&gt;From the JSON spec: &quot;All Unicode characters may be placed within the&lt;br/&gt;
quotation marks except for the characters that must be escaped:&lt;br/&gt;
quotation mark, reverse solidus, and the control characters (U+0000&lt;br/&gt;
through U+001F).&quot;&lt;/p&gt;

&lt;p&gt;This uses the existing string escape function. (blue: rev 1720055)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericData.java&lt;/li&gt;
	&lt;li&gt;trunk/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15057312" author="lemieud" created="Tue, 15 Dec 2015 04:11:15 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdblue&quot; class=&quot;user-hover&quot; rel=&quot;rdblue&quot;&gt;Ryan Blue&lt;/a&gt; My pleasure. I agree that is should fix my problem. Thanks&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12777302" name="AVRO-1584-Jackson-Base64-Default-Variant.patch" size="4341" author="lemieud" created="Sat, 12 Dec 2015 19:43:57 +0000"/>
                            <attachment id="12777623" name="AVRO-1584.1.patch" size="2640" author="rdblue" created="Tue, 15 Dec 2015 00:19:46 +0000"/>
                            <attachment id="12775478" name="AVRO-1584.patch" size="4320" author="lemieud" created="Thu, 3 Dec 2015 03:33:14 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 3 Dec 2015 18:00:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 5 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1zvi7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1585] Deprecate Jackson classes in public API</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1585</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Deprecate the use of Jackson&apos;s classes in our public API. Namely, remove the use of JsonNode for schema defaults. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12741087">AVRO-1585</key>
            <summary>Deprecate Jackson classes in public API</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21146&amp;avatarType=issuetype">Sub-task</type>
                            <parent id="12598660">AVRO-1126</parent>
                                    <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tomwhite">Tom White</assignee>
                                    <reporter username="busbey">Sean Busbey</reporter>
                        <labels>
                    </labels>
                <created>Fri, 12 Sep 2014 16:23:12 +0000</created>
                <updated>Mon, 1 Feb 2016 14:55:58 +0000</updated>
                            <resolved>Tue, 18 Nov 2014 10:14:06 +0000</resolved>
                                                    <fixVersion>1.7.8</fixVersion>
                    <fixVersion>1.8.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="14131715" author="busbey" created="Fri, 12 Sep 2014 16:25:15 +0000"  >&lt;p&gt;Two options:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;JSR 353&apos;s JsonValue (javax.json)&lt;/li&gt;
	&lt;li&gt;&quot;Note that default values don&apos;t need to have distinct, named types at runtime. For example, we could use Map&amp;lt;String,Object&amp;gt; for both records and maps, and String for both strings and enum symbols.&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;AFAICT, the discussion on &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1126&quot; title=&quot;Upgrade to Jackson 2+&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1126&quot;&gt;&lt;del&gt;AVRO-1126&lt;/del&gt;&lt;/a&gt; last had Doug favoring the latter.&lt;/p&gt;</comment>
                            <comment id="14132048" author="cutting" created="Fri, 12 Sep 2014 20:25:46 +0000"  >&lt;p&gt;Default values don&apos;t need to map to unique Avro types, since their type is always implied by the field.  So having, e.g., java.lang.String represent both Avro strings and enum symbols and Maps represent both records and maps isn&apos;t a problem here.  (This is why we can use JSON for default values, since it doesn&apos;t distinguish these.)&lt;/p&gt;

&lt;p&gt;We could add a new API for default values and keep the existing JsonValue-based API but deprecated.  Then we couldn&apos;t remove the Jackson dependency until we make the incompatible change of removing the existing API.  I don&apos;t think many applications directly manipulate default values, so mostly I expect this will affect frameworks that build on Avro.  Do we need a transitional release series, or should we just break things in 1.8?&lt;/p&gt;</comment>
                            <comment id="14196443" author="tomwhite" created="Tue, 4 Nov 2014 17:49:26 +0000"  >&lt;p&gt;Here&apos;s an incomplete patch using the approach Doug suggested. I think we should go through a deprecation cycle, so it doesn&apos;t remove any Jackson public API methods.&lt;/p&gt;

&lt;p&gt;I&apos;ve summarized the classes in Avro that expose the Jackson API below. So far I&apos;ve tackled JsonProperties, Schema, Schema.Field, and ResolvingGrammarGenerator. Not sure what to do about the JsonEncoder classes. The same thing? Is Idl a part of the public API? It&apos;s a generated class, so perhaps we could exclude it from the javadoc.&lt;/p&gt;

&lt;p&gt;JsonProperties &lt;br/&gt;
public synchronized void addProp(String name, JsonNode value)&lt;br/&gt;
public synchronized JsonNode getJsonProp(String name)&lt;br/&gt;
public Map&amp;lt;String,JsonNode&amp;gt; getJsonProps()&lt;/p&gt;

&lt;p&gt;Schema.Field&lt;br/&gt;
public Schema.Field(String name, Schema schema, String doc, JsonNode defaultValue) &lt;/p&gt;

&lt;p&gt;public Schema.Field(String name, Schema schema, String doc, JsonNode defaultValue, Schema.Field.Order order)&lt;br/&gt;
public JsonNode defaultValue()&lt;/p&gt;

&lt;p&gt;Schema&lt;br/&gt;
public static JsonNode parseJson(String s)&lt;/p&gt;

&lt;p&gt;ResolvingGrammarGenerator &lt;br/&gt;
public static void encode(Encoder e, Schema s, JsonNode n) &lt;/p&gt;

&lt;p&gt;JsonEncoder&lt;br/&gt;
public JsonEncoder configure(JsonGenerator generator)&lt;/p&gt;

&lt;p&gt;EncoderFactory&lt;br/&gt;
public JsonEncoder jsonEncoder(Schema schema, JsonGenerator gen)&lt;/p&gt;

&lt;p&gt;Json&lt;br/&gt;
public static void write(JsonNode node, Encoder out)&lt;/p&gt;

&lt;p&gt;Json.Writer&lt;br/&gt;
public void write(JsonNode datum, Encoder out)&lt;/p&gt;

&lt;p&gt;Json.Reader&lt;br/&gt;
public JsonNode read(JsonNode reuse, Decoder in)&lt;/p&gt;

&lt;p&gt;Idl (generated class)&lt;br/&gt;
Various methods&lt;/p&gt;</comment>
                            <comment id="14196480" author="cutting" created="Tue, 4 Nov 2014 18:07:29 +0000"  >&lt;p&gt;+1 for excluding the IDL compiler from the javadoc.  JavaCC makes everything public in generated code, but we shouldn&apos;t consider all of those methods as our public API.&lt;/p&gt;

&lt;p&gt;Might JsonProperties#toJson better use Jackson&apos;s JsonGenerator instead of string concatenation + parse?&lt;/p&gt;</comment>
                            <comment id="14200515" author="tomwhite" created="Thu, 6 Nov 2014 17:35:12 +0000"  >&lt;p&gt;Here&apos;s a new patch addressing Doug&apos;s points. It also fixes the JsonEncoder classes in the same way. I had to introduce a new package, org.apache.avro.util.internal, to allow code sharing between two packages without making the class public.&lt;/p&gt;

&lt;p&gt;Still needs some javadoc to describe the object representation.&lt;/p&gt;</comment>
                            <comment id="14200572" author="cutting" created="Thu, 6 Nov 2014 18:11:17 +0000"  >&lt;p&gt;The latest patch seems to revert some recent changes I made to TestSpecificData.java.  Maybe you need to update your branch from trunk?&lt;/p&gt;</comment>
                            <comment id="14200850" author="tomwhite" created="Thu, 6 Nov 2014 20:24:45 +0000"  >&lt;p&gt;Sorry about that. This one applies cleanly to trunk.&lt;/p&gt;</comment>
                            <comment id="14200914" author="cutting" created="Thu, 6 Nov 2014 21:01:57 +0000"  >&lt;p&gt;Code looks good.  I agree that it needs javadoc.&lt;/p&gt;

&lt;p&gt;I worry that if we only deprecate in 1.8.0 that we might be stuck with the exposed Jackson API for a long time.  We could perhaps instead release a 1.7.8 that includes the deprecations (plus other bugfixes) then a 1.8.0 with the incompatible change (and no public Jackson)?  1.8.0 will be our last chance for incompatible changes for some time.&lt;/p&gt;</comment>
                            <comment id="14202247" author="tomwhite" created="Fri, 7 Nov 2014 16:51:13 +0000"  >&lt;p&gt;New patch with javadoc.&lt;/p&gt;

&lt;p&gt;Deprecating in 1.7.8 and removing in 1.8.0 seems reasonable (Scott suggested it &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1126?focusedCommentId=13413938&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13413938&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;over two years ago&lt;/a&gt;). It would be good to hear if anyone has any objections though.&lt;/p&gt;</comment>
                            <comment id="14206540" author="tomwhite" created="Tue, 11 Nov 2014 15:20:45 +0000"  >&lt;p&gt;Minor update to clear hashcode when adding a property to schema.&lt;/p&gt;</comment>
                            <comment id="14208324" author="cutting" created="Wed, 12 Nov 2014 17:50:12 +0000"  >&lt;p&gt;Looks good.  We might create another issue that depends on this one to remove the deprecated stuff and target that one for 1.8.0?&lt;/p&gt;</comment>
                            <comment id="14212453" author="tomwhite" created="Fri, 14 Nov 2014 16:40:00 +0000"  >&lt;p&gt;I created &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1605&quot; title=&quot;Remove Jackson classes from public API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1605&quot;&gt;&lt;del&gt;AVRO-1605&lt;/del&gt;&lt;/a&gt; to remove the deprecated classes.&lt;/p&gt;

&lt;p&gt;I&apos;d like to commit this next week unless anyone has any objections.&lt;/p&gt;</comment>
                            <comment id="14216013" author="jira-bot" created="Tue, 18 Nov 2014 09:58:23 +0000"  >&lt;p&gt;Commit 1640293 from tomwhite@apache.org in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1640293&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1640293&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1585&quot; title=&quot;Deprecate Jackson classes in public API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1585&quot;&gt;&lt;del&gt;AVRO-1585&lt;/del&gt;&lt;/a&gt;. Java: Deprecate Jackson classes in public API.&lt;/p&gt;</comment>
                            <comment id="14216024" author="jira-bot" created="Tue, 18 Nov 2014 10:10:56 +0000"  >&lt;p&gt;Commit 1640294 from tomwhite@apache.org in branch &apos;avro/branches/branch-1.7&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1640294&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1640294&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Merge -r 1640292:1640293 from trunk to branch. Fixes: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1585&quot; title=&quot;Deprecate Jackson classes in public API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1585&quot;&gt;&lt;del&gt;AVRO-1585&lt;/del&gt;&lt;/a&gt;. Java: Deprecate Jackson classes in public API.&lt;/p&gt;</comment>
                            <comment id="14216028" author="tomwhite" created="Tue, 18 Nov 2014 10:14:06 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                            <comment id="14216043" author="hudson" created="Tue, 18 Nov 2014 10:35:54 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #500 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/500/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/500/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1585&quot; title=&quot;Deprecate Jackson classes in public API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1585&quot;&gt;&lt;del&gt;AVRO-1585&lt;/del&gt;&lt;/a&gt;. Java: Deprecate Jackson classes in public API. (tomwhite: rev 1640293)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/JsonProperties.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/Schema.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/data/Json.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/io/EncoderFactory.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/io/JsonEncoder.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/io/parsing/ResolvingGrammarGenerator.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/util/internal&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/util/internal/JacksonUtils.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/util/internal&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestGenericJob.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/RpcReceiveTool.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12680796" name="AVRO-1585.patch" size="36828" author="tomwhite" created="Tue, 11 Nov 2014 15:20:45 +0000"/>
                            <attachment id="12680201" name="AVRO-1585.patch" size="36422" author="tomwhite" created="Fri, 7 Nov 2014 16:51:13 +0000"/>
                            <attachment id="12679933" name="AVRO-1585.patch" size="33754" author="tomwhite" created="Thu, 6 Nov 2014 20:24:45 +0000"/>
                            <attachment id="12679890" name="AVRO-1585.patch" size="37751" author="tomwhite" created="Thu, 6 Nov 2014 17:35:12 +0000"/>
                            <attachment id="12679255" name="AVRO-1585.patch" size="22428" author="tomwhite" created="Tue, 4 Nov 2014 17:49:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 12 Sep 2014 20:25:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 9 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1zz9z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1586] Build against Hadoop 2</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1586</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Hadoop 2 has been available for a long time now so we should switch to build against it. With this change the avro-mapred and trevni-avro JARs would not work on Hadoop 1 clusters.&lt;/p&gt;

&lt;p&gt;See the mailing list discussion at &lt;a href=&quot;http://s.apache.org/2pI&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://s.apache.org/2pI&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12741804">AVRO-1586</key>
            <summary>Build against Hadoop 2</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21148&amp;avatarType=issuetype">Task</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tomwhite">Tom White</assignee>
                                    <reporter username="tomwhite">Tom White</reporter>
                        <labels>
                    </labels>
                <created>Tue, 16 Sep 2014 14:32:48 +0000</created>
                <updated>Mon, 1 Feb 2016 14:56:05 +0000</updated>
                            <resolved>Tue, 7 Jul 2015 10:30:47 +0000</resolved>
                                    <version>1.7.7</version>
                                    <fixVersion>1.8.0</fixVersion>
                                    <component>build</component>
                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="14206562" author="tomwhite" created="Tue, 11 Nov 2014 15:43:21 +0000"  >&lt;p&gt;Attaching a patch. In the end it was simplest to just make the Hadoop 2 build the default, and continue to allow builds against Hadoop 1.&lt;/p&gt;

&lt;p&gt;I tested the tools jar against a Hadoop 2.5.1 cluster and it could successfully read an Avro file from it.&lt;/p&gt;</comment>
                            <comment id="14208427" author="cutting" created="Wed, 12 Nov 2014 18:42:04 +0000"  >&lt;p&gt;+1 This looks good to me.&lt;/p&gt;</comment>
                            <comment id="14616484" author="jira-bot" created="Tue, 7 Jul 2015 10:30:23 +0000"  >&lt;p&gt;Commit 1689626 from tomwhite@apache.org in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1689626&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1689626&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1586&quot; title=&quot;Build against Hadoop 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1586&quot;&gt;&lt;del&gt;AVRO-1586&lt;/del&gt;&lt;/a&gt;. Build against Hadoop 2.&lt;/p&gt;</comment>
                            <comment id="14616485" author="tomwhite" created="Tue, 7 Jul 2015 10:30:47 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                            <comment id="14616498" author="hudson" created="Tue, 7 Jul 2015 10:40:30 +0000"  >&lt;p&gt;FAILURE: Integrated in AvroJava #522 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/522/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/522/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1586&quot; title=&quot;Build against Hadoop 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1586&quot;&gt;&lt;del&gt;AVRO-1586&lt;/del&gt;&lt;/a&gt;. Build against Hadoop 2. (tomwhite: rev 1689626)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/build.sh&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/trevni/avro/pom.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14628329" author="jira-bot" created="Wed, 15 Jul 2015 16:40:53 +0000"  >&lt;p&gt;Commit 1691248 from tomwhite@apache.org in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1691248&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1691248&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Build fixes for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1586&quot; title=&quot;Build against Hadoop 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1586&quot;&gt;&lt;del&gt;AVRO-1586&lt;/del&gt;&lt;/a&gt; (Build against Hadoop 2).&lt;/p&gt;</comment>
                            <comment id="14628411" author="hudson" created="Wed, 15 Jul 2015 17:35:58 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #536 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/536/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/536/&lt;/a&gt;)&lt;br/&gt;
Build fixes for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1586&quot; title=&quot;Build against Hadoop 2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1586&quot;&gt;&lt;del&gt;AVRO-1586&lt;/del&gt;&lt;/a&gt; (Build against Hadoop 2). (tomwhite: rev 1691248)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/build.sh&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/trevni/avro/pom.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12680803" name="AVRO-1586.patch" size="8370" author="tomwhite" created="Tue, 11 Nov 2014 15:43:21 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 12 Nov 2014 18:42:04 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 27 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i203of:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
