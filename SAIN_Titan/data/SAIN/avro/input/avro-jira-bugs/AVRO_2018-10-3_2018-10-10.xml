<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:27:19 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2018-10-3+AND+created+%3C%3D+2018-10-10+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="6" total="6"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-2235] Regenerate TestRecordWithLogicalTypes</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2235</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;TestRecordWithLogicalTypes.java is code that was generated by the specific compiler and then moved into the testing code tree.&#160; It hasn&apos;t been changed in a while, although the compiler is evolving.&#160; I tried to regenerate it and found there is a problem with record_with_logical_types.avsc.&#160; I will fix the schema file and then regenerate TestRecordWithLogicalTypes and check both in.&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;</description>
                <environment></environment>
        <key id="13189064">AVRO-2235</key>
            <summary>Regenerate TestRecordWithLogicalTypes</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="raymie">Raymie Stata</assignee>
                                    <reporter username="raymie">Raymie Stata</reporter>
                        <labels>
                    </labels>
                <created>Wed, 3 Oct 2018 04:18:35 +0000</created>
                <updated>Tue, 23 Oct 2018 19:01:52 +0000</updated>
                            <resolved>Wed, 17 Oct 2018 03:58:20 +0000</resolved>
                                                                    <component>logical types</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16636404" author="githubbot" created="Wed, 3 Oct 2018 04:24:48 +0000"  >&lt;p&gt;rstata opened a new pull request #341: Fix &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2235&quot; title=&quot;Regenerate TestRecordWithLogicalTypes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2235&quot;&gt;&lt;del&gt;AVRO-2235&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/341&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/341&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Fixed typo in record_with_logical_types.asvc, then regenerated TestRecordWithLogicalTypes.java&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16636417" author="githubbot" created="Wed, 3 Oct 2018 04:38:45 +0000"  >&lt;p&gt;rstata commented on issue #341: Fix &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2235&quot; title=&quot;Regenerate TestRecordWithLogicalTypes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2235&quot;&gt;&lt;del&gt;AVRO-2235&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/341#issuecomment-426509300&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/341#issuecomment-426509300&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   I see this was partially fixed by a recent commit.  Will redo my fix.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16636418" author="githubbot" created="Wed, 3 Oct 2018 04:38:45 +0000"  >&lt;p&gt;rstata closed pull request #341: Fix &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2235&quot; title=&quot;Regenerate TestRecordWithLogicalTypes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2235&quot;&gt;&lt;del&gt;AVRO-2235&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/341&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/341&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/avro/src/test/java/org/apache/avro/specific/TestRecordWithLogicalTypes.java b/lang/java/avro/src/test/java/org/apache/avro/specific/TestRecordWithLogicalTypes.java&lt;br/&gt;
index 493a8e67c..851e49a2d 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/test/java/org/apache/avro/specific/TestRecordWithLogicalTypes.java&lt;br/&gt;
+++ b/lang/java/avro/src/test/java/org/apache/avro/specific/TestRecordWithLogicalTypes.java&lt;br/&gt;
@@ -5,16 +5,16 @@&lt;br/&gt;
  */&lt;br/&gt;
 package org.apache.avro.specific;&lt;/p&gt;

&lt;p&gt;-import org.apache.avro.message.BinaryMessageDecoder;&lt;br/&gt;
+import org.apache.avro.specific.SpecificData;&lt;br/&gt;
 import org.apache.avro.message.BinaryMessageEncoder;&lt;br/&gt;
+import org.apache.avro.message.BinaryMessageDecoder;&lt;br/&gt;
+import org.apache.avro.message.SchemaStore;&lt;/p&gt;

&lt;p&gt;-import java.math.BigDecimal;&lt;br/&gt;
-&lt;br/&gt;
-@SuppressWarnings(&quot;all&quot;)&lt;br/&gt;
+/** Schema for TestRecordWithLogicalTypes and TestRecordWithoutLogicalTypes, see TestSpecificLogicalTypes */&lt;br/&gt;
 @org.apache.avro.specific.AvroGenerated&lt;br/&gt;
 public class TestRecordWithLogicalTypes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private static final long serialVersionUID = -4211233492739285532L;&lt;/li&gt;
	&lt;li&gt;public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(&quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;TestRecordWithLogicalTypes\&quot;,\&quot;namespace\&quot;:\&quot;org.apache.avro.specific\&quot;,\&quot;fields\&quot;:[
{\&quot;name\&quot;:\&quot;b\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;i32\&quot;,\&quot;type\&quot;:\&quot;int\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;i64\&quot;,\&quot;type\&quot;:\&quot;long\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;f32\&quot;,\&quot;type\&quot;:\&quot;float\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;f64\&quot;,\&quot;type\&quot;:\&quot;double\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;s\&quot;,\&quot;type\&quot;:[\&quot;null\&quot;,\&quot;string\&quot;],\&quot;default\&quot;:null}
&lt;p&gt;,{\&quot;name\&quot;:\&quot;d\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;logicalType\&quot;:\&quot;date\&quot;}},{\&quot;name\&quot;:\&quot;t\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;logicalType\&quot;:\&quot;time-millis\&quot;}},{\&quot;name\&quot;:\&quot;ts\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;logicalType\&quot;:\&quot;timestamp-millis\&quot;}},{\&quot;name\&quot;:\&quot;dec\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;bytes\&quot;,\&quot;logicalType\&quot;:\&quot;decimal\&quot;,\&quot;precision\&quot;:9,\&quot;scale\&quot;:2}}]}&quot;);&lt;br/&gt;
+  private static final long serialVersionUID = 6236661767120588912L;&lt;br/&gt;
+  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(&quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;TestRecordWithLogicalTypes\&quot;,\&quot;namespace\&quot;:\&quot;org.apache.avro.specific\&quot;,\&quot;doc\&quot;:\&quot;Schema for TestRecordWithLogicalTypes and TestRecordWithoutLogicalTypes, see TestSpecificLogicalTypes\&quot;,\&quot;fields\&quot;:[&lt;/p&gt;
{\&quot;name\&quot;:\&quot;b\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;i32\&quot;,\&quot;type\&quot;:\&quot;int\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;i64\&quot;,\&quot;type\&quot;:\&quot;long\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;f32\&quot;,\&quot;type\&quot;:\&quot;float\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;f64\&quot;,\&quot;type\&quot;:\&quot;double\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;s\&quot;,\&quot;type\&quot;:[\&quot;null\&quot;,\&quot;string\&quot;],\&quot;default\&quot;:null}
&lt;p&gt;,{\&quot;name\&quot;:\&quot;d\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;logicalType\&quot;:\&quot;date\&quot;}},{\&quot;name\&quot;:\&quot;t\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;logicalType\&quot;:\&quot;time-millis\&quot;}},{\&quot;name\&quot;:\&quot;ts\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;logicalType\&quot;:\&quot;timestamp-millis\&quot;}},{\&quot;name\&quot;:\&quot;dec\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;bytes\&quot;,\&quot;logicalType\&quot;:\&quot;decimal\&quot;,\&quot;precision\&quot;:9,\&quot;scale\&quot;:2}}]}&quot;);&lt;br/&gt;
   public static org.apache.avro.Schema getClassSchema() &lt;/p&gt;
{ return SCHEMA$; }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   private static SpecificData MODEL$ = new SpecificData();&lt;br/&gt;
@@ -25,12 +25,38 @@&lt;br/&gt;
   private static final BinaryMessageDecoder&amp;lt;TestRecordWithLogicalTypes&amp;gt; DECODER =&lt;br/&gt;
       new BinaryMessageDecoder&amp;lt;TestRecordWithLogicalTypes&amp;gt;(MODEL$, SCHEMA$);&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Serializes this ${schema.getName()} to a ByteBuffer. */&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Return the BinaryMessageDecoder instance used by this class.&lt;br/&gt;
+   * @return the message decoder used by this class&lt;br/&gt;
+   */&lt;br/&gt;
+  public static BinaryMessageDecoder&amp;lt;TestRecordWithLogicalTypes&amp;gt; getDecoder() 
{
+    return DECODER;
+  }
&lt;p&gt;+&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Create a new BinaryMessageDecoder instance for this class that uses the specified &lt;/p&gt;
{@link SchemaStore}.&lt;br/&gt;
+   * @param resolver a {@link SchemaStore}
&lt;p&gt; used to find schemas by fingerprint&lt;br/&gt;
+   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore&lt;br/&gt;
+   */&lt;br/&gt;
+  public static BinaryMessageDecoder&amp;lt;TestRecordWithLogicalTypes&amp;gt; createDecoder(SchemaStore resolver) &lt;/p&gt;
{
+    return new BinaryMessageDecoder&amp;lt;TestRecordWithLogicalTypes&amp;gt;(MODEL$, SCHEMA$, resolver);
+  }
&lt;p&gt;+&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Serializes this TestRecordWithLogicalTypes to a ByteBuffer.&lt;br/&gt;
+   * @return a buffer holding the serialized data for this instance&lt;br/&gt;
+   * @throws java.io.IOException if this instance could not be serialized&lt;br/&gt;
+   */&lt;br/&gt;
   public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException &lt;/p&gt;
{
     return ENCODER.encode(this);
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Deserializes a ${schema.getName()} from a ByteBuffer. */&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Deserializes a TestRecordWithLogicalTypes from a ByteBuffer.&lt;br/&gt;
+   * @param b a byte buffer holding serialized data for an instance of this class&lt;br/&gt;
+   * @return a TestRecordWithLogicalTypes instance decoded from the given buffer&lt;br/&gt;
+   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class&lt;br/&gt;
+   */&lt;br/&gt;
   public static TestRecordWithLogicalTypes fromByteBuffer(&lt;br/&gt;
       java.nio.ByteBuffer b) throws java.io.IOException {&lt;br/&gt;
     return DECODER.decode(b);&lt;br/&gt;
@@ -45,7 +71,7 @@ public static TestRecordWithLogicalTypes fromByteBuffer(&lt;br/&gt;
   @Deprecated public org.joda.time.LocalDate d;&lt;br/&gt;
   @Deprecated public org.joda.time.LocalTime t;&lt;br/&gt;
   @Deprecated public org.joda.time.DateTime ts;&lt;/li&gt;
	&lt;li&gt;@Deprecated public BigDecimal dec;&lt;br/&gt;
+  @Deprecated public java.math.BigDecimal dec;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Default constructor.  Note that this does not initialize fields&lt;br/&gt;
@@ -56,17 +82,18 @@ public TestRecordWithLogicalTypes() {}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;All-args constructor.&lt;br/&gt;
+   * @param b The new value for b&lt;br/&gt;
+   * @param i32 The new value for i32&lt;br/&gt;
+   * @param i64 The new value for i64&lt;br/&gt;
+   * @param f32 The new value for f32&lt;br/&gt;
+   * @param f64 The new value for f64&lt;br/&gt;
+   * @param s The new value for s&lt;br/&gt;
+   * @param d The new value for d&lt;br/&gt;
+   * @param t The new value for t&lt;br/&gt;
+   * @param ts The new value for ts&lt;br/&gt;
+   * @param dec The new value for dec&lt;br/&gt;
    */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes(java.lang.Boolean b,&lt;/li&gt;
	&lt;li&gt;java.lang.Integer i32,&lt;/li&gt;
	&lt;li&gt;java.lang.Long i64,&lt;/li&gt;
	&lt;li&gt;java.lang.Float f32,&lt;/li&gt;
	&lt;li&gt;java.lang.Double f64,&lt;/li&gt;
	&lt;li&gt;java.lang.CharSequence s,&lt;/li&gt;
	&lt;li&gt;org.joda.time.LocalDate d,&lt;/li&gt;
	&lt;li&gt;org.joda.time.LocalTime t,&lt;/li&gt;
	&lt;li&gt;org.joda.time.DateTime ts,&lt;/li&gt;
	&lt;li&gt;BigDecimal dec) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+  public TestRecordWithLogicalTypes(java.lang.Boolean b, java.lang.Integer i32, java.lang.Long i64, java.lang.Float f32, java.lang.Double f64, java.lang.CharSequence s, org.joda.time.LocalDate d, org.joda.time.LocalTime t, org.joda.time.DateTime ts, java.math.BigDecimal dec) {
     this.b = b;
     this.i32 = i32;
     this.i64 = i64;
@@ -96,6 +123,32 @@ public TestRecordWithLogicalTypes(java.lang.Boolean b,
     default: throw new org.apache.avro.AvroRuntimeException(&quot;Bad index&quot;);
     }   }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+&lt;br/&gt;
+  protected static final org.apache.avro.data.TimeConversions.DateConversion DATE_CONVERSION = new org.apache.avro.data.TimeConversions.DateConversion();&lt;br/&gt;
+  protected static final org.apache.avro.data.TimeConversions.TimeConversion TIME_CONVERSION = new org.apache.avro.data.TimeConversions.TimeConversion();&lt;br/&gt;
+  protected static final org.apache.avro.data.TimeConversions.TimestampConversion TIMESTAMP_CONVERSION = new org.apache.avro.data.TimeConversions.TimestampConversion();&lt;br/&gt;
+  protected static final org.apache.avro.Conversions.DecimalConversion DECIMAL_CONVERSION = new org.apache.avro.Conversions.DecimalConversion();&lt;br/&gt;
+&lt;br/&gt;
+  private static final org.apache.avro.Conversion&amp;lt;?&amp;gt;[] conversions =&lt;br/&gt;
+      new org.apache.avro.Conversion&amp;lt;?&amp;gt;[] &lt;/p&gt;
{
+      null,
+      null,
+      null,
+      null,
+      null,
+      null,
+      DATE_CONVERSION,
+      TIME_CONVERSION,
+      TIMESTAMP_CONVERSION,
+      DECIMAL_CONVERSION,
+      null
+  }
&lt;p&gt;;&lt;br/&gt;
+&lt;br/&gt;
+  @Override&lt;br/&gt;
+  public org.apache.avro.Conversion&amp;lt;?&amp;gt; getConversion(int field) &lt;/p&gt;
{
+    return conversions[field];
+  }
&lt;p&gt;+&lt;br/&gt;
   // Used by DatumReader.  Applications should not call.&lt;br/&gt;
   @SuppressWarnings(value=&quot;unchecked&quot;)&lt;br/&gt;
   public void put(int field$, java.lang.Object value$) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {@@ -109,13 +162,14 @@ public void put(int field$, java.lang.Object value$) {
     case 6: d = (org.joda.time.LocalDate)value$; break;
     case 7: t = (org.joda.time.LocalTime)value$; break;
     case 8: ts = (org.joda.time.DateTime)value$; break;
-    case 9: dec = (BigDecimal) value$; break;
+    case 9: dec = (java.math.BigDecimal)value$; break;
     default: throw new org.apache.avro.AvroRuntimeException(&quot;Bad index&quot;);
     }   }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;b&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;b&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public java.lang.Boolean getB() {&lt;br/&gt;
     return b;&lt;br/&gt;
@@ -131,6 +185,7 @@ public void setB(java.lang.Boolean value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;i32&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;i32&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public java.lang.Integer getI32() {&lt;br/&gt;
     return i32;&lt;br/&gt;
@@ -146,6 +201,7 @@ public void setI32(java.lang.Integer value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;i64&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;i64&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public java.lang.Long getI64() {&lt;br/&gt;
     return i64;&lt;br/&gt;
@@ -161,6 +217,7 @@ public void setI64(java.lang.Long value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;f32&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;f32&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public java.lang.Float getF32() {&lt;br/&gt;
     return f32;&lt;br/&gt;
@@ -176,6 +233,7 @@ public void setF32(java.lang.Float value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;f64&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;f64&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public java.lang.Double getF64() {&lt;br/&gt;
     return f64;&lt;br/&gt;
@@ -191,6 +249,7 @@ public void setF64(java.lang.Double value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;s&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;s&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public java.lang.CharSequence getS() {&lt;br/&gt;
     return s;&lt;br/&gt;
@@ -206,6 +265,7 @@ public void setS(java.lang.CharSequence value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;d&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;d&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public org.joda.time.LocalDate getD() {&lt;br/&gt;
     return d;&lt;br/&gt;
@@ -221,6 +281,7 @@ public void setD(org.joda.time.LocalDate value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;t&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;t&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public org.joda.time.LocalTime getT() {&lt;br/&gt;
     return t;&lt;br/&gt;
@@ -236,71 +297,68 @@ public void setT(org.joda.time.LocalTime value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;ts&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;ts&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public org.joda.time.DateTime getTs() 
{
     return ts;
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Sets the value of the &apos;dec&apos; field.&lt;br/&gt;
+   * Sets the value of the &apos;ts&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;@param value the value to set.&lt;br/&gt;
    */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public void setDec(BigDecimal value) {&lt;/li&gt;
	&lt;li&gt;this.dec = value;&lt;br/&gt;
+  public void setTs(org.joda.time.DateTime value) 
{
+    this.ts = value;
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Gets the value of the &apos;ts&apos; field.&lt;br/&gt;
+   * Gets the value of the &apos;dec&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;dec&apos; field.&lt;br/&gt;
    */&lt;/li&gt;
	&lt;li&gt;public BigDecimal getDec() {&lt;br/&gt;
+  public java.math.BigDecimal getDec() 
{
     return dec;
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Sets the value of the &apos;ts&apos; field.&lt;br/&gt;
+   * Sets the value of the &apos;dec&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;@param value the value to set.&lt;br/&gt;
    */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public void setTs(org.joda.time.DateTime value) 
{
-    this.ts = value;
-  }
&lt;p&gt;-&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;protected static final org.apache.avro.data.TimeConversions.DateConversion DATE_CONVERSION = new org.apache.avro.data.TimeConversions.DateConversion();&lt;/li&gt;
	&lt;li&gt;protected static final org.apache.avro.data.TimeConversions.TimeConversion TIME_CONVERSION = new org.apache.avro.data.TimeConversions.TimeConversion();&lt;/li&gt;
	&lt;li&gt;protected static final org.apache.avro.data.TimeConversions.TimestampConversion TIMESTAMP_CONVERSION = new org.apache.avro.data.TimeConversions.TimestampConversion();&lt;/li&gt;
	&lt;li&gt;protected static final org.apache.avro.Conversions.DecimalConversion DECIMAL_CONVERSION = new org.apache.avro.Conversions.DecimalConversion();&lt;/li&gt;
	&lt;li&gt;private final org.apache.avro.Conversion&amp;lt;?&amp;gt;[] conversions =&lt;/li&gt;
	&lt;li&gt;new org.apache.avro.Conversion&amp;lt;?&amp;gt;[] 
{
-      null,
-      null,
-      null,
-      null,
-      null,
-      null,
-      DATE_CONVERSION,
-      TIME_CONVERSION,
-      TIMESTAMP_CONVERSION,
-      DECIMAL_CONVERSION,
-      null
-  }
&lt;p&gt;;&lt;br/&gt;
-&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;@Override&lt;/li&gt;
	&lt;li&gt;public org.apache.avro.Conversion&amp;lt;?&amp;gt; getConversion(int field) {&lt;/li&gt;
	&lt;li&gt;return conversions&lt;span class=&quot;error&quot;&gt;&amp;#91;field&amp;#93;&lt;/span&gt;;&lt;br/&gt;
+  public void setDec(java.math.BigDecimal value) 
{
+    this.dec = value;
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Creates a new TestRecordWithLogicalTypes RecordBuilder */&lt;/li&gt;
	&lt;li&gt;public static TestRecordWithLogicalTypes.Builder newBuilder() {&lt;/li&gt;
	&lt;li&gt;return new TestRecordWithLogicalTypes.Builder();&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Creates a new TestRecordWithLogicalTypes RecordBuilder.&lt;br/&gt;
+   * @return A new TestRecordWithLogicalTypes RecordBuilder&lt;br/&gt;
+   */&lt;br/&gt;
+  public static org.apache.avro.specific.TestRecordWithLogicalTypes.Builder newBuilder() 
{
+    return new org.apache.avro.specific.TestRecordWithLogicalTypes.Builder();
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Creates a new TestRecordWithLogicalTypes RecordBuilder by copying an existing Builder */&lt;/li&gt;
	&lt;li&gt;public static TestRecordWithLogicalTypes.Builder newBuilder(TestRecordWithLogicalTypes.Builder other) {&lt;/li&gt;
	&lt;li&gt;return new TestRecordWithLogicalTypes.Builder(other);&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Creates a new TestRecordWithLogicalTypes RecordBuilder by copying an existing Builder.&lt;br/&gt;
+   * @param other The existing builder to copy.&lt;br/&gt;
+   * @return A new TestRecordWithLogicalTypes RecordBuilder&lt;br/&gt;
+   */&lt;br/&gt;
+  public static org.apache.avro.specific.TestRecordWithLogicalTypes.Builder newBuilder(org.apache.avro.specific.TestRecordWithLogicalTypes.Builder other) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+    if (other == null) {
+      return new org.apache.avro.specific.TestRecordWithLogicalTypes.Builder();
+    } else {
+      return new org.apache.avro.specific.TestRecordWithLogicalTypes.Builder(other);
+    }&lt;br/&gt;
   }&lt;br/&gt;
 &lt;br/&gt;
-  /** Creates a new TestRecordWithLogicalTypes RecordBuilder by copying an existing TestRecordWithLogicalTypes instance */&lt;br/&gt;
-  public static TestRecordWithLogicalTypes.Builder newBuilder(TestRecordWithLogicalTypes other) {&lt;br/&gt;
-    return new TestRecordWithLogicalTypes.Builder(other);&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Creates a new TestRecordWithLogicalTypes RecordBuilder by copying an existing TestRecordWithLogicalTypes instance.&lt;br/&gt;
+   * @param other The existing instance to copy.&lt;br/&gt;
+   * @return A new TestRecordWithLogicalTypes RecordBuilder&lt;br/&gt;
+   */&lt;br/&gt;
+  public static org.apache.avro.specific.TestRecordWithLogicalTypes.Builder newBuilder(org.apache.avro.specific.TestRecordWithLogicalTypes other) {&lt;br/&gt;
+    if (other == null) {+      return new org.apache.avro.specific.TestRecordWithLogicalTypes.Builder();+    } else {
+      return new org.apache.avro.specific.TestRecordWithLogicalTypes.Builder(other);
+    }   }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;br/&gt;
@@ -318,61 +376,67 @@ public void setTs(org.joda.time.DateTime value) {&lt;br/&gt;
     private org.joda.time.LocalDate d;&lt;br/&gt;
     private org.joda.time.LocalTime t;&lt;br/&gt;
     private org.joda.time.DateTime ts;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private BigDecimal dec;&lt;br/&gt;
+    private java.math.BigDecimal dec;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /** Creates a new Builder */&lt;br/&gt;
     private Builder() &lt;/p&gt;
{
-      super(TestRecordWithLogicalTypes.SCHEMA$);
+      super(SCHEMA$);
     }

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Creates a Builder by copying an existing Builder */&lt;/li&gt;
	&lt;li&gt;private Builder(TestRecordWithLogicalTypes.Builder other) {&lt;br/&gt;
+    /**&lt;br/&gt;
+     * Creates a Builder by copying an existing Builder.&lt;br/&gt;
+     * @param other The existing Builder to copy.&lt;br/&gt;
+     */&lt;br/&gt;
+    private Builder(org.apache.avro.specific.TestRecordWithLogicalTypes.Builder other) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {       super(other);       if (isValidValue(fields()[0], other.b)) {
         this.b = data().deepCopy(fields()[0].schema(), other.b);
-        fieldSetFlags()[0] = true;
+        fieldSetFlags()[0] = other.fieldSetFlags()[0];
       }       if (isValidValue(fields()[1], other.i32)) {
         this.i32 = data().deepCopy(fields()[1].schema(), other.i32);
-        fieldSetFlags()[1] = true;
+        fieldSetFlags()[1] = other.fieldSetFlags()[1];
       }       if (isValidValue(fields()[2], other.i64)) {
         this.i64 = data().deepCopy(fields()[2].schema(), other.i64);
-        fieldSetFlags()[2] = true;
+        fieldSetFlags()[2] = other.fieldSetFlags()[2];
       }       if (isValidValue(fields()[3], other.f32)) {
         this.f32 = data().deepCopy(fields()[3].schema(), other.f32);
-        fieldSetFlags()[3] = true;
+        fieldSetFlags()[3] = other.fieldSetFlags()[3];
       }       if (isValidValue(fields()[4], other.f64)) {
         this.f64 = data().deepCopy(fields()[4].schema(), other.f64);
-        fieldSetFlags()[4] = true;
+        fieldSetFlags()[4] = other.fieldSetFlags()[4];
       }       if (isValidValue(fields()[5], other.s)) {
         this.s = data().deepCopy(fields()[5].schema(), other.s);
-        fieldSetFlags()[5] = true;
+        fieldSetFlags()[5] = other.fieldSetFlags()[5];
       }       if (isValidValue(fields()[6], other.d)) {
         this.d = data().deepCopy(fields()[6].schema(), other.d);
-        fieldSetFlags()[6] = true;
+        fieldSetFlags()[6] = other.fieldSetFlags()[6];
       }       if (isValidValue(fields()[7], other.t)) {
         this.t = data().deepCopy(fields()[7].schema(), other.t);
-        fieldSetFlags()[7] = true;
+        fieldSetFlags()[7] = other.fieldSetFlags()[7];
       }       if (isValidValue(fields()[8], other.ts)) {
         this.ts = data().deepCopy(fields()[8].schema(), other.ts);
-        fieldSetFlags()[8] = true;
+        fieldSetFlags()[8] = other.fieldSetFlags()[8];
       }       if (isValidValue(fields()[9], other.dec)) {
         this.dec = data().deepCopy(fields()[9].schema(), other.dec);
-        fieldSetFlags()[9] = true;
+        fieldSetFlags()[9] = other.fieldSetFlags()[9];
       }     }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Creates a Builder by copying an existing TestRecordWithLogicalTypes instance */&lt;/li&gt;
	&lt;li&gt;private Builder(TestRecordWithLogicalTypes other) {&lt;/li&gt;
	&lt;li&gt;super(TestRecordWithLogicalTypes.SCHEMA$);&lt;br/&gt;
+    /**&lt;br/&gt;
+     * Creates a Builder by copying an existing TestRecordWithLogicalTypes instance&lt;br/&gt;
+     * @param other The existing instance to copy.&lt;br/&gt;
+     */&lt;br/&gt;
+    private Builder(org.apache.avro.specific.TestRecordWithLogicalTypes other) {&lt;br/&gt;
+      super(SCHEMA$);&lt;br/&gt;
       if (isValidValue(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;, other.b)) {&lt;br/&gt;
         this.b = data().deepCopy(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;.schema(), other.b);&lt;br/&gt;
         fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -417,6 +481,7 @@ private Builder(TestRecordWithLogicalTypes other) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;b&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public java.lang.Boolean getB() {&lt;br/&gt;
       return b;&lt;br/&gt;
@@ -424,9 +489,10 @@ private Builder(TestRecordWithLogicalTypes other) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;b&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;b&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setB(boolean value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setB(boolean value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.b = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -435,6 +501,7 @@ private Builder(TestRecordWithLogicalTypes other) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;b&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;b&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasB() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -443,14 +510,16 @@ public boolean hasB() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;b&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearB() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearB() 
{
       fieldSetFlags()[0] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;i32&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public java.lang.Integer getI32() {&lt;br/&gt;
       return i32;&lt;br/&gt;
@@ -458,9 +527,10 @@ public boolean hasB() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;i32&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;i32&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setI32(int value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setI32(int value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.i32 = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -469,6 +539,7 @@ public boolean hasB() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;i32&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;i32&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasI32() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -477,14 +548,16 @@ public boolean hasI32() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;i32&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearI32() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearI32() 
{
       fieldSetFlags()[1] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;i64&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public java.lang.Long getI64() {&lt;br/&gt;
       return i64;&lt;br/&gt;
@@ -492,9 +565,10 @@ public boolean hasI32() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;i64&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;i64&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setI64(long value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setI64(long value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.i64 = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -503,6 +577,7 @@ public boolean hasI32() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;i64&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;i64&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasI64() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -511,14 +586,16 @@ public boolean hasI64() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;i64&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearI64() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearI64() 
{
       fieldSetFlags()[2] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;f32&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public java.lang.Float getF32() {&lt;br/&gt;
       return f32;&lt;br/&gt;
@@ -526,9 +603,10 @@ public boolean hasI64() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;f32&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;f32&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setF32(float value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setF32(float value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.f32 = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -537,6 +615,7 @@ public boolean hasI64() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;f32&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;f32&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasF32() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -545,14 +624,16 @@ public boolean hasF32() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;f32&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearF32() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearF32() 
{
       fieldSetFlags()[3] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;f64&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public java.lang.Double getF64() {&lt;br/&gt;
       return f64;&lt;br/&gt;
@@ -560,9 +641,10 @@ public boolean hasF32() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;f64&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;f64&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setF64(double value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setF64(double value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.f64 = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -571,6 +653,7 @@ public boolean hasF32() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;f64&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;f64&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasF64() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -579,14 +662,16 @@ public boolean hasF64() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;f64&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearF64() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearF64() 
{
       fieldSetFlags()[4] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;s&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public java.lang.CharSequence getS() {&lt;br/&gt;
       return s;&lt;br/&gt;
@@ -594,9 +679,10 @@ public boolean hasF64() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;s&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;s&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setS(java.lang.CharSequence value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setS(java.lang.CharSequence value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;5&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.s = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;5&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -605,6 +691,7 @@ public boolean hasF64() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;s&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;s&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasS() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;5&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -613,8 +700,9 @@ public boolean hasS() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;s&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearS() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearS() {&lt;br/&gt;
       s = null;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;5&amp;#93;&lt;/span&gt; = false;&lt;br/&gt;
       return this;&lt;br/&gt;
@@ -622,6 +710,7 @@ public boolean hasS() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;d&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public org.joda.time.LocalDate getD() {&lt;br/&gt;
       return d;&lt;br/&gt;
@@ -629,9 +718,10 @@ public boolean hasS() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;d&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;d&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setD(org.joda.time.LocalDate value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setD(org.joda.time.LocalDate value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;6&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.d = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;6&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -640,6 +730,7 @@ public boolean hasS() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;d&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;d&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasD() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;6&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -648,14 +739,16 @@ public boolean hasD() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;d&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearD() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearD() 
{
       fieldSetFlags()[6] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;t&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public org.joda.time.LocalTime getT() {&lt;br/&gt;
       return t;&lt;br/&gt;
@@ -663,9 +756,10 @@ public boolean hasD() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;t&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;t&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setT(org.joda.time.LocalTime value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setT(org.joda.time.LocalTime value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;7&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.t = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;7&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -674,6 +768,7 @@ public boolean hasD() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;t&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;t&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasT() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;7&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -682,14 +777,16 @@ public boolean hasT() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;t&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearT() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearT() 
{
       fieldSetFlags()[7] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;ts&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public org.joda.time.DateTime getTs() {&lt;br/&gt;
       return ts;&lt;br/&gt;
@@ -697,9 +794,10 @@ public boolean hasT() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;ts&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;ts&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setTs(org.joda.time.DateTime value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setTs(org.joda.time.DateTime value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.ts = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -708,6 +806,7 @@ public boolean hasT() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;ts&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;ts&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasTs() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -716,81 +815,92 @@ public boolean hasTs() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;ts&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearTs() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearTs() 
{
       fieldSetFlags()[8] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Gedec the value of the &apos;dec&apos; field.&lt;/li&gt;
	&lt;li&gt;*/&lt;/li&gt;
	&lt;li&gt;public BigDecimal getDec() {&lt;br/&gt;
+      * Gets the value of the &apos;dec&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
+      */&lt;br/&gt;
+    public java.math.BigDecimal getDec() 
{
       return dec;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Sedec the value of the &apos;dec&apos; field.&lt;/li&gt;
	&lt;li&gt;* @param value the value to set.&lt;/li&gt;
	&lt;li&gt;*/&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setDec(BigDecimal value) {&lt;/li&gt;
	&lt;li&gt;validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
+      * Sets the value of the &apos;dec&apos; field.&lt;br/&gt;
+      * @param value The value of &apos;dec&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
+      */&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setDec(java.math.BigDecimal value) 
{
+      validate(fields()[9], value);
       this.dec = value;
-      fieldSetFlags()[8] = true;
+      fieldSetFlags()[9] = true;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Checks whether the &apos;dec&apos; field has been set.&lt;/li&gt;
	&lt;li&gt;*/&lt;br/&gt;
+      * Checks whether the &apos;dec&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;dec&apos; field has been set, false otherwise.&lt;br/&gt;
+      */&lt;br/&gt;
     public boolean hasDec() 
{
-      return fieldSetFlags()[8];
+      return fieldSetFlags()[9];
     }&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;     /**&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Clears the value of the &apos;dec&apos; field.&lt;/li&gt;
	&lt;li&gt;*/&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearDec() {&lt;/li&gt;
	&lt;li&gt;fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt; = false;&lt;br/&gt;
+      * Clears the value of the &apos;dec&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
+      */&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearDec() 
{
+      dec = null;
+      fieldSetFlags()[9] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     @Override&lt;br/&gt;
+    @SuppressWarnings(&quot;unchecked&quot;)&lt;br/&gt;
     public TestRecordWithLogicalTypes build() {&lt;br/&gt;
       try &lt;/p&gt;
{
         TestRecordWithLogicalTypes record = new TestRecordWithLogicalTypes();
-        record.b = fieldSetFlags()[0] ? this.b : (java.lang.Boolean) defaultValue(fields()[0]);
-        record.i32 = fieldSetFlags()[1] ? this.i32 : (java.lang.Integer) defaultValue(fields()[1]);
-        record.i64 = fieldSetFlags()[2] ? this.i64 : (java.lang.Long) defaultValue(fields()[2]);
-        record.f32 = fieldSetFlags()[3] ? this.f32 : (java.lang.Float) defaultValue(fields()[3]);
-        record.f64 = fieldSetFlags()[4] ? this.f64 : (java.lang.Double) defaultValue(fields()[4]);
-        record.s = fieldSetFlags()[5] ? this.s : (java.lang.CharSequence) defaultValue(fields()[5]);
-        record.d = fieldSetFlags()[6] ? this.d : (org.joda.time.LocalDate) defaultValue(fields()[6]);
-        record.t = fieldSetFlags()[7] ? this.t : (org.joda.time.LocalTime) defaultValue(fields()[7]);
-        record.ts = fieldSetFlags()[8] ? this.ts : (org.joda.time.DateTime) defaultValue(fields()[8]);
-        record.dec = fieldSetFlags()[9] ? this.dec : (BigDecimal) defaultValue(fields()[9]);
+        record.b = fieldSetFlags()[0] ? this.b : (java.lang.Boolean) defaultValue(fields()[0], record.getConversion(0));
+        record.i32 = fieldSetFlags()[1] ? this.i32 : (java.lang.Integer) defaultValue(fields()[1], record.getConversion(1));
+        record.i64 = fieldSetFlags()[2] ? this.i64 : (java.lang.Long) defaultValue(fields()[2], record.getConversion(2));
+        record.f32 = fieldSetFlags()[3] ? this.f32 : (java.lang.Float) defaultValue(fields()[3], record.getConversion(3));
+        record.f64 = fieldSetFlags()[4] ? this.f64 : (java.lang.Double) defaultValue(fields()[4], record.getConversion(4));
+        record.s = fieldSetFlags()[5] ? this.s : (java.lang.CharSequence) defaultValue(fields()[5], record.getConversion(5));
+        record.d = fieldSetFlags()[6] ? this.d : (org.joda.time.LocalDate) defaultValue(fields()[6], record.getConversion(6));
+        record.t = fieldSetFlags()[7] ? this.t : (org.joda.time.LocalTime) defaultValue(fields()[7], record.getConversion(7));
+        record.ts = fieldSetFlags()[8] ? this.ts : (org.joda.time.DateTime) defaultValue(fields()[8], record.getConversion(8));
+        record.dec = fieldSetFlags()[9] ? this.dec : (java.math.BigDecimal) defaultValue(fields()[9], record.getConversion(9));
         return record;
-      }
&lt;p&gt; catch (Exception e) &lt;/p&gt;
{
+      }
&lt;p&gt; catch (org.apache.avro.AvroMissingFieldException e) &lt;/p&gt;
{
+        throw e;
+      }
&lt;p&gt; catch (java.lang.Exception e) &lt;/p&gt;
{
         throw new org.apache.avro.AvroRuntimeException(e);
       }
&lt;p&gt;     }&lt;br/&gt;
   }&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private static final org.apache.avro.io.DatumWriter&lt;/li&gt;
	&lt;li&gt;WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);&lt;br/&gt;
+  @SuppressWarnings(&quot;unchecked&quot;)&lt;br/&gt;
+  private static final org.apache.avro.io.DatumWriter&amp;lt;TestRecordWithLogicalTypes&amp;gt;&lt;br/&gt;
+    WRITER$ = (org.apache.avro.io.DatumWriter&amp;lt;TestRecordWithLogicalTypes&amp;gt;)MODEL$.createDatumWriter(SCHEMA$);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   @Override public void writeExternal(java.io.ObjectOutput out)&lt;br/&gt;
     throws java.io.IOException &lt;/p&gt;
{
-    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
+    WRITER$.write(this, SpecificData.getEncoder(out));
   }

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private static final org.apache.avro.io.DatumReader&lt;/li&gt;
	&lt;li&gt;READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);&lt;br/&gt;
+  @SuppressWarnings(&quot;unchecked&quot;)&lt;br/&gt;
+  private static final org.apache.avro.io.DatumReader&amp;lt;TestRecordWithLogicalTypes&amp;gt;&lt;br/&gt;
+    READER$ = (org.apache.avro.io.DatumReader&amp;lt;TestRecordWithLogicalTypes&amp;gt;)MODEL$.createDatumReader(SCHEMA$);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   @Override public void readExternal(java.io.ObjectInput in)&lt;br/&gt;
     throws java.io.IOException &lt;/p&gt;
{
-    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
+    READER$.read(this, SpecificData.getDecoder(in));
   }

&lt;p&gt; }&lt;br/&gt;
diff --git a/lang/java/avro/src/test/resources/record_with_logical_types.avsc b/lang/java/avro/src/test/resources/record_with_logical_types.avsc&lt;br/&gt;
index 9932f9505..48c6aded9 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/test/resources/record_with_logical_types.avsc&lt;br/&gt;
+++ b/lang/java/avro/src/test/resources/record_with_logical_types.avsc&lt;br/&gt;
@@ -1,7 +1,7 @@&lt;br/&gt;
 {&lt;br/&gt;
   &quot;type&quot; : &quot;record&quot;,&lt;br/&gt;
   &quot;name&quot; : &quot;TestRecordWithLogicalTypes&quot;,&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&quot;doc&quot; : &quot;Schema for TestRecordWithLogicalTypes and TestRecordWithoutLogicalTypes, see TestSpecificLogicalTypes&quot;&lt;br/&gt;
+  &quot;doc&quot; : &quot;Schema for TestRecordWithLogicalTypes and TestRecordWithoutLogicalTypes, see TestSpecificLogicalTypes&quot;,&lt;br/&gt;
   &quot;namespace&quot; : &quot;org.apache.avro.specific&quot;,&lt;br/&gt;
   &quot;fields&quot; : [ 
{
     &quot;name&quot; : &quot;b&quot;,
@@ -40,6 +40,14 @@
       &quot;type&quot; : &quot;long&quot;,
       &quot;logicalType&quot; : &quot;timestamp-millis&quot;
     }
&lt;p&gt;+  }, &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+    &amp;quot;name&amp;quot; }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt; ]&lt;br/&gt;
 }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;






&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16636450" author="githubbot" created="Wed, 3 Oct 2018 05:11:05 +0000"  >&lt;p&gt;rstata opened a new pull request #342: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2235&quot; title=&quot;Regenerate TestRecordWithLogicalTypes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2235&quot;&gt;&lt;del&gt;AVRO-2235&lt;/del&gt;&lt;/a&gt;: regenerate TestRecordWithLogicalTypes.java&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/342&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/342&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   My original fix conflicted with patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2079&quot; title=&quot;Add ability to use Java 8 date/time types instead of Joda time.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2079&quot;&gt;&lt;del&gt;AVRO-2079&lt;/del&gt;&lt;/a&gt;.  The &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2079&quot; title=&quot;Add ability to use Java 8 date/time types instead of Joda time.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2079&quot;&gt;&lt;del&gt;AVRO-2079&lt;/del&gt;&lt;/a&gt; fixed a typo in record_with_logical_types.avsc.  However, while &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2079&quot; title=&quot;Add ability to use Java 8 date/time types instead of Joda time.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2079&quot;&gt;&lt;del&gt;AVRO-2079&lt;/del&gt;&lt;/a&gt; made a cosmetic change to RecordWithLogicalTypes.java, it did not regenerate it.  I fixed another problem in record_with_logical_types.avsc and regenerated RecordWithLogicalTypes.java.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16636464" author="raymie" created="Wed, 3 Oct 2018 05:15:51 +0000"  >&lt;p&gt;Does anyone know how TestRecordWithoutLogicalTypes.java was generated?&#160; Was it a hand-edit of the generated code for TestRecordWithLogicalTypes.java?&lt;/p&gt;</comment>
                            <comment id="16636466" author="raymie" created="Wed, 3 Oct 2018 05:18:03 +0000"  >&lt;p&gt;I want to re-regenerate TestRecordForLogicalTypes.java with my modifications to the specific compiler, but would prefer to do that after successfully re-generating it on the master.&lt;/p&gt;</comment>
                            <comment id="16636484" author="raymie" created="Wed, 3 Oct 2018 05:35:29 +0000"  >&lt;p&gt;I looked at the comment at the top of TestSpecificLogicalTypes and realized that maybe I shouldn&apos;t have updated TestRecordWithLogicalTypes.&#160; That comment reads:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The classes&#160; &lt;span class=&quot;error&quot;&gt;&amp;#91;TestRecordWithLogicalTypes and TestRecordWithoutLogicalTypes&amp;#93;&lt;/span&gt;should not be re-generated because they test compatibility of Avro with existing Avro-generated sources. When using classes generated before &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1684&quot; title=&quot;Add date, time, and timestamp to specific object model classes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1684&quot;&gt;&lt;del&gt;AVRO-1684&lt;/del&gt;&lt;/a&gt;, logical types should not be applied by the read or write paths. Those files should behave as they did before.&#160; At the same time, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkollar&quot; class=&quot;user-hover&quot; rel=&quot;nkollar&quot;&gt;Nandor Kollar&lt;/a&gt; suggested in my (GitHub) pull request for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2090&quot; title=&quot;Improve encode/decode time for SpecificRecord using code generation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2090&quot;&gt;&lt;del&gt;AVRO-2090&lt;/del&gt;&lt;/a&gt; that I regenerate TestRecordForLogicalTypes.&#160; &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;So it sounds like this code here is for testing backward compatibility and thus shouldn&apos;t be updated.&lt;/p&gt;

&lt;p&gt;At the same time, in my (GitHub) pull request for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2090&quot; title=&quot;Improve encode/decode time for SpecificRecord using code generation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2090&quot;&gt;&lt;del&gt;AVRO-2090&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkollar&quot; class=&quot;user-hover&quot; rel=&quot;nkollar&quot;&gt;Nandor Kollar&lt;/a&gt; suggests that I &lt;em&gt;do&lt;/em&gt; regenerate these classes.&#160; At this point, I&apos;m not sure what is the right thing to do.&#160; Any suggestions?&lt;/p&gt;</comment>
                            <comment id="16636784" author="thiru_mg" created="Wed, 3 Oct 2018 10:53:28 +0000"  >&lt;p&gt;The intent was to test the compatibility of the code generated just before and just after &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1684&quot; title=&quot;Add date, time, and timestamp to specific object model classes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1684&quot;&gt;&lt;del&gt;AVRO-1684&lt;/del&gt;&lt;/a&gt;. So that test need not be touched now. In fact, it should probably be deleted because the current generated code is not the same as either of the files here and hence it does not really test anything current.&lt;/p&gt;

&lt;p&gt;But if we want to test the compatibility between the code generated before &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1684&quot; title=&quot;Add date, time, and timestamp to specific object model classes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1684&quot;&gt;&lt;del&gt;AVRO-1684&lt;/del&gt;&lt;/a&gt; and the &lt;b&gt;current&lt;/b&gt; version, we should regenerate both the classes. We need to regenerate them because the schema used for generating those two classes has changed in the meantime. I personally don&apos;t think the pain is worth it. However, if it should be done, here is how it can be achieved:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Obtain a copy of old avro-tools jar from &lt;a href=&quot;https://mvnrepository.com/artifact/org.apache.avro/avro-tools/1.7.7.&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://mvnrepository.com/artifact/org.apache.avro/avro-tools/1.7.7.&lt;/a&gt;&#160;Click on the `jar` button to download the jar.&lt;/li&gt;
	&lt;li&gt;From lang/java issue the command `java -jar avro-tools-1.7.7.jar compile schema avro/src/test/resources/record_with_logical_types.avsc tmp`.&lt;/li&gt;
	&lt;li&gt;Massage the generated code (`tmp/org/apache/avro/specific/TestRecordWithLogicalTypes.java`) a bit: `%s/org.apache.avro.specific.TestRecordWithout/TestRecordWithout/g`&lt;/li&gt;
	&lt;li&gt;`cp tmp/org/apache/avro/specific/TestRecordWithLogicalTypes.java avro/src/test/java/org/apache/avro/specific/TestRecordWithoutLogicalTypes.java`&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;This is not perfect; but it gets something close to what got generated then.&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;</comment>
                            <comment id="16637359" author="raymie" created="Wed, 3 Oct 2018 18:40:07 +0000"  >&lt;p&gt;I&apos;m going to keep this open in case someone else wants to comment.&#160; But based on what Thiru says, I think I&apos;m going to close this issue as &quot;won&apos;t fix.&quot;&lt;/p&gt;</comment>
                            <comment id="16637698" author="githubbot" created="Thu, 4 Oct 2018 01:44:43 +0000"  >&lt;p&gt;kojiromike commented on issue #341: Fix &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2235&quot; title=&quot;Regenerate TestRecordWithLogicalTypes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2235&quot;&gt;&lt;del&gt;AVRO-2235&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/341#issuecomment-426858213&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/341#issuecomment-426858213&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Ref #342 &lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16661129" author="githubbot" created="Tue, 23 Oct 2018 19:01:52 +0000"  >&lt;p&gt;rstata closed pull request #342: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2235&quot; title=&quot;Regenerate TestRecordWithLogicalTypes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2235&quot;&gt;&lt;del&gt;AVRO-2235&lt;/del&gt;&lt;/a&gt;: regenerate TestRecordWithLogicalTypes.java&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/342&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/342&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/avro/src/test/java/org/apache/avro/specific/TestRecordWithLogicalTypes.java b/lang/java/avro/src/test/java/org/apache/avro/specific/TestRecordWithLogicalTypes.java&lt;br/&gt;
index 17e74ae2f..851e49a2d 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/test/java/org/apache/avro/specific/TestRecordWithLogicalTypes.java&lt;br/&gt;
+++ b/lang/java/avro/src/test/java/org/apache/avro/specific/TestRecordWithLogicalTypes.java&lt;br/&gt;
@@ -5,17 +5,16 @@&lt;br/&gt;
  */&lt;br/&gt;
 package org.apache.avro.specific;&lt;/p&gt;

&lt;p&gt;-import org.apache.avro.data.TimeConversions;&lt;br/&gt;
-import org.apache.avro.message.BinaryMessageDecoder;&lt;br/&gt;
+import org.apache.avro.specific.SpecificData;&lt;br/&gt;
 import org.apache.avro.message.BinaryMessageEncoder;&lt;br/&gt;
+import org.apache.avro.message.BinaryMessageDecoder;&lt;br/&gt;
+import org.apache.avro.message.SchemaStore;&lt;/p&gt;

&lt;p&gt;-import java.math.BigDecimal;&lt;br/&gt;
-&lt;br/&gt;
-@SuppressWarnings(&quot;all&quot;)&lt;br/&gt;
+/** Schema for TestRecordWithLogicalTypes and TestRecordWithoutLogicalTypes, see TestSpecificLogicalTypes */&lt;br/&gt;
 @org.apache.avro.specific.AvroGenerated&lt;br/&gt;
 public class TestRecordWithLogicalTypes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private static final long serialVersionUID = -4211233492739285532L;&lt;/li&gt;
	&lt;li&gt;public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(&quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;TestRecordWithLogicalTypes\&quot;,\&quot;namespace\&quot;:\&quot;org.apache.avro.specific\&quot;,\&quot;fields\&quot;:[
{\&quot;name\&quot;:\&quot;b\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;i32\&quot;,\&quot;type\&quot;:\&quot;int\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;i64\&quot;,\&quot;type\&quot;:\&quot;long\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;f32\&quot;,\&quot;type\&quot;:\&quot;float\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;f64\&quot;,\&quot;type\&quot;:\&quot;double\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;s\&quot;,\&quot;type\&quot;:[\&quot;null\&quot;,\&quot;string\&quot;],\&quot;default\&quot;:null}
&lt;p&gt;,{\&quot;name\&quot;:\&quot;d\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;logicalType\&quot;:\&quot;date\&quot;}},{\&quot;name\&quot;:\&quot;t\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;logicalType\&quot;:\&quot;time-millis\&quot;}},{\&quot;name\&quot;:\&quot;ts\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;logicalType\&quot;:\&quot;timestamp-millis\&quot;}},{\&quot;name\&quot;:\&quot;dec\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;bytes\&quot;,\&quot;logicalType\&quot;:\&quot;decimal\&quot;,\&quot;precision\&quot;:9,\&quot;scale\&quot;:2}}]}&quot;);&lt;br/&gt;
+  private static final long serialVersionUID = 6236661767120588912L;&lt;br/&gt;
+  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(&quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;TestRecordWithLogicalTypes\&quot;,\&quot;namespace\&quot;:\&quot;org.apache.avro.specific\&quot;,\&quot;doc\&quot;:\&quot;Schema for TestRecordWithLogicalTypes and TestRecordWithoutLogicalTypes, see TestSpecificLogicalTypes\&quot;,\&quot;fields\&quot;:[&lt;/p&gt;
{\&quot;name\&quot;:\&quot;b\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;i32\&quot;,\&quot;type\&quot;:\&quot;int\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;i64\&quot;,\&quot;type\&quot;:\&quot;long\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;f32\&quot;,\&quot;type\&quot;:\&quot;float\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;f64\&quot;,\&quot;type\&quot;:\&quot;double\&quot;}
&lt;p&gt;,&lt;/p&gt;
{\&quot;name\&quot;:\&quot;s\&quot;,\&quot;type\&quot;:[\&quot;null\&quot;,\&quot;string\&quot;],\&quot;default\&quot;:null}
&lt;p&gt;,{\&quot;name\&quot;:\&quot;d\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;logicalType\&quot;:\&quot;date\&quot;}},{\&quot;name\&quot;:\&quot;t\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;logicalType\&quot;:\&quot;time-millis\&quot;}},{\&quot;name\&quot;:\&quot;ts\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;logicalType\&quot;:\&quot;timestamp-millis\&quot;}},{\&quot;name\&quot;:\&quot;dec\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;bytes\&quot;,\&quot;logicalType\&quot;:\&quot;decimal\&quot;,\&quot;precision\&quot;:9,\&quot;scale\&quot;:2}}]}&quot;);&lt;br/&gt;
   public static org.apache.avro.Schema getClassSchema() &lt;/p&gt;
{ return SCHEMA$; }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   private static SpecificData MODEL$ = new SpecificData();&lt;br/&gt;
@@ -26,12 +25,38 @@&lt;br/&gt;
   private static final BinaryMessageDecoder&amp;lt;TestRecordWithLogicalTypes&amp;gt; DECODER =&lt;br/&gt;
       new BinaryMessageDecoder&amp;lt;TestRecordWithLogicalTypes&amp;gt;(MODEL$, SCHEMA$);&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Serializes this ${schema.getName()} to a ByteBuffer. */&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Return the BinaryMessageDecoder instance used by this class.&lt;br/&gt;
+   * @return the message decoder used by this class&lt;br/&gt;
+   */&lt;br/&gt;
+  public static BinaryMessageDecoder&amp;lt;TestRecordWithLogicalTypes&amp;gt; getDecoder() 
{
+    return DECODER;
+  }
&lt;p&gt;+&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Create a new BinaryMessageDecoder instance for this class that uses the specified &lt;/p&gt;
{@link SchemaStore}.&lt;br/&gt;
+   * @param resolver a {@link SchemaStore}
&lt;p&gt; used to find schemas by fingerprint&lt;br/&gt;
+   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore&lt;br/&gt;
+   */&lt;br/&gt;
+  public static BinaryMessageDecoder&amp;lt;TestRecordWithLogicalTypes&amp;gt; createDecoder(SchemaStore resolver) &lt;/p&gt;
{
+    return new BinaryMessageDecoder&amp;lt;TestRecordWithLogicalTypes&amp;gt;(MODEL$, SCHEMA$, resolver);
+  }
&lt;p&gt;+&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Serializes this TestRecordWithLogicalTypes to a ByteBuffer.&lt;br/&gt;
+   * @return a buffer holding the serialized data for this instance&lt;br/&gt;
+   * @throws java.io.IOException if this instance could not be serialized&lt;br/&gt;
+   */&lt;br/&gt;
   public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException &lt;/p&gt;
{
     return ENCODER.encode(this);
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Deserializes a ${schema.getName()} from a ByteBuffer. */&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Deserializes a TestRecordWithLogicalTypes from a ByteBuffer.&lt;br/&gt;
+   * @param b a byte buffer holding serialized data for an instance of this class&lt;br/&gt;
+   * @return a TestRecordWithLogicalTypes instance decoded from the given buffer&lt;br/&gt;
+   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class&lt;br/&gt;
+   */&lt;br/&gt;
   public static TestRecordWithLogicalTypes fromByteBuffer(&lt;br/&gt;
       java.nio.ByteBuffer b) throws java.io.IOException {&lt;br/&gt;
     return DECODER.decode(b);&lt;br/&gt;
@@ -46,7 +71,7 @@ public static TestRecordWithLogicalTypes fromByteBuffer(&lt;br/&gt;
   @Deprecated public org.joda.time.LocalDate d;&lt;br/&gt;
   @Deprecated public org.joda.time.LocalTime t;&lt;br/&gt;
   @Deprecated public org.joda.time.DateTime ts;&lt;/li&gt;
	&lt;li&gt;@Deprecated public BigDecimal dec;&lt;br/&gt;
+  @Deprecated public java.math.BigDecimal dec;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Default constructor.  Note that this does not initialize fields&lt;br/&gt;
@@ -57,17 +82,18 @@ public TestRecordWithLogicalTypes() {}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;All-args constructor.&lt;br/&gt;
+   * @param b The new value for b&lt;br/&gt;
+   * @param i32 The new value for i32&lt;br/&gt;
+   * @param i64 The new value for i64&lt;br/&gt;
+   * @param f32 The new value for f32&lt;br/&gt;
+   * @param f64 The new value for f64&lt;br/&gt;
+   * @param s The new value for s&lt;br/&gt;
+   * @param d The new value for d&lt;br/&gt;
+   * @param t The new value for t&lt;br/&gt;
+   * @param ts The new value for ts&lt;br/&gt;
+   * @param dec The new value for dec&lt;br/&gt;
    */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes(java.lang.Boolean b,&lt;/li&gt;
	&lt;li&gt;java.lang.Integer i32,&lt;/li&gt;
	&lt;li&gt;java.lang.Long i64,&lt;/li&gt;
	&lt;li&gt;java.lang.Float f32,&lt;/li&gt;
	&lt;li&gt;java.lang.Double f64,&lt;/li&gt;
	&lt;li&gt;java.lang.CharSequence s,&lt;/li&gt;
	&lt;li&gt;org.joda.time.LocalDate d,&lt;/li&gt;
	&lt;li&gt;org.joda.time.LocalTime t,&lt;/li&gt;
	&lt;li&gt;org.joda.time.DateTime ts,&lt;/li&gt;
	&lt;li&gt;BigDecimal dec) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+  public TestRecordWithLogicalTypes(java.lang.Boolean b, java.lang.Integer i32, java.lang.Long i64, java.lang.Float f32, java.lang.Double f64, java.lang.CharSequence s, org.joda.time.LocalDate d, org.joda.time.LocalTime t, org.joda.time.DateTime ts, java.math.BigDecimal dec) {
     this.b = b;
     this.i32 = i32;
     this.i64 = i64;
@@ -97,6 +123,32 @@ public TestRecordWithLogicalTypes(java.lang.Boolean b,
     default: throw new org.apache.avro.AvroRuntimeException(&quot;Bad index&quot;);
     }   }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+&lt;br/&gt;
+  protected static final org.apache.avro.data.TimeConversions.DateConversion DATE_CONVERSION = new org.apache.avro.data.TimeConversions.DateConversion();&lt;br/&gt;
+  protected static final org.apache.avro.data.TimeConversions.TimeConversion TIME_CONVERSION = new org.apache.avro.data.TimeConversions.TimeConversion();&lt;br/&gt;
+  protected static final org.apache.avro.data.TimeConversions.TimestampConversion TIMESTAMP_CONVERSION = new org.apache.avro.data.TimeConversions.TimestampConversion();&lt;br/&gt;
+  protected static final org.apache.avro.Conversions.DecimalConversion DECIMAL_CONVERSION = new org.apache.avro.Conversions.DecimalConversion();&lt;br/&gt;
+&lt;br/&gt;
+  private static final org.apache.avro.Conversion&amp;lt;?&amp;gt;[] conversions =&lt;br/&gt;
+      new org.apache.avro.Conversion&amp;lt;?&amp;gt;[] &lt;/p&gt;
{
+      null,
+      null,
+      null,
+      null,
+      null,
+      null,
+      DATE_CONVERSION,
+      TIME_CONVERSION,
+      TIMESTAMP_CONVERSION,
+      DECIMAL_CONVERSION,
+      null
+  }
&lt;p&gt;;&lt;br/&gt;
+&lt;br/&gt;
+  @Override&lt;br/&gt;
+  public org.apache.avro.Conversion&amp;lt;?&amp;gt; getConversion(int field) &lt;/p&gt;
{
+    return conversions[field];
+  }
&lt;p&gt;+&lt;br/&gt;
   // Used by DatumReader.  Applications should not call.&lt;br/&gt;
   @SuppressWarnings(value=&quot;unchecked&quot;)&lt;br/&gt;
   public void put(int field$, java.lang.Object value$) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {@@ -110,13 +162,14 @@ public void put(int field$, java.lang.Object value$) {
     case 6: d = (org.joda.time.LocalDate)value$; break;
     case 7: t = (org.joda.time.LocalTime)value$; break;
     case 8: ts = (org.joda.time.DateTime)value$; break;
-    case 9: dec = (BigDecimal) value$; break;
+    case 9: dec = (java.math.BigDecimal)value$; break;
     default: throw new org.apache.avro.AvroRuntimeException(&quot;Bad index&quot;);
     }   }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;b&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;b&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public java.lang.Boolean getB() {&lt;br/&gt;
     return b;&lt;br/&gt;
@@ -132,6 +185,7 @@ public void setB(java.lang.Boolean value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;i32&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;i32&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public java.lang.Integer getI32() {&lt;br/&gt;
     return i32;&lt;br/&gt;
@@ -147,6 +201,7 @@ public void setI32(java.lang.Integer value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;i64&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;i64&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public java.lang.Long getI64() {&lt;br/&gt;
     return i64;&lt;br/&gt;
@@ -162,6 +217,7 @@ public void setI64(java.lang.Long value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;f32&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;f32&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public java.lang.Float getF32() {&lt;br/&gt;
     return f32;&lt;br/&gt;
@@ -177,6 +233,7 @@ public void setF32(java.lang.Float value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;f64&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;f64&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public java.lang.Double getF64() {&lt;br/&gt;
     return f64;&lt;br/&gt;
@@ -192,6 +249,7 @@ public void setF64(java.lang.Double value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;s&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;s&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public java.lang.CharSequence getS() {&lt;br/&gt;
     return s;&lt;br/&gt;
@@ -207,6 +265,7 @@ public void setS(java.lang.CharSequence value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;d&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;d&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public org.joda.time.LocalDate getD() {&lt;br/&gt;
     return d;&lt;br/&gt;
@@ -222,6 +281,7 @@ public void setD(org.joda.time.LocalDate value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;t&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;t&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public org.joda.time.LocalTime getT() {&lt;br/&gt;
     return t;&lt;br/&gt;
@@ -237,71 +297,68 @@ public void setT(org.joda.time.LocalTime value) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;ts&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;ts&apos; field.&lt;br/&gt;
    */&lt;br/&gt;
   public org.joda.time.DateTime getTs() 
{
     return ts;
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Sets the value of the &apos;dec&apos; field.&lt;br/&gt;
+   * Sets the value of the &apos;ts&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;@param value the value to set.&lt;br/&gt;
    */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public void setDec(BigDecimal value) {&lt;/li&gt;
	&lt;li&gt;this.dec = value;&lt;br/&gt;
+  public void setTs(org.joda.time.DateTime value) 
{
+    this.ts = value;
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Gets the value of the &apos;ts&apos; field.&lt;br/&gt;
+   * Gets the value of the &apos;dec&apos; field.&lt;br/&gt;
+   * @return The value of the &apos;dec&apos; field.&lt;br/&gt;
    */&lt;/li&gt;
	&lt;li&gt;public BigDecimal getDec() {&lt;br/&gt;
+  public java.math.BigDecimal getDec() 
{
     return dec;
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Sets the value of the &apos;ts&apos; field.&lt;br/&gt;
+   * Sets the value of the &apos;dec&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;@param value the value to set.&lt;br/&gt;
    */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public void setTs(org.joda.time.DateTime value) 
{
-    this.ts = value;
-  }
&lt;p&gt;-&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;protected static final TimeConversions.DateConversion DATE_CONVERSION = new TimeConversions.DateConversion();&lt;/li&gt;
	&lt;li&gt;protected static final TimeConversions.TimeConversion TIME_CONVERSION = new TimeConversions.TimeConversion();&lt;/li&gt;
	&lt;li&gt;protected static final TimeConversions.TimestampConversion TIMESTAMP_CONVERSION = new TimeConversions.TimestampConversion();&lt;/li&gt;
	&lt;li&gt;protected static final org.apache.avro.Conversions.DecimalConversion DECIMAL_CONVERSION = new org.apache.avro.Conversions.DecimalConversion();&lt;/li&gt;
	&lt;li&gt;private final org.apache.avro.Conversion&amp;lt;?&amp;gt;[] conversions =&lt;/li&gt;
	&lt;li&gt;new org.apache.avro.Conversion&amp;lt;?&amp;gt;[] 
{
-      null,
-      null,
-      null,
-      null,
-      null,
-      null,
-      DATE_CONVERSION,
-      TIME_CONVERSION,
-      TIMESTAMP_CONVERSION,
-      DECIMAL_CONVERSION,
-      null
-  }
&lt;p&gt;;&lt;br/&gt;
-&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;@Override&lt;/li&gt;
	&lt;li&gt;public org.apache.avro.Conversion&amp;lt;?&amp;gt; getConversion(int field) {&lt;/li&gt;
	&lt;li&gt;return conversions&lt;span class=&quot;error&quot;&gt;&amp;#91;field&amp;#93;&lt;/span&gt;;&lt;br/&gt;
+  public void setDec(java.math.BigDecimal value) 
{
+    this.dec = value;
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Creates a new TestRecordWithLogicalTypes RecordBuilder */&lt;/li&gt;
	&lt;li&gt;public static TestRecordWithLogicalTypes.Builder newBuilder() {&lt;/li&gt;
	&lt;li&gt;return new TestRecordWithLogicalTypes.Builder();&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Creates a new TestRecordWithLogicalTypes RecordBuilder.&lt;br/&gt;
+   * @return A new TestRecordWithLogicalTypes RecordBuilder&lt;br/&gt;
+   */&lt;br/&gt;
+  public static org.apache.avro.specific.TestRecordWithLogicalTypes.Builder newBuilder() 
{
+    return new org.apache.avro.specific.TestRecordWithLogicalTypes.Builder();
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Creates a new TestRecordWithLogicalTypes RecordBuilder by copying an existing Builder */&lt;/li&gt;
	&lt;li&gt;public static TestRecordWithLogicalTypes.Builder newBuilder(TestRecordWithLogicalTypes.Builder other) {&lt;/li&gt;
	&lt;li&gt;return new TestRecordWithLogicalTypes.Builder(other);&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Creates a new TestRecordWithLogicalTypes RecordBuilder by copying an existing Builder.&lt;br/&gt;
+   * @param other The existing builder to copy.&lt;br/&gt;
+   * @return A new TestRecordWithLogicalTypes RecordBuilder&lt;br/&gt;
+   */&lt;br/&gt;
+  public static org.apache.avro.specific.TestRecordWithLogicalTypes.Builder newBuilder(org.apache.avro.specific.TestRecordWithLogicalTypes.Builder other) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+    if (other == null) {
+      return new org.apache.avro.specific.TestRecordWithLogicalTypes.Builder();
+    } else {
+      return new org.apache.avro.specific.TestRecordWithLogicalTypes.Builder(other);
+    }&lt;br/&gt;
   }&lt;br/&gt;
 &lt;br/&gt;
-  /** Creates a new TestRecordWithLogicalTypes RecordBuilder by copying an existing TestRecordWithLogicalTypes instance */&lt;br/&gt;
-  public static TestRecordWithLogicalTypes.Builder newBuilder(TestRecordWithLogicalTypes other) {&lt;br/&gt;
-    return new TestRecordWithLogicalTypes.Builder(other);&lt;br/&gt;
+  /**&lt;br/&gt;
+   * Creates a new TestRecordWithLogicalTypes RecordBuilder by copying an existing TestRecordWithLogicalTypes instance.&lt;br/&gt;
+   * @param other The existing instance to copy.&lt;br/&gt;
+   * @return A new TestRecordWithLogicalTypes RecordBuilder&lt;br/&gt;
+   */&lt;br/&gt;
+  public static org.apache.avro.specific.TestRecordWithLogicalTypes.Builder newBuilder(org.apache.avro.specific.TestRecordWithLogicalTypes other) {&lt;br/&gt;
+    if (other == null) {+      return new org.apache.avro.specific.TestRecordWithLogicalTypes.Builder();+    } else {
+      return new org.apache.avro.specific.TestRecordWithLogicalTypes.Builder(other);
+    }   }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   /**&lt;br/&gt;
@@ -319,61 +376,67 @@ public void setTs(org.joda.time.DateTime value) {&lt;br/&gt;
     private org.joda.time.LocalDate d;&lt;br/&gt;
     private org.joda.time.LocalTime t;&lt;br/&gt;
     private org.joda.time.DateTime ts;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private BigDecimal dec;&lt;br/&gt;
+    private java.math.BigDecimal dec;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /** Creates a new Builder */&lt;br/&gt;
     private Builder() &lt;/p&gt;
{
-      super(TestRecordWithLogicalTypes.SCHEMA$);
+      super(SCHEMA$);
     }

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Creates a Builder by copying an existing Builder */&lt;/li&gt;
	&lt;li&gt;private Builder(TestRecordWithLogicalTypes.Builder other) {&lt;br/&gt;
+    /**&lt;br/&gt;
+     * Creates a Builder by copying an existing Builder.&lt;br/&gt;
+     * @param other The existing Builder to copy.&lt;br/&gt;
+     */&lt;br/&gt;
+    private Builder(org.apache.avro.specific.TestRecordWithLogicalTypes.Builder other) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {       super(other);       if (isValidValue(fields()[0], other.b)) {
         this.b = data().deepCopy(fields()[0].schema(), other.b);
-        fieldSetFlags()[0] = true;
+        fieldSetFlags()[0] = other.fieldSetFlags()[0];
       }       if (isValidValue(fields()[1], other.i32)) {
         this.i32 = data().deepCopy(fields()[1].schema(), other.i32);
-        fieldSetFlags()[1] = true;
+        fieldSetFlags()[1] = other.fieldSetFlags()[1];
       }       if (isValidValue(fields()[2], other.i64)) {
         this.i64 = data().deepCopy(fields()[2].schema(), other.i64);
-        fieldSetFlags()[2] = true;
+        fieldSetFlags()[2] = other.fieldSetFlags()[2];
       }       if (isValidValue(fields()[3], other.f32)) {
         this.f32 = data().deepCopy(fields()[3].schema(), other.f32);
-        fieldSetFlags()[3] = true;
+        fieldSetFlags()[3] = other.fieldSetFlags()[3];
       }       if (isValidValue(fields()[4], other.f64)) {
         this.f64 = data().deepCopy(fields()[4].schema(), other.f64);
-        fieldSetFlags()[4] = true;
+        fieldSetFlags()[4] = other.fieldSetFlags()[4];
       }       if (isValidValue(fields()[5], other.s)) {
         this.s = data().deepCopy(fields()[5].schema(), other.s);
-        fieldSetFlags()[5] = true;
+        fieldSetFlags()[5] = other.fieldSetFlags()[5];
       }       if (isValidValue(fields()[6], other.d)) {
         this.d = data().deepCopy(fields()[6].schema(), other.d);
-        fieldSetFlags()[6] = true;
+        fieldSetFlags()[6] = other.fieldSetFlags()[6];
       }       if (isValidValue(fields()[7], other.t)) {
         this.t = data().deepCopy(fields()[7].schema(), other.t);
-        fieldSetFlags()[7] = true;
+        fieldSetFlags()[7] = other.fieldSetFlags()[7];
       }       if (isValidValue(fields()[8], other.ts)) {
         this.ts = data().deepCopy(fields()[8].schema(), other.ts);
-        fieldSetFlags()[8] = true;
+        fieldSetFlags()[8] = other.fieldSetFlags()[8];
       }       if (isValidValue(fields()[9], other.dec)) {
         this.dec = data().deepCopy(fields()[9].schema(), other.dec);
-        fieldSetFlags()[9] = true;
+        fieldSetFlags()[9] = other.fieldSetFlags()[9];
       }     }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;/** Creates a Builder by copying an existing TestRecordWithLogicalTypes instance */&lt;/li&gt;
	&lt;li&gt;private Builder(TestRecordWithLogicalTypes other) {&lt;/li&gt;
	&lt;li&gt;super(TestRecordWithLogicalTypes.SCHEMA$);&lt;br/&gt;
+    /**&lt;br/&gt;
+     * Creates a Builder by copying an existing TestRecordWithLogicalTypes instance&lt;br/&gt;
+     * @param other The existing instance to copy.&lt;br/&gt;
+     */&lt;br/&gt;
+    private Builder(org.apache.avro.specific.TestRecordWithLogicalTypes other) {&lt;br/&gt;
+      super(SCHEMA$);&lt;br/&gt;
       if (isValidValue(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;, other.b)) {&lt;br/&gt;
         this.b = data().deepCopy(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;.schema(), other.b);&lt;br/&gt;
         fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -418,6 +481,7 @@ private Builder(TestRecordWithLogicalTypes other) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;b&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public java.lang.Boolean getB() {&lt;br/&gt;
       return b;&lt;br/&gt;
@@ -425,9 +489,10 @@ private Builder(TestRecordWithLogicalTypes other) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;b&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;b&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setB(boolean value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setB(boolean value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.b = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -436,6 +501,7 @@ private Builder(TestRecordWithLogicalTypes other) {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;b&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;b&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasB() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -444,14 +510,16 @@ public boolean hasB() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;b&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearB() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearB() 
{
       fieldSetFlags()[0] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;i32&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public java.lang.Integer getI32() {&lt;br/&gt;
       return i32;&lt;br/&gt;
@@ -459,9 +527,10 @@ public boolean hasB() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;i32&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;i32&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setI32(int value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setI32(int value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.i32 = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -470,6 +539,7 @@ public boolean hasB() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;i32&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;i32&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasI32() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -478,14 +548,16 @@ public boolean hasI32() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;i32&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearI32() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearI32() 
{
       fieldSetFlags()[1] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;i64&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public java.lang.Long getI64() {&lt;br/&gt;
       return i64;&lt;br/&gt;
@@ -493,9 +565,10 @@ public boolean hasI32() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;i64&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;i64&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setI64(long value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setI64(long value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.i64 = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -504,6 +577,7 @@ public boolean hasI32() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;i64&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;i64&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasI64() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -512,14 +586,16 @@ public boolean hasI64() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;i64&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearI64() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearI64() 
{
       fieldSetFlags()[2] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;f32&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public java.lang.Float getF32() {&lt;br/&gt;
       return f32;&lt;br/&gt;
@@ -527,9 +603,10 @@ public boolean hasI64() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;f32&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;f32&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setF32(float value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setF32(float value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.f32 = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -538,6 +615,7 @@ public boolean hasI64() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;f32&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;f32&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasF32() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -546,14 +624,16 @@ public boolean hasF32() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;f32&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearF32() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearF32() 
{
       fieldSetFlags()[3] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;f64&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public java.lang.Double getF64() {&lt;br/&gt;
       return f64;&lt;br/&gt;
@@ -561,9 +641,10 @@ public boolean hasF32() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;f64&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;f64&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setF64(double value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setF64(double value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.f64 = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -572,6 +653,7 @@ public boolean hasF32() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;f64&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;f64&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasF64() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -580,14 +662,16 @@ public boolean hasF64() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;f64&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearF64() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearF64() 
{
       fieldSetFlags()[4] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;s&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public java.lang.CharSequence getS() {&lt;br/&gt;
       return s;&lt;br/&gt;
@@ -595,9 +679,10 @@ public boolean hasF64() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;s&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;s&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setS(java.lang.CharSequence value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setS(java.lang.CharSequence value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;5&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.s = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;5&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -606,6 +691,7 @@ public boolean hasF64() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;s&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;s&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasS() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;5&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -614,8 +700,9 @@ public boolean hasS() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;s&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearS() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearS() {&lt;br/&gt;
       s = null;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;5&amp;#93;&lt;/span&gt; = false;&lt;br/&gt;
       return this;&lt;br/&gt;
@@ -623,6 +710,7 @@ public boolean hasS() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;d&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public org.joda.time.LocalDate getD() {&lt;br/&gt;
       return d;&lt;br/&gt;
@@ -630,9 +718,10 @@ public boolean hasS() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;d&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;d&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setD(org.joda.time.LocalDate value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setD(org.joda.time.LocalDate value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;6&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.d = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;6&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -641,6 +730,7 @@ public boolean hasS() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;d&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;d&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasD() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;6&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -649,14 +739,16 @@ public boolean hasD() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;d&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearD() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearD() 
{
       fieldSetFlags()[6] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;t&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public org.joda.time.LocalTime getT() {&lt;br/&gt;
       return t;&lt;br/&gt;
@@ -664,9 +756,10 @@ public boolean hasD() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;t&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;t&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setT(org.joda.time.LocalTime value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setT(org.joda.time.LocalTime value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;7&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.t = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;7&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -675,6 +768,7 @@ public boolean hasD() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;t&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;t&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasT() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;7&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -683,14 +777,16 @@ public boolean hasT() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;t&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearT() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearT() 
{
       fieldSetFlags()[7] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;ts&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
     public org.joda.time.DateTime getTs() {&lt;br/&gt;
       return ts;&lt;br/&gt;
@@ -698,9 +794,10 @@ public boolean hasT() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Sets the value of the &apos;ts&apos; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* @param value the value to set.&lt;br/&gt;
+      * @param value The value of &apos;ts&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setTs(org.joda.time.DateTime value) {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setTs(org.joda.time.DateTime value) {&lt;br/&gt;
       validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
       this.ts = value;&lt;br/&gt;
       fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt; = true;&lt;br/&gt;
@@ -709,6 +806,7 @@ public boolean hasT() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks whether the &apos;ts&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;ts&apos; field has been set, false otherwise.&lt;br/&gt;
       */&lt;br/&gt;
     public boolean hasTs() {&lt;br/&gt;
       return fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt;;&lt;br/&gt;
@@ -717,81 +815,92 @@ public boolean hasTs() {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Clears the value of the &apos;ts&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearTs() {&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearTs() 
{
       fieldSetFlags()[8] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Gedec the value of the &apos;dec&apos; field.&lt;/li&gt;
	&lt;li&gt;*/&lt;/li&gt;
	&lt;li&gt;public BigDecimal getDec() {&lt;br/&gt;
+      * Gets the value of the &apos;dec&apos; field.&lt;br/&gt;
+      * @return The value.&lt;br/&gt;
+      */&lt;br/&gt;
+    public java.math.BigDecimal getDec() 
{
       return dec;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Sedec the value of the &apos;dec&apos; field.&lt;/li&gt;
	&lt;li&gt;* @param value the value to set.&lt;/li&gt;
	&lt;li&gt;*/&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder setDec(BigDecimal value) {&lt;/li&gt;
	&lt;li&gt;validate(fields()&lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt;, value);&lt;br/&gt;
+      * Sets the value of the &apos;dec&apos; field.&lt;br/&gt;
+      * @param value The value of &apos;dec&apos;.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
+      */&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder setDec(java.math.BigDecimal value) 
{
+      validate(fields()[9], value);
       this.dec = value;
-      fieldSetFlags()[8] = true;
+      fieldSetFlags()[9] = true;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     /**&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Checks whether the &apos;dec&apos; field has been set.&lt;/li&gt;
	&lt;li&gt;*/&lt;br/&gt;
+      * Checks whether the &apos;dec&apos; field has been set.&lt;br/&gt;
+      * @return True if the &apos;dec&apos; field has been set, false otherwise.&lt;br/&gt;
+      */&lt;br/&gt;
     public boolean hasDec() 
{
-      return fieldSetFlags()[8];
+      return fieldSetFlags()[9];
     }&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;     /**&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;* Clears the value of the &apos;dec&apos; field.&lt;/li&gt;
	&lt;li&gt;*/&lt;/li&gt;
	&lt;li&gt;public TestRecordWithLogicalTypes.Builder clearDec() {&lt;/li&gt;
	&lt;li&gt;fieldSetFlags()&lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt; = false;&lt;br/&gt;
+      * Clears the value of the &apos;dec&apos; field.&lt;br/&gt;
+      * @return This builder.&lt;br/&gt;
+      */&lt;br/&gt;
+    public org.apache.avro.specific.TestRecordWithLogicalTypes.Builder clearDec() 
{
+      dec = null;
+      fieldSetFlags()[9] = false;
       return this;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     @Override&lt;br/&gt;
+    @SuppressWarnings(&quot;unchecked&quot;)&lt;br/&gt;
     public TestRecordWithLogicalTypes build() {&lt;br/&gt;
       try &lt;/p&gt;
{
         TestRecordWithLogicalTypes record = new TestRecordWithLogicalTypes();
-        record.b = fieldSetFlags()[0] ? this.b : (java.lang.Boolean) defaultValue(fields()[0]);
-        record.i32 = fieldSetFlags()[1] ? this.i32 : (java.lang.Integer) defaultValue(fields()[1]);
-        record.i64 = fieldSetFlags()[2] ? this.i64 : (java.lang.Long) defaultValue(fields()[2]);
-        record.f32 = fieldSetFlags()[3] ? this.f32 : (java.lang.Float) defaultValue(fields()[3]);
-        record.f64 = fieldSetFlags()[4] ? this.f64 : (java.lang.Double) defaultValue(fields()[4]);
-        record.s = fieldSetFlags()[5] ? this.s : (java.lang.CharSequence) defaultValue(fields()[5]);
-        record.d = fieldSetFlags()[6] ? this.d : (org.joda.time.LocalDate) defaultValue(fields()[6]);
-        record.t = fieldSetFlags()[7] ? this.t : (org.joda.time.LocalTime) defaultValue(fields()[7]);
-        record.ts = fieldSetFlags()[8] ? this.ts : (org.joda.time.DateTime) defaultValue(fields()[8]);
-        record.dec = fieldSetFlags()[9] ? this.dec : (BigDecimal) defaultValue(fields()[9]);
+        record.b = fieldSetFlags()[0] ? this.b : (java.lang.Boolean) defaultValue(fields()[0], record.getConversion(0));
+        record.i32 = fieldSetFlags()[1] ? this.i32 : (java.lang.Integer) defaultValue(fields()[1], record.getConversion(1));
+        record.i64 = fieldSetFlags()[2] ? this.i64 : (java.lang.Long) defaultValue(fields()[2], record.getConversion(2));
+        record.f32 = fieldSetFlags()[3] ? this.f32 : (java.lang.Float) defaultValue(fields()[3], record.getConversion(3));
+        record.f64 = fieldSetFlags()[4] ? this.f64 : (java.lang.Double) defaultValue(fields()[4], record.getConversion(4));
+        record.s = fieldSetFlags()[5] ? this.s : (java.lang.CharSequence) defaultValue(fields()[5], record.getConversion(5));
+        record.d = fieldSetFlags()[6] ? this.d : (org.joda.time.LocalDate) defaultValue(fields()[6], record.getConversion(6));
+        record.t = fieldSetFlags()[7] ? this.t : (org.joda.time.LocalTime) defaultValue(fields()[7], record.getConversion(7));
+        record.ts = fieldSetFlags()[8] ? this.ts : (org.joda.time.DateTime) defaultValue(fields()[8], record.getConversion(8));
+        record.dec = fieldSetFlags()[9] ? this.dec : (java.math.BigDecimal) defaultValue(fields()[9], record.getConversion(9));
         return record;
-      }
&lt;p&gt; catch (Exception e) &lt;/p&gt;
{
+      }
&lt;p&gt; catch (org.apache.avro.AvroMissingFieldException e) &lt;/p&gt;
{
+        throw e;
+      }
&lt;p&gt; catch (java.lang.Exception e) &lt;/p&gt;
{
         throw new org.apache.avro.AvroRuntimeException(e);
       }
&lt;p&gt;     }&lt;br/&gt;
   }&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private static final org.apache.avro.io.DatumWriter&lt;/li&gt;
	&lt;li&gt;WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);&lt;br/&gt;
+  @SuppressWarnings(&quot;unchecked&quot;)&lt;br/&gt;
+  private static final org.apache.avro.io.DatumWriter&amp;lt;TestRecordWithLogicalTypes&amp;gt;&lt;br/&gt;
+    WRITER$ = (org.apache.avro.io.DatumWriter&amp;lt;TestRecordWithLogicalTypes&amp;gt;)MODEL$.createDatumWriter(SCHEMA$);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   @Override public void writeExternal(java.io.ObjectOutput out)&lt;br/&gt;
     throws java.io.IOException &lt;/p&gt;
{
-    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
+    WRITER$.write(this, SpecificData.getEncoder(out));
   }

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;private static final org.apache.avro.io.DatumReader&lt;/li&gt;
	&lt;li&gt;READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);&lt;br/&gt;
+  @SuppressWarnings(&quot;unchecked&quot;)&lt;br/&gt;
+  private static final org.apache.avro.io.DatumReader&amp;lt;TestRecordWithLogicalTypes&amp;gt;&lt;br/&gt;
+    READER$ = (org.apache.avro.io.DatumReader&amp;lt;TestRecordWithLogicalTypes&amp;gt;)MODEL$.createDatumReader(SCHEMA$);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   @Override public void readExternal(java.io.ObjectInput in)&lt;br/&gt;
     throws java.io.IOException &lt;/p&gt;
{
-    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
+    READER$.read(this, SpecificData.getDecoder(in));
   }

&lt;p&gt; }&lt;br/&gt;
diff --git a/lang/java/avro/src/test/resources/record_with_logical_types.avsc b/lang/java/avro/src/test/resources/record_with_logical_types.avsc&lt;br/&gt;
index f5d212917..48c6aded9 100644&lt;br/&gt;
&amp;#8212; a/lang/java/avro/src/test/resources/record_with_logical_types.avsc&lt;br/&gt;
+++ b/lang/java/avro/src/test/resources/record_with_logical_types.avsc&lt;br/&gt;
@@ -40,6 +40,14 @@&lt;br/&gt;
       &quot;type&quot; : &quot;long&quot;,&lt;br/&gt;
       &quot;logicalType&quot; : &quot;timestamp-millis&quot;&lt;br/&gt;
     }&lt;br/&gt;
+  }, {&lt;br/&gt;
+    &quot;name&quot; : &quot;dec&quot;,&lt;br/&gt;
+    &quot;type&quot; : &lt;/p&gt;
{
+      &quot;type&quot; : &quot;bytes&quot;,
+      &quot;logicalType&quot; : &quot;decimal&quot;,
+      &quot;precision&quot; : 9,
+      &quot;scale&quot; : 2
+    }
&lt;p&gt;   } ]&lt;br/&gt;
 }&lt;/p&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="13107742">AVRO-2090</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 3 Oct 2018 04:24:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            12 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3yron:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Based on Thiru&amp;#39;s input, the old generate code should stay in place because it&amp;#39;s there to test backward compatibility.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2236] Java Avro Default Value restrictions to first union type leaks to usage of record types</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2236</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Default values are restricted to being of the same type as the first type in a union.&#160;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
              {
                &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
                &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;ComplexValue&quot;&lt;/span&gt;,
                &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:
                [
                    {
                        &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;value&quot;&lt;/span&gt;,
                        &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:
                        [
                            &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;&quot;&lt;/span&gt;,
                            &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;
                        ],                        
                        &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt;: &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
                    }
                ]
            }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This works as documented. However, the restriction also applies to default values of this record type: &lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
{
    &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;ExampleRecord&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;com.example&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:
    [
        {
            &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;value1&quot;&lt;/span&gt;,
            &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:
            {
                &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
                &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;ComplexValue&quot;&lt;/span&gt;,
                &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;:
                [
                    {
                        &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;value&quot;&lt;/span&gt;,
                        &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;:
                        [
                            &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;&quot;&lt;/span&gt;,
                            &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;
                        ],
                        &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt;: &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
                    }
                ]
            }
        },
        {
            &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;value2&quot;&lt;/span&gt;,
            &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;ComplexValue&quot;&lt;/span&gt;,
            &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt;:
            {
                &lt;span class=&quot;code-quote&quot;&gt;&quot;value&quot;&lt;/span&gt;: 15
            }
        }
    ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this case the record &quot;ExampleRecord&quot; has a field &quot;value2&quot; of type &quot;ComplexType&quot;. This field is not optional but has a default to be able to read instance where this field is not present. &lt;/p&gt;

&lt;p&gt;During deserialization the following error is thrown: &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
org.apache.avro.AvroTypeException: Non-&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; value &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; type: 15

	at org.apache.avro.io.parsing.ResolvingGrammarGenerator.encode(ResolvingGrammarGenerator.java:413)
	at org.apache.avro.io.parsing.ResolvingGrammarGenerator.encode(ResolvingGrammarGenerator.java:365)
	at org.apache.avro.io.parsing.ResolvingGrammarGenerator.encode(ResolvingGrammarGenerator.java:335)
	at org.apache.avro.io.parsing.ResolvingGrammarGenerator.getBinary(ResolvingGrammarGenerator.java:307)
	at org.apache.avro.io.parsing.ResolvingGrammarGenerator.resolveRecords(ResolvingGrammarGenerator.java:285)
	at org.apache.avro.io.parsing.ResolvingGrammarGenerator.generate(ResolvingGrammarGenerator.java:118)
	at org.apache.avro.io.parsing.ResolvingGrammarGenerator.generate(ResolvingGrammarGenerator.java:50)
	at org.apache.avro.io.ResolvingDecoder.resolve(ResolvingDecoder.java:85)
	at org.apache.avro.io.ResolvingDecoder.&amp;lt;init&amp;gt;(ResolvingDecoder.java:49)
	at org.apache.avro.io.DecoderFactory.resolvingDecoder(DecoderFactory.java:307)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumReader.getResolver(GenericDatumReader.java:128)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumReader.read(GenericDatumReader.java:143)
	at com.example.SerializationTest.lambda$getDeserializer$1(SerializationTest.java:75)
	at com.example.SerializationTest.valueReadWithCorrectDefaultValue(SerializationTest.java:41)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I would argue that a concrete instance of &quot;ComplexValue&quot; with a specific value should be allowed in this case. I see no reason why the default restriction of the underlying schema should even apply. My guess is, that this is an unintended consequence of code reuse in the java client. &lt;/p&gt;

&lt;p&gt;I added an example gradle project as attachment. Run the tests to reproduce the above example. &lt;/p&gt;</description>
                <environment></environment>
        <key id="13189398">AVRO-2236</key>
            <summary>Java Avro Default Value restrictions to first union type leaks to usage of record types</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="Yspadadden">Mario Eberhard</reporter>
                        <labels>
                    </labels>
                <created>Thu, 4 Oct 2018 10:49:16 +0000</created>
                <updated>Thu, 4 Oct 2018 10:49:16 +0000</updated>
                                            <version>1.8.2</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                            <attachment id="12942370" name="avrodefaulttest.zip" size="86812" author="Yspadadden" created="Thu, 4 Oct 2018 10:46:06 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            15 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3ytqn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2237] Fixed type mismatch between Generic Datum Reader/Writer and Convertion</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2237</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Both the GenericDatumWriter and GenericDatumReader allow fixed values to be of type &quot;Object&quot;, as shown here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/avro/blob/54a79769987d78384899062b59d413412c577de3/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumWriter.java#L276&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/54a79769987d78384899062b59d413412c577de3/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumWriter.java#L276&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However the Conversion class only accepts &quot;GenericFixed&quot;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/avro/blob/master/lang/java/avro/src/main/java/org/apache/avro/Conversion.java#L104&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/master/lang/java/avro/src/main/java/org/apache/avro/Conversion.java#L104&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;This prevents using &quot;byte[]&quot; as the fixed type while keeping support for logical types at the same time.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13189488">AVRO-2237</key>
            <summary>Fixed type mismatch between Generic Datum Reader/Writer and Convertion</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="JeremieCurbside">Jeremie Pelletier</reporter>
                        <labels>
                    </labels>
                <created>Thu, 4 Oct 2018 16:58:52 +0000</created>
                <updated>Thu, 4 Oct 2018 16:58:52 +0000</updated>
                                            <version>1.8.2</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            15 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3yuan:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2238] Update Docker image from java to openjdk</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2238</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently the docker image to run the tests is still using java which is deprecated: &lt;a href=&quot;https://hub.docker.com/_/java/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hub.docker.com/_/java/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Therefore we should move to openjdk (&lt;a href=&quot;https://hub.docker.com/_/openjdk/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://hub.docker.com/_/openjdk/&lt;/a&gt;). Starting with version 8, and also adding 10 and 11 to it to make sure that Avro is compatible with future version of Java.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13189616">AVRO-2238</key>
            <summary>Update Docker image from java to openjdk</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="Fokko">Fokko Driesprong</assignee>
                                    <reporter username="Fokko">Fokko Driesprong</reporter>
                        <labels>
                    </labels>
                <created>Fri, 5 Oct 2018 01:11:06 +0000</created>
                <updated>Wed, 2 Jan 2019 13:20:39 +0000</updated>
                                                                            <component>docker</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="16684293" author="githubbot" created="Mon, 12 Nov 2018 19:36:03 +0000"  >&lt;p&gt;Fokko opened a new pull request #378: &lt;span class=&quot;error&quot;&gt;&amp;#91;WIP&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; Update Dockerfile base image from java to openjdk&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/378&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/378&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   &lt;a href=&quot;https://issues.apache.org/jira/projects/AVRO/issues/AVRO-2238&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/projects/AVRO/issues/AVRO-2238&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16684891" author="githubbot" created="Tue, 13 Nov 2018 08:44:54 +0000"  >&lt;p&gt;Fokko commented on issue #378: &lt;span class=&quot;error&quot;&gt;&amp;#91;WIP&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; Update Dockerfile base image from java to openjdk&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/378#issuecomment-438183369&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/378#issuecomment-438183369&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Hi @thiru-apache &lt;/p&gt;

&lt;p&gt;   I don&apos;t think you&apos;re doing anything wrong. The thing is that the old base image, is really old.&lt;/p&gt;

&lt;p&gt;   The new openjdk images is build on top of a newer version of Debian:&lt;br/&gt;
   ```&lt;br/&gt;
   MacBook-Pro-van-Fokko:avro fokkodriesprong$ docker run -t -i java:8-jdk bash&lt;br/&gt;
   root@9fd273407ac9:/# cat /etc/debian_version&lt;br/&gt;
   8.7&lt;/p&gt;

&lt;p&gt;   MacBook-Pro-van-Fokko:avro fokkodriesprong$ docker run -t -i openjdk:8 bash&lt;br/&gt;
   root@ef91dc01b7bd:/# cat /etc/debian_version&lt;br/&gt;
   9.5&lt;br/&gt;
   ```&lt;br/&gt;
   Where:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Debian 9 (stretch) &#8212; current stable release&lt;/li&gt;
	&lt;li&gt;Debian 8 (jessie) &#8212; obsolete stable release&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   With updating to Debian 9 we also get newer versions from Perl, Python, Javascript etc. So we need to check how much effort it is to fix this.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16684893" author="githubbot" created="Tue, 13 Nov 2018 08:45:55 +0000"  >&lt;p&gt;Fokko edited a comment on issue #378: &lt;span class=&quot;error&quot;&gt;&amp;#91;WIP&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; Update Dockerfile base image from java to openjdk&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/378#issuecomment-438183369&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/378#issuecomment-438183369&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Hi @thiru-apache &lt;/p&gt;

&lt;p&gt;   I don&apos;t think you&apos;re doing anything wrong. The thing is that the old base image, is really old.&lt;/p&gt;

&lt;p&gt;   The new openjdk images is build on top of a newer version of Debian:&lt;br/&gt;
   ```&lt;br/&gt;
   MacBook-Pro-van-Fokko:avro fokkodriesprong$ docker run -t -i java:8-jdk bash&lt;br/&gt;
   root@9fd273407ac9:/# cat /etc/debian_version&lt;br/&gt;
   8.7&lt;/p&gt;

&lt;p&gt;   MacBook-Pro-van-Fokko:avro fokkodriesprong$ docker run -t -i openjdk:8 bash&lt;br/&gt;
   root@ef91dc01b7bd:/# cat /etc/debian_version&lt;br/&gt;
   9.5&lt;br/&gt;
   ```&lt;br/&gt;
   Where:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Debian 9 (stretch) &#8212; current stable release&lt;/li&gt;
	&lt;li&gt;Debian 8 (jessie) &#8212; obsolete stable release&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   With updating to Debian 9 we also get newer versions from Perl, Python, Javascript etc. So we need to check how much effort it is to fix this. Please note that this is still Work in Progress `&lt;span class=&quot;error&quot;&gt;&amp;#91;WIP&amp;#93;&lt;/span&gt;`, so it isn&apos;t ready to merge.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16698290" author="jira-bot" created="Sun, 25 Nov 2018 20:59:35 +0000"  >&lt;p&gt;Commit 638794bd7ee06ea7c28d7c06358e5d9db67da8cd in avro&apos;s branch refs/heads/&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Fokko&quot; class=&quot;user-hover&quot; rel=&quot;Fokko&quot;&gt;Fokko Driesprong&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=638794b&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=638794b&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; Update Dockerfile base image from java to openjdk&lt;/p&gt;</comment>
                            <comment id="16698291" author="githubbot" created="Sun, 25 Nov 2018 21:00:23 +0000"  >&lt;p&gt;Fokko opened a new pull request #390: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; Move to up to OpenJDK image&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/390&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/390&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16698296" author="githubbot" created="Sun, 25 Nov 2018 21:03:52 +0000"  >&lt;p&gt;Fokko commented on issue #390: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; Move to up to OpenJDK image&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/390#issuecomment-441473031&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/390#issuecomment-441473031&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   @tjwp I think we&apos;ve updated the base image, which updated from Debian 8 (jessie) &#8212; obsolete stable release to Debian 9 (stretch) &#8212; current stable release. This also affected the version of Ruby, do you see any chance to fix the Ruby errors below? My ruby is a bit rust at the moment &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;   ```&lt;br/&gt;
   Bundle complete! 5 Gemfile dependencies, 11 gems now installed.&lt;br/&gt;
   Use `bundle info &lt;span class=&quot;error&quot;&gt;&amp;#91;gemname&amp;#93;&lt;/span&gt;` to see where a bundled gem is installed.&lt;br/&gt;
   /usr/bin/ruby2.3 -w -I&quot;lib:ext:bin:test&quot; -I&quot;/testptch/unknown/lang/ruby/.gem/gems/rake-12.3.1/lib&quot; &quot;/testptch/unknown/lang/ruby/.gem/gems/rake-12.3.1/lib/rake/rake_test_loader.rb&quot; &quot;test/test_logical_types.rb&quot; &quot;test/test_help.rb&quot; &quot;test/test_protocol.rb&quot; &quot;test/test_datafile.rb&quot; &quot;test/test_io.rb&quot; &quot;test/test_socket_transport.rb&quot; &quot;test/test_schema_normalization.rb&quot; &quot;test/test_schema_compatibility.rb&quot; &quot;test/test_schema_validator.rb&quot; &quot;test/test_fingerprints.rb&quot; &quot;test/test_schema.rb&quot; &lt;br/&gt;
   /testptch/unknown/lang/ruby/test/test_logical_types.rb:37: warning: ambiguous first argument; put parentheses or a space even after `-&apos; operator&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/io.rb:178: warning: assigned but unused variable - foo&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/io.rb:302: warning: assigned but unused variable - block_size&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/io.rb:321: warning: assigned but unused variable - block_size&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/io.rb:486: warning: `&amp;amp;&apos; interpreted as argument prefix&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/protocol.rb:72: warning: assigned but unused variable - type_objects&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/ipc.rb:198: warning: assigned but unused variable - response_metadata&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/ipc.rb:78: warning: possibly useless use of a literal in void context&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/ipc.rb:260: warning: assigned but unused variable - request_metadata&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/ipc.rb:90: warning: method redefined; discarding old remote_protocol=&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/ipc.rb:95: warning: method redefined; discarding old remote_hash=&lt;br/&gt;
   /testptch/unknown/lang/ruby/test/test_io.rb:185: warning: assigned but unused variable - schema&lt;br/&gt;
   /testptch/unknown/lang/ruby/test/test_io.rb:292: warning: assigned but unused variable - hex_encoding&lt;br/&gt;
   /testptch/unknown/lang/ruby/test/test_io.rb:317: warning: assigned but unused variable - hex_encoding&lt;br/&gt;
   /testptch/unknown/lang/ruby/test/test_io.rb:367: warning: assigned but unused variable - enc&lt;br/&gt;
   /testptch/unknown/lang/ruby/test/test_io.rb:367: warning: assigned but unused variable - dw&lt;br/&gt;
   /testptch/unknown/lang/ruby/test/test_schema.rb:280: warning: mismatched indentations at &apos;end&apos; with &apos;def&apos; at 277&lt;br/&gt;
   Loaded suite /testptch/unknown/lang/ruby/.gem/gems/rake-12.3.1/lib/rake/rake_test_loader&lt;br/&gt;
   Started&lt;br/&gt;
   ..................../testptch/unknown/lang/ruby/lib/avro/schema.rb:318: warning: too many arguments for format string&lt;br/&gt;
   .............................../testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   ./testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   ./testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   ./testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   ./testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   ./testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:189: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:193: warning: instance variable @name not initialized&lt;br/&gt;
   /testptch/unknown/lang/ruby/lib/avro/schema.rb:195: warning: instance variable @doc not initialized&lt;br/&gt;
   ```&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16698297" author="githubbot" created="Sun, 25 Nov 2018 21:04:24 +0000"  >&lt;p&gt;Fokko commented on issue #378: &lt;span class=&quot;error&quot;&gt;&amp;#91;WIP&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; Update Dockerfile base image from java to openjdk&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/378#issuecomment-441473064&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/378#issuecomment-441473064&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Closing in favor of &lt;a href=&quot;https://github.com/apache/avro/pull/390&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/390&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16698298" author="githubbot" created="Sun, 25 Nov 2018 21:04:27 +0000"  >&lt;p&gt;Fokko closed pull request #378: &lt;span class=&quot;error&quot;&gt;&amp;#91;WIP&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; Update Dockerfile base image from java to openjdk&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/378&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/378&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/share/docker/Dockerfile b/share/docker/Dockerfile&lt;br/&gt;
index ec8ac34f4..49f4f9080 100644&lt;br/&gt;
&amp;#8212; a/share/docker/Dockerfile&lt;br/&gt;
+++ b/share/docker/Dockerfile&lt;br/&gt;
@@ -17,7 +17,7 @@&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Dockerfile for installing the necessary dependencies for building Avro.&lt;/li&gt;
	&lt;li&gt;See BUILD.txt.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;-FROM java:8-jdk&lt;br/&gt;
+FROM openjdk:8&lt;/p&gt;

&lt;p&gt; WORKDIR /root&lt;/p&gt;

&lt;p&gt;@@ -28,6 +28,10 @@ RUN curl -sL &lt;a href=&quot;https://deb.nodesource.com/setup_4.x&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://deb.nodesource.com/setup_4.x&lt;/a&gt; | bash -&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Install dependencies from packages&lt;br/&gt;
 RUN apt-get -qq update &amp;amp;&amp;amp; \&lt;br/&gt;
+  apt-get -qq install software-properties-common apt-transport-https -y &amp;amp;&amp;amp; \&lt;br/&gt;
+  curl &lt;a href=&quot;https://packages.sury.org/php/apt.gpg&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://packages.sury.org/php/apt.gpg&lt;/a&gt; | apt-key add - &amp;amp;&amp;amp; \&lt;br/&gt;
+  echo &quot;deb &lt;a href=&quot;https://packages.sury.org/php/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://packages.sury.org/php/&lt;/a&gt; $(lsb_release -sc) main&quot; &amp;gt; /etc/apt/sources.list.d/php.list &amp;amp;&amp;amp; \&lt;br/&gt;
+  apt-get -qq update &amp;amp;&amp;amp; \&lt;br/&gt;
   apt-get -qq install --no-install-recommends -y \&lt;br/&gt;
     ant \&lt;br/&gt;
     asciidoc \&lt;br/&gt;
@@ -46,15 +50,14 @@ RUN apt-get -qq update &amp;amp;&amp;amp; \&lt;br/&gt;
     libglib2.0-dev \&lt;br/&gt;
     libjansson-dev \&lt;br/&gt;
     libsnappy-dev \&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;libsnappy1 \&lt;br/&gt;
     make \&lt;br/&gt;
     maven \&lt;br/&gt;
     mono-devel \&lt;br/&gt;
     nodejs \&lt;br/&gt;
     nunit \&lt;br/&gt;
     perl \&lt;/li&gt;
	&lt;li&gt;php5 \&lt;/li&gt;
	&lt;li&gt;php5-gmp \&lt;br/&gt;
+    php5.6 \&lt;br/&gt;
+    php5.6-gmp \&lt;br/&gt;
     phpunit \&lt;br/&gt;
     python \&lt;br/&gt;
     python-setuptools \&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16698732" author="githubbot" created="Mon, 26 Nov 2018 10:38:11 +0000"  >&lt;p&gt;tjwp commented on issue #390: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; Move to up to OpenJDK image&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/390#issuecomment-441593629&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/390#issuecomment-441593629&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   @Fokko I&apos;d love to get those warnings cleaned up but I don&apos;t think they are anything new. I usually test across ruby versions from 1.9.3 to 2.5.3 and get warnings from all of them but the tests still pass. Testing across all the ruby versions that Avro supports is something that I&apos;d also like to add to the build.&lt;/p&gt;

&lt;p&gt;   The ruby tests are passing for this build (from the Travis run for this PR): &lt;/p&gt;

&lt;p&gt;   ```&lt;br/&gt;
   Finished in 0.548804206 seconds.&lt;br/&gt;
   -------------------------------------------------------------------------------&lt;br/&gt;
   126 tests, 1221 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications&lt;br/&gt;
   100% passed&lt;br/&gt;
   -------------------------------------------------------------------------------&lt;br/&gt;
   229.59 tests/s, 2224.84 assertions/s&lt;br/&gt;
   ```&lt;/p&gt;

&lt;p&gt;   It looks like it is the start of the PHP tests that is failing:&lt;/p&gt;

&lt;p&gt;   ```&lt;br/&gt;
   EEEEEEEEEPHP Fatal error:  Declaration of SebastianBergmann\Comparator\DOMNodeComparator::assertEquals($expected, $actual, $delta = 0, $canonicalize = false, $ignoreCase = false) must be compatible with SebastianBergmann\Comparator\ObjectComparator::assertEquals($expected, $actual, $delta = 0, $canonicalize = false, $ignoreCase = false, array &amp;amp;$processed = Array) in /usr/share/php/SebastianBergmann/Comparator/DOMNodeComparator.php on line 110&lt;br/&gt;
   ```&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16698801" author="githubbot" created="Mon, 26 Nov 2018 11:16:52 +0000"  >&lt;p&gt;Fokko commented on issue #390: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; Move to up to OpenJDK image&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/390#issuecomment-441604445&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/390#issuecomment-441604445&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Thanks @tjwp You&apos;re right. The ruby stuff is only warnings. I&apos;ll look into the PHP. Cheers&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16715355" author="jira-bot" created="Mon, 10 Dec 2018 18:49:29 +0000"  >&lt;p&gt;Commit b4597aff0da39f58a018f92c4bdf3f9374c49e07 in avro&apos;s branch refs/heads/&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Fokko&quot; class=&quot;user-hover&quot; rel=&quot;Fokko&quot;&gt;Fokko Driesprong&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=b4597af&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=b4597af&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; Update Dockerfile base image from java to openjdk&lt;/p&gt;</comment>
                            <comment id="16719942" author="jira-bot" created="Thu, 13 Dec 2018 08:57:04 +0000"  >&lt;p&gt;Commit 4f8ea93b6e85c5a1563cdc5559f4c2e197c0b29c in avro&apos;s branch refs/heads/&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Fokko&quot; class=&quot;user-hover&quot; rel=&quot;Fokko&quot;&gt;Fokko Driesprong&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=4f8ea93&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=4f8ea93&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; Update Dockerfile base image from java to openjdk&lt;/p&gt;</comment>
                            <comment id="16732039" author="jira-bot" created="Wed, 2 Jan 2019 13:13:57 +0000"  >&lt;p&gt;Commit 4b6282d81090b0656362989a1500c90ffa86823d in avro&apos;s branch refs/heads/&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; from Fokko Driesprong&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=4b6282d&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=4b6282d&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2238&quot; title=&quot;Update Docker image from java to openjdk&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2238&quot;&gt;AVRO-2238&lt;/a&gt; Update Dockerfile base image from java to openjdk&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 Nov 2018 19:36:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3yv33:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2239] Fix interop tests</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2239</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently the interop tests are failing:&lt;/p&gt;

&lt;p&gt;/avro/lang/ruby/lib/avro/schema_validator.rb:127:in `validate_map&apos;: undefined method `keys&apos; for nil:NilClass (NoMethodError)&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/schema_validator.rb:103:in `validate_recursive&apos;&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/schema_validator.rb:156:in `block in validate_possible_types&apos;&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/schema_validator.rb:154:in `map&apos;&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/schema_validator.rb:154:in `validate_possible_types&apos;&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/schema_validator.rb:141:in `validate_union&apos;&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/schema_validator.rb:105:in `validate_recursive&apos;&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/schema_validator.rb:110:in `block in validate_recursive&apos;&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/schema_validator.rb:108:in `each&apos;&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/schema_validator.rb:108:in `validate_recursive&apos;&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/schema_validator.rb:67:in `validate!&apos;&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/schema.rb:97:in `validate&apos;&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/io.rb:503:in `write_data&apos;&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/io.rb:499:in `write&apos;&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/ipc.rb:136:in `write_handshake_request&apos;&lt;br/&gt;
	from /avro/lang/ruby/lib/avro/ipc.rb:105:in `request&apos;&lt;br/&gt;
	from lang/ruby/test/tool.rb:69:in `send_message&apos;&lt;br/&gt;
	from lang/ruby/test/tool.rb:137:in `main&apos;&lt;br/&gt;
	from lang/ruby/test/tool.rb:143:in `&amp;lt;main&amp;gt;&apos;&lt;/p&gt;</description>
                <environment></environment>
        <key id="13189737">AVRO-2239</key>
            <summary>Fix interop tests</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tjwp">Tim Perkins</assignee>
                                    <reporter username="Fokko">Fokko Driesprong</reporter>
                        <labels>
                    </labels>
                <created>Fri, 5 Oct 2018 15:42:02 +0000</created>
                <updated>Sun, 18 Nov 2018 17:06:31 +0000</updated>
                            <resolved>Sun, 18 Nov 2018 17:06:31 +0000</resolved>
                                                    <fixVersion>1.9.0</fixVersion>
                                    <component>interop</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="16685193" author="tjwp" created="Tue, 13 Nov 2018 13:26:52 +0000"  >&lt;p&gt;I can work on a fix for this.&lt;/p&gt;</comment>
                            <comment id="16685235" author="fokko" created="Tue, 13 Nov 2018 13:54:48 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tjwp&quot; class=&quot;user-hover&quot; rel=&quot;tjwp&quot;&gt;Tim Perkins&lt;/a&gt; Please do, I had to disable the tests for now: &lt;a href=&quot;https://github.com/apache/avro/blob/master/share/test/interop/bin/test_rpc_interop.sh#L37-L38&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/master/share/test/interop/bin/test_rpc_interop.sh#L37-L38&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="16688578" author="githubbot" created="Thu, 15 Nov 2018 20:05:13 +0000"  >&lt;p&gt;tjwp opened a new pull request #381: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2239&quot; title=&quot;Fix interop tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2239&quot;&gt;&lt;del&gt;AVRO-2239&lt;/del&gt;&lt;/a&gt;: Fix RPC interop tests for Ruby&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/381&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/381&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   This fixes &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2239&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-2239&lt;/a&gt; and re-enables RPC interop tests for Ruby.&lt;/p&gt;

&lt;p&gt;   The fix is to check that a datum is a Ruby Hash before validating it as a map.&lt;/p&gt;

&lt;p&gt;   The fix for this was already in &lt;a href=&quot;https://github.com/apache/avro/pull/230&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/230&lt;/a&gt;, but I can rebase that PR if this makes it to master first.&lt;/p&gt;


&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16688579" author="tjwp" created="Thu, 15 Nov 2018 20:06:14 +0000"  >&lt;p&gt;&lt;a href=&quot;https://github.com/apache/avro/pull/381&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/381&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="16690960" author="githubbot" created="Sun, 18 Nov 2018 17:05:44 +0000"  >&lt;p&gt;Fokko closed pull request #381: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2239&quot; title=&quot;Fix interop tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2239&quot;&gt;&lt;del&gt;AVRO-2239&lt;/del&gt;&lt;/a&gt;: Fix RPC interop tests for Ruby&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/381&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/381&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/ruby/lib/avro/schema_validator.rb b/lang/ruby/lib/avro/schema_validator.rb&lt;br/&gt;
index 67464fbfe..2117e92d4 100644&lt;br/&gt;
&amp;#8212; a/lang/ruby/lib/avro/schema_validator.rb&lt;br/&gt;
+++ b/lang/ruby/lib/avro/schema_validator.rb&lt;br/&gt;
@@ -130,6 +130,7 @@ def validate_array(expected_schema, datum, path, result)&lt;br/&gt;
       end&lt;/p&gt;

&lt;p&gt;       def validate_map(expected_schema, datum, path, result)&lt;br/&gt;
+        fail TypeMismatchError unless datum.is_a?(Hash)&lt;br/&gt;
         datum.keys.each do |k|&lt;br/&gt;
           result.add_error(path, &quot;unexpected key type &apos;#&lt;/p&gt;
{ruby_to_avro_type(k.class)}
&lt;p&gt;&apos; in map&quot;) unless k.is_a?(String)&lt;br/&gt;
         end&lt;br/&gt;
diff --git a/lang/ruby/test/test_schema_validator.rb b/lang/ruby/test/test_schema_validator.rb&lt;br/&gt;
index 93f2ca85b..e77569a31 100644&lt;br/&gt;
&amp;#8212; a/lang/ruby/test/test_schema_validator.rb&lt;br/&gt;
+++ b/lang/ruby/test/test_schema_validator.rb&lt;br/&gt;
@@ -301,6 +301,10 @@ def test_validate_map&lt;br/&gt;
     assert_failed_validation(&quot;at . unexpected key type &apos;Symbol&apos; in map&quot;) do&lt;br/&gt;
       validate!(schema, some: 1)&lt;br/&gt;
     end&lt;br/&gt;
+&lt;br/&gt;
+    assert_failed_validation(&apos;at . expected type map, got null&apos;) do&lt;br/&gt;
+      validate!(schema, nil)&lt;br/&gt;
+    end&lt;br/&gt;
   end&lt;/p&gt;

&lt;p&gt;   def test_validate_deep_record&lt;br/&gt;
diff --git a/share/test/interop/bin/test_rpc_interop.sh b/share/test/interop/bin/test_rpc_interop.sh&lt;br/&gt;
index f8ef7f5e8..3c9321bf8 100755&lt;br/&gt;
&amp;#8212; a/share/test/interop/bin/test_rpc_interop.sh&lt;br/&gt;
+++ b/share/test/interop/bin/test_rpc_interop.sh&lt;br/&gt;
@@ &lt;del&gt;29,15 +29,13 @@ java_server=&quot;java -jar lang/java/tools/target/avro-tools&lt;/del&gt;$VERSION.jar rpcreceive&lt;br/&gt;
 py_client=&quot;python lang/py/build/src/avro/tool.py rpcsend&quot;&lt;br/&gt;
 py_server=&quot;python lang/py/build/src/avro/tool.py rpcreceive&quot;&lt;/p&gt;

&lt;p&gt;-#ruby_client=&quot;ruby -rubygems -Ilang/ruby/lib lang/ruby/test/tool.rb rpcsend&quot;&lt;br/&gt;
-#ruby_server=&quot;ruby -rubygems -Ilang/ruby/lib lang/ruby/test/tool.rb rpcreceive&quot;&lt;br/&gt;
+ruby_client=&quot;ruby -rubygems -Ilang/ruby/lib lang/ruby/test/tool.rb rpcsend&quot;&lt;br/&gt;
+ruby_server=&quot;ruby -rubygems -Ilang/ruby/lib lang/ruby/test/tool.rb rpcreceive&quot;&lt;/p&gt;

&lt;p&gt; export PYTHONPATH=lang/py/build/src      # path to avro Python module&lt;/p&gt;

&lt;p&gt;-#clients=(&quot;$java_client&quot; &quot;$py_client&quot; &quot;$ruby_client&quot;)&lt;br/&gt;
-#servers=(&quot;$java_server&quot; &quot;$py_server&quot; &quot;$ruby_server&quot;)&lt;br/&gt;
-clients=(&quot;$java_client&quot; &quot;$py_client&quot;)&lt;br/&gt;
-servers=(&quot;$java_server&quot; &quot;$py_server&quot;)&lt;br/&gt;
+clients=(&quot;$java_client&quot; &quot;$py_client&quot; &quot;$ruby_client&quot;)&lt;br/&gt;
+servers=(&quot;$java_server&quot; &quot;$py_server&quot; &quot;$ruby_server&quot;)&lt;/p&gt;

&lt;p&gt; proto=share/test/schemas/simple.avpr&lt;/p&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16690961" author="jira-bot" created="Sun, 18 Nov 2018 17:05:48 +0000"  >&lt;p&gt;Commit fe6a2fc4c4178633d85d84657520967893f18aec in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=timperkins&quot; class=&quot;user-hover&quot; rel=&quot;timperkins&quot;&gt;Tim Perkins&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=fe6a2fc&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=fe6a2fc&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2239&quot; title=&quot;Fix interop tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2239&quot;&gt;&lt;del&gt;AVRO-2239&lt;/del&gt;&lt;/a&gt;: Fix RPC interop tests for Ruby (#381)&lt;/p&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 13 Nov 2018 13:26:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3yvtz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2240] egg_info fails for avro-python3 using python2</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2240</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;When managing dependencies, the ability to call egg_info on any package is especially useful (even if the package is not valid for installation with a specific python version).&lt;/p&gt;

&lt;p&gt;For example, pipenv can&apos;t build a lockfile in python2 if avro-python3 is listed as a dependency (for any python version)&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;The opposite works (using python3 to check the egg_info of avro (the python2 version).&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
$ python3 avro/setup.py egg_info
(succeeds)
$ python2 avro/setup.py egg_info
(succeeds)
$ python3 avro-python3/setup.py egg_info
(succeeds)
$ python2 avro-python3/setup.py egg_info
(fails)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It would be great if you didn&apos;t raise an assertion error for all usages of running setup.py, especially when running egg_info.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13190160">AVRO-2240</key>
            <summary>egg_info fails for avro-python3 using python2</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kojiromike">Michael A. Smith</assignee>
                                    <reporter username="luke-zymergen">Luke Zulauf</reporter>
                        <labels>
                    </labels>
                <created>Mon, 8 Oct 2018 17:42:14 +0000</created>
                <updated>Thu, 8 Nov 2018 17:52:14 +0000</updated>
                            <resolved>Wed, 7 Nov 2018 22:15:37 +0000</resolved>
                                    <version>1.8.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>python</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="16648666" author="githubbot" created="Sat, 13 Oct 2018 01:11:38 +0000"  >&lt;p&gt;kojiromike commented on a change in pull request #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#discussion_r224944855&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#discussion_r224944855&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/py3/setup.py&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -93,10 +94,9 @@ def SetupSources():&lt;br/&gt;
   )&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Make sure the avro shell script is executable:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;os.chmod(&lt;/li&gt;
	&lt;li&gt;path=os.path.join(py3_dir, &apos;scripts&apos;, &apos;avro&apos;),&lt;/li&gt;
	&lt;li&gt;mode=0o777,&lt;/li&gt;
	&lt;li&gt;)&lt;br/&gt;
+  script = os.path.join(py3_dir, &apos;scripts&apos;, &apos;avro&apos;)&lt;br/&gt;
+  os.chmod(script,&lt;br/&gt;
+           stat.S_IMODE(os.stat(script).st_mode) | stat.S_IXUSR | stat.S_IXGRP | stat.S_IXOTH)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; Review comment:&lt;br/&gt;
   I&apos;m not convinced this chmod is necessary at all, but this does what the comment says.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16665655" author="githubbot" created="Fri, 26 Oct 2018 20:46:32 +0000"  >&lt;p&gt;zymergen-luke commented on issue #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#issuecomment-433538489&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#issuecomment-433538489&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   What&apos;s the next step for this?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16665671" author="githubbot" created="Fri, 26 Oct 2018 21:06:43 +0000"  >&lt;p&gt;kojiromike commented on issue #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#issuecomment-433543533&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#issuecomment-433543533&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   I don&apos;t know. I&apos;m waiting for feedback from the py team...&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16667409" author="githubbot" created="Mon, 29 Oct 2018 16:24:14 +0000"  >&lt;p&gt;zymergen-luke commented on issue #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#issuecomment-433977148&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#issuecomment-433977148&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Should the PR be assigned some extra reviewers?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16667604" author="githubbot" created="Mon, 29 Oct 2018 18:58:05 +0000"  >&lt;p&gt;kojiromike commented on issue #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#issuecomment-434037122&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#issuecomment-434037122&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   @cutting @Fokko can you advise here, please? Who do we need to approve and merge this PR?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16667609" author="githubbot" created="Mon, 29 Oct 2018 19:04:11 +0000"  >&lt;p&gt;Fokko commented on a change in pull request #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#discussion_r229059331&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#discussion_r229059331&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/py3/setup.py&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -93,10 +94,9 @@ def SetupSources():&lt;br/&gt;
   )&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Make sure the avro shell script is executable:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;os.chmod(&lt;/li&gt;
	&lt;li&gt;path=os.path.join(py3_dir, &apos;scripts&apos;, &apos;avro&apos;),&lt;/li&gt;
	&lt;li&gt;mode=0o777,&lt;/li&gt;
	&lt;li&gt;)&lt;br/&gt;
+  script = os.path.join(py3_dir, &apos;scripts&apos;, &apos;avro&apos;)&lt;br/&gt;
+  os.chmod(script,&lt;br/&gt;
+           stat.S_IMODE(os.stat(script).st_mode) | stat.S_IXUSR | stat.S_IXGRP | stat.S_IXOTH)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; Review comment:&lt;br/&gt;
   Why is this needed?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16667610" author="githubbot" created="Mon, 29 Oct 2018 19:04:33 +0000"  >&lt;p&gt;Fokko commented on a change in pull request #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#discussion_r229059444&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#discussion_r229059444&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/py3/setup.py&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -145,6 +142,11 @@ def Main():&lt;br/&gt;
       license = &apos;Apache License 2.0&apos;,&lt;br/&gt;
       keywords = &apos;avro serialization rpc&apos;,&lt;br/&gt;
       url = &apos;http://avro.apache.org/&apos;,&lt;br/&gt;
+      classifiers=[&lt;br/&gt;
+          &apos;License :: OSI Approved :: Apache Software License&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3 :: Only&apos;,&lt;br/&gt;
+      ],&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   Can we be more explicit in the Python versions here? What version of Python 3.x are we going to support?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16667611" author="githubbot" created="Mon, 29 Oct 2018 19:04:38 +0000"  >&lt;p&gt;Fokko commented on issue #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#issuecomment-434039380&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#issuecomment-434039380&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   @kojiromike @zymergen-luke I&apos;d like to have #353 merged first. Still some issues with the tests of the custom encoders. Then we can rebase onto master, and run tests here as well.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16667669" author="githubbot" created="Mon, 29 Oct 2018 19:59:50 +0000"  >&lt;p&gt;kojiromike commented on a change in pull request #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#discussion_r229076544&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#discussion_r229076544&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/py3/setup.py&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -93,10 +94,9 @@ def SetupSources():&lt;br/&gt;
   )&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Make sure the avro shell script is executable:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;os.chmod(&lt;/li&gt;
	&lt;li&gt;path=os.path.join(py3_dir, &apos;scripts&apos;, &apos;avro&apos;),&lt;/li&gt;
	&lt;li&gt;mode=0o777,&lt;/li&gt;
	&lt;li&gt;)&lt;br/&gt;
+  script = os.path.join(py3_dir, &apos;scripts&apos;, &apos;avro&apos;)&lt;br/&gt;
+  os.chmod(script,&lt;br/&gt;
+           stat.S_IMODE(os.stat(script).st_mode) | stat.S_IXUSR | stat.S_IXGRP | stat.S_IXOTH)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; Review comment:&lt;br/&gt;
   @Fokko TBH I don&apos;t know why it is. I just wanted to correct the 0o777 which is certainly wrong. Happy to remove it if you prefer.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16667670" author="githubbot" created="Mon, 29 Oct 2018 20:00:10 +0000"  >&lt;p&gt;kojiromike commented on a change in pull request #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#discussion_r229076697&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#discussion_r229076697&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/py3/setup.py&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -145,6 +142,11 @@ def Main():&lt;br/&gt;
       license = &apos;Apache License 2.0&apos;,&lt;br/&gt;
       keywords = &apos;avro serialization rpc&apos;,&lt;br/&gt;
       url = &apos;http://avro.apache.org/&apos;,&lt;br/&gt;
+      classifiers=[&lt;br/&gt;
+          &apos;License :: OSI Approved :: Apache Software License&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3 :: Only&apos;,&lt;br/&gt;
+      ],&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   I don&apos;t know the answer to this. Who makes such a decision.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16667671" author="githubbot" created="Mon, 29 Oct 2018 20:00:16 +0000"  >&lt;p&gt;kojiromike commented on a change in pull request #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#discussion_r229076697&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#discussion_r229076697&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/py3/setup.py&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -145,6 +142,11 @@ def Main():&lt;br/&gt;
       license = &apos;Apache License 2.0&apos;,&lt;br/&gt;
       keywords = &apos;avro serialization rpc&apos;,&lt;br/&gt;
       url = &apos;http://avro.apache.org/&apos;,&lt;br/&gt;
+      classifiers=[&lt;br/&gt;
+          &apos;License :: OSI Approved :: Apache Software License&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3 :: Only&apos;,&lt;br/&gt;
+      ],&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   I don&apos;t know the answer to this. Who makes such a decision?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16667702" author="githubbot" created="Mon, 29 Oct 2018 20:20:08 +0000"  >&lt;p&gt;Fokko commented on a change in pull request #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#discussion_r229083044&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#discussion_r229083044&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/py3/setup.py&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -145,6 +142,11 @@ def Main():&lt;br/&gt;
       license = &apos;Apache License 2.0&apos;,&lt;br/&gt;
       keywords = &apos;avro serialization rpc&apos;,&lt;br/&gt;
       url = &apos;http://avro.apache.org/&apos;,&lt;br/&gt;
+      classifiers=[&lt;br/&gt;
+          &apos;License :: OSI Approved :: Apache Software License&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3 :: Only&apos;,&lt;br/&gt;
+      ],&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   The community. We can propose a VOTE on the mailing list to enforce a minimal version Python 3: &lt;a href=&quot;https://www.apache.org/foundation/voting.html#votes-on-code-modification&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://www.apache.org/foundation/voting.html#votes-on-code-modification&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16667705" author="githubbot" created="Mon, 29 Oct 2018 20:23:34 +0000"  >&lt;p&gt;kojiromike commented on a change in pull request #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#discussion_r229084160&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#discussion_r229084160&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/py3/setup.py&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -145,6 +142,11 @@ def Main():&lt;br/&gt;
       license = &apos;Apache License 2.0&apos;,&lt;br/&gt;
       keywords = &apos;avro serialization rpc&apos;,&lt;br/&gt;
       url = &apos;http://avro.apache.org/&apos;,&lt;br/&gt;
+      classifiers=[&lt;br/&gt;
+          &apos;License :: OSI Approved :: Apache Software License&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3 :: Only&apos;,&lt;br/&gt;
+      ],&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   I am OK with that, but get so little response from the dev ml that I am never actually sure if my posts land or not.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16667708" author="githubbot" created="Mon, 29 Oct 2018 20:25:11 +0000"  >&lt;p&gt;Fokko commented on a change in pull request #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#discussion_r229084661&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#discussion_r229084661&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/py3/setup.py&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -145,6 +142,11 @@ def Main():&lt;br/&gt;
       license = &apos;Apache License 2.0&apos;,&lt;br/&gt;
       keywords = &apos;avro serialization rpc&apos;,&lt;br/&gt;
       url = &apos;http://avro.apache.org/&apos;,&lt;br/&gt;
+      classifiers=[&lt;br/&gt;
+          &apos;License :: OSI Approved :: Apache Software License&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3 :: Only&apos;,&lt;br/&gt;
+      ],&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   A good idea is to add some kind of deadline. It is common with these vote processes to keep it open for 72 hours or so, after that, a decision is made.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16667712" author="githubbot" created="Mon, 29 Oct 2018 20:28:51 +0000"  >&lt;p&gt;scottbelden commented on a change in pull request #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#discussion_r229085965&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#discussion_r229085965&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/py3/setup.py&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -145,6 +142,11 @@ def Main():&lt;br/&gt;
       license = &apos;Apache License 2.0&apos;,&lt;br/&gt;
       keywords = &apos;avro serialization rpc&apos;,&lt;br/&gt;
       url = &apos;http://avro.apache.org/&apos;,&lt;br/&gt;
+      classifiers=[&lt;br/&gt;
+          &apos;License :: OSI Approved :: Apache Software License&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3 :: Only&apos;,&lt;br/&gt;
+      ],&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   One way to determine this is to look at the download data from pypi and see which versions of python people are using when they install this library. The results for the past 30 days are the following:&lt;/p&gt;

&lt;p&gt;   ```&lt;br/&gt;
   [&lt;br/&gt;
     &lt;/p&gt;
{
       &quot;python_version&quot;: &quot;3.5&quot;,
       &quot;download_count&quot;: &quot;30258&quot;
     }
&lt;p&gt;,&lt;br/&gt;
     &lt;/p&gt;
{
       &quot;python_version&quot;: &quot;3.6&quot;,
       &quot;download_count&quot;: &quot;26228&quot;
     }
&lt;p&gt;,&lt;br/&gt;
     &lt;/p&gt;
{
       &quot;python_version&quot;: &quot;3.4&quot;,
       &quot;download_count&quot;: &quot;9140&quot;
     }
&lt;p&gt;,&lt;br/&gt;
     &lt;/p&gt;
{
       &quot;python_version&quot;: &quot;3.7&quot;,
       &quot;download_count&quot;: &quot;2502&quot;
     }
&lt;p&gt;,&lt;br/&gt;
     &lt;/p&gt;
{
       &quot;python_version&quot;: null,
       &quot;download_count&quot;: &quot;793&quot;
     }
&lt;p&gt;,&lt;br/&gt;
     &lt;/p&gt;
{
       &quot;python_version&quot;: &quot;2.7&quot;,
       &quot;download_count&quot;: &quot;173&quot;
     }
&lt;p&gt;,&lt;/p&gt;
     {
       &quot;python_version&quot;: &quot;2.6&quot;,
       &quot;download_count&quot;: &quot;3&quot;
     }
&lt;p&gt;   ]&lt;br/&gt;
   ```&lt;/p&gt;

&lt;p&gt;   So it seems it is used commonly on 3.5+ and there is some use on 3.4. &lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16670195" author="githubbot" created="Wed, 31 Oct 2018 14:50:44 +0000"  >&lt;p&gt;kojiromike commented on a change in pull request #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#discussion_r229727138&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#discussion_r229727138&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/py3/setup.py&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -145,6 +142,11 @@ def Main():&lt;br/&gt;
       license = &apos;Apache License 2.0&apos;,&lt;br/&gt;
       keywords = &apos;avro serialization rpc&apos;,&lt;br/&gt;
       url = &apos;http://avro.apache.org/&apos;,&lt;br/&gt;
+      classifiers=[&lt;br/&gt;
+          &apos;License :: OSI Approved :: Apache Software License&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3 :: Only&apos;,&lt;br/&gt;
+      ],&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   I have posted to the dev list. It has not appeared on the archives yet. Please let me know if you saw my post. &lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16674217" author="githubbot" created="Sat, 3 Nov 2018 21:25:23 +0000"  >&lt;p&gt;kojiromike commented on a change in pull request #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#discussion_r230568303&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#discussion_r230568303&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/py3/setup.py&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -145,6 +151,16 @@ def Main():&lt;br/&gt;
       license = &apos;Apache License 2.0&apos;,&lt;br/&gt;
       keywords = &apos;avro serialization rpc&apos;,&lt;br/&gt;
       url = &apos;http://avro.apache.org/&apos;,&lt;br/&gt;
+      classifiers=(&lt;br/&gt;
+          &apos;License :: OSI Approved :: Apache Software License&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3 :: Only&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3.4&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3.5&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3.6&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3.7&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3.8&apos;,&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   I added the additional trove classifiers per &lt;span class=&quot;error&quot;&gt;&amp;#91;the non-discussion on the mailing list&amp;#93;&lt;/span&gt;(&lt;a href=&quot;https://mail-archives.apache.org/mod_mbox/avro-dev/201810.mbox/%3CCA%2BB44%2BC0MLQreV2tozd8GFv74qnyBT0%2B3rd44Ey29Gv4T_9%2B3Q%40mail.gmail.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://mail-archives.apache.org/mod_mbox/avro-dev/201810.mbox/%3CCA%2BB44%2BC0MLQreV2tozd8GFv74qnyBT0%2B3rd44Ey29Gv4T_9%2B3Q%40mail.gmail.com%3E&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16678351" author="githubbot" created="Wed, 7 Nov 2018 15:05:52 +0000"  >&lt;p&gt;Fokko commented on a change in pull request #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#discussion_r231541455&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#discussion_r231541455&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/py3/setup.py&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -93,10 +94,9 @@ def SetupSources():&lt;br/&gt;
   )&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Make sure the avro shell script is executable:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;os.chmod(&lt;/li&gt;
	&lt;li&gt;path=os.path.join(py3_dir, &apos;scripts&apos;, &apos;avro&apos;),&lt;/li&gt;
	&lt;li&gt;mode=0o777,&lt;/li&gt;
	&lt;li&gt;)&lt;br/&gt;
+  script = os.path.join(py3_dir, &apos;scripts&apos;, &apos;avro&apos;)&lt;br/&gt;
+  os.chmod(script,&lt;br/&gt;
+           stat.S_IMODE(os.stat(script).st_mode) | stat.S_IXUSR | stat.S_IXGRP | stat.S_IXOTH)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; Review comment:&lt;br/&gt;
   Please do!&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16678864" author="githubbot" created="Wed, 7 Nov 2018 22:15:32 +0000"  >&lt;p&gt;Fokko closed pull request #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/py3/setup.py b/lang/py3/setup.py&lt;br/&gt;
index 38f711798..c96e08f9c 100755&lt;br/&gt;
&amp;#8212; a/lang/py3/setup.py&lt;br/&gt;
+++ b/lang/py3/setup.py&lt;br/&gt;
@@ -1,4 +1,4 @@&lt;br/&gt;
-#!/usr/bin/env python3&lt;br/&gt;
+#!/usr/bin/env python&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;&lt;del&gt;&lt;b&gt;&lt;/del&gt; mode: python &lt;del&gt;&lt;/b&gt;&lt;/del&gt;&lt;/li&gt;
	&lt;li&gt;&lt;del&gt;&lt;b&gt;&lt;/del&gt; coding: utf-8 &lt;del&gt;&lt;/b&gt;&lt;/del&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;@@ -18,21 +18,26 @@&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;See the License for the specific language governing permissions and&lt;/li&gt;
	&lt;li&gt;limitations under the License.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;+&quot;&quot;&quot;&lt;br/&gt;
+Provide the code necessary for packaging and installing avro-python3.&lt;br/&gt;
+&lt;br/&gt;
+The avro-python3 software is designed for Python 3, but this file and the packaging software supports Python 2.7.&lt;br/&gt;
+&lt;br/&gt;
+&lt;a href=&quot;https://pypi.org/project/avro-python3/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://pypi.org/project/avro-python3/&lt;/a&gt;&lt;br/&gt;
+&quot;&quot;&quot;&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
 import os&lt;br/&gt;
 import shutil&lt;br/&gt;
+import stat&lt;br/&gt;
 import sys&lt;/p&gt;

&lt;p&gt; from setuptools import setup&lt;/p&gt;

&lt;p&gt;-&lt;br/&gt;
 VERSION_FILE_NAME = &apos;VERSION.txt&apos;&lt;br/&gt;
 LICENSE_FILE_NAME = &apos;LICENSE&apos;&lt;br/&gt;
 NOTICE_FILE_NAME = &apos;NOTICE&apos;&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;
	&lt;ol&gt;
		&lt;li&gt;The following prevents distutils from using hardlinks (which may not always be&lt;/li&gt;
		&lt;li&gt;available, e.g. on a Docker volume). See &lt;a href=&quot;http://bugs.python.org/issue8876&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://bugs.python.org/issue8876&lt;/a&gt;&lt;br/&gt;
-del os.link&lt;br/&gt;
-&lt;br/&gt;
 def RunsFromSourceDist():&lt;br/&gt;
   &quot;&quot;&quot;Tests whether setup.py is invoked from a source distribution.&lt;/li&gt;
	&lt;/ol&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -92,12 +97,6 @@ def SetupSources():&lt;br/&gt;
       dst=os.path.join(py3_dir, &apos;avro&apos;, &apos;tests&apos;, &apos;interop.avsc&apos;),&lt;br/&gt;
   )&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;# Make sure the avro shell script is executable:&lt;/li&gt;
	&lt;li&gt;os.chmod(&lt;/li&gt;
	&lt;li&gt;path=os.path.join(py3_dir, &apos;scripts&apos;, &apos;avro&apos;),&lt;/li&gt;
	&lt;li&gt;mode=0o777,&lt;/li&gt;
	&lt;li&gt;)&lt;br/&gt;
-&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; def ReadVersion():&lt;br/&gt;
   &quot;&quot;&quot;Returns: the content of the Avro version file.&quot;&quot;&quot;&lt;br/&gt;
@@ -110,9 +109,6 @@ def ReadVersion():&lt;/p&gt;


&lt;p&gt; def Main():&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;assert (sys.version_info&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; &amp;gt;= 3), \&lt;/li&gt;
	&lt;li&gt;(&apos;Python version &amp;gt;= 3 required, got %r&apos; % sys.version_info)&lt;br/&gt;
-&lt;br/&gt;
   if not RunsFromSourceDist():&lt;br/&gt;
     SetupSources()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -145,6 +141,16 @@ def Main():&lt;br/&gt;
       license = &apos;Apache License 2.0&apos;,&lt;br/&gt;
       keywords = &apos;avro serialization rpc&apos;,&lt;br/&gt;
       url = &apos;http://avro.apache.org/&apos;,&lt;br/&gt;
+      classifiers=(&lt;br/&gt;
+          &apos;License :: OSI Approved :: Apache Software License&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3 :: Only&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3.4&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3.5&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3.6&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3.7&apos;,&lt;br/&gt;
+          &apos;Programming Language :: Python :: 3.8&apos;,&lt;br/&gt;
+      ),&lt;br/&gt;
+      python_requires=&apos;&amp;gt;=3.4&apos;,&lt;br/&gt;
   )&lt;/p&gt;






&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16678865" author="jira-bot" created="Wed, 7 Nov 2018 22:15:34 +0000"  >&lt;p&gt;Commit 6527d6d1d5081d38168b9ea14bd7d715c5e2af8d in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kojiro&quot; class=&quot;user-hover&quot; rel=&quot;kojiro&quot;&gt;Michael A. Smith&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=6527d6d&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=6527d6d&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup (#347)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Make setup.py python2 compatible&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Indicate that avro-python3 is only python3 compatible without making the&lt;br/&gt;
setup script itself incompatible with python 2.&lt;/p&gt;

&lt;p&gt;Fix a bug with chmod in setup.py&lt;/p&gt;

&lt;p&gt;Add trove classifiers to setup.py&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Specify Python 3.4 and Up&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Lazy Consensus per the utter silence of &lt;a href=&quot;https://mail-archives.apache.org/mod_mbox/avro-dev/201810.mbox/%3CCA%2BB44%2BC0MLQreV2tozd8GFv74qnyBT0%2B3rd44Ey29Gv4T_9%2B3Q%40mail.gmail.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://mail-archives.apache.org/mod_mbox/avro-dev/201810.mbox/%3CCA%2BB44%2BC0MLQreV2tozd8GFv74qnyBT0%2B3rd44Ey29Gv4T_9%2B3Q%40mail.gmail.com%3E&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Remove Junk&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16678866" author="jira-bot" created="Wed, 7 Nov 2018 22:15:35 +0000"  >&lt;p&gt;Commit 6527d6d1d5081d38168b9ea14bd7d715c5e2af8d in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kojiro&quot; class=&quot;user-hover&quot; rel=&quot;kojiro&quot;&gt;Michael A. Smith&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=6527d6d&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=6527d6d&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup (#347)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Make setup.py python2 compatible&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Indicate that avro-python3 is only python3 compatible without making the&lt;br/&gt;
setup script itself incompatible with python 2.&lt;/p&gt;

&lt;p&gt;Fix a bug with chmod in setup.py&lt;/p&gt;

&lt;p&gt;Add trove classifiers to setup.py&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Specify Python 3.4 and Up&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Lazy Consensus per the utter silence of &lt;a href=&quot;https://mail-archives.apache.org/mod_mbox/avro-dev/201810.mbox/%3CCA%2BB44%2BC0MLQreV2tozd8GFv74qnyBT0%2B3rd44Ey29Gv4T_9%2B3Q%40mail.gmail.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://mail-archives.apache.org/mod_mbox/avro-dev/201810.mbox/%3CCA%2BB44%2BC0MLQreV2tozd8GFv74qnyBT0%2B3rd44Ey29Gv4T_9%2B3Q%40mail.gmail.com%3E&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Remove Junk&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16678867" author="jira-bot" created="Wed, 7 Nov 2018 22:15:37 +0000"  >&lt;p&gt;Commit 6527d6d1d5081d38168b9ea14bd7d715c5e2af8d in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kojiro&quot; class=&quot;user-hover&quot; rel=&quot;kojiro&quot;&gt;Michael A. Smith&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=6527d6d&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=6527d6d&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup (#347)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Make setup.py python2 compatible&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Indicate that avro-python3 is only python3 compatible without making the&lt;br/&gt;
setup script itself incompatible with python 2.&lt;/p&gt;

&lt;p&gt;Fix a bug with chmod in setup.py&lt;/p&gt;

&lt;p&gt;Add trove classifiers to setup.py&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Specify Python 3.4 and Up&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Lazy Consensus per the utter silence of &lt;a href=&quot;https://mail-archives.apache.org/mod_mbox/avro-dev/201810.mbox/%3CCA%2BB44%2BC0MLQreV2tozd8GFv74qnyBT0%2B3rd44Ey29Gv4T_9%2B3Q%40mail.gmail.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://mail-archives.apache.org/mod_mbox/avro-dev/201810.mbox/%3CCA%2BB44%2BC0MLQreV2tozd8GFv74qnyBT0%2B3rd44Ey29Gv4T_9%2B3Q%40mail.gmail.com%3E&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Remove Junk&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16679485" author="sireliah" created="Thu, 8 Nov 2018 09:20:14 +0000"  >&lt;p&gt;Oh, I guess It&apos;s too late to say something - I found this PR just this morning.&lt;/p&gt;

&lt;p&gt;Isn&apos;t the decision to use Python 3.4 too conservative? 3.4 was released on 2014 and I strongly believe that we should be as up-to-date as possible. 3.4 is used by around 13% of users as shown by Scott Belden and indeed this will shrink. At the same time we cannot use some of the features that seem obvious in Python 3 (f string formatting, etc.).&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;

&lt;p&gt;I think we should drop 3.4 (builds are passing for 3.5) support and focus on newer versions. We&apos;ll have to do it eventually anyway.&lt;/p&gt;</comment>
                            <comment id="16679490" author="githubbot" created="Thu, 8 Nov 2018 09:22:27 +0000"  >&lt;p&gt;sireliah commented on issue #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#issuecomment-436927460&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#issuecomment-436927460&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Oh no, it seems it&apos;s too late to vote! I left a comment here: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240?focusedCommentId=16679485&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-16679485&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-2240?focusedCommentId=16679485&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-16679485&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16679651" author="githubbot" created="Thu, 8 Nov 2018 11:48:54 +0000"  >&lt;p&gt;kojiromike commented on issue #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#issuecomment-436968335&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#issuecomment-436968335&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Hi, Piotr,&lt;/p&gt;

&lt;p&gt;   Could you please re-post your comment on the list? It seems like a better&lt;br/&gt;
   place for this discussion than the closed ticket.&lt;/p&gt;

&lt;p&gt;   On Thu, Nov 8, 2018 at 04:22 Piotr Go&#322;&#261;b &amp;lt;notifications@github.com&amp;gt; wrote:&lt;/p&gt;

&lt;p&gt;   &amp;gt; Oh no, it seems it&apos;s too late to vote! I left a comment here:&lt;br/&gt;
   &amp;gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240?focusedCommentId=16679485&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-16679485&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-2240?focusedCommentId=16679485&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-16679485&lt;/a&gt;&lt;br/&gt;
   &amp;gt;&lt;br/&gt;
   &amp;gt; &#8212;&lt;br/&gt;
   &amp;gt; You are receiving this because you were mentioned.&lt;br/&gt;
   &amp;gt; Reply to this email directly, view it on GitHub&lt;br/&gt;
   &amp;gt; &amp;lt;&lt;a href=&quot;https://github.com/apache/avro/pull/347#issuecomment-436927460&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#issuecomment-436927460&lt;/a&gt;&amp;gt;, or mute&lt;br/&gt;
   &amp;gt; the thread&lt;br/&gt;
   &amp;gt; &amp;lt;&lt;a href=&quot;https://github.com/notifications/unsubscribe-auth/ABfmX0vviGXvU2P8udO8OVQuJRYkZ5zjks5us_fTgaJpZM4XaYV0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/notifications/unsubscribe-auth/ABfmX0vviGXvU2P8udO8OVQuJRYkZ5zjks5us_fTgaJpZM4XaYV0&lt;/a&gt;&amp;gt;&lt;br/&gt;
   &amp;gt; .&lt;br/&gt;
   &amp;gt;&lt;/p&gt;


&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16680096" author="githubbot" created="Thu, 8 Nov 2018 17:52:14 +0000"  >&lt;p&gt;sireliah commented on issue #347: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2240&quot; title=&quot;egg_info fails for avro-python3 using python2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2240&quot;&gt;&lt;del&gt;AVRO-2240&lt;/del&gt;&lt;/a&gt; Fix py3 Setup&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/347#issuecomment-437094557&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/347#issuecomment-437094557&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Yeah, done. Sorry, I wasn&apos;t in the mailing list before.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 13 Oct 2018 01:11:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3yyfr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
