<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:18:47 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2013-5-28+AND+created+%3C%3D+2013-6-5+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="4" total="4"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1341] Allow controlling avro via java annotations when using reflection. </title>
                <link>https://issues.apache.org/jira/browse/AVRO-1341</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It would be great if one could control avro with java annotations. As of now, it is already possible to mark fields as Nullable or classes being encoded as a String. I propose a bigger set of annotations to control the behavior of avro on fields and classes. Such annotations have proven useful with jacksons json serialization and morphias mongoDB serialization.&lt;/p&gt;

&lt;p&gt;I propose the following additional annotations: &lt;br/&gt;
@AvroName(&quot;alternativeName&quot;)&lt;br/&gt;
@AvroAlias(alias=&quot;alias&quot;, space=&quot;space&quot;)&lt;br/&gt;
@AvroIgnore&lt;br/&gt;
@AvroMeta(key=&quot;K&quot;, value=&quot;V&quot;)&lt;br/&gt;
@AvroEncode(using=CustomEncoding.class)&lt;/p&gt;


&lt;p&gt;Java fields with the @AvroName(&quot;alternativeName&quot;) annotation will be renamed in the induced schema. When reading an avro file via reflection, the reflection reader will look for fields in the schema with &quot;alternativeName&quot;. &lt;br/&gt;
For example:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;   @AvroName(&lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt;)
   &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; bar;  
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;is serialized as&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  { &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt; } 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The @AvroAlias annotation will add a new alias to the induced schema of a record, enum or field. The space parameter is optional and defaults to the namespace of the named schema the alias is added to.&lt;/p&gt;

&lt;p&gt;Fields with the @AvroIgnore annotation will be treated as if they had a transient modifier, i.e. they will not be written to or read from avro files. &lt;/p&gt;

&lt;p&gt;The @AvroMeta(key=&quot;K&quot;, value=&quot;V&quot;) annotation allows you to store an arbitrary key : value pair at every node in the schema.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;   @AvroMeta(key=&lt;span class=&quot;code-quote&quot;&gt;&quot;fieldKey&quot;&lt;/span&gt;, value=&lt;span class=&quot;code-quote&quot;&gt;&quot;fieldValue&quot;&lt;/span&gt;)
   &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; foo;  
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;will create the following schema&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;fieldKey&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;fieldValue&quot;&lt;/span&gt; } 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Fields can be custom encoded with the AvroEncode(using=CustomEncoding.class) annotation. This annotation is a generalization of the @Stringable annotation. The @Stringable annotation is limited to classes with string argument constructors. Some classes can be similarly reduced to a smaller class or even a single primitive, but dont fit the requirements for @Stringable. A prominent example is java.util.Date, which instances can essentially be described with a single long. Such classes can now be encoded with a CustomEncoding, which reads and writes directly from the encoder/decoder. &lt;/p&gt;

&lt;p&gt;One simply extends the abstract CustomEncodings class by implementing a schema, a read method and a write method. A java field can then be annotated like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;@AvroEncode(using=DateAslongEncoding.class)
Date date;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The custom encoding implementation would look like &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;DateAsLongEncoding &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; CustomEncoding&amp;lt;Date&amp;gt; {
  {
    schema = Schema.create(Schema.Type.LONG);
    schema.addProp(&lt;span class=&quot;code-quote&quot;&gt;&quot;CustomEncoding&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;DateAsLongEncoding&quot;&lt;/span&gt;);
  }
  
  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void write(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; datum, Encoder out) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    out.writeLong(((Date)datum).getTime());
  }
  
  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Date read(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; reuse, Decoder in) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (reuse != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      ((Date)reuse).setTime(in.readLong());
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (Date)reuse;
    }
    &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Date(in.readLong());
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I implemented said annotations and a custom encoding for java.util.Date as a proof of concept and also extended the @Stringable annotations to fields.&lt;/p&gt;

&lt;p&gt;This issue is a followup of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1328&quot; title=&quot;Java: Additional annotations for reflection&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1328&quot;&gt;&lt;del&gt;AVRO-1328&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1330&quot; title=&quot;java: allow custom Encodings with annotations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1330&quot;&gt;&lt;del&gt;AVRO-1330&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12649704">AVRO-1341</key>
            <summary>Allow controlling avro via java annotations when using reflection. </summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vince83">Vincenz Priesnitz</assignee>
                                    <reporter username="vince83">Vincenz Priesnitz</reporter>
                        <labels>
                    </labels>
                <created>Tue, 28 May 2013 13:52:50 +0000</created>
                <updated>Tue, 28 Nov 2017 18:09:39 +0000</updated>
                            <resolved>Wed, 7 Aug 2013 23:17:03 +0000</resolved>
                                                    <fixVersion>1.7.5</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>5</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="13668317" author="vince83" created="Tue, 28 May 2013 14:01:43 +0000"  >&lt;p&gt;These two issue are very similar. I combined them into a single issue.&lt;/p&gt;</comment>
                            <comment id="13668320" author="vince83" created="Tue, 28 May 2013 14:04:10 +0000"  >&lt;p&gt;Please review this patch that resolves this issue. &lt;/p&gt;</comment>
                            <comment id="13675833" author="vince83" created="Wed, 5 Jun 2013 11:50:49 +0000"  >&lt;p&gt;fixed a bug.&lt;/p&gt;</comment>
                            <comment id="13697248" author="cutting" created="Mon, 1 Jul 2013 22:07:07 +0000"  >&lt;p&gt;Java&apos;s &quot;transient&quot; modifier is already equivalent to AvroIgnore.  We might additionally observe Java&apos;s Transient annotation.  With those, do we also need AvroIgnore?  Perhaps.&lt;/p&gt;

&lt;p&gt;With AvroEncoder I&apos;m concerned that folks can easily write data that doesn&apos;t conform to its declared schema, resulting in data that cannot be read.  We should add warnings to the documentation, starting it with &quot;Expert:&quot; and mentioning that use of ValidatingEncoder is recommended.  (For example, DataFileWriter#appendEncoded is labeled &quot;Expert&quot; since it also bypasses type safety.)&lt;/p&gt;

&lt;p&gt;So, with some updated javadoc, I&apos;d be happy to commit this.  Anyone object?&lt;/p&gt;</comment>
                            <comment id="13699189" author="vince83" created="Wed, 3 Jul 2013 17:13:21 +0000"  >&lt;p&gt;Thanks for reviewing the Patch. &lt;/p&gt;

&lt;p&gt;I think it is clearer if there was an extra Ignore Annotation for Avro. Also, the general java Annotations might collide with other Services that use Annotations. &lt;/p&gt;

&lt;p&gt;The AvroEncoder Annotation should indded only used by Experts; I will add such warnings. &lt;/p&gt;

&lt;p&gt;I&apos;d like to mention Issue &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1347&quot; title=&quot;Improve name and alias matching for named schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1347&quot;&gt;AVRO-1347&lt;/a&gt; here, which adds another Annotation for adding Aliases. &lt;/p&gt;</comment>
                            <comment id="13699250" author="cutting" created="Wed, 3 Jul 2013 17:52:50 +0000"  >&lt;p&gt;Perhaps the annotation from &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1347&quot; title=&quot;Improve name and alias matching for named schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1347&quot;&gt;AVRO-1347&lt;/a&gt; should be included here instead?&lt;/p&gt;</comment>
                            <comment id="13699458" author="vince83" created="Wed, 3 Jul 2013 21:26:19 +0000"  >&lt;p&gt;If noone objects, i will include Avro-1347 into this issue tomorrow. &lt;/p&gt;</comment>
                            <comment id="13700188" author="vince83" created="Thu, 4 Jul 2013 16:33:58 +0000"  >&lt;p&gt;Attached is a new patch with more JavaDocs, including warnings for using custom encodings.&lt;br/&gt;
I also moved the @AvroAlias annotation from issue &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1347&quot; title=&quot;Improve name and alias matching for named schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1347&quot;&gt;AVRO-1347&lt;/a&gt; here, but excluded the controversial writer aliases and added unit tests. It is now also possible to add an alias without a namespace.&lt;br/&gt;
This patch still contains the @AvroIgnore annotation, which I would really like to see committed.&lt;/p&gt;


</comment>
                            <comment id="13703883" author="cutting" created="Tue, 9 Jul 2013 22:14:16 +0000"  >&lt;p&gt;A few comments on the latest patch:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;newly added files are not included in the patch&lt;/li&gt;
	&lt;li&gt;&quot;&quot; would more naturally represent the top-level namespace (i.e., the empty namespace) and null the default namespace&lt;/li&gt;
	&lt;li&gt;javadoc comments on non-public classes will not be seen by users so are generally not provided&lt;/li&gt;
	&lt;li&gt;the 3-line addAlias() code in ReflectData is repeated 3 times, so might go in a new private method.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13704847" author="vince83" created="Wed, 10 Jul 2013 18:08:00 +0000"  >&lt;p&gt;Thank you for the feedback. &lt;br/&gt;
I updated the patch accordingly.&lt;/p&gt;</comment>
                            <comment id="13705128" author="cutting" created="Wed, 10 Jul 2013 21:56:49 +0000"  >&lt;p&gt;I modified the defaulting of alias namespaces. That logic is no longer in Schema.java but instead in AvroAlias.java and ReflectData.java.  I also added a space to the sentinel value so that it can never conflict with a valid namespace.&lt;/p&gt;

&lt;p&gt;Other than that, this looks good.&lt;/p&gt;</comment>
                            <comment id="13705129" author="cutting" created="Wed, 10 Jul 2013 21:57:10 +0000"  >&lt;p&gt;I&apos;ll commit this soon unless there are objections.&lt;/p&gt;</comment>
                            <comment id="13719893" author="cutting" created="Thu, 25 Jul 2013 18:40:35 +0000"  >&lt;p&gt;On second thought, I am now concerned that this could hurt performance.  &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1282&quot; title=&quot;Make use of the sun.misc.Unsafe class during serialization if a JDK supports it&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1282&quot;&gt;&lt;del&gt;AVRO-1282&lt;/del&gt;&lt;/a&gt; did a lot to improve reflect performance and we wouldn&apos;t want to harm that.&lt;/p&gt;

&lt;p&gt;This patch adds calls to isAnnotationPresent to readField() and writeField(), which are on the critical path.&lt;/p&gt;

&lt;p&gt;Can you please run Perf.java with and without this patch?  If performance is affected then I suggest we should make isCustomEncoded and isStringable boolean fields in FieldAccessor that are set when the field is constructed so that their access cost in readField() and writeField() is negligible.&lt;/p&gt;</comment>
                            <comment id="13720966" author="vince83" created="Fri, 26 Jul 2013 17:19:48 +0000"  >&lt;p&gt;You are right. The patch made record reading and writing take about twice as long. &lt;br/&gt;
Here is the reflection performance of the trunk: &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;                                                   test name     time    M entries/sec   M bytes/sec  bytes/cycle
                         ReflectRecordRead:   5646 ms       2.952       114.543        808498
                        ReflectRecordWrite:   3537 ms       4.711       182.822        808498
                      ReflectBigRecordRead:   6044 ms       1.654       101.558        767380
                     ReflectBigRecordWrite:   4222 ms       2.368       145.384        767380
                          ReflectFloatRead:   5519 ms       0.000       144.932       1000004
                         ReflectFloatWrite:   1210 ms       0.001       660.832       1000004
                         ReflectDoubleRead:   7310 ms       0.000       218.876       2000004
                        ReflectDoubleWrite:   2190 ms       0.000       730.585       2000004
                       ReflectIntArrayRead:   8980 ms       1.856        76.589        859709
                      ReflectIntArrayWrite:   2707 ms       6.156       254.031        859709
                      ReflectLongArrayRead:   4569 ms       1.824       140.991        805344
                     ReflectLongArrayWrite:   1781 ms       4.677       361.609        805344
                    ReflectDoubleArrayRead:   5396 ms       1.853       121.281        818144
                   ReflectDoubleArrayWrite:   1652 ms       6.051       396.060        818144
                     ReflectFloatArrayRead:   9788 ms       2.043        69.156        846172
                    ReflectFloatArrayWrite:   2309 ms       8.661       293.156        846172
               ReflectNestedFloatArrayRead:  11524 ms       1.735        58.738        846172
              ReflectNestedFloatArrayWrite:   4506 ms       4.438       150.199        846172
              ReflectNestedObjectArrayRead:   9895 ms       0.404        52.156        645104
             ReflectNestedObjectArrayWrite:   5745 ms       0.696        89.822        645104
          ReflectNestedLargeFloatArrayRead:   7262 ms       0.459       119.783       1087381
         ReflectNestedLargeFloatArrayWrite:   2006 ms       1.661       433.513       1087381
   ReflectNestedLargeFloatArrayBlockedRead:   7401 ms       0.450       119.034       1101357
  ReflectNestedLargeFloatArrayBlockedWrite:   4797 ms       0.695       183.666       1101357
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;With the patch applied: &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;                                                   test name     time    M entries/sec   M bytes/sec  bytes/cycle
                         ReflectRecordRead:   9332 ms       1.786        69.305        808498
                        ReflectRecordWrite:   7412 ms       2.248        87.252        808498
                      ReflectBigRecordRead:   9533 ms       1.049        64.392        767380
                     ReflectBigRecordWrite:   8132 ms       1.230        75.487        767380
                          ReflectFloatRead:   5432 ms       0.000       147.256       1000004
                         ReflectFloatWrite:   1172 ms       0.001       682.323       1000004
                         ReflectDoubleRead:   6885 ms       0.000       232.387       2000004
                        ReflectDoubleWrite:   2303 ms       0.000       694.613       2000004
                       ReflectIntArrayRead:   8244 ms       2.022        83.426        859709
                      ReflectIntArrayWrite:   2517 ms       6.619       273.148        859709
                      ReflectLongArrayRead:   4534 ms       1.838       142.076        805344
                     ReflectLongArrayWrite:   1729 ms       4.819       372.619        805344
                    ReflectDoubleArrayRead:   4999 ms       2.000       130.928        818144
                   ReflectDoubleArrayWrite:   1431 ms       6.985       457.167        818144
                     ReflectFloatArrayRead:   9139 ms       2.188        74.066        846172
                    ReflectFloatArrayWrite:   2401 ms       8.329       281.898        846172
               ReflectNestedFloatArrayRead:  12295 ms       1.627        55.056        846172
              ReflectNestedFloatArrayWrite:   4975 ms       4.020       136.058        846172
              ReflectNestedObjectArrayRead:  14627 ms       0.273        35.281        645104
             ReflectNestedObjectArrayWrite:  10045 ms       0.398        51.375        645104
          ReflectNestedLargeFloatArrayRead:   7315 ms       0.456       118.910       1087381
         ReflectNestedLargeFloatArrayWrite:   2029 ms       1.642       428.657       1087381
   ReflectNestedLargeFloatArrayBlockedRead:   7429 ms       0.449       118.597       1101357
  ReflectNestedLargeFloatArrayBlockedWrite:   5330 ms       0.625       165.280       1101357
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I added the proposed booleans to FieldAccessor and this improved performance almost back to prepatch:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;                                                   test name     time    M entries/sec   M bytes/sec  bytes/cycle
                         ReflectRecordRead:   6391 ms       2.607       101.189        808498
                        ReflectRecordWrite:   4180 ms       3.987       154.712        808498
                      ReflectBigRecordRead:   6276 ms       1.593        97.812        767380
                     ReflectBigRecordWrite:   4926 ms       2.030       124.610        767380
                          ReflectFloatRead:   5580 ms       0.000       143.356       1000004
                         ReflectFloatWrite:   1285 ms       0.001       622.420       1000004
                         ReflectDoubleRead:   6847 ms       0.000       233.657       2000004
                        ReflectDoubleWrite:   2325 ms       0.000       688.114       2000004
                       ReflectIntArrayRead:   7973 ms       2.090        86.252        859709
                      ReflectIntArrayWrite:   2760 ms       6.038       249.168        859709
                      ReflectLongArrayRead:   4720 ms       1.765       136.489        805344
                     ReflectLongArrayWrite:   1762 ms       4.728       365.527        805344
                    ReflectDoubleArrayRead:   5253 ms       1.903       124.587        818144
                   ReflectDoubleArrayWrite:   1637 ms       6.107       399.693        818144
                     ReflectFloatArrayRead:   9280 ms       2.155        72.942        846172
                    ReflectFloatArrayWrite:   2182 ms       9.163       310.143        846172
               ReflectNestedFloatArrayRead:  11072 ms       1.806        61.134        846172
              ReflectNestedFloatArrayWrite:   4058 ms       4.928       166.812        846172
              ReflectNestedObjectArrayRead:  11122 ms       0.360        46.399        645104
             ReflectNestedObjectArrayWrite:   6689 ms       0.598        77.152        645104
          ReflectNestedLargeFloatArrayRead:   7320 ms       0.455       118.834       1087381
         ReflectNestedLargeFloatArrayWrite:   1837 ms       1.814       473.434       1087381
   ReflectNestedLargeFloatArrayBlockedRead:   7383 ms       0.451       119.326       1101357
  ReflectNestedLargeFloatArrayBlockedWrite:   4839 ms       0.689       182.069       1101357
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Attached is a new patch with the improved performance.&lt;/p&gt;</comment>
                            <comment id="13720967" author="vince83" created="Fri, 26 Jul 2013 17:21:19 +0000"  >&lt;p&gt;Stored the existance of the annotations @Stringable and @AvroEncode of a field in the fieldaccessors.&lt;/p&gt;</comment>
                            <comment id="13732277" author="cutting" created="Wed, 7 Aug 2013 18:26:38 +0000"  >&lt;p&gt;Here&apos;s a version of the patch that preserves the logic path of the fast case, so performance is not affected.  It benchmarks equivalently to existing trunk.&lt;/p&gt;

&lt;p&gt;I&apos;ll commit this soon unless there are objections.&lt;/p&gt;</comment>
                            <comment id="13732907" author="jira-bot" created="Wed, 7 Aug 2013 23:16:59 +0000"  >&lt;p&gt;Commit 1511531 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1511531&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1511531&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1341&quot; title=&quot;Allow controlling avro via java annotations when using reflection. &quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1341&quot;&gt;&lt;del&gt;AVRO-1341&lt;/del&gt;&lt;/a&gt;. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz.&lt;/p&gt;</comment>
                            <comment id="13732909" author="cutting" created="Wed, 7 Aug 2013 23:17:03 +0000"  >&lt;p&gt;I committed this.  Thanks, Vincenz.&lt;/p&gt;</comment>
                            <comment id="13732988" author="hudson" created="Thu, 8 Aug 2013 00:17:38 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #390 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/390/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/390/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1341&quot; title=&quot;Allow controlling avro via java annotations when using reflection. &quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1341&quot;&gt;&lt;del&gt;AVRO-1341&lt;/del&gt;&lt;/a&gt;. Java: Add reflection annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode.  Contributed by Vincenz Priesnitz. (cutting: rev 1511531)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/Schema.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumReader.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/AvroAlias.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/AvroEncode.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/AvroIgnore.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/AvroMeta.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/AvroName.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/CustomEncoding.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/DateAsLongEncoding.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/FieldAccessReflect.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/FieldAccessUnsafe.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/FieldAccessor.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectData.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectDatumReader.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectDatumWriter.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/Stringable.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/package.html&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14393091" author="sunzhaonan" created="Thu, 2 Apr 2015 18:22:16 +0000"  >&lt;p&gt;Looks like @AvroMeta can&apos;t add reserved fields, like @AvroMeta(&quot;doc&quot;, &quot;some doc&quot;) will have exceptions.&lt;br/&gt;
Do we have a @AvroDoc or something similar to this?&lt;/p&gt;</comment>
                            <comment id="14393138" author="rdblue" created="Thu, 2 Apr 2015 18:40:54 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sunzhaonan&quot; class=&quot;user-hover&quot; rel=&quot;sunzhaonan&quot;&gt;Zhaonan Sun&lt;/a&gt;, there isn&apos;t an @AvroDoc annotation, but its a great idea. Could you open an issue to add it? It shouldn&apos;t be too much work, either.&lt;/p&gt;</comment>
                            <comment id="14394802" author="sunzhaonan" created="Fri, 3 Apr 2015 18:07:13 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdblue&quot; class=&quot;user-hover&quot; rel=&quot;rdblue&quot;&gt;Ryan Blue&lt;/a&gt; Added here &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1658&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/AVRO-1658&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15634677" author="lennygran" created="Thu, 3 Nov 2016 23:43:12 +0000"  >&lt;p&gt;IMO AvroAlias should be applicable to field as well as to the type.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310060">
                    <name>Container</name>
                                            <outwardlinks description="contains">
                                        <issuelink>
            <issuekey id="12647026">AVRO-1328</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12647717">AVRO-1330</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12788054">AVRO-1658</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="13121398">AVRO-2108</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12709773">AVRO-1498</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12496081">AVRO-739</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                            <outwardlinks description="supercedes">
                                        <issuelink>
            <issuekey id="12647026">AVRO-1328</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12647717">AVRO-1330</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12596684" name="AVRO-1341.patch" size="40604" author="cutting" created="Wed, 7 Aug 2013 18:26:38 +0000"/>
                            <attachment id="12594423" name="AVRO-1341.patch" size="40305" author="vince83" created="Fri, 26 Jul 2013 17:21:19 +0000"/>
                            <attachment id="12591739" name="AVRO-1341.patch" size="39650" author="cutting" created="Wed, 10 Jul 2013 21:56:49 +0000"/>
                            <attachment id="12591690" name="AVRO-1341.patch" size="39357" author="vince83" created="Wed, 10 Jul 2013 18:06:17 +0000"/>
                            <attachment id="12590910" name="AVRO-1341.patch" size="26163" author="vince83" created="Thu, 4 Jul 2013 16:34:21 +0000"/>
                            <attachment id="12586301" name="AVRO-1341.patch" size="33271" author="vince83" created="Wed, 5 Jun 2013 11:50:49 +0000"/>
                            <attachment id="12585031" name="AVRO-1341.patch" size="33278" author="vince83" created="Tue, 28 May 2013 14:04:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 1 Jul 2013 22:07:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>330031</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 11 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kxsn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>330366</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Added the java annotations @AvroName, @AvroIgnore, @AvroMeta, @AvroAlias and @AvroEncode to control the behavior of avro when using reflection. &lt;br/&gt;
&lt;br/&gt;
</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1342] ObjectCreator fails if bad assemblies loaded</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1342</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;When iterating over the list of assemblies in ObjectCreator.cs the GetTypes() call can fail with an exception if there is a load error on an assembly.  Currently this exception is propagated but really does not need to be.  I think a more reasonable approach is to note the error and then try the next assembly. &lt;/p&gt;</description>
                <environment>&lt;p&gt;Windows, Visual Studio&lt;/p&gt;</environment>
        <key id="12650230">AVRO-1342</key>
            <summary>ObjectCreator fails if bad assemblies loaded</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="davidtaylor">David Taylor</reporter>
                        <labels>
                    </labels>
                <created>Thu, 30 May 2013 22:02:52 +0000</created>
                <updated>Sat, 29 Jul 2017 18:51:01 +0000</updated>
                                            <version>1.7.4</version>
                                    <fixVersion>1.7.9</fixVersion>
                                    <component>csharp</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13670801" author="davidtaylor" created="Thu, 30 May 2013 22:07:02 +0000"  >&lt;p&gt;Attached is an example where the exception is caught and logged only.  Apologies for the gratuitous use of Linq. &lt;/p&gt;</comment>
                            <comment id="14086473" author="dk-apache" created="Tue, 5 Aug 2014 16:46:47 +0000"  >&lt;p&gt;alternative fix to this issue which doesn&apos;t introduce external dependencies and also collects the exceptions to report later if required&lt;/p&gt;</comment>
                            <comment id="14086479" author="dk-apache" created="Tue, 5 Aug 2014 16:54:34 +0000"  >&lt;p&gt;I would argue that it can actually be classified as a bug, and a fairly major one, because:&lt;/p&gt;

&lt;p&gt;a) it breaks the implicit contract of FindType method which accepts bool throwError as parameter and is not supposed to throw if it is set to false&lt;/p&gt;

&lt;p&gt;b) while it works with &quot;clean&quot; setup, it almost always throws in a &quot;real-life&quot; enterprise environment, for example when Avro is used in an Excel add-in which is hosted in Excel executable together with a few other add-ins targeting different .NET platforms - and thus makes it unusable&lt;/p&gt;

&lt;p&gt;I have submitted a patch which attempts to collect all exception information,  log it, and then re-throw but only if the type was not found and throwError was set to true. This handling also should have made redundant the hard-coded check for Mono, so I have removed it as well.&lt;/p&gt;

&lt;p&gt;Please could you review and include in the next release.&lt;/p&gt;</comment>
                            <comment id="14086551" author="cutting" created="Tue, 5 Aug 2014 17:56:51 +0000"  >&lt;p&gt;David, does Dmitry&apos;s patch fix things for you?&lt;/p&gt;

&lt;p&gt;Also, is it possible to add a unit test for this?&lt;/p&gt;</comment>
                            <comment id="14086567" author="davidtaylor" created="Tue, 5 Aug 2014 18:09:00 +0000"  >&lt;p&gt;It looks reasonable eyeballing it but I am running with modified 1.7.6 implementation at this point that allows replacing the default object creator so I no longer hit this code.&lt;/p&gt;</comment>
                            <comment id="14087463" author="dk-apache" created="Wed, 6 Aug 2014 09:41:33 +0000"  >&lt;p&gt;Yes I am also running on a modified 1.7.6 but so far my changes were minimal and general enough, so I saw it as a good moment to contribute them back and be able to run on official distribution w/o modifications. May I use this opportunity to get you guys to review also &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1556&quot; title=&quot;csharp PrimitiveSchema loses custom properties in WriteJson/ToString&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1556&quot;&gt;AVRO-1556&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1491&quot; title=&quot;Avro.ipc.dll not included in release zip/build file&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1491&quot;&gt;&lt;del&gt;AVRO-1491&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-843&quot; title=&quot;Provide support for .NET 3.5&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-843&quot;&gt;&lt;del&gt;AVRO-843&lt;/del&gt;&lt;/a&gt; - they are all very small and easy to check, but do fix important issues which otherwise make official distribution &quot;less likely&quot; to be used as is without having to change anything on source level. This issue, the three mentioned above and &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1555&quot; title=&quot;csharp IPC over HTTP support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1555&quot;&gt;&lt;del&gt;AVRO-1555&lt;/del&gt;&lt;/a&gt; together constitute all changes that I had to make to use C# Avro IPC in a production system with a fairly complex protocol.&lt;/p&gt;

&lt;p&gt;Re unit test for this one - it is not obvious immediately how to model this situation in a controlled way. I will try dynamically generating and loading an assembly which references a non-existent assembly and then calling objectreator - but this is likely to involve much more effort and code than the actual fix.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12659909" name="AVRO-1342-csharp-ObjectCreator-fix.patch" size="3604" author="dk-apache" created="Tue, 5 Aug 2014 16:46:47 +0000"/>
                            <attachment id="12585493" name="continue-on-exception.diff" size="2616" author="davidtaylor" created="Thu, 30 May 2013 22:07:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 5 Aug 2014 16:46:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>330557</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 24 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1l113:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>330891</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1343] Python: validate too permissive on records with extra fields</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1343</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Python&apos;s validator silently accepts (generic) records with extra fields and considers them valid.&lt;/p&gt;

&lt;p&gt;For example, &lt;tt&gt;io.validate&lt;/tt&gt; silently considers that the schema:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;{&quot;type&quot;: &quot;record&quot;,
 &quot;name&quot;: &quot;Test&quot;,
 &quot;fields&quot;: [{&quot;name&quot;: &quot;f&quot;, &quot;type&quot;: &quot;long&quot;}]}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;should accept records like:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;{&apos;f&apos;: 5, &apos;extra_field&apos;: &quot;abc&quot;}&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;but this is problematic.&lt;/p&gt;

&lt;p&gt;This is &lt;b&gt;especially&lt;/b&gt; problematic for encoding unions, because internally the Python serializer uses &lt;tt&gt;validate&lt;/tt&gt; to find the appropriate schema with which to encode a given object.&lt;/p&gt;

&lt;p&gt;In the current implementation, union schema selection is the &lt;b&gt;last&lt;/b&gt; schema that &lt;tt&gt;validate(schema, obj)&lt;/tt&gt; returns &lt;tt&gt;True&lt;/tt&gt; for.  If &lt;tt&gt;validate&lt;/tt&gt; isn&apos;t picky, this encoding will frequently guess wrong.&lt;/p&gt;

&lt;p&gt;I will attach two patches: one to the tests and one to the &lt;tt&gt;validate&lt;/tt&gt; function.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12650421">AVRO-1343</key>
            <summary>Python: validate too permissive on records with extra fields</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="trochee">Jeremy Kahn</assignee>
                                    <reporter username="trochee">Jeremy Kahn</reporter>
                        <labels>
                    </labels>
                <created>Fri, 31 May 2013 23:43:14 +0000</created>
                <updated>Fri, 29 Jan 2016 12:35:30 +0000</updated>
                                                            <fixVersion>1.9.0</fixVersion>
                                    <component>python</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13671903" author="trochee" created="Fri, 31 May 2013 23:46:12 +0000"  >&lt;p&gt;I hope these patches can be accepted into 1.7.5.&lt;/p&gt;</comment>
                            <comment id="13696985" author="cutting" created="Mon, 1 Jul 2013 17:27:33 +0000"  >&lt;p&gt;This seems like an incompatible change.  Folks could have applications that rely on extra fields being ignored and those applications would be broken by this change, no?&lt;/p&gt;

&lt;p&gt;Also, can you please provide an example for how this creates problems with unions?&lt;/p&gt;</comment>
                            <comment id="13697022" author="trochee" created="Mon, 1 Jul 2013 18:04:28 +0000"  >&lt;p&gt;It causes problems for unioned data in Python, because Python moves to generic data and then introspects the data with &lt;tt&gt;validate&lt;/tt&gt; to determine which union member to use to re-encode the data.&lt;/p&gt;

&lt;p&gt;Suppose I start with a schema:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;superset&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [ {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt; },
              {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;bar&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;} ] }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If I encode these two lines with a schema of &lt;em&gt;only&lt;/em&gt; &lt;tt&gt;superset&lt;/tt&gt; objects:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  {&lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt;: 99, &lt;span class=&quot;code-quote&quot;&gt;&quot;bar&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;banana&quot;&lt;/span&gt;}
  {&lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt;: -98, &lt;span class=&quot;code-quote&quot;&gt;&quot;bar&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;peaches&quot;&lt;/span&gt;}&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;the data is entirely recoverable.   But if I rewrite that datafile with a schema supporting a union of &lt;tt&gt;superset&lt;/tt&gt; and &lt;tt&gt;subset&lt;/tt&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;[{&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;superset&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [ {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt; },
              {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;bar&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;} ] },
 {&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;subset&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [ {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt; } ] }
]&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;the data will be re-encoded as &lt;tt&gt;subset&lt;/tt&gt; objects, silently effectively discarding the &lt;tt&gt;bar&lt;/tt&gt; field.&lt;/p&gt;

&lt;p&gt;This behavior seems fundamentally backwards-breaking &lt;em&gt;as unpatched&lt;/em&gt;, but here&apos;s a way we could rewrite it to only affect union member selection: I could rewrite the patch to pass an extra &lt;tt&gt;strict&lt;/tt&gt; optional (default &lt;tt&gt;False&lt;/tt&gt;) value to validate, and then to use that &lt;tt&gt;strict=True&lt;/tt&gt; value when doing union-member-selection.  This would, I believe, allow extra fields for simple records, but discard them when determining the correct member. &lt;/p&gt;

&lt;p&gt;Of course, someone might still be expecting to put things into Python unions with extra fields and depending on the schema to discard these, but I think anyone with that expected behavior would have encountered this bug already.&lt;/p&gt;</comment>
                            <comment id="13697081" author="cutting" created="Mon, 1 Jul 2013 19:10:11 +0000"  >&lt;p&gt;Thanks for elaborating.&lt;/p&gt;

&lt;p&gt;The intent is that the record name should be used when resolving unions of records.  The specification states:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Unions may not contain more than one schema with the same type, except for the named types record, fixed and enum. For example, unions containing two array types or two map types are not permitted, but two types with different names are permitted. (Names permit efficient resolution when reading and writing unions.)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is a longstanding bug in Avro Python, discussed in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-973&quot; title=&quot;Union behavior not consistent&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-973&quot;&gt;AVRO-973&lt;/a&gt; and elsewhere.  It&apos;s also a performance killer.  I&apos;d rather fix this underlying bug.  &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-283&quot; title=&quot;Change the new Python implementation from dictionaries to objects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-283&quot;&gt;AVRO-283&lt;/a&gt; is the closest thing we have to a fix.&lt;/p&gt;</comment>
                            <comment id="13697087" author="trochee" created="Mon, 1 Jul 2013 19:19:36 +0000"  >&lt;p&gt;I&apos;d be delighted to see &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-283&quot; title=&quot;Change the new Python implementation from dictionaries to objects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-283&quot;&gt;AVRO-283&lt;/a&gt; move forward. Python objects (especially if they support a &lt;tt&gt;toGeneric&lt;/tt&gt;) would work for me, though they make the conversion to JSON somewhat more difficult. (Not much, though).&lt;/p&gt;

&lt;p&gt;An approach that could resolve this dilemma is to move the Python system to require that the &quot;generic&quot; Python include type-name information (same as Java&apos;s &lt;tt&gt;toJson&lt;/tt&gt;) and require users to cope with (and include) the type hints when they appear in the generics.&lt;/p&gt;</comment>
                            <comment id="14145034" author="virtuald" created="Tue, 23 Sep 2014 17:05:08 +0000"  >&lt;p&gt;It would be good to fix this, we didn&apos;t realize it was so permissive until we lost 3 hours to a typo in a field name. Additionally, the validation code as-is is pretty terrible when you&apos;re trying to figure out which field is wrong in complex structures. We actually subclass DatumWriter and replace the validate function with a custom function because of this issue. I could contribute a patch, but there doesn&apos;t appear to be activity on the python version of avro in awhile.&lt;/p&gt;</comment>
                            <comment id="14145098" author="cutting" created="Tue, 23 Sep 2014 17:39:03 +0000"  >&lt;p&gt;Please contribute a patch.  I will commit patches that look reasonable, folks say they work, include tests, etc.&lt;/p&gt;

&lt;p&gt;If someone contributes more than a few patches that are committed then they&apos;ll be invited to become a committer and they can commit Python patches more rapidly.&lt;/p&gt;

&lt;p&gt;Please also comment on any existing patches that you feel ought to be committed.&lt;/p&gt;</comment>
                            <comment id="14145309" author="virtuald" created="Tue, 23 Sep 2014 19:40:09 +0000"  >&lt;p&gt;Thanks Doug. &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1545&quot; title=&quot;python bindings for avro discard customized type information for primitive types&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1545&quot;&gt;&lt;del&gt;AVRO-1545&lt;/del&gt;&lt;/a&gt; is one that has been sitting in the queue for awhile. I&apos;ll post the validation patch also. &lt;/p&gt;</comment>
                            <comment id="14248879" author="porterjamesj" created="Tue, 16 Dec 2014 20:37:40 +0000"  >&lt;p&gt;Would love to see this fixed; it&apos;s biting us too.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12534646">AVRO-973</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12444607">AVRO-283</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12585683" name="AVRO-1343-tests.patch" size="1620" author="trochee" created="Fri, 31 May 2013 23:45:50 +0000"/>
                            <attachment id="12585684" name="AVRO-1343-validate.patch" size="1139" author="trochee" created="Fri, 31 May 2013 23:45:50 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 1 Jul 2013 17:27:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>330748</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 5 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1l27b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>331081</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1344] Avro(Key|KeyValue)OutputFormat: Expose sync interval configuration</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1344</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;This issue is exactly like &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-719&quot; title=&quot;AvroOutputFormat: Expose sync interval configuration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-719&quot;&gt;&lt;del&gt;AVRO-719&lt;/del&gt;&lt;/a&gt;, but for the new mapreduce API.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12650901">AVRO-1344</key>
            <summary>Avro(Key|KeyValue)OutputFormat: Expose sync interval configuration</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="robair">Rob Turner</assignee>
                                    <reporter username="fsaintjacques">Francois Saint-Jacques</reporter>
                        <labels>
                    </labels>
                <created>Tue, 4 Jun 2013 15:32:35 +0000</created>
                <updated>Thu, 23 Jan 2014 21:58:57 +0000</updated>
                            <resolved>Fri, 13 Dec 2013 23:50:39 +0000</resolved>
                                    <version>1.7.5</version>
                                    <fixVersion>1.7.6</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13835073" author="robair" created="Thu, 28 Nov 2013 20:47:13 +0000"  >&lt;p&gt;Please review this patch that resolves this issue.&lt;/p&gt;</comment>
                            <comment id="13846901" author="cutting" created="Thu, 12 Dec 2013 23:20:10 +0000"  >&lt;p&gt;This looks reasonable but needs to add unit tests before we can commit it.  Thanks!&lt;/p&gt;</comment>
                            <comment id="13847336" author="robair" created="Fri, 13 Dec 2013 09:30:30 +0000"  >&lt;p&gt;I had done the unit  tests but failed to include them in the patch, attached is the patch that includes them.&lt;/p&gt;</comment>
                            <comment id="13848071" author="jira-bot" created="Fri, 13 Dec 2013 23:50:23 +0000"  >&lt;p&gt;Commit 1550852 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1550852&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1550852&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1344&quot; title=&quot;Avro(Key|KeyValue)OutputFormat: Expose sync interval configuration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1344&quot;&gt;&lt;del&gt;AVRO-1344&lt;/del&gt;&lt;/a&gt;. Java: Expose sync interval configuration in mapreduce API.  Contributed by Rob Turner.&lt;/p&gt;</comment>
                            <comment id="13848072" author="cutting" created="Fri, 13 Dec 2013 23:50:39 +0000"  >&lt;p&gt;I committed this.  Thanks, Rob!&lt;/p&gt;</comment>
                            <comment id="13848170" author="hudson" created="Sat, 14 Dec 2013 02:32:26 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #407 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/407/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/407/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1344&quot; title=&quot;Avro(Key|KeyValue)OutputFormat: Expose sync interval configuration&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1344&quot;&gt;&lt;del&gt;AVRO-1344&lt;/del&gt;&lt;/a&gt;. Java: Expose sync interval configuration in mapreduce API.  Contributed by Rob Turner. (cutting: rev 1550852)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/src/main/java/org/apache/avro/mapreduce/AvroKeyOutputFormat.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/src/main/java/org/apache/avro/mapreduce/AvroKeyRecordWriter.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/src/main/java/org/apache/avro/mapreduce/AvroKeyValueOutputFormat.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/src/main/java/org/apache/avro/mapreduce/AvroKeyValueRecordWriter.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/src/main/java/org/apache/avro/mapreduce/AvroOutputFormatBase.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyOutputFormat.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12618562" name="AVRO-1344.patch" size="13155" author="robair" created="Fri, 13 Dec 2013 09:30:30 +0000"/>
                            <attachment id="12616308" name="AVRO-1344.patch" size="8848" author="robair" created="Thu, 28 Nov 2013 20:47:12 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 28 Nov 2013 20:47:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>331228</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 6 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1l55r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>331561</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
