<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:25:32 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2017-9-13+AND+created+%3C%3D+2017-9-20+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="3" total="3"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-2076] Combine already serialized Avro records to an Avro file</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2076</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;In some use cases Avro events arrive already serialized (e.g. when listening to a Kafka topic). It would be great if there would an API that allows writing an Avro file without the need for deserializing and serializing these Avro records.&lt;/p&gt;

&lt;p&gt;Providing such an API allows for very efficient creation of Avro files: given that these Avro records are written with the same schema, an Avro file would write will the exact same bytes anyway (before block compression).&lt;/p&gt;</description>
                <environment></environment>
        <key id="13102222">AVRO-2076</key>
            <summary>Combine already serialized Avro records to an Avro file</summary>
                <type id="5" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Wish</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="erikvanoosten">Erik van Oosten</reporter>
                        <labels>
                    </labels>
                <created>Thu, 14 Sep 2017 12:01:45 +0000</created>
                <updated>Fri, 15 Sep 2017 06:47:51 +0000</updated>
                            <resolved>Fri, 15 Sep 2017 06:47:51 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="16166858" author="cutting" created="Thu, 14 Sep 2017 19:29:35 +0000"  >&lt;p&gt;Doesn&apos;t DataFileWriter#appendEncoded() already provide this?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://avro.apache.org/docs/1.8.2/api/java/org/apache/avro/file/DataFileWriter.html#appendEncoded(java.nio.ByteBuffer&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://avro.apache.org/docs/1.8.2/api/java/org/apache/avro/file/DataFileWriter.html#appendEncoded(java.nio.ByteBuffer&lt;/a&gt;)&lt;/p&gt;</comment>
                            <comment id="16167422" author="erikvanoosten" created="Fri, 15 Sep 2017 06:47:20 +0000"  >&lt;p&gt;Awesome! Thanks Doug. Somehow I missed that method.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 14 Sep 2017 19:29:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 18 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3k29r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2077] Avro tools should have an option to check reader-writer compatibility</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2077</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It seems that avro-tools doesn&apos;t have any option to check for a given Avro file and a given reader schema (JSON file or URL) that the reader&apos;s schema is compatible with the writer&apos;s schema. This tool should report every compatibility problem (if there&apos;s any).&lt;/p&gt;

&lt;p&gt;According my knowledge, there&apos;s no such option for avro-tools as of now.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13102940">AVRO-2077</key>
            <summary>Avro tools should have an option to check reader-writer compatibility</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="nkollar">Nandor Kollar</assignee>
                                    <reporter username="nkollar">Nandor Kollar</reporter>
                        <labels>
                    </labels>
                <created>Mon, 18 Sep 2017 12:05:04 +0000</created>
                <updated>Mon, 29 Jan 2018 14:24:23 +0000</updated>
                                                            <fixVersion>1.9.0</fixVersion>
                                    <component>java</component>
                    <component>tools</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="16176419" author="busbey" created="Fri, 22 Sep 2017 13:31:39 +0000"  >&lt;p&gt;this would be great! if we can make it work on earlier release lines that would be even better.&lt;/p&gt;</comment>
                            <comment id="16176463" author="howellbridger" created="Fri, 22 Sep 2017 14:00:23 +0000"  >&lt;p&gt;Would it be strange to make this tool bidirectional? I frequently find myself in situations where I&apos;ve got two schemas and want to know how they are related.&lt;/p&gt;

&lt;p&gt;In the minimal case it might viewed something like:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;// B can read data written by A
A -&amp;gt; B [A-to-B Compatible]

// A can read data written by B
A &amp;lt;- B [B-to-A Compatible]

// A and read can read each other
A == B [Fully Compatible]

// A and B are incompatible
A =/= B [Incompatible]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The idea could be expanded on to try to show &lt;em&gt;why&lt;/em&gt; one schema couldn&apos;t read the other in one direction.&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;// A can read B, because it shares all of B&apos;s fields, but B can&apos;t read A because it has an extra field &quot;x&quot; of type &quot;int&quot;
A:              B:
[common]     &amp;lt;= [common]
field x: int
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="16189672" author="nkollar" created="Tue, 3 Oct 2017 12:54:57 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=howellbridger&quot; class=&quot;user-hover&quot; rel=&quot;howellbridger&quot;&gt;Bridger Howell&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1933&quot; title=&quot;SchemaCompatibility class could be more user-friendly about incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1933&quot;&gt;&lt;del&gt;AVRO-1933&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2003&quot; title=&quot;Report specific location of schema incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2003&quot;&gt;&lt;del&gt;AVRO-2003&lt;/del&gt;&lt;/a&gt; provides details about incompatibilities between reader and writer schemas. It seems that there&apos;s no tool in avro-tools to display these for a given file and a (reader) schema, with this Jira I wanted to address this gap: &lt;tt&gt;schemaCompatTool input_Avro_file reader_schema_file&lt;/tt&gt;. This can be made bi-directional, but I don&apos;t see any point for checking if a given (writer) schema present in an existing Avro file could be used to as reader schema.&lt;/p&gt;

&lt;p&gt;For your case, I&apos;d create an other tool with different parameters: &lt;tt&gt;mutualSchemaCompatTool schema_1 schema_2&lt;/tt&gt; (either URLs or files with Avro JSON schema), and it would list the bi-directional compatibility (which could be implemented as part of this Jira too). How about this approach?&lt;/p&gt;</comment>
                            <comment id="16189703" author="howellbridger" created="Tue, 3 Oct 2017 13:29:18 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkollar&quot; class=&quot;user-hover&quot; rel=&quot;nkollar&quot;&gt;Nandor Kollar&lt;/a&gt; I see your point. I see some value to having a general &quot;compatibility tool&quot; with syntax like&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;schemaCompatTool [--data &amp;lt;data-file&amp;gt; | &amp;lt;schema-location&amp;gt;] &amp;lt;schema-location&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Where the tool assumes if you provide an avro data file that you only want to read from it, and otherwise checks mutual compatibility.&lt;/p&gt;

&lt;p&gt;Of course&lt;/p&gt;</comment>
                            <comment id="16189706" author="howellbridger" created="Tue, 3 Oct 2017 13:31:48 +0000"  >&lt;p&gt;Finishing my last comment (whoops): &lt;/p&gt;

&lt;p&gt;Of course there&apos;s a downside of trying to generalize too many special cases together.&lt;br/&gt;
So if we just want to avoid edge cases, I&apos;m fine with your suggestion. There&apos;s some benefit to having many specialized tools instead of a few swiss knives.&lt;/p&gt;</comment>
                            <comment id="16189811" author="nkollar" created="Tue, 3 Oct 2017 14:57:35 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=howellbridger&quot; class=&quot;user-hover&quot; rel=&quot;howellbridger&quot;&gt;Bridger Howell&lt;/a&gt; I like the idea you proposed! Let me think about the details, but I think with these additional options would work nicely!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 22 Sep 2017 13:31:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 15 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3k6nz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2078] Avro does not enforce schema resolution rules for Decimal type</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2078</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;According to &lt;a href=&quot;http://avro.apache.org/docs/1.8.2/spec.html#Decimal&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/1.8.2/spec.html#Decimal&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;For the purposes of schema resolution, two schemas that are &lt;tt&gt;decimal&lt;/tt&gt; logical types &lt;em&gt;match&lt;/em&gt; if their scales and precisions match.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is not enforced.&lt;/p&gt;

&lt;p&gt;I wrote a file with (precision 5, scale 2) and tried to read it with a reader schema with (precision 3, scale 1). I expected an AvroTypeException to be thrown, but none was thrown.&lt;/p&gt;

&lt;p&gt;Test data file attached. The code to read it is:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;ReadDecimal.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;import java.io.File;
import org.apache.avro.Schema;
import org.apache.avro.file.DataFileReader;
import org.apache.avro.generic.GenericDatumReader;
import org.apache.avro.generic.GenericRecord;
import org.apache.avro.io.DatumReader;


public class ReadDecimal {
  public static void main(String[] args) throws Exception {
    Schema schema = new Schema.Parser().parse(&quot;{\n&quot; + &quot;  \&quot;type\&quot; : \&quot;record\&quot;,\n&quot; + &quot;  \&quot;name\&quot; : \&quot;some_schema\&quot;,\n&quot;
        + &quot;  \&quot;namespace\&quot; : \&quot;com.howdy\&quot;,\n&quot; + &quot;  \&quot;fields\&quot; : [ {\n&quot; + &quot;    \&quot;name\&quot; : \&quot;name\&quot;,\n&quot;
        + &quot;    \&quot;type\&quot; : \&quot;string\&quot;\n&quot; + &quot;  }, {\n&quot; + &quot;    \&quot;name\&quot; : \&quot;value\&quot;,\n&quot; + &quot;    \&quot;type\&quot; : {\n&quot;
        + &quot;      \&quot;type\&quot; : \&quot;bytes\&quot;,\n&quot; + &quot;      \&quot;logicalType\&quot; : \&quot;decimal\&quot;,\n&quot; + &quot;      \&quot;precision\&quot; : 3,\n&quot;
        + &quot;      \&quot;scale\&quot; : 1\n&quot; + &quot;    }\n&quot; + &quot;  } ]\n&quot; + &quot;}&quot;);

    DatumReader&amp;lt;GenericRecord&amp;gt; datumReader = new GenericDatumReader&amp;lt;&amp;gt;(schema);

    // dec.avro has precision 5, scale 2
    DataFileReader&amp;lt;GenericRecord&amp;gt; dataFileReader = new DataFileReader&amp;lt;&amp;gt;(
        new File(&quot;/tmp/dec.avro&quot;), datumReader);
    GenericRecord foo = null;
    while (dataFileReader.hasNext()) {
      foo = dataFileReader.next(foo);  // AvroTypeException expected due to change in scale/precision but none occurs
    }
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="13103040">AVRO-2078</key>
            <summary>Avro does not enforce schema resolution rules for Decimal type</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="nkollar">Nandor Kollar</assignee>
                                    <reporter username="erwaman">Anthony Hsu</reporter>
                        <labels>
                    </labels>
                <created>Mon, 18 Sep 2017 19:21:10 +0000</created>
                <updated>Sun, 30 Dec 2018 05:42:29 +0000</updated>
                                            <version>1.8.2</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="16173094" author="githubbot" created="Wed, 20 Sep 2017 12:26:31 +0000"  >&lt;p&gt;GitHub user nandorKollar opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/247&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/247&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2078&quot; title=&quot;Avro does not enforce schema resolution rules for Decimal type&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2078&quot;&gt;AVRO-2078&lt;/a&gt;: Avro does not enforce schema resolution rules for Decimal &#8230;&lt;/p&gt;

&lt;p&gt;    &#8230;type&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/nandorKollar/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/nandorKollar/avro&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2078&quot; title=&quot;Avro does not enforce schema resolution rules for Decimal type&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2078&quot;&gt;AVRO-2078&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/247.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/247.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #247&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 3753c8ac285b3cfc5aeec399e526dc84f98b54aa&lt;br/&gt;
Author: Nandor Kollar &amp;lt;nkollar@cloudera.com&amp;gt;&lt;br/&gt;
Date:   2017-09-20T12:23:17Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2078&quot; title=&quot;Avro does not enforce schema resolution rules for Decimal type&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2078&quot;&gt;AVRO-2078&lt;/a&gt;: Avro does not enforce schema resolution rules for Decimal type&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="16174738" author="nkollar" created="Thu, 21 Sep 2017 13:20:17 +0000"  >&lt;p&gt;Looks like a bug for me, the schema resolution logic is not compliant with the spec. Created a PR with my proposed modifications.&lt;/p&gt;</comment>
                            <comment id="16175799" author="erwaman" created="Fri, 22 Sep 2017 02:01:27 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkollar&quot; class=&quot;user-hover&quot; rel=&quot;nkollar&quot;&gt;Nandor Kollar&lt;/a&gt;, thanks for looking at this! Your pull request on GitHub looks good to me.&lt;/p&gt;</comment>
                            <comment id="16180944" author="bigandy" created="Tue, 26 Sep 2017 15:30:44 +0000"  >&lt;p&gt;This Jira is currently marked with &apos;fix version = 1.8.2&apos;, where as I think it should be &apos;affects version = 1.8.2&apos; ...&lt;/p&gt;</comment>
                            <comment id="16180950" author="bigandy" created="Tue, 26 Sep 2017 15:34:14 +0000"  >&lt;p&gt;This is particularly nasty bug as it can easily lead to data corruption.  If you write decimal &quot;1.2345&quot; with a write schema with a scale of 4 and then deserialize with a scale of 3, the value comes out as &quot;12.345&quot;!!!!&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;@Test
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void shouldThrowIfExistingFieldChangesType() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
        GenericData genericData = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericData();
        genericData.addLogicalTypeConversion(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Conversions.DecimalConversion());

        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Schema v1 = Schema.createRecord(&lt;span class=&quot;code-quote&quot;&gt;&quot;thing&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&quot;, &quot;&lt;/span&gt;namespace&quot;, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;, ImmutableList.of(
                &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;decimal&quot;&lt;/span&gt;, LogicalTypes.decimal(3, 3).addToSchema(Schema.create(Schema.Type.BYTES)), &quot;&quot;, Schema.NULL_VALUE)
        ));

        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Schema v2 = Schema.createRecord(&lt;span class=&quot;code-quote&quot;&gt;&quot;thing&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&quot;, &quot;&lt;/span&gt;namespace&quot;, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;, ImmutableList.of(
                &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;decimal&quot;&lt;/span&gt;, LogicalTypes.decimal(6, 4).addToSchema(Schema.create(Schema.Type.BYTES)), &quot;&quot;, Schema.NULL_VALUE)
        ));

        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; GenericData.Record recordV2 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericData.Record(v2);
        recordV2.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;decimal&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BigDecimal(&lt;span class=&quot;code-quote&quot;&gt;&quot;1.2345&quot;&lt;/span&gt;));

        ByteBuffer bytes = serialize(genericData, recordV2);

        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; GenericRecord deserialized = deserialize(genericData, v1, v2, bytes);
        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; result = deserialized.get(&lt;span class=&quot;code-quote&quot;&gt;&quot;decimal&quot;&lt;/span&gt;);

        &lt;span class=&quot;code-comment&quot;&gt;// Below fails because result is &lt;span class=&quot;code-quote&quot;&gt;&apos;&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BigDecimal(&lt;span class=&quot;code-quote&quot;&gt;&quot;12.345&quot;&lt;/span&gt;)&apos;&lt;/span&gt;
&lt;/span&gt;        assertThat(result, is (&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BigDecimal(&lt;span class=&quot;code-quote&quot;&gt;&quot;1.234&quot;&lt;/span&gt;)));
    }

    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; ByteBuffer serialize(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; GenericData genericData, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; GenericData.Record recordV2) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; java.io.IOException {
        ByteBufferOutputStream output = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteBufferOutputStream();
        BinaryEncoder encoder = EncoderFactory.get().binaryEncoder(output, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
        DatumWriter&amp;lt;IndexedRecord&amp;gt; datumWriter = genericData.createDatumWriter(recordV2.getSchema());
        datumWriter.write(recordV2, encoder);
        encoder.flush();

        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; output.getBufferList().get(0);
    }

    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; GenericRecord deserialize(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; GenericData genericData, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Schema v1, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Schema v2, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; ByteBuffer bytes) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; java.io.IOException {
        ByteBufferInputStream input = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteBufferInputStream(bytes);
        &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; DatumReader&amp;lt;GenericRecord&amp;gt; datumReader = genericData.createDatumReader(v2, v1);
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; datumReader.read(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericData.Record(v1), DecoderFactory.get().binaryDecoder(input, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;));
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="16516008" author="githubbot" created="Mon, 18 Jun 2018 16:53:57 +0000"  >&lt;p&gt;big-andy-coates commented on issue #247: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2078&quot; title=&quot;Avro does not enforce schema resolution rules for Decimal type&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2078&quot;&gt;AVRO-2078&lt;/a&gt;: Avro does not enforce schema resolution rules for Decimal &#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/247#issuecomment-398122015&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/247#issuecomment-398122015&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   @cutting @nandorKollar any chance of getting this merged?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16516822" author="githubbot" created="Tue, 19 Jun 2018 08:57:35 +0000"  >&lt;p&gt;nandorKollar commented on issue #247: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2078&quot; title=&quot;Avro does not enforce schema resolution rules for Decimal type&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2078&quot;&gt;AVRO-2078&lt;/a&gt;: Avro does not enforce schema resolution rules for Decimal &#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/247#issuecomment-398326638&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/247#issuecomment-398326638&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Hey @big-andy-coates ! I didn&apos;t yet merge this PR, because the logical type schema resolution rules are not well defined, and there was some debate how we should handle it. The spec mentions an evolution rule for Decimal, but other types are not mentioned at all, therefore no evolution rule is defined for example Time -&amp;gt; Timestamp promotion. Is it allowed? How should Avro interpret the value? Right now if one uses generated classes, the methods will return wrong values, because the in memory representation is incorrect!&lt;/p&gt;

&lt;p&gt;   The current implementation doesn&apos;t conform with the specification, because it omits changes in the decimal parameters, but I&apos;m not sure if we should change the spec, or get this PR merged. I found a discussion on &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1721&quot; title=&quot;Should LogicalTypes introduce schema (in)compatibility and canonical parsing form changes?&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1721&quot;&gt;AVRO-1721&lt;/a&gt; (actually you&apos;re the last one who commented it), which is about similar topic, and looks like there was no consensus about the correct approach. Could you please open this topic for discussion on the dev list?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12858422">AVRO-1721</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="13147467">AVRO-2164</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12887730" name="dec.avro" size="343" author="erwaman" created="Mon, 18 Sep 2017 19:21:22 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 20 Sep 2017 12:26:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            30 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3k7a7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
