<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:25:43 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2017-10-18+AND+created+%3C%3D+2017-10-25+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="2" total="2"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-2098] Avro OCF support for non-seekable stream.</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2098</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The Microsoft Azure environment supports saving Apache Avro files from an Event Hub via a feature called Event Hub Capture.  The Event Hub Capture feature can be configured to Azure Data Lake Storage (ADLS).&lt;/p&gt;

&lt;p&gt;When saving files to ADLS it is common to use Azure Data Lake Analytics (ADLA) to run batch processing jobs in U-SQL over the raw storage files.  When doing this ADLA supports extractors that can deal with the format of the file (e.g. Avro OCF) and extract file contents for downstream manipulation and filtering.&lt;/p&gt;

&lt;p&gt;An issue I have encountered with the existing csharp implementation is that the DataFileReader relies on the provided stream to support seeking.  However, the stream provided by ADLA does not support seeking.  This leaves the integrating developer with 2 options...&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;is to read the entire stream in to memory and provide a memory backed stream to the DataFileReader.  This is not ideal as files can be large and consuming a lot of memory at once during processing may have undesired affects on ADLA&apos;s ability to process files in parallel, as resources are of course limited.&lt;/li&gt;
	&lt;li&gt;is to enhance the DataFileReader to be able to work with streams that are not seekable.  With respect to this option I have implemented a short-term workaround that can wrap a non-seekeable stream and allow seeking in the pattern employed by the DataFileReader until this feature has been reviewed and potentially implemented.  My workaround is brittle and subject to breaking as the DataFileReader evolves and is not the desired long term approach to dealing with this issue.&lt;br/&gt;
&lt;a href=&quot;https://github.com/thebothead/apache-avro-adla/blob/master/src/Avro.IO.ADLA/AvroDataFileReaderStream.cs&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;AvroDataFileReaderStream.cs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Also note that I have submitted a comment to the Avro support form for ADL regarding their lack of support for seekable streams.&lt;br/&gt;
&lt;a href=&quot;https://feedback.azure.com/forums/327234-data-lake/suggestions/16616362-support-avro-in-azure-data-lake-analytics&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;How can we improve Microsoft Azure Data Lake?&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://feedback.azure.com/forums/327234-data-lake/suggestions/31959457-add-support-for-seekable-streams-in-azure-data-lak&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Add support for seekable streams in Azure Data Lake Analytics.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Matt&lt;/p&gt;</description>
                <environment>&lt;p&gt;csharp&lt;br/&gt;
Azure Data Lake Analytics&lt;/p&gt;</environment>
        <key id="13110978">AVRO-2098</key>
            <summary>Avro OCF support for non-seekable stream.</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="thebothead">Matthew Stowe</reporter>
                        <labels>
                    </labels>
                <created>Fri, 20 Oct 2017 13:23:54 +0000</created>
                <updated>Fri, 20 Oct 2017 13:57:56 +0000</updated>
                                            <version>1.8.2</version>
                                                    <component>csharp</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="16212662" author="vdanilchenko" created="Fri, 20 Oct 2017 13:57:56 +0000"  >&lt;p&gt;Great idea, please bump this up a priority list guys!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 20 Oct 2017 13:57:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 13 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3limn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2099] Decimal precision is ignored</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2099</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;According to the documentation &lt;a href=&quot;https://avro.apache.org/docs/1.8.1/spec.html#Decimal&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://avro.apache.org/docs/1.8.1/spec.html#Decimal&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The decimal logical type represents an arbitrary-precision signed decimal number of the form unscaled &#215; 10-scale.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Then in the schema we might have an entry like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
{
  &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;bytes&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;logicalType&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;decimal&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;precision&quot;&lt;/span&gt;: 4,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;scale&quot;&lt;/span&gt;: 2
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, in the java deserialization I see that the precision is ignored:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/avro/blob/master/lang/java/avro/src/main/java/org/apache/avro/Conversions.java#L79&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/master/lang/java/avro/src/main/java/org/apache/avro/Conversions.java#L79&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    @Override
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; BigDecimal fromBytes(ByteBuffer value, Schema schema, LogicalType type) {
      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; scale = ((LogicalTypes.Decimal) type).getScale();
      &lt;span class=&quot;code-comment&quot;&gt;// always copy the bytes out because BigInteger has no offset/length ctor
&lt;/span&gt;      &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] bytes = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[value.remaining()];
      value.get(bytes);
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BigDecimal(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BigInteger(bytes), scale);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The logical type definition in the java api requires the precision to be set:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/avro/blob/master/lang/java/avro/src/main/java/org/apache/avro/LogicalTypes.java#L116&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/blob/master/lang/java/avro/src/main/java/org/apache/avro/LogicalTypes.java#L116&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-comment&quot;&gt;/** Create a Decimal LogicalType with the given precision and scale */&lt;/span&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; Decimal decimal(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; precision, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; scale) {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Decimal(precision, scale);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Is this a feature, that we allow arbitrary precision? If so, why do we have the precision in the API and schema, if it&apos;s ignored?&lt;/p&gt;

&lt;p&gt;Maybe that&apos;s some java specific issue?&lt;/p&gt;

&lt;p&gt;Thanks for any hints.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13111628">AVRO-2099</key>
            <summary>Decimal precision is ignored</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="KornelKielczewski">Kornel Kie&#322;czewski</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Oct 2017 07:57:03 +0000</created>
                <updated>Sun, 30 Dec 2018 05:41:55 +0000</updated>
                                                                            <component>spec</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="16217006" author="howellbridger" created="Tue, 24 Oct 2017 14:32:15 +0000"  >&lt;p&gt;Good catch &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=KornelKielczewski&quot; class=&quot;user-hover&quot; rel=&quot;KornelKielczewski&quot;&gt;Kornel Kie&#322;czewski&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is definitely unexpected behavior. I would expect values of a decimal logical type to be written with the right precision and read with the right precision.&lt;/p&gt;

&lt;p&gt;My initial impression for making this make sense is to round to the specified precision before read and write. Does this seem reasonable?&lt;/p&gt;</comment>
                            <comment id="16217132" author="rdblue" created="Tue, 24 Oct 2017 15:49:09 +0000"  >&lt;p&gt;With decimals, rounding changes the value. 12.34 is not equal to 12.340. As a storage format, Avro should never change the values it stores, so it can&apos;t round to the given precision. It should probably reject values that can&apos;t be stored, though.&lt;/p&gt;</comment>
                            <comment id="16218210" author="kornelkielczewski" created="Wed, 25 Oct 2017 07:34:28 +0000"  >&lt;p&gt;Agreed, I&apos;d expect the serializer to fail if the precision is too small. The same for deserializing.&lt;/p&gt;</comment>
                            <comment id="16218615" author="howellbridger" created="Wed, 25 Oct 2017 13:25:55 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=KornelKielczewski&quot; class=&quot;user-hover&quot; rel=&quot;KornelKielczewski&quot;&gt;Kornel Kie&#322;czewski&lt;/a&gt; You mean the serializer should fail if the precision is too large?&lt;/p&gt;

&lt;p&gt;I don&apos;t think we should make the deserializer start failing here. Newer clients using the newer &lt;tt&gt;decimal&lt;/tt&gt; logical type would be unable to read decimal values previously written with a higher precision, &lt;em&gt;even though the schema is compatible, or even identical to the one that wrote the value&lt;/em&gt;.&lt;/p&gt;</comment>
                            <comment id="16218674" author="kornelkielczewski" created="Wed, 25 Oct 2017 13:59:18 +0000"  >&lt;p&gt;What I meant was that 1234560.00 should not serialize to a schema with precision=4 and scale=2, hence the precision of the schema is too small. If I understand that correctly.&lt;/p&gt;

&lt;p&gt;Deserialization: you&apos;re right, good catch. Essentialy we have as of now serialized objects in the wild with an incompatible schema &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                            <comment id="16219208" author="rdblue" created="Wed, 25 Oct 2017 18:07:56 +0000"  >&lt;p&gt;I agree, the deserializer shouldn&apos;t fail. Decimals with the wrong scale should be rejected when writing, and decimals with precision higher than the max should be rejected when writing.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 24 Oct 2017 14:32:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 12 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3lmmn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
