<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:21:09 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2014-11-25+AND+created+%3C%3D+2014-12-2+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="6" total="6"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1610] HttpTransceiver.java allocates arbitrary amount of memory</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1610</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;In &lt;tt&gt;HttpTransceiver.java&lt;/tt&gt;, Avro does:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; length = (in.read()&amp;lt;&amp;lt;24)+(in.read()&amp;lt;&amp;lt;16)+(in.read()&amp;lt;&amp;lt;8)+in.read();
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (length == 0) {                       &lt;span class=&quot;code-comment&quot;&gt;// end of buffers
&lt;/span&gt;        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; buffers;
      }
      ByteBuffer buffer = ByteBuffer.allocate(length);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This means that badly formatted input (like that produced by &lt;tt&gt;curl &lt;a href=&quot;http://host/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://host/&lt;/a&gt; --data foo&lt;/tt&gt; and many common security scanners) will trigger an OutOfMemory exception.  This is undesirable, especially combined with setups that kill the process on out of memory exceptions.&lt;/p&gt;

&lt;p&gt;This bug is similar in spirit to &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1111&quot; title=&quot;Malformed data can cause OutOfMemoryError in Avro IPC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1111&quot;&gt;&lt;del&gt;AVRO-1111&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12757617">AVRO-1610</key>
            <summary>HttpTransceiver.java allocates arbitrary amount of memory</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="philip">Philip Zeyliger</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Nov 2014 05:49:07 +0000</created>
                <updated>Thu, 1 Sep 2016 21:19:28 +0000</updated>
                                            <version>1.7.7</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="15456366" author="clement_pellerin@ibi.com" created="Thu, 1 Sep 2016 19:25:35 +0000"  >&lt;p&gt;The calculation of the length is wrong if the input stream indicates EOF by returning -1.&lt;br/&gt;
This sometimes results in a negative length which causes ByteBuffer.allocate() to throw&lt;br/&gt;
but not always if the first byte exists and is positive.&lt;br/&gt;
The code should check against EOF by validating every call to in.read() does not return -1.&lt;/p&gt;</comment>
                            <comment id="15456373" author="rdblue" created="Thu, 1 Sep 2016 19:28:20 +0000"  >&lt;p&gt;Sounds like a good assessment of the problem to me. Would you like to build a patch to fix it? I&apos;ll review.&lt;/p&gt;</comment>
                            <comment id="15456426" author="clement_pellerin@ibi.com" created="Thu, 1 Sep 2016 19:47:32 +0000"  >&lt;p&gt;I&apos;ll write a patch to add the check against EOF, but that will not solve the original problem in the Jira.&lt;br/&gt;
That would require a parameter for the maximum acceptable length.&lt;br/&gt;
The Avro team should design how they want to do this.&lt;/p&gt;</comment>
                            <comment id="15456456" author="rdblue" created="Thu, 1 Sep 2016 19:59:47 +0000"  >&lt;p&gt;The allocation is limited to Integer.MAX_VALUE, 2GB. That&apos;s big, but not necessarily going to crash services. If this becomes a problem then we can add a configurable limit, but otherwise I&apos;m fine with the allocation proceeding.&lt;/p&gt;</comment>
                            <comment id="15456478" author="clement_pellerin@ibi.com" created="Thu, 1 Sep 2016 20:10:15 +0000"  >&lt;p&gt;Well, 2GB is already too big for my development machine.&lt;/p&gt;

&lt;p&gt;The real issue (after I fix EOF) is the vulnerability against Denial of Service attacks.&lt;br/&gt;
If your server is multithreaded, it can serve many of those requests at the same time&lt;br/&gt;
and suddenly 100 * 2GB is too big even for the big machine you have.&lt;/p&gt;</comment>
                            <comment id="15456561" author="clement_pellerin@ibi.com" created="Thu, 1 Sep 2016 20:45:12 +0000"  >&lt;p&gt;It looks like I don&apos;t have permissions to attach files. That option is not under the More button.&lt;br/&gt;
I tried embedding it in a comment but the wiki mangles the lines.&lt;br/&gt;
How do you want me to submit a patch? I don&apos;t use git.&lt;/p&gt;</comment>
                            <comment id="15456575" author="rdblue" created="Thu, 1 Sep 2016 20:52:12 +0000"  >&lt;p&gt;You can paste it in a comment, I can grab the raw comment source.&lt;/p&gt;

&lt;p&gt;You may also be able to surround it in a verbatim area, the docs for it are here: &lt;a href=&quot;https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=advanced&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=advanced&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15456582" author="clement_pellerin@ibi.com" created="Thu, 1 Sep 2016 20:55:01 +0000"  >&lt;p&gt;Here is the patch.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;*** HttpTransceiver.java	2016-09-01 16:12:05.371015400 -0400
--- C:\temp\avro-src-1.8.1\lang\java\ipc\src\main\java\org\apache\avro\ipc\HttpTransceiver.java	2016-05-14 20:38:52.000000000 -0400
***************
*** 96,110 ****
      &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
      List&amp;lt;ByteBuffer&amp;gt; buffers = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;ByteBuffer&amp;gt;();
      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) {
!       &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; b0 = in.read();
!       &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; b1 = in.read();
!       &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; b2 = in.read();
!       &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; b3 = in.read();
!       &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (b0 &amp;lt; 0 || b1 &amp;lt; 0 || b2 &amp;lt; 0 || b3 &amp;lt; 0) {
!         &lt;span class=&quot;code-comment&quot;&gt;// missing terminating zero-length buffer
&lt;/span&gt;!         &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; EOFException(&lt;span class=&quot;code-quote&quot;&gt;&quot;Unexpected EOF&quot;&lt;/span&gt;);
!       }
!       &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; length = (b0&amp;lt;&amp;lt;24)+(b1&amp;lt;&amp;lt;16)+(b2&amp;lt;&amp;lt;8)+b3;
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (length == 0) {                       &lt;span class=&quot;code-comment&quot;&gt;// end of buffers
&lt;/span&gt;          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; buffers;
        }
--- 96,102 ----
      &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
      List&amp;lt;ByteBuffer&amp;gt; buffers = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;ByteBuffer&amp;gt;();
      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) {
!       &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; length = (in.read()&amp;lt;&amp;lt;24)+(in.read()&amp;lt;&amp;lt;16)+(in.read()&amp;lt;&amp;lt;8)+in.read();
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (length == 0) {                       &lt;span class=&quot;code-comment&quot;&gt;// end of buffers
&lt;/span&gt;          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; buffers;
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15456650" author="clement_pellerin@ibi.com" created="Thu, 1 Sep 2016 21:19:28 +0000"  >&lt;p&gt;I can help with the configurable limit if the Avro team can specify how they want the limit to be set.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 1 Sep 2016 19:25:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 20 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i22r1b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1611] Avro-mapred should provide CombineAvroKeyInputFormat</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1611</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;A serious issue with Hadoop is dealing with a huge number of small files (they slow down processing, overload namenode etc...). &lt;/p&gt;

&lt;p&gt;A common remedy for this is to use CombineFileInputFormat. However, this is an abstract class to need to be concretized for each InputFormat it is wrapping. I believe Avro should provide CombineAvroKeyInputFormat like Hadoop is providing CombineSequenceFileInputFormat and CombineTextInputFormat.&lt;/p&gt;

&lt;p&gt;I&apos;ve attached a basic implementation.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12757720">AVRO-1611</key>
            <summary>Avro-mapred should provide CombineAvroKeyInputFormat</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="br1985">Bart&#322;omiej Roma&#324;ski</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Nov 2014 15:33:22 +0000</created>
                <updated>Sun, 30 Dec 2018 04:17:17 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>3</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="14226678" author="cutting" created="Wed, 26 Nov 2014 19:20:10 +0000"  >&lt;p&gt;Sounds reasonable.  Can you please provide unit tests for this?  Thanks!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12683578" name="CombineAvroKeyInputFormat.java" size="1495" author="br1985" created="Tue, 25 Nov 2014 15:34:03 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 26 Nov 2014 19:20:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 8 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i22rnj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1612] typo in documentation for &quot;fixed&quot; type</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1612</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;There appears to be a cut-and-paste error in the documentation for the &quot;Fixed&quot; type.  The &quot;namespace&quot; and &quot;aliases&quot; fields probably shouldn&apos;t be there.&lt;/p&gt;

&lt;p&gt;Text of the current online documentation  (1.7.7):&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://avro.apache.org/docs/current/spec.html#Fixed&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://avro.apache.org/docs/current/spec.html#Fixed&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fixed&lt;/p&gt;

&lt;p&gt;Fixed uses the type name &quot;fixed&quot; and supports two attributes:&lt;/p&gt;

&lt;p&gt;    name: a string naming this fixed (required).&lt;br/&gt;
    namespace, a string that qualifies the name;&lt;br/&gt;
    aliases: a JSON array of strings, providing alternate names for this enum (optional).&lt;br/&gt;
    size: an integer, specifying the number of bytes per value (required).&lt;/p&gt;

&lt;p&gt;For example, 16-byte quantity may be declared with:&lt;/p&gt;

{&quot;type&quot;: &quot;fixed&quot;, &quot;size&quot;: 16, &quot;name&quot;: &quot;md5&quot;}</description>
                <environment></environment>
        <key id="12757788">AVRO-1612</key>
            <summary>typo in documentation for &quot;fixed&quot; type</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="peter.amstutz">Peter Amstutz</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Nov 2014 19:44:14 +0000</created>
                <updated>Sun, 30 Dec 2018 05:33:53 +0000</updated>
                                                                            <component>spec</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 8 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i22s1z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1613] Support for non-standard JSON when reading schemas</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1613</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It would be good to:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Allow unquoted field names&lt;/li&gt;
	&lt;li&gt;Allow single quotes&lt;/li&gt;
	&lt;li&gt;Allow comments&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;when reading a schema. The proper extensions (&lt;a href=&quot;http://wiki.fasterxml.com/JacksonFeaturesNonStandard&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;shown here&lt;/a&gt;) of Jackson could be enabled in &lt;tt&gt;Schema$Parser.parse(JsonParser)&lt;/tt&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12757950">AVRO-1613</key>
            <summary>Support for non-standard JSON when reading schemas</summary>
                <type id="5" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Wish</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="alfonso.nishikawa">Alfonso Nishikawa</reporter>
                        <labels>
                    </labels>
                <created>Wed, 26 Nov 2014 11:24:59 +0000</created>
                <updated>Wed, 18 Mar 2015 20:50:41 +0000</updated>
                            <resolved>Wed, 3 Dec 2014 13:35:44 +0000</resolved>
                                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="14230165" author="rdblue" created="Mon, 1 Dec 2014 18:12:19 +0000"  >&lt;p&gt;Is there an extension to the JSON specification that allows these? I&apos;d rather not rely on a single library&apos;s behavior because the schema needs to be usable across all of the different language implementations. That complicates rolling out a feature like this because we would be introducing an incompatibility while Java can read a schema that appears invalid in, say, Python. If there is a specification for these that we can migrate to, then I think this is possible.&lt;/p&gt;

&lt;p&gt;Also, is the motivation for this something that is addressed by &lt;a href=&quot;https://avro.apache.org/docs/1.7.5/idl.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;IDL&lt;/a&gt;? It seems like the motivation here is to make it easier to write schemas by hand, but I think the JSON representation isn&apos;t necessarily the best place to do that.&lt;/p&gt;</comment>
                            <comment id="14232995" author="alfonso.nishikawa" created="Wed, 3 Dec 2014 13:34:15 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdblue&quot; class=&quot;user-hover&quot; rel=&quot;rdblue&quot;&gt;Ryan Blue&lt;/a&gt;, no, there isn&apos;t any specification. I find your arguments much convincing &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
It is not related to IDL, just the hassle writing a lot of quotes, but you are right pointing the necessity of consistency between languages features.&lt;br/&gt;
Thank you!!&lt;/p&gt;</comment>
                            <comment id="14233189" author="rdblue" created="Wed, 3 Dec 2014 16:55:03 +0000"  >&lt;p&gt;Thanks for the update, Alfonso!&lt;/p&gt;</comment>
                            <comment id="14233300" author="cutting" created="Wed, 3 Dec 2014 18:31:25 +0000"  >&lt;p&gt;By Postel&apos;s Law we might be liberal in the JSON syntax we accept, but we should always produce JSON that adheres closely to the standard.  There is a risk that another implementation may not be able to read a .avsc file that uses non-standard syntax, but data files, protocol handshakes, schema repositories etc. should always use standard syntax and thus no interoperability problems are created there.  So the question is whether folks use a given .avsc file with multiple Avro implementations.&lt;/p&gt;

&lt;p&gt;We do currently allow comments.  Unquoted field names would make it easier to both type-in and read hand-written schemas.  I don&apos;t see significant value in supporting single quotes.&lt;/p&gt;</comment>
                            <comment id="14241638" author="alfonso.nishikawa" created="Wed, 10 Dec 2014 20:07:46 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;, thanks! Didn&apos;t knew that comments are allowed. I only use .avsc with java implementation and I don&apos;t have further information about usage :\&lt;/p&gt;</comment>
                            <comment id="14241639" author="alfonso.nishikawa" created="Wed, 10 Dec 2014 20:08:23 +0000"  >&lt;p&gt;Should we reopen the issue?&lt;/p&gt;</comment>
                            <comment id="14241932" author="cutting" created="Wed, 10 Dec 2014 23:17:59 +0000"  >&lt;p&gt;I would not oppose reopening this.&lt;/p&gt;</comment>
                            <comment id="14241943" author="rdblue" created="Wed, 10 Dec 2014 23:21:18 +0000"  >&lt;p&gt;I&apos;m also not opposed. I think Doug rightly identified the question that we need to answer: &quot;whether folks use a given .avsc file with multiple Avro implementations.&quot;&lt;/p&gt;

&lt;p&gt;If you think the answer is that people don&apos;t reuse the same avsc with multiple implementations and this is a feature that you want, then let&apos;s reopen.&lt;/p&gt;</comment>
                            <comment id="14367856" author="alfonso.nishikawa" created="Wed, 18 Mar 2015 20:43:34 +0000"  >&lt;p&gt;Uploaded &lt;span class=&quot;error&quot;&gt;Unable to render embedded object: File (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1613&quot; title=&quot;Support for non-standard JSON when reading schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1613&quot;&gt;&lt;del&gt;AVRO-1613&lt;/del&gt;&lt;/a&gt;v1.patch) not found.&lt;/span&gt; enabling the following extensions:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Allowed C/C++ style comments.&lt;/li&gt;
	&lt;li&gt;Allowed unquoted field names.&lt;/li&gt;
	&lt;li&gt;Allowed single quotes.&lt;/li&gt;
	&lt;li&gt;Allowed escaping any character.&lt;/li&gt;
	&lt;li&gt;Allowed unquoted control characters.&lt;/li&gt;
	&lt;li&gt;Allowed numeric leading zeros.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I left out:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Allow non-numeric numbers (NaN, +Infinity, -Infinity,...) as default values because I don&apos;t know how would that affect when creating instances with such values. I have seen that the builder creates them as text nodes, but I don&apos;t have enough insight.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14367871" author="alfonso.nishikawa" created="Wed, 18 Mar 2015 20:50:41 +0000"  >&lt;p&gt;I don&apos;t dare to reopen the issue because I actually don&apos;t know statistics about usage &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/tongue.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I think I have been considerably conservative: nothing that used to work is expected to fail, so I propose the patch for commit if you find it nice &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Don&apos;t be compassionate with this patch commenting. It took me much time because I have been thinking about it a lot, and any new idea, vision, oppinion or review is very very much welcomed.&lt;br/&gt;
Thanks!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12705429" name="AVRO-1613v1.patch" size="3619" author="alfonso.nishikawa" created="Wed, 18 Mar 2015 20:43:34 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 1 Dec 2014 18:12:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 44 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i22t1b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1614] Always getting a value...</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1614</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Sometimes the Avro structure becomes deeply nested.&lt;br/&gt;
If in such a scenario you want to be able to set a specific value deep in this tree you want to do this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setSomething(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; value) {
    myStruct
            .getFoo()
            .getBar()
            .getOne()
            .getOther()
            .setSomething(value);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The &apos;problem&apos; I ran into is that any of the 4 get methods can return a null value so the code I have to write is really huge.&lt;br/&gt;
For every step in this method I have to build null checks and create the underlying instance if it is null.&lt;br/&gt;
I already started writing helper methods to do this for parts of my tree.&lt;/p&gt;

&lt;p&gt;To solve this in a way that makes this code readable I came up with the following which I want to propose to you guys (before I start working on a patch).&lt;/p&gt;

&lt;p&gt;My idea is to generate a new &apos;get&apos; method in addition to the existing normal get method for the regular instance of the class.&lt;/p&gt;

&lt;p&gt;So in addition to the &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Foo getFoo() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; foo;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I propose to generate something like this as well in the cases where this is a type of structure that you may want to traverse as shown in the example.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Foo getAlwaysFoo() {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (foo == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        setFoo(Foo.newBuilder().build());
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; foo;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This way the automatically created instance immediately has all the defaults I have defined.&lt;/p&gt;

&lt;p&gt;Assuming this naming my code will be readable because it will look like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setSomething(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; value) {
    myStruct
            .getAlwaysFoo()
            .getAlwaysBar()
            .getAlwaysOne()
            .getAlwaysOther()
            .setSomething(value);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12758248">AVRO-1614</key>
            <summary>Always getting a value...</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nielsbasjes">Niels Basjes</assignee>
                                    <reporter username="nielsbasjes">Niels Basjes</reporter>
                        <labels>
                            <label>java</label>
                    </labels>
                <created>Thu, 27 Nov 2014 15:36:11 +0000</created>
                <updated>Sat, 28 Jan 2017 10:10:58 +0000</updated>
                            <resolved>Wed, 17 Dec 2014 23:08:36 +0000</resolved>
                                                    <fixVersion>1.8.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="14227807" author="nielsbasjes" created="Thu, 27 Nov 2014 16:27:50 +0000"  >&lt;p&gt;First draft patch that does this.&lt;/p&gt;</comment>
                            <comment id="14227822" author="nielsbasjes" created="Thu, 27 Nov 2014 16:38:25 +0000"  >&lt;p&gt;The idea works but I also found that for my usecase it is not very pleasant to work with.&lt;/p&gt;

&lt;p&gt;Assume this example again:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setSomething(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; value) {
    myStruct
            .getAlwaysFoo()
            .getAlwaysBar()
            .getAlwaysOne()
            .getAlwaysOther()
            .setSomething(value);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The main problem is that in order to do .getAlwaysOne() I MUST define ALL fields of that type with a default value.&lt;br/&gt;
What I don;t like about that is that I want the schema definition to enforce the fact that some fields are mandatory.&lt;br/&gt;
By adding a default value to &apos;everything&apos; I lose that capability of AVRO ... which I don&apos;t want.&lt;/p&gt;

&lt;p&gt;At this point in time the only workaround this (for me major) issue is by introducing something where I can do something like having a &apos;tree of incomplete Builders&apos; and when I say &apos;build()&apos; to the top one it will build the entire tree.&lt;/p&gt;</comment>
                            <comment id="14229895" author="nielsbasjes" created="Mon, 1 Dec 2014 15:20:12 +0000"  >&lt;p&gt;Working on alternative approach.&lt;/p&gt;</comment>
                            <comment id="14229910" author="nielsbasjes" created="Mon, 1 Dec 2014 15:42:01 +0000"  >&lt;p&gt;First version of doing this via the Builder pattern.&lt;/p&gt;</comment>
                            <comment id="14229920" author="nielsbasjes" created="Mon, 1 Dec 2014 15:52:46 +0000"  >&lt;p&gt;Basic idea of this approach:&lt;br/&gt;
In a Builder in addition to the actual value of a field there is now also a &quot;Builder&quot; field for that field possible.&lt;br/&gt;
If that is used then you can have the incomplete form of the sub-schema in a Builder.&lt;br/&gt;
So for any Builder instance there is a getFooBuilder() that either returns the existing or creates a new Builder instance for the Foo field if such a builder is supported.&lt;/p&gt;

&lt;p&gt;As a consequence: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;schema validation is postponed until the actual build() is called.&lt;/li&gt;
	&lt;li&gt;for the fields where this Builder is used the actual build() call becomes recursive.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So in my testing code I can now do this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;    Measurement.Builder measurementBuilder = Measurement.newBuilder();

    measurementBuilder
            .getTransportBuilder()
              .getConnectionBuilder()
                .getNetworkConnectionBuilder()
                  .setNetworkAddress(&lt;span class=&quot;code-quote&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;)
                  .setNetworkType(NetworkType.IPv4);

    Measurement measurement = measurementBuilder.build();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Open question: I have not seen unit tests that validate the generated Java code. How to approach this?&lt;/p&gt;</comment>
                            <comment id="14229947" author="nielsbasjes" created="Mon, 1 Dec 2014 16:06:19 +0000"  >&lt;p&gt;Fixed the patch (previous one had a big mistake in it).&lt;/p&gt;</comment>
                            <comment id="14231423" author="nielsbasjes" created="Tue, 2 Dec 2014 12:51:30 +0000"  >&lt;p&gt;Updated the patch:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fixed a bug (cloning a Builder now clones recursively)&lt;/li&gt;
	&lt;li&gt;Fixed existing unit test&lt;/li&gt;
	&lt;li&gt;Added specific unit tests for new feature.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14231861" author="cutting" created="Tue, 2 Dec 2014 18:14:44 +0000"  >&lt;p&gt;I like the builder-based approach much better than the original proposal.&lt;/p&gt;

&lt;p&gt;It would be good to add a test with a field named &quot;builder&quot; and/or &quot;Builder&quot; to make sure that names are properly escaped.&lt;/p&gt;

&lt;p&gt;There are a lot of whitespace changes in the patch that distract from the intended changes.  Can you please generate a patch without these?&lt;/p&gt;

&lt;p&gt;As for tests, there are two TestSpecificCompiler classes, one in lang/java/compiler and one in lang/java/ipc.  The latter validates that generated code can be compiled by the Java compiler.  TestSpecificCompilerTool.java also validates specific compiler output.  A number of other tests depend on generated classes (TestSpecificData, TestProtocolSpecific, etc.).&lt;/p&gt;</comment>
                            <comment id="14232827" author="nielsbasjes" created="Wed, 3 Dec 2014 09:51:13 +0000"  >&lt;p&gt;@&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;: &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Good idea to add additional tests to validate &quot;builder&quot; and &quot;Builder&quot;. I&apos;ll also be adding &quot;builderBuilder&quot;, &quot;value&quot; and &quot;this&quot; to ensure we covered all the edge cases.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;While making this I also found a lot of whitespaces changed. The main cause is that some of the files (the Player.java files) are generated and simply adding this feature changed those files a lot. Because I was already impacting those files so much I chose to kick all the trailing spaces in one go... which you say is too much, ok.&lt;br/&gt;
I understand the downside of this choice so I&apos;ll create a patch with the lowest possible whitespace changes. Shall I create a new issue afterwards to clean this up (I really like clean code!)?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I don&apos;t quite understand the point regarding the tests. I put them under lang/java/ipc because there the compiler is available and can generate java code from the schema definitions. My tests are intended to validate that the generated code behaves as intended (I&apos;m actually unit testing the code generated by the compiler). Putting them under ipc seemed like the best and easiest place. To avoid conflicts with existing testing code I added a new idl that resides in it&apos;s own package: org.apache.avro.test.http. So did I put the tests I added in the right place? If not, what is the right place?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14232830" author="nielsbasjes" created="Wed, 3 Dec 2014 09:51:56 +0000"  >&lt;p&gt;Canceling patch to implement review feedback.&lt;/p&gt;</comment>
                            <comment id="14233274" author="cutting" created="Wed, 3 Dec 2014 18:18:34 +0000"  >&lt;p&gt;Yes, please make whitespace &amp;amp; other cosmetic changes in a separate issue.&lt;/p&gt;

&lt;p&gt;The best time to make code clean is when its first committed.  Subsequent cleanups can be done as separate patches, but substantial reformatting can make merges more difficult and may not always be worthwhile.  Also, folks have different things they&apos;re particular about, so it&apos;s difficult to keep a collaboratively maintained codebase perfect in everyone&apos;s eyes.  However we do use checkstyle in our build.  Perhaps we can disallow trailing whitespace there.&lt;/p&gt;

&lt;p&gt;About the tests, I was just responding to your statement above, that you had, &quot;not seen unit tests that validate the generated Java code&quot;.  The tests you&apos;ve provided seem sufficient and appropriate.&lt;/p&gt;</comment>
                            <comment id="14234155" author="nielsbasjes" created="Thu, 4 Dec 2014 11:59:48 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added new test idl to seekout colissions (builder, Builder, etc.).&lt;/li&gt;
	&lt;li&gt;Fixed (existing) bug that came to light when using the record name &quot;Builder&quot;.&lt;/li&gt;
	&lt;li&gt;Reduced the number of whitespace changes as much as possible.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14234156" author="nielsbasjes" created="Thu, 4 Dec 2014 12:00:08 +0000"  >&lt;p&gt;Please review&lt;/p&gt;</comment>
                            <comment id="14247964" author="nielsbasjes" created="Tue, 16 Dec 2014 09:18:24 +0000"  >&lt;p&gt;Patch no longer merges after recent commits.&lt;/p&gt;</comment>
                            <comment id="14248184" author="nielsbasjes" created="Tue, 16 Dec 2014 12:04:04 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Patch updated so it merges again.&lt;/li&gt;
	&lt;li&gt;Minor layout / javadoc tweaks compared to previous version.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14248207" author="nielsbasjes" created="Tue, 16 Dec 2014 12:51:41 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; Updated patch&lt;/p&gt;</comment>
                            <comment id="14248497" author="cutting" created="Tue, 16 Dec 2014 17:09:41 +0000"  >&lt;p&gt;This looks great to me.  I will commit it soon unless there are objections.&lt;/p&gt;</comment>
                            <comment id="14250754" author="jira-bot" created="Wed, 17 Dec 2014 23:02:33 +0000"  >&lt;p&gt;Commit 1646360 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1646360&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1646360&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1614&quot; title=&quot;Always getting a value...&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1614&quot;&gt;&lt;del&gt;AVRO-1614&lt;/del&gt;&lt;/a&gt;. Java: In generated builder classes, add accessors to field sub-builders, permitting easier creation of nested, optional structures.  Contributed by Niels Basjes.&lt;/p&gt;</comment>
                            <comment id="14250757" author="cutting" created="Wed, 17 Dec 2014 23:03:03 +0000"  >&lt;p&gt;I committed this.  Thanks, Niels, this is a great addition to Avro!&lt;/p&gt;</comment>
                            <comment id="14250816" author="hudson" created="Wed, 17 Dec 2014 23:36:00 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #506 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/506/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/506/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1614&quot; title=&quot;Always getting a value...&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1614&quot;&gt;&lt;del&gt;AVRO-1614&lt;/del&gt;&lt;/a&gt;. Java: In generated builder classes, add accessors to field sub-builders, permitting easier creation of nested, optional structures.  Contributed by Niels Basjes. (cutting: rev 1646360)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/specific/SpecificData.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/compiler/src/main/java/org/apache/avro/compiler/specific/SpecificCompiler.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/classic/record.vm&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/test/compiler/output-string/avro/examples/baseball/Player.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/test/compiler/output/Player.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/share/test/schemas/http.avdl&lt;/li&gt;
	&lt;li&gt;/avro/trunk/share/test/schemas/specialtypes.avdl&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="15844011" author="jira-bot" created="Sat, 28 Jan 2017 10:10:58 +0000"  >&lt;p&gt;Commit 3345e13238d1d0278a4e1da5a9df60356892193c in avro&apos;s branch refs/heads/branch-1.7 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=radai&quot; class=&quot;user-hover&quot; rel=&quot;radai&quot;&gt;radai rosenblatt&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=3345e13&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=3345e13&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1901&quot; title=&quot;creating a record called &amp;quot;Exception&amp;quot; leads to generated code not compiling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1901&quot;&gt;&lt;del&gt;AVRO-1901&lt;/del&gt;&lt;/a&gt;: Record named Exception generated bad code&lt;/p&gt;

&lt;p&gt;Amending-Author: Ben McCann &amp;lt;bmccann@linkedin.com&amp;gt;&lt;/p&gt;

&lt;p&gt;backport to branch-1.7.&lt;/p&gt;

&lt;p&gt;Exception record for share/test/schemas/specialtypes.avdl skipped since branch-1.7 doesn&apos;t have &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1614&quot; title=&quot;Always getting a value...&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1614&quot;&gt;&lt;del&gt;AVRO-1614&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Closes #188.&lt;/p&gt;

&lt;p&gt;Signed-off-by: Sean Busbey &amp;lt;busbey@apache.org&amp;gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12687477" name="AVRO-1614-2014-12-16-v5.patch" size="30112" author="nielsbasjes" created="Tue, 16 Dec 2014 12:04:04 +0000"/>
                            <attachment id="12684083" name="AVRO-1614-20141027-v1.patch" size="3081" author="nielsbasjes" created="Thu, 27 Nov 2014 16:27:50 +0000"/>
                            <attachment id="12684423" name="AVRO-1614-20141201-v2.patch" size="11283" author="nielsbasjes" created="Mon, 1 Dec 2014 16:06:19 +0000"/>
                            <attachment id="12684637" name="AVRO-1614-20141202-v3.patch" size="41479" author="nielsbasjes" created="Tue, 2 Dec 2014 12:51:30 +0000"/>
                            <attachment id="12685103" name="AVRO-1614-20141204-v4.patch" size="29336" author="nielsbasjes" created="Thu, 4 Dec 2014 11:59:48 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 2 Dec 2014 18:14:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 51 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i22utb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>[JAVA] Builders can now hold Builder instances of sub schemas.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1616] Fix .gitignore to exclude IntelliJ files.</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1616</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The intellij project files are not ignored in .gitignore&lt;/p&gt;</description>
                <environment></environment>
        <key id="12758684">AVRO-1616</key>
            <summary>Fix .gitignore to exclude IntelliJ files.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.svg">Trivial</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nielsbasjes">Niels Basjes</assignee>
                                    <reporter username="nielsbasjes">Niels Basjes</reporter>
                        <labels>
                    </labels>
                <created>Mon, 1 Dec 2014 16:01:29 +0000</created>
                <updated>Mon, 1 Feb 2016 14:56:05 +0000</updated>
                            <resolved>Mon, 15 Dec 2014 22:14:30 +0000</resolved>
                                                    <fixVersion>1.8.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="14229940" author="nielsbasjes" created="Mon, 1 Dec 2014 16:03:16 +0000"  >&lt;p&gt;Simply added a few files to ignore in the future.&lt;/p&gt;</comment>
                            <comment id="14247317" author="jira-bot" created="Mon, 15 Dec 2014 22:14:06 +0000"  >&lt;p&gt;Commit 1645772 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1645772&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1645772&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1616&quot; title=&quot;Fix .gitignore to exclude IntelliJ files.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1616&quot;&gt;&lt;del&gt;AVRO-1616&lt;/del&gt;&lt;/a&gt;. Add IntelliJ files to .gitignore.  Contributed by Niels Basjes.&lt;/p&gt;</comment>
                            <comment id="14247318" author="cutting" created="Mon, 15 Dec 2014 22:14:31 +0000"  >&lt;p&gt;I committed this.  Thanks, Niels.&lt;/p&gt;</comment>
                            <comment id="14247363" author="hudson" created="Mon, 15 Dec 2014 22:35:52 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #505 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/505/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/505/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1616&quot; title=&quot;Fix .gitignore to exclude IntelliJ files.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1616&quot;&gt;&lt;del&gt;AVRO-1616&lt;/del&gt;&lt;/a&gt;. Add IntelliJ files to .gitignore.  Contributed by Niels Basjes. (cutting: rev 1645772)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/.gitignore&lt;/li&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12684422" name="AVRO-1616-20141201-v1.patch" size="181" author="nielsbasjes" created="Mon, 1 Dec 2014 16:03:16 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 15 Dec 2014 22:14:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 5 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i22xgn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
