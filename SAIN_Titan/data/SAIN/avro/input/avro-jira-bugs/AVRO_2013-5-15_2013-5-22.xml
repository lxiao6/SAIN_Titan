<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:18:43 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2013-5-15+AND+created+%3C%3D+2013-5-22+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="8" total="8"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1330] java: allow custom Encodings with annotations</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1330</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I propose an annotation @AvroEncode that allows one to encode a java field or a class directly. The motivation behind this is that some classes are impossible to serialize due to transient fields or result in a verbose encoding. For example, java.util.Date cannot be serialized as of now. &lt;/p&gt;

&lt;p&gt;The annotation would specify an implementation of an abstract serializer/deserializer class, which reads and writes directly from the encoder/decoder. &lt;br/&gt;
It would also insert the encodings schema into the surrounding schema.&lt;/p&gt;


&lt;p&gt;The annotation would look like this: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;@AvroEncode(using=DateToUtcMillisecondsSerDe)
Date date;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;DateToUtcMillisecondsSerDe &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; CustomSerDe&amp;lt;Date&amp;gt; {
  {
    schema = Schema.create(Schema.Type.LONG);
  }
  
  @Override
  void write(Date datum, Encoder out) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    out.writeLong(datum.getTime());
  }

  @Override
  void read(Date datum, Decoder in) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException  {
    datum.setTime(in.readLong());
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;p&gt;As a proof of concept, i implemented  such a serDe for java.util.Date.&lt;/p&gt;

&lt;p&gt;this would solve avro-739 by delivering one or several default formats for Date, which can be Overridden to any representation by implemeting a different SerDe.&lt;/p&gt;

</description>
                <environment></environment>
        <key id="12647717">AVRO-1330</key>
            <summary>java: allow custom Encodings with annotations</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="vince83">Vincenz Priesnitz</assignee>
                                    <reporter username="vince83">Vincenz Priesnitz</reporter>
                        <labels>
                    </labels>
                <created>Wed, 15 May 2013 10:38:51 +0000</created>
                <updated>Tue, 28 May 2013 14:01:43 +0000</updated>
                            <resolved>Tue, 28 May 2013 13:59:56 +0000</resolved>
                                                                    <component>java</component>
                        <due></due>
                            <votes>6</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13658389" author="vince83" created="Wed, 15 May 2013 14:16:35 +0000"  >&lt;p&gt;Here is a patch that implements proposed features. &lt;/p&gt;
</comment>
                            <comment id="13658856" author="cutting" created="Wed, 15 May 2013 21:38:02 +0000"  >&lt;p&gt;Nice idea.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I don&apos;t think we should use the term &quot;SerDe&quot;, since that&apos;s used in Hive and could be confusing here.  Rather we might call these encodings, e.g., CustomEncoding, DateAsLongEncoding, etc.&lt;/li&gt;
	&lt;li&gt;The patch only currently works for field values, not for top-level values or for, e.g., values in a Map.  The &apos;read&apos; method in the Encoding interface should thus probably return a value rather than always mutating a passed-in value.&lt;/li&gt;
	&lt;li&gt;We might pre-define some encodings for built-in types like Date.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13659380" author="vince83" created="Thu, 16 May 2013 09:41:34 +0000"  >&lt;p&gt;Thanks for the input. &lt;/p&gt;

&lt;p&gt;I renamed the classes as you proposed and and implemented the read method to return an instance. &lt;br/&gt;
Read can now be called with or without a reuse object.&lt;/p&gt;

&lt;p&gt;The patch contains an encoding for Date which stores the value of Date.getTime(), i.e. milliseconds since 1.1.1970. &lt;/p&gt;</comment>
                            <comment id="13668316" author="vince83" created="Tue, 28 May 2013 13:59:56 +0000"  >&lt;p&gt;This issue is contained in the followup issue &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1341&quot; title=&quot;Allow controlling avro via java annotations when using reflection. &quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1341&quot;&gt;&lt;del&gt;AVRO-1341&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310060">
                    <name>Container</name>
                                            <outwardlinks description="contains">
                                        <issuelink>
            <issuekey id="12496081">AVRO-739</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="Is contained by">
                                        <issuelink>
            <issuekey id="12649704">AVRO-1341</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                                                <inwardlinks description="is superceded by">
                                        <issuelink>
            <issuekey id="12649704">AVRO-1341</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12583324" name="Avro-1330.patch" size="8106" author="vince83" created="Wed, 15 May 2013 14:18:26 +0000"/>
                            <attachment id="12583456" name="Avro-1330update.patch" size="8447" author="vince83" created="Thu, 16 May 2013 09:42:08 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 15 May 2013 21:38:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>328073</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 34 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kls7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>328417</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1331] Java reader backwards-compatibility breakage</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1331</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;For some cases where we encode Avro data with Avro 1.7.4, it is not readable with Avro 1.7.5-SNAPSHOT post &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1295&quot; title=&quot;null namespace within non-null is not print/parse consistent&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1295&quot;&gt;&lt;del&gt;AVRO-1295&lt;/del&gt;&lt;/a&gt;: the Java decoder is unable to discover the root definitions&lt;/p&gt;

&lt;p&gt;Among the properties of (some) schemas that trigger this failure:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;an explicit empty string in the root namespace and&lt;/li&gt;
	&lt;li&gt;uses other namespaces elsewhere in the schema,&lt;/li&gt;
	&lt;li&gt;has a recursive reference to the root&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A sample schema and a sample datafile with one example encoded with that schema are attached.  &lt;/p&gt;

&lt;p&gt;This datafile cannot be read with Java deserializers (and I believe that the schema cannot be parsed by the Java schema parser).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12647790">AVRO-1331</key>
            <summary>Java reader backwards-compatibility breakage</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="trochee">Jeremy Kahn</reporter>
                        <labels>
                    </labels>
                <created>Wed, 15 May 2013 17:55:21 +0000</created>
                <updated>Tue, 20 Aug 2013 17:46:05 +0000</updated>
                            <resolved>Thu, 16 May 2013 17:34:16 +0000</resolved>
                                                    <fixVersion>1.7.5</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13658587" author="trochee" created="Wed, 15 May 2013 17:56:16 +0000"  >&lt;p&gt;the sample &quot;stripped and snipped&quot; files trigger this misbehavior with versions of 1.7.5-SNAPSHOT that include patch &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1295&quot; title=&quot;null namespace within non-null is not print/parse consistent&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1295&quot;&gt;&lt;del&gt;AVRO-1295&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13658824" author="cutting" created="Wed, 15 May 2013 21:06:56 +0000"  >&lt;p&gt;Here&apos;s a patch that I think fixes this.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1295&quot; title=&quot;null namespace within non-null is not print/parse consistent&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1295&quot;&gt;&lt;del&gt;AVRO-1295&lt;/del&gt;&lt;/a&gt; exposed an underlying bug where the default namespace, when null, wasn&apos;t restored correctly as the parser popped back to an outer context.  I suspect the reason that your schema explicitly specifies the empty string as its namespace was to work around this underlying bug.  When &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1295&quot; title=&quot;null namespace within non-null is not print/parse consistent&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1295&quot;&gt;&lt;del&gt;AVRO-1295&lt;/del&gt;&lt;/a&gt; changed things so that the empty string was treated the same as a null namespace this broke that schema.&lt;/p&gt;</comment>
                            <comment id="13658956" author="mhuff" created="Wed, 15 May 2013 22:52:13 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;--Thank you very much for this patch! We have verified that it fixed the issue we were encountering.&lt;/p&gt;</comment>
                            <comment id="13659074" author="cutting" created="Thu, 16 May 2013 00:21:44 +0000"  >&lt;p&gt;Glad to hear this works!  I&apos;ll commit it soon unless someone objects.&lt;/p&gt;</comment>
                            <comment id="13659746" author="cutting" created="Thu, 16 May 2013 17:34:16 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                            <comment id="13660089" author="hudson" created="Thu, 16 May 2013 22:32:58 +0000"  >&lt;p&gt;Integrated in AvroJava #374 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/374/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/374/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1331&quot; title=&quot;Java reader backwards-compatibility breakage&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1331&quot;&gt;&lt;del&gt;AVRO-1331&lt;/del&gt;&lt;/a&gt;. Java: Fix schema-parsing incompatibility introduced in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1295&quot; title=&quot;null namespace within non-null is not print/parse consistent&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1295&quot;&gt;&lt;del&gt;AVRO-1295&lt;/del&gt;&lt;/a&gt;. (Revision 1483463)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
cutting : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/Schema.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310050">
                    <name>Regression</name>
                                                                <inwardlinks description="is broken by">
                                        <issuelink>
            <issuekey id="12641884">AVRO-1295</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12583377" name="AVRO-1331.patch" size="1426" author="cutting" created="Wed, 15 May 2013 21:06:56 +0000"/>
                            <attachment id="12583344" name="stripped-snipped.avro" size="795" author="trochee" created="Wed, 15 May 2013 17:56:16 +0000"/>
                            <attachment id="12583345" name="stripped-snipped.schema" size="1780" author="trochee" created="Wed, 15 May 2013 17:56:16 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 15 May 2013 21:06:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>328146</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 36 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1km8f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>328490</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1332] Improve C# DatumReader performance</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1332</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The current implementations of the C# datum readers perform resolution of the reader and writer schema on every call to Read. In my tests this was causing it to perform poorly when reading a large number of records (slower than parsing the same data from delimited text files). It would be more efficient if the reader only needed to resolve the schemas once.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12648316">AVRO-1332</key>
            <summary>Improve C# DatumReader performance</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dmcintosh">David McIntosh</assignee>
                                    <reporter username="dmcintosh">David McIntosh</reporter>
                        <labels>
                            <label>performance</label>
                    </labels>
                <created>Sat, 18 May 2013 20:13:16 +0000</created>
                <updated>Thu, 23 Jan 2014 21:58:55 +0000</updated>
                            <resolved>Fri, 8 Nov 2013 22:16:38 +0000</resolved>
                                    <version>1.7.5</version>
                                    <fixVersion>1.7.6</fixVersion>
                                    <component>csharp</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13661424" author="dmcintosh" created="Sat, 18 May 2013 20:29:41 +0000"  >&lt;p&gt;I rearranged the code from the existing readers into a new set of readers that pre-resolve the schemas to allow for much faster reading. I&apos;m unsure of how to best integrate this into the code. The old reader allowed clients to extend functionality in a way that is not compatible with the new reader. If that needs to be preserved we can keep both sets of readers. For now I&apos;ve put in a hack that redirects calls to the old reader to the new one so I could make sure all the unit tests pass.&lt;/p&gt;</comment>
                            <comment id="13761636" author="dmcintosh" created="Mon, 9 Sep 2013 05:44:11 +0000"  >&lt;p&gt;This patch is updated to accomodate the changes that went in for 1.7.5. It includes new versions of the datum readers &amp;amp; writers that pre-resolve the schemas to more efficiently read/write large numbers of records. It also includes a patch to the data file api to allow specifying a custom datum reader when reading a file and a basic performance testing project to compare the old and new versions. In order to verify that the new versions pass all unit tests the default implementations have been rerouted to the new version.&lt;/p&gt;

&lt;p&gt;Some test results are below. The tests performed 1,000,000 serializations of various types of records followed by 1,000,000 deserializations. Time is measured in ms. Batch size was also altered to judge the increased overhead of constructing the new datum reader/writers. A batch size of 10 indicates a new reader/writer was created every 10 records.&lt;/p&gt;

&lt;p&gt;Test 1: Simple record (only primitive avro types)&lt;br/&gt;
serializing:&lt;/p&gt;
&lt;div class=&apos;table-wrap&apos;&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;batch size&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old generic&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new generic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2044&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;6723&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2574&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;7550&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2043&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2184&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2574&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2948&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;100&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2012&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1669&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2543&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2402&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1000&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1996&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1638&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2542&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2309&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;


&lt;p&gt;deserializing:&lt;/p&gt;
&lt;div class=&apos;table-wrap&apos;&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;batch size&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old generic&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new generic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4415&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;63071&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;6006&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;13011&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4415&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;7161&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5959&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2902&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;100&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4400&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1513&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5944&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1857&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1000&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4384&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;936&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5960&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1778&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;


&lt;p&gt;Test 2: complex record including arrays,enums,unions,etc&lt;br/&gt;
serializing:&lt;/p&gt;
&lt;div class=&apos;table-wrap&apos;&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;batch size&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old generic&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new generic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;16162&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;44117&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14164&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;45771&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;16162&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;18658&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14149&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;21154&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;100&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;16131&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;15943&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14118&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;18501&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1000&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;15912&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;15663&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14149&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;18252&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;


&lt;p&gt;deserializing:&lt;/p&gt;
&lt;div class=&apos;table-wrap&apos;&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;batch size&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old generic&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new generic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;28954&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;997080&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;26006&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;79950&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;28875&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;111463&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;26068&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;21076&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;100&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;28657&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;22620&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;26021&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;15054&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1000&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;28408&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;13650&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;25850&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14431&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;






</comment>
                            <comment id="13763191" author="cutting" created="Tue, 10 Sep 2013 16:43:37 +0000"  >&lt;p&gt;The batch size=1000 seems like the case we care most about.  This is faster in all cases except when serializing a complex record.  Any idea why this is now slower?  Also, I wonder if some of the resolution can be cached, in order to keep the smaller batch sizes more competitive too?&lt;/p&gt;</comment>
                            <comment id="13764093" author="dmcintosh" created="Wed, 11 Sep 2013 07:59:04 +0000"  >&lt;p&gt;Yes, the readers/writers can be cached and reused. They should be thread-safe as well. I think it might be best for the users to manage that themselves if performance is a concern in their app.&lt;/p&gt;

&lt;p&gt;It looks like the Complex example ended up slower because the benefit of pre-resolving was small and there was extra overhead when processing the results of the pre-resolution.  The Complex schema had a lot of unions and arrays of basic types which won&apos;t see much speedup. I was able to make a few tweaks to shrink the time gap though. I also discovered one of the unit tests was failing and the fix slowed down the new specific writer slightly.&lt;/p&gt;

&lt;p&gt;Here are the new results for batch size 1000. I also included two other types. Narrow is a schema with 3 primitive fields. Wide has 35 fields of mostly primitives and a few child records.&lt;/p&gt;

&lt;p&gt;Serializing&lt;/p&gt;
&lt;div class=&apos;table-wrap&apos;&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;type&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old generic&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new generic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;simple&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1950&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1513&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2496&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1904&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;complex&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14696&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;16380&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;13806&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14945&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;narrow&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1030&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;796&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1217&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;952&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;wide&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;16599&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14586&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;13167&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10655&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;


&lt;p&gt;Deserializing&lt;/p&gt;
&lt;div class=&apos;table-wrap&apos;&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;type&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old generic&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new generic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;simple&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4321&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;905&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5647&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1669&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;complex&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;28158&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;13541&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;25631&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14071&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;narrow&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2355&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;515&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2854&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;764&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;wide&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;25116&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5319&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;30295&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10093&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
</comment>
                            <comment id="13764697" author="cutting" created="Wed, 11 Sep 2013 20:04:59 +0000"  >&lt;p&gt;With the latest patch, on Linux, one test fails:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;1) Test Error : Avro.Test.SpecificTests.TestEnumResolution()
   &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.IndexOutOfRangeException : Array index is out of range.
  at Avro.Generic.ResolvingDatumReader`1+&amp;lt;ResolveEnum&amp;gt;c__AnonStorey1[Avro.Test.EnumRecord].&amp;lt;&amp;gt;m__D (&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; r, Decoder d) [0x00000] in &amp;lt;filename unknown&amp;gt;:0
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, this patch makes some whitespace-only changes.  These are generally discouraged, as they make it harder for reviewers.&lt;/p&gt;

&lt;p&gt;Lastly, there are some changes to public APIs that I&apos;m not sure are back-compatible. (I don&apos;t know C#.)  Are these changes compatible or not?&lt;/p&gt;</comment>
                            <comment id="13765087" author="dmcintosh" created="Thu, 12 Sep 2013 02:03:02 +0000"  >&lt;p&gt;Can you double check that you applied the &quot;-3&quot; version of the patch? That was the test that was broken in the &quot;-2&quot; version but should be fixed in the &quot;-3&quot; version.&lt;/p&gt;

&lt;p&gt;I&apos;ll back out the whitespace changes.&lt;/p&gt;

&lt;p&gt;The approach I&apos;m thinking about taking to preserve compatibility is to leave the older readers/writers unchanged and introduce the new ones as alternate implementations. Anyone working through the DatumReader/Writer interfaces or the data file apis would be able to switch over to them seamlessly or perhaps they could even default to the newer ones. I&apos;d need to do some work on the unit test side to make sure the tests are running against both sets of readers/writers. This has the downside of having to maintain two sets of code that are very similar but if anyone is using the older internal implementations of the readers/writers (the ones that don&apos;t implement the interfaces) we can&apos;t remove them without a breaking change. &lt;/p&gt;
</comment>
                            <comment id="13765941" author="cutting" created="Thu, 12 Sep 2013 21:57:22 +0000"  >&lt;p&gt;You&apos;re right, I was using the -2 version of the patch.  Tests pass with the -3 version.&lt;/p&gt;</comment>
                            <comment id="13774113" author="dmcintosh" created="Sun, 22 Sep 2013 23:05:19 +0000"  >&lt;p&gt;This latest version of the patch adjusts the unit tests to cover both the new &amp;amp; old version of the readers and writers. The old versions have been restored to their original state.&lt;/p&gt;

&lt;p&gt;Serializing&lt;/p&gt;
&lt;div class=&apos;table-wrap&apos;&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;type&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old generic&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new generic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;simple&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2012&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1623&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2465&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2028&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;complex&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14945&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14867&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;13993&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;15428&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;narrow&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1061&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;795&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1233&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1014&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;wide&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;17441&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;9704&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;13479&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;11217&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;


&lt;p&gt;Deserializing&lt;/p&gt;
&lt;div class=&apos;table-wrap&apos;&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;type&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new specific&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;old generic&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;new generic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;simple&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4352&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;936&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5850&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1747&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;complex&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;29094&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14321&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;26911&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;14851&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;narrow&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2278&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;546&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2855&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;811&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;wide&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;25553&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5475&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;31683&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10499&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
</comment>
                            <comment id="13780337" author="jira-bot" created="Fri, 27 Sep 2013 20:27:16 +0000"  >&lt;p&gt;Commit 1527061 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1527061&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1527061&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1332&quot; title=&quot;Improve C# DatumReader performance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1332&quot;&gt;&lt;del&gt;AVRO-1332&lt;/del&gt;&lt;/a&gt;. C#: Improve DatumReader performance. Contributed by David McIntosh.&lt;/p&gt;</comment>
                            <comment id="13780339" author="cutting" created="Fri, 27 Sep 2013 20:27:58 +0000"  >&lt;p&gt;I committed this.  Thanks, David!&lt;/p&gt;</comment>
                            <comment id="13780400" author="hudson" created="Fri, 27 Sep 2013 21:08:30 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #398 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/398/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/398/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1332&quot; title=&quot;Improve C# DatumReader performance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1332&quot;&gt;&lt;del&gt;AVRO-1332&lt;/del&gt;&lt;/a&gt;. C#: Improve DatumReader performance. Contributed by David McIntosh. (cutting: rev 1527061)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/Avro.sln&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/build.sh&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/main/Avro.main.csproj&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/main/File/DataFileReader.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/main/Generic/DatumReader.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/main/Specific/ObjectCreator.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/test/File/FileTests.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/test/Generic/GenericTests.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/test/Specific/SpecificTests.cs&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13804644" author="dmcintosh" created="Thu, 24 Oct 2013 20:35:22 +0000"  >&lt;p&gt;I&apos;ve noticed two problems with this patch. The first is that only the modified files from the patch got committed into SVN. The newly added files were missed. I also found a bug with default value handling that was introduced with this patch. I adjusted the unit tests to trigger it and have made a fix.&lt;/p&gt;

&lt;p&gt;The &quot;defaults-patch-only&quot; patch includes only the new fix. The &quot;missing-fles-plus-defaults-patch&quot; patch includes the fix and the files from the &quot;-4&quot; patch that didn&apos;t make it into svn.&lt;/p&gt;

&lt;p&gt;If needed I can submit the defaults fix as a separate issue.&lt;/p&gt;</comment>
                            <comment id="13804658" author="dmcintosh" created="Thu, 24 Oct 2013 20:51:04 +0000"  >&lt;p&gt;Need to get missing files into svn&lt;/p&gt;</comment>
                            <comment id="13817748" author="jira-bot" created="Fri, 8 Nov 2013 22:15:22 +0000"  >&lt;p&gt;Commit 1540206 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1540206&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1540206&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1332&quot; title=&quot;Improve C# DatumReader performance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1332&quot;&gt;&lt;del&gt;AVRO-1332&lt;/del&gt;&lt;/a&gt;.  Add missing files and fix a bug with defaults.  Contributed by David McIntosh.&lt;/p&gt;</comment>
                            <comment id="13817749" author="cutting" created="Fri, 8 Nov 2013 22:16:38 +0000"  >&lt;p&gt;Oops!  Sorry I missed those files.  (We should have automated csharp builds to catch mistakes like that...)&lt;/p&gt;

&lt;p&gt;I just committed the missing files and the updated default handling.  Does this look better?&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13817971" author="hudson" created="Sat, 9 Nov 2013 03:03:09 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #403 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/403/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/403/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1332&quot; title=&quot;Improve C# DatumReader performance&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1332&quot;&gt;&lt;del&gt;AVRO-1332&lt;/del&gt;&lt;/a&gt;.  Add missing files and fix a bug with defaults.  Contributed by David McIntosh. (cutting: rev 1540206)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/main/Generic/GenericDatumReader.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/main/Generic/GenericDatumWriter.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/main/Generic/PreresolvingDatumReader.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/main/Generic/PreresolvingDatumWriter.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/main/Specific/SpecificDatumReader.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/main/Specific/SpecificDatumWriter.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/perf&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/perf/Avro.perf.csproj&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/perf/PerfTest.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/perf/com&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/perf/com/foo&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/perf/com/foo/A.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/perf/com/foo/Complex.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/perf/com/foo/MyEnum.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/perf/com/foo/MyFixed.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/perf/com/foo/Narrow.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/perf/com/foo/Simple.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/perf/com/foo/Wide.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/perf/com/foo/newRec.cs&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/perf/schema.avsc&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/csharp/src/apache/test/Generic/GenericTests.cs&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13820482" author="dmcintosh" created="Tue, 12 Nov 2013 21:23:04 +0000"  >&lt;p&gt;Looks good now, thanks!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12602092" name="AVRO-1332-2.patch" size="167060" author="dmcintosh" created="Mon, 9 Sep 2013 05:44:11 +0000"/>
                            <attachment id="12602546" name="AVRO-1332-3.patch" size="168754" author="dmcintosh" created="Wed, 11 Sep 2013 07:59:04 +0000"/>
                            <attachment id="12604477" name="AVRO-1332-4.patch" size="180539" author="dmcintosh" created="Sun, 22 Sep 2013 23:05:19 +0000"/>
                            <attachment id="12610144" name="AVRO-1332-defaults-patch-only.patch" size="4808" author="dmcintosh" created="Thu, 24 Oct 2013 20:35:22 +0000"/>
                            <attachment id="12610145" name="AVRO-1332-missing-files-plus-defaults-patch.patch" size="135251" author="dmcintosh" created="Thu, 24 Oct 2013 20:35:22 +0000"/>
                            <attachment id="12583739" name="AVRO-1332.patch" size="56061" author="dmcintosh" created="Sat, 18 May 2013 20:29:41 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 10 Sep 2013 16:43:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>328672</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 10 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kph3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>329015</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Improved DatumReader performance</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1333] compare strings with .equals</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1333</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;this.spanStorageDir == other.spanStorageDir);&lt;br/&gt;
+      this.spanStorageDir.equals(other.spanStorageDir));&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12648379">AVRO-1333</key>
            <summary>compare strings with .equals</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.svg">Trivial</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="dbrosius">Dave Brosius</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 May 2013 03:44:05 +0000</created>
                <updated>Tue, 23 Jul 2013 21:40:30 +0000</updated>
                                            <version>1.7.4</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13717655" author="renato2099" created="Tue, 23 Jul 2013 21:40:30 +0000"  >&lt;p&gt;So is this resolved? I&apos;d like to chip in wherever is possible (:&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12583788" name="1333.txt" size="672" author="dbrosius" created="Mon, 20 May 2013 03:44:37 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 23 Jul 2013 21:40:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>328735</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 26 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kpv3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>329078</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1334] Java: update dependencies</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1334</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;A report for mvn versions:display-property-updates on trunk &amp;#8211;&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[INFO] The following version properties are referencing the newest available version:
[INFO]   ${jetty.version} ............................................. 6.1.26
[INFO]   ${javacc-plugin.version} ........................................ 2.6
[INFO]   ${velocity.version} ............................................. 1.7
[INFO]   ${exec-plugin.version} ........................................ 1.2.1
[INFO] The following version property updates are available:
[INFO]   ${jackson.version} .................................. 1.8.8 -&amp;gt; 1.9.11
[INFO]   ${source-plugin.version} ............................. 2.1.2 -&amp;gt; 2.2.1
[INFO]   ${jar-plugin.version} .................................. 2.3.2 -&amp;gt; 2.4
[INFO]   ${snappy.version} ................................. 1.0.5 -&amp;gt; 1.1.0-M3
[INFO]   ${checkstyle-plugin.version} ............................ 2.8 -&amp;gt; 2.10
[INFO]   ${hadoop1.version} .............................. 0.20.205.0 -&amp;gt; 1.1.2
[INFO]   ${commons-compress.version} ............................ 1.4.1 -&amp;gt; 1.5
[INFO]   ${plugin-plugin.version} ................................. 2.9 -&amp;gt; 3.2
[INFO]   ${javadoc-plugin.version} ................................ 2.8 -&amp;gt; 2.9
[INFO]   ${compiler-plugin.version} ............................. 2.3.2 -&amp;gt; 3.1
[INFO]   ${jopt-simple.version} ................................... 4.1 -&amp;gt; 4.4
[INFO]   ${surefire-plugin.version} ........................... 2.12 -&amp;gt; 2.14.1
[INFO]   ${paranamer.version} ................................... 2.3 -&amp;gt; 2.5.2
[INFO]   ${netty.version} ........................ 3.4.0.Final -&amp;gt; 4.0.0.Alpha8
[INFO]   ${slf4j.version} ..................................... 1.6.4 -&amp;gt; 1.7.5
[INFO]   ${shade-plugin.version} .................................. 1.5 -&amp;gt; 2.1
[INFO]   ${junit.version} ....................................... 4.10 -&amp;gt; 4.11
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Consider upgrades for these as well as the Apache parent and build plugins.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12648534">AVRO-1334</key>
            <summary>Java: update dependencies</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="scott_carey">Scott Carey</reporter>
                        <labels>
                    </labels>
                <created>Tue, 21 May 2013 00:39:44 +0000</created>
                <updated>Mon, 1 Feb 2016 14:56:05 +0000</updated>
                            <resolved>Mon, 22 Sep 2014 22:08:09 +0000</resolved>
                                                    <fixVersion>1.8.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13662552" author="scott_carey" created="Tue, 21 May 2013 01:19:31 +0000"  >&lt;p&gt;Jackson requires an upgrade because there is currently a bug in Avro due to it (I ran into it in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1325&quot; title=&quot;Enhanced Schema Builder API&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1325&quot;&gt;&lt;del&gt;AVRO-1325&lt;/del&gt;&lt;/a&gt;, unit tests there fail without Jackson 1.9.12.&lt;/p&gt;

&lt;p&gt;Hadoop1:  I am not sure what the best version here is &amp;#8211; 0.20.205 feels a bit old.  Suggestions?&lt;/p&gt;

&lt;p&gt;Jopt-simple is a low risk update.&lt;br/&gt;
Paranamer is a low risk update (only a handful of bugfixes).&lt;br/&gt;
sfl4j looks safe to update (performance improvements, bug fixes, and now compiled against Java 1.5 target).&lt;br/&gt;
Junit is safe to update.&lt;/p&gt;

&lt;p&gt;netty &amp;#8211; netty 3.6.6.GA should be compatible (see &lt;a href=&quot;http://netty.io/news/index.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://netty.io/news/index.html&lt;/a&gt;) and has many fixes / enhancements.&lt;br/&gt;
  (an aside, netty now supports HTTP, so perhaps we can drop the ancient Jetty version we use and rely on netty for both raw and http to simplify things later?)&lt;/p&gt;

&lt;p&gt;The remainder are plugin updates, which are generally safe since testing them is easy to cover.&lt;/p&gt;

&lt;p&gt;I&apos;ll submit a patch with the updates shortly.&lt;/p&gt;</comment>
                            <comment id="13662662" author="scott_carey" created="Tue, 21 May 2013 04:14:15 +0000"  >&lt;p&gt;This patch updates versions of plugins and many dependencies.  Of note:&lt;/p&gt;

&lt;p&gt;Netty version 3.6.6 was causing a deadlock in unit tests every time for me in TestNettyServerWithCallbacks (mac, java7).  All versions of 3.4.x and 3.5.x including the current version hang about 15% of the time in TestNettyTransceiverWhenServerStops.   I upgraded to the latest in the 3.5.x series.&lt;/p&gt;

&lt;p&gt;I cleaned up some version consistency in a few places, and the JUnit/Hamcrest relationship has changed a little.&lt;/p&gt;

&lt;p&gt;The newer maven plugin versions triggered deprecations in the maven plugins, so I updated those trivially. &lt;/p&gt;</comment>
                            <comment id="13662664" author="scott_carey" created="Tue, 21 May 2013 04:17:29 +0000"  >&lt;p&gt;And lastly, the TestIDL had to be changed since the Jackson upgrade changed the whitespace in pretty print slightly (an empty array is now &quot;[]&quot; instead of &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;\n&amp;#93;&lt;/span&gt;&quot;, so I made the test insensitive to whitespace.&lt;/p&gt;</comment>
                            <comment id="13662670" author="scott_carey" created="Tue, 21 May 2013 04:31:39 +0000"  >&lt;p&gt;Dependencies I did not update that I defer to the expertise of others (a.k.a. I have no idea what the best thing to do is).&lt;/p&gt;

&lt;p&gt;hadoop1&lt;br/&gt;
hadoop2&lt;br/&gt;
thrift&lt;br/&gt;
protobuf&lt;/p&gt;</comment>
                            <comment id="13662796" author="hudson" created="Tue, 21 May 2013 08:09:42 +0000"  >&lt;p&gt;Integrated in AvroJava #375 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/375/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/375/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1334&quot; title=&quot;Java: update dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1334&quot;&gt;&lt;del&gt;AVRO-1334&lt;/del&gt;&lt;/a&gt;. Java: Upgrade snappy-java dependency to 1.0.5 (Revision 1484656)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
scottcarey : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/pom.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13732593" author="cutting" created="Wed, 7 Aug 2013 19:10:10 +0000"  >&lt;p&gt;There was a commit against this issue, but it only updated snappy.  Do you want to get the rest of these updates into 1.7.5?  Or should we slip this to 1.8.0?&lt;/p&gt;</comment>
                            <comment id="13736639" author="scott_carey" created="Mon, 12 Aug 2013 06:51:35 +0000"  >&lt;p&gt;I think the snappy issue was separate (or should have been as I opened a differnt JIRA for that).&lt;/p&gt;

&lt;p&gt;Jackson has been updated to the latest 1.9.x because of a bug found while thoroughly testing the new schema builder API, as part of that ticket.&lt;/p&gt;</comment>
                            <comment id="13736643" author="scott_carey" created="Mon, 12 Aug 2013 06:55:39 +0000"  >&lt;p&gt;Most of the other version changes relate to the build plugins.  It would be useful to move up to requiring maven 3 and use all of the latest build plugins there, but that can wait until after 1.7.5.   &lt;/p&gt;

&lt;p&gt;My other comments from May apply, but can wait until after 1.7.5.   I&apos;d rather get a release out and work on another than delay any longer.&lt;/p&gt;</comment>
                            <comment id="14128951" author="cutting" created="Wed, 10 Sep 2014 19:16:17 +0000"  >&lt;p&gt;Here&apos;s an updated version of this patch.  It also updates protobuf, thrift, &amp;amp; hadoop to current versions.  All tests pass for me.&lt;/p&gt;

&lt;p&gt;Here&apos;s the output of &apos;mvn versions:display-property-updates&apos;:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;[INFO] The following version properties are referencing the newest available version:
[INFO]   ${jackson.version} ........................................... 1.9.13
[INFO]   ${jetty.version} ............................................. 6.1.26
[INFO]   ${jar-plugin.version} ........................................... 2.5
[INFO]   ${source-plugin.version} ........................................ 2.3
[INFO]   ${hamcrest.version} ............................................. 1.3
[INFO]   ${bundle-plugin-version} ...................................... 2.5.3
[INFO]   ${plugin-plugin.version} ........................................ 3.3
[INFO]   ${javadoc-plugin.version} ..................................... 2.9.1
[INFO]   ${compiler-plugin.version} ...................................... 3.1
[INFO]   ${velocity.version} ............................................. 1.7
[INFO]   ${hadoop2.version} ............................................ 2.5.0
[INFO]   ${easymock.version} ............................................. 3.2
[INFO]   ${commons-httpclient.version} ................................... 3.1
[INFO]   ${paranamer.version} ............................................ 2.7
[INFO]   ${exec-plugin.version} ........................................ 1.3.2
[INFO]   ${snappy.version} ........................................... 1.1.1.3
[INFO]   ${hadoop1.version} ............................................ 1.2.1
[INFO]   ${checkstyle-plugin.version} ................................. 2.12.1
[INFO]   ${commons-compress.version} ................................... 1.8.1
[INFO]   ${javacc-plugin.version} ........................................ 2.6
[INFO]   ${jopt-simple.version} .......................................... 4.7
[INFO]   ${tukaani.version} .............................................. 1.5
[INFO]   ${surefire-plugin.version} ..................................... 2.17
[INFO]   ${slf4j.version} .............................................. 1.7.7
[INFO] The following version property updates are available:
[INFO]   ${netty.version} ....................... 3.5.13.Final -&amp;gt; 4.0.0.Alpha8
[INFO]   ${junit.version} ................................ 4.11 -&amp;gt; 4.12-beta-1
[INFO]   ${shade-plugin.version} ................................ 1.7.1 -&amp;gt; 2.3
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If there are no objections, I&apos;ll commit this soon.&lt;/p&gt;</comment>
                            <comment id="14143916" author="jira-bot" created="Mon, 22 Sep 2014 22:07:35 +0000"  >&lt;p&gt;Commit 1626912 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1626912&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1626912&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1334&quot; title=&quot;Java: update dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1334&quot;&gt;&lt;del&gt;AVRO-1334&lt;/del&gt;&lt;/a&gt;. Java: Update versions of many dependencies.&lt;/p&gt;</comment>
                            <comment id="14143918" author="cutting" created="Mon, 22 Sep 2014 22:08:10 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                            <comment id="14143965" author="hudson" created="Mon, 22 Sep 2014 22:39:07 +0000"  >&lt;p&gt;FAILURE: Integrated in AvroJava #481 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/481/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/481/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1334&quot; title=&quot;Java: update dependencies&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1334&quot;&gt;&lt;del&gt;AVRO-1334&lt;/del&gt;&lt;/a&gt;. Java: Update versions of many dependencies. (cutting: rev 1626912)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/ipc/src/test/java/org/apache/avro/ipc/TestNettyTransceiverWhenServerStops.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/maven-plugin/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/maven-plugin/src/main/java/org/apache/avro/mojo/AbstractAvroMojo.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/Test.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/thrift/src/test/java/org/apache/avro/thrift/test/E.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/thrift/src/test/java/org/apache/avro/thrift/test/Error.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/thrift/src/test/java/org/apache/avro/thrift/test/Foo.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/thrift/src/test/java/org/apache/avro/thrift/test/FooOrBar.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/thrift/src/test/java/org/apache/avro/thrift/test/Nested.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/thrift/src/test/java/org/apache/avro/thrift/test/Test.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/BinaryFragmentToJsonTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/CatTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/CreateRandomFileTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/DataFileGetMetaTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/DataFileReadTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/DataFileWriteTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/FromTextTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/JsonToBinaryFragmentTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/RecodecTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/RpcReceiveTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/RpcSendTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/ToTrevniTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/trevni/avro/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/trevni/core/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/trevni/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/pom.xml&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12729283">AVRO-1550</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12667817" name="AVRO-1334.patch" size="236846" author="cutting" created="Wed, 10 Sep 2014 19:16:17 +0000"/>
                            <attachment id="12583951" name="AVRO-1334.patch" size="12056" author="scott_carey" created="Tue, 21 May 2013 04:14:15 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 21 May 2013 08:09:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>328889</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 17 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kqt3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>329231</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1335] C++ should support field default values</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1335</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;We found that resolvingDecoder could not provide bidirectional compatibility between different version of schemas.&lt;/p&gt;

&lt;p&gt;Especially for records, for example:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;First schema&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{
    &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;TestRecord&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [
        {
            &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;MyData&quot;&lt;/span&gt;,
			&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: {
				&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
				&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;SubData&quot;&lt;/span&gt;,
				&lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [
					{
						&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;Version1&quot;&lt;/span&gt;,
						&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;
					}
				]
			}
        },
	{
            &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;OtherData&quot;&lt;/span&gt;,
            &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;
        }
    ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;Second schema&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{
    &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;TestRecord&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [
        {
            &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;MyData&quot;&lt;/span&gt;,
			&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: {
				&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
				&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;SubData&quot;&lt;/span&gt;,
				&lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [
					{
						&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;Version1&quot;&lt;/span&gt;,
						&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;
					},
					{
						&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;Version2&quot;&lt;/span&gt;,
						&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;
					}
				]
			}
        },
	{
            &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;OtherData&quot;&lt;/span&gt;,
            &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;
        }
    ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Say, node A knows only the first schema and node B knows the second schema, and the second schema has more fields. &lt;br/&gt;
Any data generated by node B can be resolved by first schema &apos;cause the additional field is marked as skipped.&lt;br/&gt;
But data generated by node A can not be resolved by second schema and throws an exception &lt;b&gt;&quot;Don&apos;t know how to handle excess fields for reader.&quot;&lt;/b&gt;&lt;br/&gt;
This is because data is resolved exactly according to the auto-generated codec_traits which trying to read the excess field.&lt;br/&gt;
The problem is we just can not only ignore the excess field in record, since the data after the troublesome record also needs to be resolved.&lt;br/&gt;
Actually this problem stucked us for a very long time.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="12648550">AVRO-1335</key>
            <summary>C++ should support field default values</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vimota">Victor Mota</assignee>
                                    <reporter username="keyer">Bin Guo</reporter>
                        <labels>
                    </labels>
                <created>Tue, 21 May 2013 03:14:52 +0000</created>
                <updated>Fri, 28 Dec 2018 16:22:30 +0000</updated>
                            <resolved>Sun, 14 Oct 2018 18:26:26 +0000</resolved>
                                    <version>1.7.4</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>c++</component>
                        <due></due>
                            <votes>7</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="13662642" author="scott_carey" created="Tue, 21 May 2013 03:50:05 +0000"  >&lt;p&gt;The second record must specify a default value for the added field:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
{
&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;Version2&quot;&lt;/span&gt;,
&lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;,
&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt;:&quot;&quot;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Otherwise, when reading with the second schema, and there is no data for field &quot;Version2&quot; in the data written with the first schema, what do you want it to do?&lt;/p&gt;

&lt;p&gt;The Avro specification uses default values to handle the use case where a field is present for the reader but not the writer.&lt;/p&gt;</comment>
                            <comment id="13662766" author="keyer" created="Tue, 21 May 2013 07:20:02 +0000"  >&lt;p&gt;Thanks, but &lt;b&gt;&quot;default&quot;&lt;/b&gt; is not supported in the latest C++ implementation(1.7.4) currently, and thus far the feature of &lt;b&gt;&quot;bidirectional compatibility&quot;&lt;/b&gt; is not available.&lt;br/&gt;
Without this feature, &lt;b&gt;schema-free&lt;/b&gt; communication or data synchronization between our C++ and Java application is not possible.&lt;br/&gt;
We have encountered several problems since began to use avro C++, and this one is most difficult to solve. &lt;br/&gt;
Is there any plan for this? Thanks a lot.&lt;/p&gt;</comment>
                            <comment id="13663119" author="scott_carey" created="Tue, 21 May 2013 16:54:14 +0000"  >&lt;p&gt;Thanks for the clarification.  Is it safe to summarize the issue as &quot;C++ should support field default values&quot;?  Or are there other things that are also preventing bidirectional schema evolution use cases besides default values?&lt;/p&gt;


&lt;p&gt;I cannot provide a time-frame for this, the volunteers who build and maintain the C++ Avro code may have more information.&lt;/p&gt;</comment>
                            <comment id="13663710" author="keyer" created="Wed, 22 May 2013 03:04:48 +0000"  >&lt;p&gt;Ok, I&apos;ve renamed the summary.&lt;br/&gt;
Furthermore, there is another thing about bidirectional schema evolution, but not a fatal one.&lt;br/&gt;
If a union has new element, the old reader will throw an exception when writer writes the very element. &lt;br/&gt;
That&apos;s quite normal but, in C++,  there is no difference between exceptions , except for the descriptions.&lt;br/&gt;
It would be better that exceptions are different inheritors of the current one, so that we can catch exceptions precisely(e.g. &quot;union has new element&quot;) and then handle them properly.&lt;/p&gt;</comment>
                            <comment id="14552239" author="pidefrem" created="Wed, 20 May 2015 12:25:37 +0000"  >&lt;p&gt;Included patch fixes issue with default values not being printed out when serializing the schema. Tests have been added to test this functionnality.&lt;/p&gt;

&lt;p&gt;Problem is described in the mail to the user list:&lt;br/&gt;
&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/avro-user/201504.mbox/%3CDUB130-W77519D4146DB3E05C81951A1E60%40phx.gbl%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/avro-user/201504.mbox/%3CDUB130-W77519D4146DB3E05C81951A1E60%40phx.gbl%3E&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14708299" author="peter_liu" created="Sun, 23 Aug 2015 04:56:40 +0000"  >&lt;p&gt;just did a quick test with the patch, but it didn&apos;t work, also it kind messed with the schema like below:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;{
    &quot;type&quot;: &quot;record&quot;,
    &quot;name&quot;: &quot;example&quot;,
    &quot;fields&quot;: [
        {
            &quot;name&quot;: &quot;city&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;default&quot;: &quot;string&quot;: &quot;default&quot;
        }
    ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15832518" author="vimota" created="Fri, 20 Jan 2017 22:32:07 +0000"  >&lt;p&gt;The patch fixes this issue, there&apos;s just a one line change that causes the issue Peter documented ^. &lt;/p&gt;

&lt;p&gt;If you change the call below in NodeRecord::printJson:&lt;br/&gt;
leafAttributes_.get&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;-&amp;gt;printDefaultToJson(defaultValues&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;, os, depth);&lt;br/&gt;
to &lt;br/&gt;
leafAttributes_.get&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;-&amp;gt;printDefaultToJson(defaultValues&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;, os, depth, false);&lt;/p&gt;

&lt;p&gt;Then Pierre&apos;s patch works. Would be great to have this fixed in the latest release, field default values is a very crucial feature that is missing in the C++ library. The issue should also be updated to remove the Affected Version (since it affects every version) and arguably it should be a bug instead of an improvement.&lt;/p&gt;</comment>
                            <comment id="16140653" author="githubbot" created="Thu, 24 Aug 2017 20:38:17 +0000"  >&lt;p&gt;GitHub user vimota opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/241&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/241&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1335&quot; title=&quot;C++ should support field default values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1335&quot;&gt;&lt;del&gt;AVRO-1335&lt;/del&gt;&lt;/a&gt;: Adds C++ support for default values in schema serializatio&#8230;&lt;/p&gt;

&lt;p&gt;    &#8230;n to json.&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/vimota/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/vimota/avro&lt;/a&gt; changes&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/241.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/241.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #241&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 6c2539769e004c01a0dca5978288ea3072f63e8f&lt;br/&gt;
Author: Victor Mota &amp;lt;vimota@gmail.com&amp;gt;&lt;br/&gt;
Date:   2017-08-20T01:56:03Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1335&quot; title=&quot;C++ should support field default values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1335&quot;&gt;&lt;del&gt;AVRO-1335&lt;/del&gt;&lt;/a&gt;: Adds C++ support for default values in schema serialization to json.&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="16140658" author="vimota" created="Thu, 24 Aug 2017 20:39:26 +0000"  >&lt;p&gt;I&apos;ve completed adding support for this and we have been using it in production for some time now. Just submitted a pull request for it: &lt;a href=&quot;https://github.com/apache/avro/pull/241&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/241&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="16143358" author="thiru_mg" created="Mon, 28 Aug 2017 04:29:24 +0000"  >&lt;p&gt;The pull request looks good. However a couple of minor issues:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Line 565 of &lt;tt&gt;setw&lt;/tt&gt; should use &lt;tt&gt;2 * sizeof(T)&lt;/tt&gt;. For `sizeof` operator gives the number of bytes for the given type but the width in hexadecimal is 2 per byte. Alternatively `setw` and `setfill` can be omitted altogether.&lt;/li&gt;
	&lt;li&gt;Style issues: `int_to_hex` could be renamed to `intToHex` to make it consistent with the rest of the code in the file.&lt;/li&gt;
	&lt;li&gt;The following code can be replaced with `memcpy`:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;       &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; j = 0; j &amp;lt; kByteStringSize; j++) {
              s[i*kByteStringSize + j] = hex_string[j];
       }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16202689" author="vimota" created="Thu, 12 Oct 2017 21:55:30 +0000"  >&lt;p&gt;Thanks for taking a look! I finally got around to making the fixes you recommended and also added more unit tests for bytes and fixed type:&lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/avro/pull/241&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/241&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I used string::replace instead of memcpy which should be fine right, it seemed safer. Also with regards to &quot;2 *  sizeof(T)&quot;, I don&apos;t quite follow and when I tried to make that modification all &quot;\u00ff&quot; (the format in the docs &lt;a href=&quot;https://avro.apache.org/docs/1.8.1/spec.html#schema_record&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://avro.apache.org/docs/1.8.1/spec.html#schema_record&lt;/a&gt;) would turn to &quot;\u0000&quot;. &lt;/p&gt;</comment>
                            <comment id="16312388" author="vimota" created="Fri, 5 Jan 2018 02:30:24 +0000"  >&lt;p&gt;Hi, please take a look at &lt;a href=&quot;https://github.com/apache/avro/pull/241&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/241&lt;/a&gt;. I&apos;ve made many changes since your original comments and fixed several other issues that came up after heavy usage for several months by our users at Google BigQuery. We&apos;d love to have this merged in so others can benefit and to make other bug fixes/features we&apos;ve added to the library easier to merge in subsequent PRs.&lt;/p&gt;</comment>
                            <comment id="16331789" author="vimota" created="Fri, 19 Jan 2018 06:07:20 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=thiru_mg&quot; class=&quot;user-hover&quot; rel=&quot;thiru_mg&quot;&gt;Thiruvalluvan M. G.&lt;/a&gt; would you be able to take a look at this PR when you have&#160;some time?&#160;&lt;/p&gt;</comment>
                            <comment id="16381027" author="githubbot" created="Wed, 28 Feb 2018 20:48:27 +0000"  >&lt;p&gt;vimota commented on issue #241: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1335&quot; title=&quot;C++ should support field default values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1335&quot;&gt;&lt;del&gt;AVRO-1335&lt;/del&gt;&lt;/a&gt;: Adds C++ support for default values in schema serializatio&#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/241#issuecomment-369377545&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/241#issuecomment-369377545&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Any updates on this?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16611206" author="vimota" created="Tue, 11 Sep 2018 20:33:46 +0000"  >&lt;p&gt;Assigning to myself since I have a PR out for this.&lt;/p&gt;

&lt;p&gt;&#160;&lt;/p&gt;</comment>
                            <comment id="16631429" author="githubbot" created="Fri, 28 Sep 2018 06:55:29 +0000"  >&lt;p&gt;lukejackson commented on issue #241: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1335&quot; title=&quot;C++ should support field default values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1335&quot;&gt;&lt;del&gt;AVRO-1335&lt;/del&gt;&lt;/a&gt;: Adds C++ support for default values in schema serializatio&#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/241#issuecomment-425340521&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/241#issuecomment-425340521&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   Anything the community can do to help get this PR into a state where it can be merged?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16632757" author="githubbot" created="Sat, 29 Sep 2018 03:21:27 +0000"  >&lt;p&gt;kojiromike commented on issue #241: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1335&quot; title=&quot;C++ should support field default values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1335&quot;&gt;&lt;del&gt;AVRO-1335&lt;/del&gt;&lt;/a&gt;: Adds C++ support for default values in schema serializatio&#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/241#issuecomment-425611638&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/241#issuecomment-425611638&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   There&#8217;s an effort to get Avro back on track in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2229&quot; title=&quot;Ability to test using a Docker image&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2229&quot;&gt;&lt;del&gt;AVRO-2229&lt;/del&gt;&lt;/a&gt;. One issue is that c++ tests are broken. One possible fix is in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2230&quot; title=&quot;./build.sh test fails in c++ due to assignment to const&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2230&quot;&gt;&lt;del&gt;AVRO-2230&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16635904" author="githubbot" created="Tue, 2 Oct 2018 18:03:44 +0000"  >&lt;p&gt;thiru-apache commented on a change in pull request #241: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1335&quot; title=&quot;C++ should support field default values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1335&quot;&gt;&lt;del&gt;AVRO-1335&lt;/del&gt;&lt;/a&gt;: Adds C++ support for default values in schema serializatio&#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/241#discussion_r222053541&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/241#discussion_r222053541&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/c++/impl/NodeImpl.cc&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -17,11 +17,42 @@&lt;br/&gt;
  */&lt;/p&gt;


&lt;p&gt;+#include &amp;lt;boost/algorithm/string/replace.hpp&amp;gt;&lt;br/&gt;
 #include &quot;NodeImpl.hh&quot;&lt;/p&gt;

&lt;p&gt;+&lt;br/&gt;
 namespace avro {&lt;/p&gt;

&lt;p&gt;-SchemaResolution &lt;br/&gt;
+namespace {&lt;br/&gt;
+// Escape double quotes (&quot;) for serialization.&lt;br/&gt;
+std::string escape(std::string s) &lt;/p&gt;
{
+  boost::replace_all(s, &quot;\&quot;&quot;, &quot;\\\&quot;&quot;);
+  return s;
+}
&lt;p&gt;+&lt;br/&gt;
+// Wrap an indentation in a struct for ostream operator&amp;lt;&amp;lt;&lt;br/&gt;
+struct indent {&lt;br/&gt;
+    indent(int depth) :&lt;br/&gt;
+        d(depth)&lt;br/&gt;
+    { }&lt;br/&gt;
+    int d;&lt;br/&gt;
+};&lt;br/&gt;
+&lt;br/&gt;
+/// ostream operator for indent&lt;br/&gt;
+std::ostream&amp;amp; operator &amp;lt;&amp;lt;(std::ostream &amp;amp;os, indent x)&lt;br/&gt;
+{&lt;br/&gt;
+    static const std::string spaces(&quot;    &quot;);&lt;br/&gt;
+    while(x.d--) {&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   Styling: space before `(` for `if`, `for` and `while`.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16635905" author="githubbot" created="Tue, 2 Oct 2018 18:03:44 +0000"  >&lt;p&gt;thiru-apache commented on a change in pull request #241: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1335&quot; title=&quot;C++ should support field default values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1335&quot;&gt;&lt;del&gt;AVRO-1335&lt;/del&gt;&lt;/a&gt;: Adds C++ support for default values in schema serializatio&#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/241#discussion_r222053332&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/241#discussion_r222053332&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/c++/impl/NodeImpl.cc&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -17,11 +17,42 @@&lt;br/&gt;
  */&lt;/p&gt;


&lt;p&gt;+#include &amp;lt;boost/algorithm/string/replace.hpp&amp;gt;&lt;br/&gt;
 #include &quot;NodeImpl.hh&quot;&lt;/p&gt;

&lt;p&gt;+&lt;br/&gt;
 namespace avro {&lt;/p&gt;

&lt;p&gt;-SchemaResolution &lt;br/&gt;
+namespace {&lt;br/&gt;
+// Escape double quotes (&quot;) for serialization.&lt;br/&gt;
+std::string escape(std::string s) {&lt;br/&gt;
+  boost::replace_all(s, &quot;\&quot;&quot;, &quot;\\\&quot;&quot;);&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   Shouldn&apos;t we escape `\` as well?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16635906" author="githubbot" created="Tue, 2 Oct 2018 18:03:44 +0000"  >&lt;p&gt;thiru-apache commented on a change in pull request #241: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1335&quot; title=&quot;C++ should support field default values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1335&quot;&gt;&lt;del&gt;AVRO-1335&lt;/del&gt;&lt;/a&gt;: Adds C++ support for default values in schema serializatio&#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/241#discussion_r222050819&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/241#discussion_r222050819&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/c++/api/NodeImpl.hh&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -538,6 +557,16 @@ inline NodePtr resolveSymbol(const NodePtr &amp;amp;node)&lt;br/&gt;
     return symNode-&amp;gt;getNode();&lt;br/&gt;
 }&lt;/p&gt;

&lt;p&gt;+template&amp;lt; typename T &amp;gt;&lt;br/&gt;
+inline std::string intToHex( T i )&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   Please take care of styling: No space after `(` or before `)`.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16635907" author="githubbot" created="Tue, 2 Oct 2018 18:03:44 +0000"  >&lt;p&gt;thiru-apache commented on a change in pull request #241: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1335&quot; title=&quot;C++ should support field default values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1335&quot;&gt;&lt;del&gt;AVRO-1335&lt;/del&gt;&lt;/a&gt;: Adds C++ support for default values in schema serializatio&#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/241#discussion_r222054059&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/241#discussion_r222054059&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/c++/impl/NodeImpl.cc&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -201,14 +216,177 @@ NodeRecord::printJson(std::ostream &amp;amp;os, int depth) const&lt;br/&gt;
         os &amp;lt;&amp;lt; indent(++depth) &amp;lt;&amp;lt; &quot;\&quot;name\&quot;: \&quot;&quot; &amp;lt;&amp;lt; leafNameAttributes_.get&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &amp;lt;&amp;lt; &quot;\&quot;,\n&quot;;&lt;br/&gt;
         os &amp;lt;&amp;lt; indent(depth) &amp;lt;&amp;lt; &quot;\&quot;type\&quot;: &quot;;&lt;br/&gt;
         leafAttributes_.get&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;-&amp;gt;printJson(os, depth);&lt;br/&gt;
+&lt;br/&gt;
+        if (!defaultValues.empty()) {&lt;br/&gt;
+          if (!defaultValues&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;.isUnion() &amp;amp;&amp;amp;&lt;br/&gt;
+              defaultValues&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;.type() == AVRO_NULL) &lt;/p&gt;
{
+            // No &quot;default&quot; field.
+          }
&lt;p&gt; else &lt;/p&gt;
{
+            os &amp;lt;&amp;lt; &quot;,\n&quot; &amp;lt;&amp;lt; indent(depth) &amp;lt;&amp;lt; &quot;\&quot;default\&quot;: &quot;;
+            leafAttributes_.get(i)-&amp;gt;printDefaultToJson(defaultValues[i], os,
+                                                       depth);
+          }
&lt;p&gt;+        }&lt;br/&gt;
         os &amp;lt;&amp;lt; &apos;\n&apos;;&lt;br/&gt;
         os &amp;lt;&amp;lt; indent(--depth) &amp;lt;&amp;lt; &apos;}&apos;;&lt;br/&gt;
     }&lt;br/&gt;
     os &amp;lt;&amp;lt; &apos;\n&apos; &amp;lt;&amp;lt; indent(--depth) &amp;lt;&amp;lt; &quot;]\n&quot;;&lt;br/&gt;
     os &amp;lt;&amp;lt; indent(--depth) &amp;lt;&amp;lt; &apos;}&apos;;&lt;br/&gt;
 }&lt;/p&gt;

&lt;p&gt;-void &lt;br/&gt;
+void NodePrimitive::printDefaultToJson(const GenericDatum &amp;amp;g, std::ostream &amp;amp;os,&lt;br/&gt;
+                                       int depth) const {&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   Shouldn&apos;t `depth` be used for indenting each line?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16645586" author="githubbot" created="Wed, 10 Oct 2018 21:50:21 +0000"  >&lt;p&gt;vimota commented on a change in pull request #241: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1335&quot; title=&quot;C++ should support field default values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1335&quot;&gt;&lt;del&gt;AVRO-1335&lt;/del&gt;&lt;/a&gt;: Adds C++ support for default values in schema serializatio&#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/241#discussion_r224252562&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/241#discussion_r224252562&lt;/a&gt;&lt;/p&gt;



&lt;p&gt; ##########&lt;br/&gt;
 File path: lang/c++/api/NodeImpl.hh&lt;br/&gt;
 ##########&lt;br/&gt;
 @@ -538,6 +557,16 @@ inline NodePtr resolveSymbol(const NodePtr &amp;amp;node)&lt;br/&gt;
     return symNode-&amp;gt;getNode();&lt;br/&gt;
 }&lt;/p&gt;

&lt;p&gt;+template&amp;lt; typename T &amp;gt;&lt;br/&gt;
+inline std::string intToHex( T i )&lt;/p&gt;

&lt;p&gt; Review comment:&lt;br/&gt;
   Done.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16649483" author="githubbot" created="Sun, 14 Oct 2018 18:25:46 +0000"  >&lt;p&gt;thiru-apache closed pull request #241: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1335&quot; title=&quot;C++ should support field default values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1335&quot;&gt;&lt;del&gt;AVRO-1335&lt;/del&gt;&lt;/a&gt;: Adds C++ support for default values in schema serializatio&#8230;&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/241&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/241&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/c+&lt;ins&gt;/api/Node.hh b/lang/c&lt;/ins&gt;+/api/Node.hh&lt;br/&gt;
index ff227b9e4..ebba375be 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/api/Node.hh&lt;br/&gt;
+++ b/lang/c++/api/Node.hh&lt;br/&gt;
@@ -77,7 +77,7 @@ std::ostream&amp;amp; operator &amp;lt;&amp;lt; (std::ostream&amp;amp; os, const Name&amp;amp; n) {&lt;br/&gt;
 /// The user does not use the Node object directly, they interface with Schema&lt;br/&gt;
 /// objects.&lt;br/&gt;
 ///&lt;br/&gt;
-/// The Node object uses reference-counted pointers.  This is so that schemas &lt;br/&gt;
+/// The Node object uses reference-counted pointers.  This is so that schemas&lt;br/&gt;
 /// may be reused in other other schemas, without needing to worry about memory&lt;br/&gt;
 /// deallocation for nodes that are added to multiple schema parse trees.&lt;br/&gt;
 ///&lt;br/&gt;
@@ -152,6 +152,11 @@ class AVRO_DECL Node : private boost::noncopyable&lt;/p&gt;

&lt;p&gt;     virtual void setLeafToSymbolic(int index, const NodePtr &amp;amp;node) = 0;&lt;/p&gt;

&lt;p&gt;+    // Serialize the default value GenericDatum g for the node contained&lt;br/&gt;
+    // in a record node.&lt;br/&gt;
+    virtual void printDefaultToJson(const GenericDatum&amp;amp; g, std::ostream &amp;amp;os,&lt;br/&gt;
+                                    int depth) const = 0;&lt;br/&gt;
+&lt;br/&gt;
   protected:&lt;/p&gt;

&lt;p&gt;     void checkLock() const {&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/api/NodeImpl.hh b/lang/c&lt;/ins&gt;+/api/NodeImpl.hh&lt;br/&gt;
index cbfcfb51f..0f3202368 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/api/NodeImpl.hh&lt;br/&gt;
+++ b/lang/c++/api/NodeImpl.hh&lt;br/&gt;
@@ -25,6 +25,9 @@&lt;br/&gt;
 #include &amp;lt;limits&amp;gt;&lt;br/&gt;
 #include &amp;lt;set&amp;gt;&lt;br/&gt;
 #include &amp;lt;boost/weak_ptr.hpp&amp;gt;&lt;br/&gt;
+#include &amp;lt;iomanip&amp;gt;&lt;br/&gt;
+#include &amp;lt;iostream&amp;gt;&lt;br/&gt;
+#include &amp;lt;sstream&amp;gt;&lt;/p&gt;

&lt;p&gt; #include &quot;Node.hh&quot;&lt;br/&gt;
 #include &quot;NodeConcepts.hh&quot;&lt;br/&gt;
@@ -34,8 +37,8 @@ namespace avro {&lt;br/&gt;
 /// Implementation details for Node.  NodeImpl represents all the avro types,&lt;br/&gt;
 /// whose properties are enabled are disabled by selecting concept classes.&lt;/p&gt;

&lt;p&gt;-template &lt;br/&gt;
-&amp;lt; &lt;br/&gt;
+template&lt;br/&gt;
+&amp;lt;&lt;br/&gt;
     class NameConcept,&lt;br/&gt;
     class LeavesConcept,&lt;br/&gt;
     class LeafNamesConcept,&lt;br/&gt;
@@ -54,9 +57,9 @@ class NodeImpl : public Node&lt;br/&gt;
         sizeAttribute_()&lt;br/&gt;
     { }&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;NodeImpl(Type type,&lt;/li&gt;
	&lt;li&gt;const NameConcept &amp;amp;name,&lt;/li&gt;
	&lt;li&gt;const LeavesConcept &amp;amp;leaves,&lt;br/&gt;
+    NodeImpl(Type type,&lt;br/&gt;
+             const NameConcept &amp;amp;name,&lt;br/&gt;
+             const LeavesConcept &amp;amp;leaves,&lt;br/&gt;
              const LeafNamesConcept &amp;amp;leafNames,&lt;br/&gt;
              const SizeConcept &amp;amp;size) :&lt;br/&gt;
         Node(type),&lt;br/&gt;
@@ -81,12 +84,12 @@ class NodeImpl : public Node&lt;br/&gt;
     void doSetName(const Name &amp;amp;name) 
{
         nameAttribute_.add(name);
     }&lt;/li&gt;
	&lt;li&gt;&lt;p&gt;+&lt;br/&gt;
     const Name &amp;amp;name() const &lt;/p&gt;
{
         return nameAttribute_.get();
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;void doAddLeaf(const NodePtr &amp;amp;newLeaf) {&lt;br/&gt;
+    void doAddLeaf(const NodePtr &amp;amp;newLeaf) 
{
         leafAttributes_.add(newLeaf);
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -94,11 +97,11 @@ class NodeImpl : public Node&lt;br/&gt;
         return leafAttributes_.size();&lt;br/&gt;
     }&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;const NodePtr &amp;amp;leafAt(int index) const {&lt;br/&gt;
+    const NodePtr &amp;amp;leafAt(int index) const 
{
         return leafAttributes_.get(index);
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;void doAddName(const std::string &amp;amp;name) {&lt;br/&gt;
+    void doAddName(const std::string &amp;amp;name) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {         if (! nameIndex_.add(name, leafNameAttributes_.size())) {
             throw Exception(boost::format(&quot;Cannot add duplicate name: %1%&quot;) % name);
         }@@ -109,7 +112,7 @@ class NodeImpl }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;const std::string &amp;amp;nameAt(int index) const {&lt;br/&gt;
+    const std::string &amp;amp;nameAt(int index) const 
{
         return leafNameAttributes_.get(index);
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -130,12 +133,12 @@ class NodeImpl : public Node&lt;br/&gt;
     void printBasicInfo(std::ostream &amp;amp;os) const;&lt;/p&gt;

&lt;p&gt;     void setLeafToSymbolic(int index, const NodePtr &amp;amp;node);&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;p&gt;+&lt;br/&gt;
     SchemaResolution furtherResolution(const Node &amp;amp;reader) const {&lt;br/&gt;
         SchemaResolution match = RESOLVE_NO_MATCH;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         if (reader.type() == AVRO_SYMBOLIC) {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;p&gt;+&lt;br/&gt;
             // resolve the symbolic type, and check again&lt;br/&gt;
             const NodePtr &amp;amp;node = reader.leafAt(0);&lt;br/&gt;
             match = resolve(*node);&lt;br/&gt;
@@ -145,7 +148,7 @@ class NodeImpl : public Node&lt;br/&gt;
             // in this case, need to see if there is an exact match for the&lt;br/&gt;
             // writer&apos;s type, or if not, the first one that can be promoted to a&lt;br/&gt;
             // match&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;&lt;p&gt;+&lt;br/&gt;
             for(size_t i= 0; i &amp;lt; reader.leaves(); ++i)  &lt;/p&gt;
{
 
                 const NodePtr &amp;amp;node = reader.leafAt(i);
@@ -157,7 +160,7 @@ class NodeImpl : public Node
                     break;
                 }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;// thisMatch is either no match, or promotable, this will set match to&lt;br/&gt;
+                // thisMatch is either no match, or promotable, this will set match to&lt;br/&gt;
                 // promotable if it hasn&apos;t been set already&lt;br/&gt;
                 if (match == RESOLVE_NO_MATCH) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {                     match = thisMatch;@@ -213,6 +216,8 @@ class AVRO_DECL NodePrimitive }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; class AVRO_DECL NodeSymbolic : public NodeImplSymbolic&lt;br/&gt;
@@ -240,6 +245,8 @@ class AVRO_DECL NodeSymbolic : public NodeImplSymbolic&lt;br/&gt;
         return (nameAttribute_.size() == 1);&lt;br/&gt;
     }&lt;/p&gt;

&lt;p&gt;+    void printDefaultToJson(const GenericDatum&amp;amp; g, std::ostream &amp;amp;os, int depth) const;&lt;br/&gt;
+&lt;br/&gt;
     bool isSet() const &lt;/p&gt;
{
          return (actualNode_.lock() != 0);
     }
&lt;p&gt;@@ -265,12 +272,12 @@ class AVRO_DECL NodeSymbolic : public NodeImplSymbolic&lt;br/&gt;
 class AVRO_DECL NodeRecord : public NodeImplRecord {&lt;br/&gt;
     std::vector&amp;lt;GenericDatum&amp;gt; defaultValues;&lt;br/&gt;
 public:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;NodeRecord() : NodeImplRecord(AVRO_RECORD) { }&lt;br/&gt;
+    NodeRecord() : NodeImplRecord(AVRO_RECORD) { }&lt;br/&gt;
     NodeRecord(const HasName &amp;amp;name, const MultiLeaves &amp;amp;fields,&lt;br/&gt;
         const LeafNames &amp;amp;fieldsNames,&lt;br/&gt;
         const std::vector&amp;lt;GenericDatum&amp;gt;&amp;amp; dv) :&lt;br/&gt;
         NodeImplRecord(AVRO_RECORD, name, fields, fieldsNames, NoSize()),&lt;/li&gt;
	&lt;li&gt;defaultValues(dv) {&lt;br/&gt;
+        defaultValues(dv) {&lt;br/&gt;
         for (size_t i = 0; i &amp;lt; leafNameAttributes_.size(); ++i) {&lt;br/&gt;
             if (!nameIndex_.add(leafNameAttributes_.get&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, i)) {&lt;br/&gt;
                 throw Exception(boost::format(&lt;br/&gt;
@@ -290,13 +297,15 @@ public:&lt;br/&gt;
     void printJson(std::ostream &amp;amp;os, int depth) const;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     bool isValid() const &lt;/p&gt;
{
-        return ((nameAttribute_.size() == 1) &amp;amp;&amp;amp; 
+        return ((nameAttribute_.size() == 1) &amp;amp;&amp;amp;
             (leafAttributes_.size() == leafNameAttributes_.size()));
     }

&lt;p&gt;     const GenericDatum&amp;amp; defaultValueAt(int index) &lt;/p&gt;
{
         return defaultValues[index];
     }
&lt;p&gt;+&lt;br/&gt;
+    void printDefaultToJson(const GenericDatum&amp;amp; g, std::ostream &amp;amp;os, int depth) const;&lt;br/&gt;
 };&lt;/p&gt;

&lt;p&gt; class AVRO_DECL NodeEnum : public NodeImplEnum&lt;br/&gt;
@@ -304,29 +313,31 @@ class AVRO_DECL NodeEnum : public NodeImplEnum&lt;br/&gt;
   public:&lt;/p&gt;

&lt;p&gt;     NodeEnum() :&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;NodeImplEnum(AVRO_ENUM)&lt;br/&gt;
+        NodeImplEnum(AVRO_ENUM)&lt;br/&gt;
     { }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     NodeEnum(const HasName &amp;amp;name, const LeafNames &amp;amp;symbols) :&lt;br/&gt;
         NodeImplEnum(AVRO_ENUM, name, NoLeaves(), symbols, NoSize())&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;{&lt;br/&gt;
+    {&lt;br/&gt;
         for(size_t i=0; i &amp;lt; leafNameAttributes_.size(); ++i) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {             if(!nameIndex_.add(leafNameAttributes_.get(i), i)) {
                  throw Exception(boost::format(&quot;Cannot add duplicate name: %1%&quot;) % leafNameAttributes_.get(i));
             }         }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;     }&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;&lt;p&gt;+&lt;br/&gt;
     SchemaResolution resolve(const Node &amp;amp;reader)  const;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     void printJson(std::ostream &amp;amp;os, int depth) const;&lt;/p&gt;

&lt;p&gt;     bool isValid() const &lt;/p&gt;
{
         return (
-                (nameAttribute_.size() == 1) &amp;amp;&amp;amp; 
-                (leafNameAttributes_.size() &amp;gt; 0) 
+                (nameAttribute_.size() == 1) &amp;amp;&amp;amp;
+                (leafNameAttributes_.size() &amp;gt; 0)
                );
     }
&lt;p&gt;+&lt;br/&gt;
+    void printDefaultToJson(const GenericDatum&amp;amp; g, std::ostream &amp;amp;os, int depth) const;&lt;br/&gt;
 };&lt;/p&gt;

&lt;p&gt; class AVRO_DECL NodeArray : public NodeImplArray&lt;br/&gt;
@@ -348,6 +359,8 @@ class AVRO_DECL NodeArray : public NodeImplArray&lt;br/&gt;
     bool isValid() const &lt;/p&gt;
{
         return (leafAttributes_.size() == 1);
     }
&lt;p&gt;+&lt;br/&gt;
+    void printDefaultToJson(const GenericDatum&amp;amp; g, std::ostream &amp;amp;os, int depth) const;&lt;br/&gt;
 };&lt;/p&gt;

&lt;p&gt; class AVRO_DECL NodeMap : public NodeImplMap&lt;br/&gt;
@@ -356,14 +369,14 @@ class AVRO_DECL NodeMap : public NodeImplMap&lt;/p&gt;

&lt;p&gt;     NodeMap() :&lt;br/&gt;
         NodeImplMap(AVRO_MAP)&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;{&lt;br/&gt;
+    
{
          NodePtr key(new NodePrimitive(AVRO_STRING));
          doAddLeaf(key);
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     explicit NodeMap(const SingleLeaf &amp;amp;values) :&lt;br/&gt;
         NodeImplMap(AVRO_MAP, NoName(), values, NoLeafNames(), NoSize())&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;{&lt;br/&gt;
+    
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {         // need to add the key for the map too         NodePtr key(new NodePrimitive(AVRO_STRING));         doAddLeaf(key);@@ -379,6 +392,8 @@ class AVRO_DECL NodeMap }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; class AVRO_DECL NodeUnion : public NodeImplUnion&lt;br/&gt;
@@ -453,6 +468,8 @@ class AVRO_DECL NodeUnion : public NodeImplUnion&lt;br/&gt;
         }&lt;br/&gt;
         return false;&lt;br/&gt;
     }&lt;br/&gt;
+&lt;br/&gt;
+    void printDefaultToJson(const GenericDatum&amp;amp; g, std::ostream &amp;amp;os, int depth) const;&lt;br/&gt;
 };&lt;/p&gt;

&lt;p&gt; class AVRO_DECL NodeFixed : public NodeImplFixed&lt;br/&gt;
@@ -473,19 +490,21 @@ class AVRO_DECL NodeFixed : public NodeImplFixed&lt;/p&gt;

&lt;p&gt;     bool isValid() const &lt;/p&gt;
{
         return (
-                (nameAttribute_.size() == 1) &amp;amp;&amp;amp; 
-                (sizeAttribute_.size() == 1) 
+                (nameAttribute_.size() == 1) &amp;amp;&amp;amp;
+                (sizeAttribute_.size() == 1)
                );
     }
&lt;p&gt;+&lt;br/&gt;
+    void printDefaultToJson(const GenericDatum&amp;amp; g, std::ostream &amp;amp;os, int depth) const;&lt;br/&gt;
 };&lt;/p&gt;

&lt;p&gt; template &amp;lt; class A, class B, class C, class D &amp;gt;&lt;br/&gt;
-inline void &lt;br/&gt;
+inline void&lt;br/&gt;
 NodeImpl&amp;lt;A,B,C,D&amp;gt;::setLeafToSymbolic(int index, const NodePtr &amp;amp;node)&lt;br/&gt;
 {&lt;br/&gt;
     if(!B::hasAttribute) &lt;/p&gt;
{
         throw Exception(&quot;Cannot change leaf node for nonexistent leaf&quot;);
-    }
&lt;p&gt; &lt;br/&gt;
+    }&lt;/p&gt;

&lt;p&gt;     NodePtr &amp;amp;replaceNode = const_cast&amp;lt;NodePtr &amp;amp;&amp;gt;(leafAttributes_.get(index));&lt;br/&gt;
     if(replaceNode-&amp;gt;name() != node-&amp;gt;name()) &lt;/p&gt;
{
@@ -501,7 +520,7 @@ NodeImpl&amp;lt;A,B,C,D&amp;gt;::setLeafToSymbolic(int index, const NodePtr &amp;amp;node)
 }

&lt;p&gt; template &amp;lt; class A, class B, class C, class D &amp;gt;&lt;br/&gt;
-inline void &lt;br/&gt;
+inline void&lt;br/&gt;
 NodeImpl&amp;lt;A,B,C,D&amp;gt;::printBasicInfo(std::ostream &amp;amp;os) const&lt;/p&gt;
 {
     os &amp;lt;&amp;lt; type();
@@ -529,7 +548,7 @@ NodeImpl&amp;lt;A,B,C,D&amp;gt;::printBasicInfo(std::ostream &amp;amp;os) const
 }


&lt;p&gt;-inline NodePtr resolveSymbol(const NodePtr &amp;amp;node) &lt;br/&gt;
+inline NodePtr resolveSymbol(const NodePtr &amp;amp;node)&lt;br/&gt;
 {&lt;br/&gt;
     if(node-&amp;gt;type() != AVRO_SYMBOLIC) &lt;/p&gt;
{
         throw Exception(&quot;Only symbolic nodes may be resolved&quot;);
@@ -538,6 +557,16 @@ inline NodePtr resolveSymbol(const NodePtr &amp;amp;node)
     return symNode-&amp;gt;getNode();
 }

&lt;p&gt;+template&amp;lt; typename T &amp;gt;&lt;br/&gt;
+inline std::string intToHex(T i)&lt;br/&gt;
+&lt;/p&gt;
{
+  std::stringstream stream;
+  stream &amp;lt;&amp;lt; &quot;\\u&quot;
+         &amp;lt;&amp;lt; std::setfill(&apos;0&apos;) &amp;lt;&amp;lt; std::setw(sizeof(T))
+         &amp;lt;&amp;lt; std::hex &amp;lt;&amp;lt; i;
+  return stream.str();
+}
&lt;p&gt;+&lt;br/&gt;
 } // namespace avro&lt;/p&gt;

&lt;p&gt; #endif&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/impl/Compiler.cc b/lang/c&lt;/ins&gt;+/impl/Compiler.cc&lt;br/&gt;
index 1252a717f..f3610651b 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/impl/Compiler.cc&lt;br/&gt;
+++ b/lang/c++/impl/Compiler.cc&lt;br/&gt;
@@ -349,7 +349,7 @@ static NodePtr makeFixedNode(const Entity&amp;amp; e,&lt;br/&gt;
 {&lt;br/&gt;
     int v = static_cast&amp;lt;int&amp;gt;(getLongField(e, m, &quot;size&quot;));&lt;br/&gt;
     if (v &amp;lt;= 0) &lt;/p&gt;
{
-        throw Exception(boost::format(&quot;Size for fixed is not positive: &quot;) %
+        throw Exception(boost::format(&quot;Size for fixed is not positive: %1%&quot;) %
             e.toString());
     }
&lt;p&gt;     return NodePtr(new NodeFixed(asSingleAttribute(name),&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/impl/NodeImpl.cc b/lang/c&lt;/ins&gt;+/impl/NodeImpl.cc&lt;br/&gt;
index 606cd2093..435d2ef5d 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/impl/NodeImpl.cc&lt;br/&gt;
+++ b/lang/c++/impl/NodeImpl.cc&lt;br/&gt;
@@ -17,14 +17,82 @@&lt;br/&gt;
  */&lt;/p&gt;


&lt;p&gt;+#include &amp;lt;boost/algorithm/string/replace.hpp&amp;gt;&lt;br/&gt;
 #include &quot;NodeImpl.hh&quot;&lt;/p&gt;

&lt;p&gt;+&lt;br/&gt;
 namespace avro {&lt;/p&gt;

&lt;p&gt;-SchemaResolution &lt;br/&gt;
+namespace {&lt;br/&gt;
+// Escape string for serialization.&lt;br/&gt;
+std::string escape(const std::string &amp;amp;unescaped) {&lt;br/&gt;
+  std::string s;&lt;br/&gt;
+  s.reserve(unescaped.length());&lt;br/&gt;
+  for (auto c : unescaped) {&lt;br/&gt;
+    switch (c) {&lt;br/&gt;
+      case &apos;&lt;br class=&quot;atl-forced-newline&quot; /&gt;&apos;:&lt;br/&gt;
+      case &apos;&quot;&apos;:&lt;br/&gt;
+      case &apos;/&apos;:&lt;br/&gt;
+        s += &apos;&lt;br class=&quot;atl-forced-newline&quot; /&gt;&apos;;&lt;br/&gt;
+        s += c;&lt;br/&gt;
+        break;&lt;br/&gt;
+      case &apos;\b&apos;:&lt;br/&gt;
+        s += &apos;&lt;br class=&quot;atl-forced-newline&quot; /&gt;&apos;;&lt;br/&gt;
+        s += &apos;b&apos;;&lt;br/&gt;
+        break;&lt;br/&gt;
+      case &apos;\f&apos;:&lt;br/&gt;
+        s += &apos;\f&apos;;&lt;br/&gt;
+        break;&lt;br/&gt;
+      case &apos;\n&apos;:&lt;br/&gt;
+        s += &apos;&lt;br class=&quot;atl-forced-newline&quot; /&gt;&apos;;&lt;br/&gt;
+        s += &apos;n&apos;;&lt;br/&gt;
+        break;&lt;br/&gt;
+      case &apos;\r&apos;:&lt;br/&gt;
+        s += &apos;&lt;br class=&quot;atl-forced-newline&quot; /&gt;&apos;;&lt;br/&gt;
+        s += &apos;r&apos;;&lt;br/&gt;
+        break;&lt;br/&gt;
+      case &apos;\t&apos;:&lt;br/&gt;
+        s += &apos;&lt;br class=&quot;atl-forced-newline&quot; /&gt;&apos;;&lt;br/&gt;
+        s += &apos;t&apos;;&lt;br/&gt;
+        break;&lt;br/&gt;
+      default:&lt;br/&gt;
+        if (!std::iscntrl(c, std::locale::classic())) &lt;/p&gt;
{
+          s += c;
+          continue;
+        }
&lt;p&gt;+        s += intToHex(static_cast&amp;lt;unsigned int&amp;gt;(c));&lt;br/&gt;
+        break;&lt;br/&gt;
+    }&lt;br/&gt;
+  }&lt;br/&gt;
+  return s;&lt;br/&gt;
+}&lt;br/&gt;
+&lt;br/&gt;
+// Wrap an indentation in a struct for ostream operator&amp;lt;&amp;lt;&lt;br/&gt;
+struct indent {&lt;br/&gt;
+    indent(int depth) :&lt;br/&gt;
+        d(depth)&lt;br/&gt;
+    { }&lt;br/&gt;
+    int d;&lt;br/&gt;
+};&lt;br/&gt;
+&lt;br/&gt;
+/// ostream operator for indent&lt;br/&gt;
+std::ostream&amp;amp; operator &amp;lt;&amp;lt;(std::ostream &amp;amp;os, indent x)&lt;br/&gt;
+{&lt;br/&gt;
+    static const std::string spaces(&quot;    &quot;);&lt;br/&gt;
+    while (x.d--) &lt;/p&gt;
{
+        os &amp;lt;&amp;lt; spaces;
+    }
&lt;p&gt;+    return os;&lt;br/&gt;
+}&lt;br/&gt;
+&lt;br/&gt;
+} // anonymous namespace&lt;br/&gt;
+&lt;br/&gt;
+const int kByteStringSize = 6;&lt;br/&gt;
+&lt;br/&gt;
+SchemaResolution&lt;br/&gt;
 NodePrimitive::resolve(const Node &amp;amp;reader) const&lt;br/&gt;
 {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if(type() == reader.type()) {&lt;br/&gt;
+    if (type() == reader.type()) 
{
         return RESOLVE_MATCH;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -32,17 +100,17 @@ NodePrimitive::resolve(const Node &amp;amp;reader) const&lt;/p&gt;

&lt;p&gt;       case AVRO_INT:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if( reader.type() == AVRO_LONG ) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+        if ( reader.type() == AVRO_LONG ) {
             return RESOLVE_PROMOTABLE_TO_LONG;
-        }   +        }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         // fall-through intentional&lt;/p&gt;

&lt;p&gt;       case AVRO_LONG:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;p&gt;+&lt;br/&gt;
         if (reader.type() == AVRO_FLOAT) &lt;/p&gt;
{
             return RESOLVE_PROMOTABLE_TO_FLOAT;
-        }
&lt;p&gt;   &lt;br/&gt;
+        }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         // fall-through intentional&lt;/p&gt;

&lt;p&gt;@@ -50,49 +118,49 @@ NodePrimitive::resolve(const Node &amp;amp;reader) const&lt;/p&gt;

&lt;p&gt;         if (reader.type() == AVRO_DOUBLE) &lt;/p&gt;
{
             return RESOLVE_PROMOTABLE_TO_DOUBLE;
-        }
&lt;p&gt;   &lt;br/&gt;
+        }&lt;/p&gt;

&lt;p&gt;       default:&lt;br/&gt;
         break;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;}&lt;br/&gt;
+    }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     return furtherResolution(reader);&lt;br/&gt;
 }&lt;/p&gt;

&lt;p&gt;-SchemaResolution &lt;br/&gt;
+SchemaResolution&lt;br/&gt;
 NodeRecord::resolve(const Node &amp;amp;reader) const&lt;br/&gt;
 {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if(reader.type() == AVRO_RECORD) {&lt;/li&gt;
	&lt;li&gt;if(name() == reader.name()) {&lt;br/&gt;
+    if (reader.type() == AVRO_RECORD) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+        if (name() == reader.name()) {
             return RESOLVE_MATCH;
         }     }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;     return furtherResolution(reader);&lt;br/&gt;
 }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-SchemaResolution &lt;br/&gt;
+SchemaResolution&lt;br/&gt;
 NodeEnum::resolve(const Node &amp;amp;reader) const&lt;br/&gt;
 {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if(reader.type() == AVRO_ENUM) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+    if (reader.type() == AVRO_ENUM) {
         return (name() == reader.name()) ? RESOLVE_MATCH : RESOLVE_NO_MATCH;
     }     return furtherResolution(reader); }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-SchemaResolution &lt;br/&gt;
+SchemaResolution&lt;br/&gt;
 NodeArray::resolve(const Node &amp;amp;reader) const&lt;br/&gt;
 {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if(reader.type() == AVRO_ARRAY) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+    if (reader.type() == AVRO_ARRAY) {
         const NodePtr &amp;amp;arrayType = leafAt(0);
         return arrayType-&amp;gt;resolve(*reader.leafAt(0));
     }     return furtherResolution(reader); }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-SchemaResolution &lt;br/&gt;
+SchemaResolution&lt;br/&gt;
 NodeMap::resolve(const Node &amp;amp;reader) const&lt;br/&gt;
 {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if(reader.type() == AVRO_MAP) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+    if (reader.type() == AVRO_MAP) {
         const NodePtr &amp;amp;mapType = leafAt(1);
         return mapType-&amp;gt;resolve(*reader.leafAt(1));
     }@@ -100,7 +168,7 @@ NodeMap}&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; SchemaResolution&lt;br/&gt;
-NodeUnion::resolve(const Node &amp;amp;reader) const &lt;br/&gt;
+NodeUnion::resolve(const Node &amp;amp;reader) const&lt;br/&gt;
 {&lt;/p&gt;

&lt;p&gt;     // If the writer is union, resolution only needs to occur when the selected&lt;br/&gt;
@@ -109,67 +177,49 @@ NodeUnion::resolve(const Node &amp;amp;reader) const&lt;br/&gt;
     // In this case, this function returns if there is a possible match given&lt;br/&gt;
     // any writer type, so just search type by type returning the best match&lt;br/&gt;
     // found.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;p&gt;+&lt;br/&gt;
     SchemaResolution match = RESOLVE_NO_MATCH;&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;for(size_t i=0; i &amp;lt; leaves(); ++i) {&lt;br/&gt;
+    for (size_t i=0; i &amp;lt; leaves(); ++i) {&lt;br/&gt;
         const NodePtr &amp;amp;node = leafAt&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;br/&gt;
         SchemaResolution thisMatch = node-&amp;gt;resolve(reader);&lt;/li&gt;
	&lt;li&gt;if(thisMatch == RESOLVE_MATCH) {&lt;br/&gt;
+        if (thisMatch == RESOLVE_MATCH) 
{
             match = thisMatch;
             break;
         }&lt;/li&gt;
	&lt;li&gt;if(match == RESOLVE_NO_MATCH) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+        if (match == RESOLVE_NO_MATCH) {
             match = thisMatch;
         }     }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;     return match;&lt;br/&gt;
 }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-SchemaResolution &lt;br/&gt;
+SchemaResolution&lt;br/&gt;
 NodeFixed::resolve(const Node &amp;amp;reader) const&lt;br/&gt;
 {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if(reader.type() == AVRO_FIXED) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+    if (reader.type() == AVRO_FIXED) {
         return (
                 (reader.fixedSize() == fixedSize()) &amp;amp;&amp;amp;
-                (reader.name() == name()) 
-            ) ? 
+                (reader.name() == name())
+            ) ?
             RESOLVE_MATCH : RESOLVE_NO_MATCH;
     }     return furtherResolution(reader); }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-SchemaResolution &lt;br/&gt;
+SchemaResolution&lt;br/&gt;
 NodeSymbolic::resolve(const Node &amp;amp;reader) const&lt;/p&gt;
 {
     const NodePtr &amp;amp;node = leafAt(0);
     return node-&amp;gt;resolve(reader);
 }

&lt;p&gt;-// Wrap an indentation in a struct for ostream operator&amp;lt;&amp;lt; &lt;br/&gt;
-struct indent { &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;indent(int depth) :&lt;/li&gt;
	&lt;li&gt;d(depth)&lt;/li&gt;
	&lt;li&gt;{ }&lt;/li&gt;
	&lt;li&gt;int d;&lt;br/&gt;
-};&lt;br/&gt;
-&lt;br/&gt;
-/// ostream operator for indent&lt;br/&gt;
-std::ostream&amp;amp; operator &amp;lt;&amp;lt;(std::ostream &amp;amp;os, indent x)&lt;br/&gt;
-{&lt;/li&gt;
	&lt;li&gt;static const std::string spaces(&quot;    &quot;);&lt;/li&gt;
	&lt;li&gt;while(x.d--) 
{
-        os &amp;lt;&amp;lt; spaces; 
-    }&lt;/li&gt;
	&lt;li&gt;return os;&lt;br/&gt;
-}&lt;br/&gt;
-&lt;br/&gt;
-void &lt;br/&gt;
+void&lt;br/&gt;
 NodePrimitive::printJson(std::ostream &amp;amp;os, int depth) const
 {
     os &amp;lt;&amp;lt; &apos;\&quot;&apos; &amp;lt;&amp;lt; type() &amp;lt;&amp;lt; &apos;\&quot;&apos;;
 }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-void &lt;br/&gt;
+void&lt;br/&gt;
 NodeSymbolic::printJson(std::ostream &amp;amp;os, int depth) const&lt;/p&gt;
 {
     os &amp;lt;&amp;lt; &apos;\&quot;&apos; &amp;lt;&amp;lt; nameAttribute_.get() &amp;lt;&amp;lt; &apos;\&quot;&apos;;
@@ -183,7 +233,7 @@ static void printName(std::ostream&amp;amp; os, const Name&amp;amp; n, int depth)
     os &amp;lt;&amp;lt; indent(depth) &amp;lt;&amp;lt; &quot;\&quot;name\&quot;: \&quot;&quot; &amp;lt;&amp;lt; n.simpleName() &amp;lt;&amp;lt; &quot;\&quot;,\n&quot;;
 }

&lt;p&gt;-void &lt;br/&gt;
+void&lt;br/&gt;
 NodeRecord::printJson(std::ostream &amp;amp;os, int depth) const&lt;br/&gt;
 {&lt;br/&gt;
     os &amp;lt;&amp;lt; &quot;{\n&quot;;&lt;br/&gt;
@@ -193,14 +243,27 @@ NodeRecord::printJson(std::ostream &amp;amp;os, int depth) const&lt;/p&gt;

&lt;p&gt;     int fields = leafAttributes_.size();&lt;br/&gt;
     ++depth;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;for(int i = 0; i &amp;lt; fields; ++i) {&lt;/li&gt;
	&lt;li&gt;if(i &amp;gt; 0) {&lt;br/&gt;
+    // Serialize &quot;default&quot; field:&lt;br/&gt;
+    assert(defaultValues.empty() || (defaultValues.size() == fields));&lt;br/&gt;
+    for (int i = 0; i &amp;lt; fields; ++i) {&lt;br/&gt;
+        if (i &amp;gt; 0) 
{
             os &amp;lt;&amp;lt; &apos;,&apos;;
         }
&lt;p&gt;         os &amp;lt;&amp;lt; &apos;\n&apos; &amp;lt;&amp;lt; indent(depth) &amp;lt;&amp;lt; &quot;{\n&quot;;&lt;br/&gt;
         os &amp;lt;&amp;lt; indent(++depth) &amp;lt;&amp;lt; &quot;\&quot;name\&quot;: \&quot;&quot; &amp;lt;&amp;lt; leafNameAttributes_.get&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &amp;lt;&amp;lt; &quot;\&quot;,\n&quot;;&lt;br/&gt;
         os &amp;lt;&amp;lt; indent(depth) &amp;lt;&amp;lt; &quot;\&quot;type\&quot;: &quot;;&lt;br/&gt;
         leafAttributes_.get&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;-&amp;gt;printJson(os, depth);&lt;br/&gt;
+&lt;br/&gt;
+        if (!defaultValues.empty()) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+          if (!defaultValues[i].isUnion() &amp;amp;&amp;amp;+              defaultValues[i].type() == AVRO_NULL) {
+            // No &quot;default&quot; field.
+          } else {
+            os &amp;lt;&amp;lt; &quot;,\n&quot; &amp;lt;&amp;lt; indent(depth) &amp;lt;&amp;lt; &quot;\&quot;default\&quot;: &quot;;
+            leafAttributes_.get(i)-&amp;gt;printDefaultToJson(defaultValues[i], os,
+                                                       depth);
+          }+        }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;         os &amp;lt;&amp;lt; &apos;\n&apos;;&lt;br/&gt;
         os &amp;lt;&amp;lt; indent(--depth) &amp;lt;&amp;lt; &apos;}&apos;;&lt;br/&gt;
     }&lt;br/&gt;
@@ -208,7 +271,159 @@ NodeRecord::printJson(std::ostream &amp;amp;os, int depth) const&lt;br/&gt;
     os &amp;lt;&amp;lt; indent(--depth) &amp;lt;&amp;lt; &apos;}&apos;;&lt;br/&gt;
 }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-void &lt;br/&gt;
+void NodePrimitive::printDefaultToJson(const GenericDatum &amp;amp;g, std::ostream &amp;amp;os,&lt;br/&gt;
+                                       int depth) const {&lt;br/&gt;
+  assert(isPrimitive(g.type()));&lt;br/&gt;
+&lt;br/&gt;
+  switch (g.type()) {&lt;br/&gt;
+    case AVRO_NULL:&lt;br/&gt;
+      os &amp;lt;&amp;lt; &quot;null&quot;;&lt;br/&gt;
+      break;&lt;br/&gt;
+    case AVRO_BOOL:&lt;br/&gt;
+      os &amp;lt;&amp;lt; (g.value&amp;lt;bool&amp;gt;() ? &quot;true&quot; : &quot;false&quot;);&lt;br/&gt;
+      break;&lt;br/&gt;
+    case AVRO_INT:&lt;br/&gt;
+      os &amp;lt;&amp;lt; g.value&amp;lt;int32_t&amp;gt;();&lt;br/&gt;
+      break;&lt;br/&gt;
+    case AVRO_LONG:&lt;br/&gt;
+      os &amp;lt;&amp;lt; g.value&amp;lt;int64_t&amp;gt;();&lt;br/&gt;
+      break;&lt;br/&gt;
+    case AVRO_FLOAT:&lt;br/&gt;
+      os &amp;lt;&amp;lt; std::to_string(g.value&amp;lt;float&amp;gt;());&lt;br/&gt;
+      break;&lt;br/&gt;
+    case AVRO_DOUBLE:&lt;br/&gt;
+      os &amp;lt;&amp;lt; std::to_string(g.value&amp;lt;double&amp;gt;());&lt;br/&gt;
+      break;&lt;br/&gt;
+    case AVRO_STRING:&lt;br/&gt;
+      os &amp;lt;&amp;lt; &quot;\&quot;&quot; &amp;lt;&amp;lt; escape(g.value&amp;lt;std::string&amp;gt;()) &amp;lt;&amp;lt; &quot;\&quot;&quot;;&lt;br/&gt;
+      break;&lt;br/&gt;
+    case AVRO_BYTES: {&lt;br/&gt;
+      // Convert to a string:&lt;br/&gt;
+      const std::vector&amp;lt;uint8_t&amp;gt; &amp;amp;vg = g.value&amp;lt;std::vector&amp;lt;uint8_t&amp;gt; &amp;gt;();&lt;br/&gt;
+      std::string s;&lt;br/&gt;
+      s.resize(vg.size() * kByteStringSize);&lt;br/&gt;
+      for (unsigned int i = 0; i &amp;lt; vg.size(); i++) &lt;/p&gt;
{
+        std::string hex_string = intToHex(static_cast&amp;lt;int&amp;gt;(vg[i]));
+        s.replace(i*kByteStringSize, kByteStringSize, hex_string);
+      }
&lt;p&gt;+      os &amp;lt;&amp;lt; &quot;\&quot;&quot; &amp;lt;&amp;lt; s &amp;lt;&amp;lt; &quot;\&quot;&quot;;&lt;br/&gt;
+    } break;&lt;br/&gt;
+    default:&lt;br/&gt;
+      break;&lt;br/&gt;
+  }&lt;br/&gt;
+}&lt;br/&gt;
+&lt;br/&gt;
+void NodeEnum::printDefaultToJson(const GenericDatum &amp;amp;g, std::ostream &amp;amp;os,&lt;br/&gt;
+                                  int depth) const &lt;/p&gt;
{
+  assert(g.type() == AVRO_ENUM);
+  os &amp;lt;&amp;lt; &quot;\&quot;&quot; &amp;lt;&amp;lt; g.value&amp;lt;GenericEnum&amp;gt;().symbol() &amp;lt;&amp;lt; &quot;\&quot;&quot;;
+}
&lt;p&gt;+&lt;br/&gt;
+void NodeFixed::printDefaultToJson(const GenericDatum &amp;amp;g, std::ostream &amp;amp;os,&lt;br/&gt;
+                                   int depth) const {&lt;br/&gt;
+  assert(g.type() == AVRO_FIXED);&lt;br/&gt;
+  // ex: &quot;\uOOff&quot;&lt;br/&gt;
+  // Convert to a string&lt;br/&gt;
+  const std::vector&amp;lt;uint8_t&amp;gt; &amp;amp;vg = g.value&amp;lt;GenericFixed&amp;gt;().value();&lt;br/&gt;
+  std::string s;&lt;br/&gt;
+  s.resize(vg.size() * kByteStringSize);&lt;br/&gt;
+  for (unsigned int i = 0; i &amp;lt; vg.size(); i++) &lt;/p&gt;
{
+    std::string hex_string = intToHex(static_cast&amp;lt;int&amp;gt;(vg[i]));
+    s.replace(i*kByteStringSize, kByteStringSize, hex_string);
+  }
&lt;p&gt;+  os &amp;lt;&amp;lt; &quot;\&quot;&quot; &amp;lt;&amp;lt; s &amp;lt;&amp;lt; &quot;\&quot;&quot;;&lt;br/&gt;
+}&lt;br/&gt;
+&lt;br/&gt;
+void NodeUnion::printDefaultToJson(const GenericDatum &amp;amp;g, std::ostream &amp;amp;os,&lt;br/&gt;
+                                   int depth) const &lt;/p&gt;
{
+  leafAt(0)-&amp;gt;printDefaultToJson(g, os, depth);
+}
&lt;p&gt;+&lt;br/&gt;
+void NodeArray::printDefaultToJson(const GenericDatum &amp;amp;g, std::ostream &amp;amp;os,&lt;br/&gt;
+                                   int depth) const {&lt;br/&gt;
+  assert(g.type() == AVRO_ARRAY);&lt;br/&gt;
+  // ex: &quot;default&quot;: &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&lt;br/&gt;
+  if (g.value&amp;lt;GenericArray&amp;gt;().value().empty()) &lt;/p&gt;
{
+    os &amp;lt;&amp;lt; &quot;[]&quot;;
+  }
&lt;p&gt; else {&lt;br/&gt;
+    os &amp;lt;&amp;lt; &quot;[\n&quot;;&lt;br/&gt;
+    depth++;&lt;br/&gt;
+&lt;br/&gt;
+    // Serialize all values of the array with recursive calls:&lt;br/&gt;
+    for (unsigned int i = 0; i &amp;lt; g.value&amp;lt;GenericArray&amp;gt;().value().size(); i++) {&lt;br/&gt;
+      if (i &amp;gt; 0) &lt;/p&gt;
{
+        os &amp;lt;&amp;lt; &quot;,\n&quot;;
+      }&lt;br/&gt;
+      os &amp;lt;&amp;lt; indent(depth);&lt;br/&gt;
+      leafAt(0)-&amp;gt;printDefaultToJson(g.value&amp;lt;GenericArray&amp;gt;().value()&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;, os,&lt;br/&gt;
+                                    depth);&lt;br/&gt;
+    }&lt;br/&gt;
+    os &amp;lt;&amp;lt; &quot;\n&quot; &amp;lt;&amp;lt; indent(--depth) &amp;lt;&amp;lt; &quot;]&quot;;&lt;br/&gt;
+  }&lt;br/&gt;
+}&lt;br/&gt;
+&lt;br/&gt;
+void NodeSymbolic::printDefaultToJson(const GenericDatum &amp;amp;g, std::ostream &amp;amp;os,&lt;br/&gt;
+                                      int depth) const {
+  getNode()-&amp;gt;printDefaultToJson(g, os, depth);
+}&lt;br/&gt;
+&lt;br/&gt;
+void NodeRecord::printDefaultToJson(const GenericDatum &amp;amp;g, std::ostream &amp;amp;os,&lt;br/&gt;
+                                    int depth) const {&lt;br/&gt;
+  assert(g.type() == AVRO_RECORD);&lt;br/&gt;
+  if (g.value&amp;lt;GenericRecord&amp;gt;().fieldCount() == 0) {&lt;br/&gt;
+    os &amp;lt;&amp;lt; &quot;{}&quot;;&lt;br/&gt;
+  } else {&lt;br/&gt;
+    os &amp;lt;&amp;lt; &quot;{\n&quot;;&lt;br/&gt;
+&lt;br/&gt;
+    // Serialize all fields of the record with recursive calls:&lt;br/&gt;
+    for (unsigned int i = 0; i &amp;lt; g.value&amp;lt;GenericRecord&amp;gt;().fieldCount(); i++) {&lt;br/&gt;
+      if (i == 0) {
+        ++depth;
+      } else {  // i &amp;gt; 0
+        os &amp;lt;&amp;lt; &quot;,\n&quot;;
+      }&lt;br/&gt;
+&lt;br/&gt;
+      os &amp;lt;&amp;lt; indent(depth) &amp;lt;&amp;lt; &quot;\&quot;&quot;;&lt;br/&gt;
+      assert(i &amp;lt; leaves());&lt;br/&gt;
+      os &amp;lt;&amp;lt; leafNameAttributes_.get&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;br/&gt;
+      os &amp;lt;&amp;lt; &quot;\&quot;: &quot;;&lt;br/&gt;
+&lt;br/&gt;
+      // Recursive call on child node to be able to get the name attribute&lt;br/&gt;
+      // (In case of a record we need the name of the leaves (contained in&lt;br/&gt;
+      // &apos;this&apos;))&lt;br/&gt;
+      leafAt&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;-&amp;gt;printDefaultToJson(g.value&amp;lt;GenericRecord&amp;gt;().fieldAt&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, os,&lt;br/&gt;
+                                    depth);&lt;br/&gt;
+    }&lt;br/&gt;
+    os &amp;lt;&amp;lt; &quot;\n&quot; &amp;lt;&amp;lt; indent(--depth) &amp;lt;&amp;lt; &quot;}&quot;;&lt;br/&gt;
+  }&lt;br/&gt;
+}&lt;br/&gt;
+&lt;br/&gt;
+void NodeMap::printDefaultToJson(const GenericDatum &amp;amp;g, std::ostream &amp;amp;os,&lt;br/&gt;
+                                 int depth) const {&lt;br/&gt;
+  assert(g.type() == AVRO_MAP);&lt;br/&gt;
+  //{&quot;a&quot;: 1}&lt;br/&gt;
+  if (g.value&amp;lt;GenericMap&amp;gt;().value().empty()) {&lt;br/&gt;
+    os &amp;lt;&amp;lt; &quot;{}&quot;;&lt;br/&gt;
+  } else {&lt;br/&gt;
+    os &amp;lt;&amp;lt; &quot;{\n&quot;;&lt;br/&gt;
+&lt;br/&gt;
+    for (unsigned int i = 0; i &amp;lt; g.value&amp;lt;GenericMap&amp;gt;().value().size(); i++) {&lt;br/&gt;
+      if (i == 0) {+        ++depth;+      } else {+        os &amp;lt;&amp;lt; &quot;,n&quot;;+      }
&lt;p&gt;+      os &amp;lt;&amp;lt; indent(depth) &amp;lt;&amp;lt; &quot;\&quot;&quot; &amp;lt;&amp;lt; g.value&amp;lt;GenericMap&amp;gt;().value()&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;.first&lt;br/&gt;
+         &amp;lt;&amp;lt; &quot;\&quot;: &quot;;&lt;br/&gt;
+&lt;br/&gt;
+      leafAt&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;-&amp;gt;printDefaultToJson(g.value&amp;lt;GenericMap&amp;gt;().value()&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;.second, os,&lt;br/&gt;
+                                    depth);&lt;br/&gt;
+    }&lt;br/&gt;
+    os &amp;lt;&amp;lt; &quot;\n&quot; &amp;lt;&amp;lt; indent(--depth) &amp;lt;&amp;lt; &quot;}&quot;;&lt;br/&gt;
+  }&lt;br/&gt;
+}&lt;br/&gt;
+&lt;br/&gt;
+void&lt;br/&gt;
 NodeEnum::printJson(std::ostream &amp;amp;os, int depth) const&lt;br/&gt;
 {&lt;br/&gt;
     os &amp;lt;&amp;lt; &quot;{\n&quot;;&lt;br/&gt;
@@ -218,8 +433,8 @@ NodeEnum::printJson(std::ostream &amp;amp;os, int depth) const&lt;/p&gt;

&lt;p&gt;     int names = leafNameAttributes_.size();&lt;br/&gt;
     ++depth;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;for(int i = 0; i &amp;lt; names; ++i) {&lt;/li&gt;
	&lt;li&gt;if(i &amp;gt; 0) {&lt;br/&gt;
+    for (int i = 0; i &amp;lt; names; ++i) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+        if (i &amp;gt; 0) {
             os &amp;lt;&amp;lt; &quot;,\n&quot;;
         }&lt;br/&gt;
         os &amp;lt;&amp;lt; indent(depth) &amp;lt;&amp;lt; &apos;\&quot;&apos; &amp;lt;&amp;lt; leafNameAttributes_.get&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/information.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &amp;lt;&amp;lt; &apos;\&quot;&apos;;&lt;br/&gt;
@@ -229,7 +444,7 @@ NodeEnum::printJson(std::ostream &amp;amp;os, int depth) const&lt;br/&gt;
     os &amp;lt;&amp;lt; indent(--depth) &amp;lt;&amp;lt; &apos;}&apos;;&lt;br/&gt;
 }&lt;br/&gt;
 &lt;br/&gt;
-void &lt;br/&gt;
+void&lt;br/&gt;
 NodeArray::printJson(std::ostream &amp;amp;os, int depth) const&lt;br/&gt;
 {&lt;br/&gt;
     os &amp;lt;&amp;lt; &quot;{\n&quot;;
@@ -240,7 +455,7 @@ NodeArray::printJson(std::ostream &amp;amp;os, int depth) const
     os &amp;lt;&amp;lt; indent(depth) &amp;lt;&amp;lt; &apos;}&apos;;&lt;br/&gt;
 }&lt;br/&gt;
 &lt;br/&gt;
-void &lt;br/&gt;
+void&lt;br/&gt;
 NodeMap::printJson(std::ostream &amp;amp;os, int depth) const&lt;br/&gt;
 {&lt;br/&gt;
     os &amp;lt;&amp;lt; &quot;{\n&quot;;
@@ -251,14 +466,14 @@ NodeMap::printJson(std::ostream &amp;amp;os, int depth) const
     os &amp;lt;&amp;lt; indent(depth) &amp;lt;&amp;lt; &apos;}&apos;;&lt;br/&gt;
 }&lt;br/&gt;
 &lt;br/&gt;
-void &lt;br/&gt;
+void&lt;br/&gt;
 NodeUnion::printJson(std::ostream &amp;amp;os, int depth) const&lt;br/&gt;
 {&lt;br/&gt;
     os &amp;lt;&amp;lt; &quot;[\n&quot;;&lt;br/&gt;
     int fields = leafAttributes_.size();&lt;br/&gt;
     ++depth;&lt;br/&gt;
-    for(int i = 0; i &amp;lt; fields; ++i) {&lt;br/&gt;
-        if(i &amp;gt; 0) {&lt;br/&gt;
+    for (int i = 0; i &amp;lt; fields; ++i) {&lt;br/&gt;
+        if (i &amp;gt; 0) {             os &amp;lt;&amp;lt; &quot;,n&quot;;         }         os &amp;lt;&amp;lt; indent(depth);@@ -268,7 +483,7 @@ NodeUnion}&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;-void &lt;br/&gt;
+void&lt;br/&gt;
 NodeFixed::printJson(std::ostream &amp;amp;os, int depth) const&lt;br/&gt;
 {&lt;br/&gt;
     os &amp;lt;&amp;lt; &quot;&lt;/p&gt;
{\n&quot;;
diff --git a/lang/c++/jsonschemas/bigrecord_r b/lang/c++/jsonschemas/bigrecord_r
index 7c477cd0f..5da05222e 100644
--- a/lang/c++/jsonschemas/bigrecord_r
+++ b/lang/c++/jsonschemas/bigrecord_r
@@ -62,7 +62,7 @@
                 ]
             }
&lt;p&gt;,&lt;br/&gt;
             &quot;default&quot;: &lt;/p&gt;
{
-                &quot;s1&quot;: &quot;sval&quot;,
+                &quot;s1&quot;: &quot;\&quot;sval\&quot;&quot;,
                 &quot;d1&quot;: 5.67,
                 &quot;i1&quot;: 99
             }
&lt;p&gt;@@ -84,6 +84,17 @@&lt;br/&gt;
                 &quot;items&quot;: &quot;double&quot;&lt;br/&gt;
             }&lt;br/&gt;
         },&lt;br/&gt;
+        {&lt;br/&gt;
+            &quot;name&quot;: &quot;myarraywithDefaultValue&quot;,&lt;br/&gt;
+            &quot;type&quot;: &lt;/p&gt;
{
+                &quot;type&quot;: &quot;array&quot;,
+                &quot;items&quot;: &quot;int&quot;
+            }
&lt;p&gt;,&lt;br/&gt;
+            &quot;default&quot;: [&lt;br/&gt;
+                2,&lt;br/&gt;
+                3&lt;br/&gt;
+            ]&lt;br/&gt;
+        },&lt;br/&gt;
         {&lt;br/&gt;
             &quot;name&quot;: &quot;myenum&quot;,&lt;br/&gt;
             &quot;type&quot;: &lt;/p&gt;
{
@@ -152,6 +163,15 @@
                 &quot;name&quot;: &quot;md5&quot;
             }
&lt;p&gt;         },&lt;br/&gt;
+        {&lt;br/&gt;
+            &quot;name&quot;: &quot;myfixedwithDefaultValue&quot;,&lt;br/&gt;
+            &quot;type&quot;: [&lt;/p&gt;
{
+                &quot;type&quot;: &quot;fixed&quot;,
+                &quot;size&quot;: 1,
+                &quot;name&quot;: &quot;val&quot;
+            }
&lt;p&gt;, &quot;null&quot;],&lt;br/&gt;
+            &quot;default&quot;: &quot;\u0001&quot;&lt;br/&gt;
+        },&lt;br/&gt;
         {&lt;br/&gt;
             &quot;name&quot;: &quot;anotherint&quot;,&lt;br/&gt;
             &quot;type&quot;: &quot;int&quot;&lt;br/&gt;
@@ -159,6 +179,11 @@&lt;br/&gt;
         &lt;/p&gt;
{
             &quot;name&quot;: &quot;bytes&quot;,
             &quot;type&quot;: &quot;bytes&quot;
+        }
&lt;p&gt;,&lt;br/&gt;
+        &lt;/p&gt;
{
+            &quot;name&quot;: &quot;byteswithDefaultValue&quot;,
+            &quot;type&quot;: [&quot;bytes&quot;, &quot;null&quot;],
+            &quot;default&quot;: &quot;\u00ff\u00AA&quot;
         }
&lt;p&gt;     ]&lt;br/&gt;
 }&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/test/AvrogencppTests.cc b/lang/c&lt;/ins&gt;+/test/AvrogencppTests.cc&lt;br/&gt;
index 1b429433c..46b2fc978 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/test/AvrogencppTests.cc&lt;br/&gt;
+++ b/lang/c++/test/AvrogencppTests.cc&lt;br/&gt;
@@ -136,9 +136,14 @@ void checkRecord(const T1&amp;amp; r1, const T2&amp;amp; r2)&lt;/p&gt;

&lt;p&gt; void checkDefaultValues(const testgen_r::RootRecord&amp;amp; r)&lt;/p&gt;
 {
-    BOOST_CHECK_EQUAL(r.withDefaultValue.s1, &quot;sval&quot;);
+    BOOST_CHECK_EQUAL(r.withDefaultValue.s1, &quot;\&quot;sval\&quot;&quot;);
     BOOST_CHECK_EQUAL(r.withDefaultValue.i1, 99);
     BOOST_CHECK_CLOSE(r.withDefaultValue.d1, 5.67, 1e-10);
+    BOOST_CHECK_EQUAL(r.myarraywithDefaultValue[0], 2);
+    BOOST_CHECK_EQUAL(r.myarraywithDefaultValue[1], 3);
+    BOOST_CHECK_EQUAL(r.myfixedwithDefaultValue.get_val()[0], 0x01);
+    BOOST_CHECK_EQUAL(r.byteswithDefaultValue.get_bytes()[0], 0xff);
+    BOOST_CHECK_EQUAL(r.byteswithDefaultValue.get_bytes()[1], 0xaa);
 }


&lt;p&gt;@@ -198,6 +203,24 @@ void testResolution()&lt;br/&gt;
     checkRecord(t3, t1);&lt;br/&gt;
     checkDefaultValues(t3);&lt;/p&gt;

&lt;p&gt;+    // Test serialization of default values.&lt;br/&gt;
+    // Serialize to string then compile from string.&lt;br/&gt;
+    std::ostringstream oss;&lt;br/&gt;
+    s_r.toJson(oss);&lt;br/&gt;
+    ValidSchema s_rs = avro::compileJsonSchemaFromString(oss.str());&lt;br/&gt;
+&lt;br/&gt;
+    auto_ptr&amp;lt;InputStream&amp;gt; is2 = memoryInputStream(*os);&lt;br/&gt;
+    dd-&amp;gt;init(*is2);&lt;br/&gt;
+    rd = resolvingDecoder(s_w, s_rs, dd);&lt;br/&gt;
+    testgen_r::RootRecord t4;&lt;br/&gt;
+    avro::decode(*rd, t4);&lt;br/&gt;
+    checkDefaultValues(t4);&lt;br/&gt;
+&lt;br/&gt;
+    std::ostringstream oss_r;&lt;br/&gt;
+    std::ostringstream oss_rs;&lt;br/&gt;
+    s_r.toJson(oss_r);&lt;br/&gt;
+    s_rs.toJson(oss_rs);&lt;br/&gt;
+    BOOST_CHECK_EQUAL(oss_r.str(), oss_rs.str());&lt;br/&gt;
 }&lt;/p&gt;

&lt;p&gt; void testNamespace()&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/test/CompilerTests.cc b/lang/c&lt;/ins&gt;+/test/CompilerTests.cc&lt;br/&gt;
index a40d6a1a7..0b63dbb4e 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/test/CompilerTests.cc&lt;br/&gt;
+++ b/lang/c++/test/CompilerTests.cc&lt;br/&gt;
@@ -47,7 +47,8 @@ void testEmptyBytesDefault()&lt;br/&gt;
     \&quot;fields\&quot;: [\n\&lt;br/&gt;
         &lt;/p&gt;
{\n\
             \&quot;name\&quot;: \&quot;testbytes\&quot;,\n\
-            \&quot;type\&quot;: \&quot;bytes\&quot;\n\
+            \&quot;type\&quot;: \&quot;bytes\&quot;,\n\
+            \&quot;default\&quot;: \&quot;\&quot;\n\
         }
&lt;p&gt;\n\&lt;br/&gt;
     ]\n\&lt;br/&gt;
 }\n\&lt;br/&gt;
diff --git a/lang/c+&lt;ins&gt;/test/unittest.cc b/lang/c&lt;/ins&gt;+/test/unittest.cc&lt;br/&gt;
index fc81f2b61..83493144b 100644&lt;br/&gt;
&amp;#8212; a/lang/c++/test/unittest.cc&lt;br/&gt;
+++ b/lang/c++/test/unittest.cc&lt;br/&gt;
@@ -46,22 +46,22 @@ static const uint8_t fixeddata&lt;span class=&quot;error&quot;&gt;&amp;#91;16&amp;#93;&lt;/span&gt; = &lt;/p&gt;
{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}
&lt;p&gt;;&lt;br/&gt;
 #endif&lt;br/&gt;
 struct TestSchema&lt;br/&gt;
 {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;TestSchema()&lt;br/&gt;
+    TestSchema()&lt;br/&gt;
     {}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     void createExampleSchema()&lt;/p&gt;
     {
         // First construct our complex data type:
         avro::RecordSchema myRecord(&quot;complex&quot;);
-   
+
         // Now populate my record with fields (each field is another schema):
         myRecord.addField(&quot;real&quot;, avro::DoubleSchema());
         myRecord.addField(&quot;imaginary&quot;, avro::DoubleSchema());
 
-        // The complex record is the same as used above, let&apos;s make a schema 
+        // The complex record is the same as used above, let&apos;s make a schema
         // for an array of these record
-  
-        avro::ArraySchema complexArray(myRecord); 
+
+        avro::ArraySchema complexArray(myRecord);
 
         avro::ValidSchema validComplexArray(complexArray);
         validComplexArray.toJson(std::cout);
@@ -99,14 +99,14 @@ struct TestSchema
         }
&lt;p&gt;         BOOST_CHECK_EQUAL(caught, true);&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;record.addField(&quot;myenum&quot;, myenum);&lt;br/&gt;
+        record.addField(&quot;myenum&quot;, myenum);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         UnionSchema onion;&lt;br/&gt;
         onion.addType(NullSchema());&lt;br/&gt;
         onion.addType(map);&lt;br/&gt;
         onion.addType(FloatSchema());&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;record.addField(&quot;myunion&quot;, onion);&lt;br/&gt;
+&lt;br/&gt;
+        record.addField(&quot;myunion&quot;, onion);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         RecordSchema nestedRecord(&quot;NestedRecord&quot;);&lt;br/&gt;
         nestedRecord.addField(&quot;floatInNested&quot;, FloatSchema());&lt;br/&gt;
@@ -227,7 +227,7 @@ struct TestSchema&lt;br/&gt;
         s.writeBool(true);&lt;/p&gt;

&lt;p&gt;         std::cout &amp;lt;&amp;lt; &quot;Fixed16\n&quot;;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;p&gt;+&lt;br/&gt;
         s.writeFixed(fixeddata);&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         std::cout &amp;lt;&amp;lt; &quot;Long\n&quot;;&lt;br/&gt;
@@ -253,7 +253,7 @@ struct TestSchema&lt;br/&gt;
         std::cout &amp;lt;&amp;lt; s.buffer();&lt;br/&gt;
     }&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;void saveValidatingEncoding(int path)&lt;br/&gt;
+    void saveValidatingEncoding(int path)&lt;br/&gt;
     {&lt;br/&gt;
         std::ofstream out(&quot;test.avro&quot;);&lt;br/&gt;
         Serializer&amp;lt;ValidatingWriter&amp;gt; s(schema_);&lt;br/&gt;
@@ -286,7 +286,7 @@ struct TestSchema&lt;br/&gt;
     void readMap(Parser &amp;amp;p)&lt;br/&gt;
     {&lt;br/&gt;
         int64_t size = 0;&lt;/li&gt;
	&lt;li&gt;do {&lt;br/&gt;
+        do {&lt;br/&gt;
             printNext(p);&lt;br/&gt;
             size = p.readMapBlockSize();&lt;br/&gt;
             std::cout &amp;lt;&amp;lt; &quot;Size &quot; &amp;lt;&amp;lt; size &amp;lt;&amp;lt; &apos;\n&apos;;&lt;br/&gt;
@@ -477,7 +477,7 @@ struct TestNested&lt;br/&gt;
     TestNested()&lt;br/&gt;
     {}&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;void createSchema()&lt;br/&gt;
+    void createSchema()
     {
         std::cout &amp;lt;&amp;lt; &quot;TestNested\n&quot;;
         RecordSchema rec(&quot;LongListContainer&quot;);
@@ -496,7 +496,7 @@ struct TestNested
         arrayTree.addField(&quot;children&quot;, ArraySchema(
             SymbolicSchema(Name(&quot;ArrayTree&quot;), arrayTree.root())));
         rec.addField(&quot;array_tree&quot;, arrayTree);
-        
+
         schema_.setSchema(rec);
         schema_.toJson(std::cout);
         schema_.toFlatList(std::cout);
@@ -644,8 +644,8 @@ struct TestNested
         readArrayRecord(p);
         p.readRecordEnd();
     }&lt;/li&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;void readListRecord(Parser&amp;lt;ValidatingReader&amp;gt; &amp;amp;p)&lt;br/&gt;
+&lt;br/&gt;
+    void readListRecord(Parser&amp;lt;ValidatingReader&amp;gt; &amp;amp;p)
     {
         p.readRecord();
         int64_t val = p.readLong();
@@ -677,7 +677,7 @@ struct TestNested
         p.readRecordEnd();
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;void validatingParser(InputBuffer &amp;amp;buf)&lt;br/&gt;
+    void validatingParser(InputBuffer &amp;amp;buf)
     {
         Parser&amp;lt;ValidatingReader&amp;gt; p(schema_, buf);
         readRecord(p);
@@ -695,7 +695,7 @@ struct TestNested
           d.decodeNull();
         }
&lt;p&gt;         bool b = d.decodeBool();&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;std::cout &amp;lt;&amp;lt; &quot;bval = &quot; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; &apos;\n&apos;;&lt;br/&gt;
+        std::cout &amp;lt;&amp;lt; &quot;bval = &quot; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; &apos;\n&apos;;&lt;br/&gt;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     void decodeArrayRecord(Decoder&amp;amp; d)&lt;br/&gt;
@@ -715,7 +715,7 @@ struct TestNested&lt;br/&gt;
       decodeListRecord(d);&lt;br/&gt;
       decodeArrayRecord(d);&lt;br/&gt;
     }&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;p&gt;+&lt;br/&gt;
     void testToScreen() {&lt;br/&gt;
         InputBuffer buf1 = serializeNoRecurse();&lt;br/&gt;
         InputBuffer buf2 = serializeRecurse();&lt;br/&gt;
@@ -727,7 +727,7 @@ struct TestNested&lt;br/&gt;
     void testParseNoRecurse() &lt;/p&gt;
{
         std::cout &amp;lt;&amp;lt; &quot;ParseNoRecurse\n&quot;;
         InputBuffer buf = serializeNoRecurse();
-    
+
         validatingParser(buf);
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -755,7 +755,7 @@ struct TestNested&lt;br/&gt;
 	runEncodeDecode(*validatingEncoder(schema_, binaryEncoder()),&lt;br/&gt;
 			*validatingDecoder(schema_, binaryDecoder()),&lt;br/&gt;
 			encodeNoRecurse);&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;p&gt;+&lt;br/&gt;
     }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     void testDecodeRecurse()&lt;br/&gt;
@@ -772,7 +772,7 @@ struct TestNested&lt;br/&gt;
  	runEncodeDecode(*jsonEncoder(schema_),&lt;br/&gt;
 			*jsonDecoder(schema_),&lt;br/&gt;
 			encodeNoRecurse);&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;p&gt;+&lt;br/&gt;
     }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     void testDecodeRecurseJson()&lt;br/&gt;
@@ -804,7 +804,7 @@ struct TestGenerated&lt;br/&gt;
     TestGenerated()&lt;br/&gt;
     {}&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;void test()&lt;br/&gt;
+    void test()&lt;br/&gt;
     {&lt;br/&gt;
         std::cout &amp;lt;&amp;lt; &quot;TestGenerated\n&quot;;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -823,7 +823,7 @@ struct TestGenerated&lt;/p&gt;

&lt;p&gt; struct TestBadStuff&lt;br/&gt;
 {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;void testBadFile()&lt;br/&gt;
+    void testBadFile()
     {
         std::cout &amp;lt;&amp;lt; &quot;TestBadFile\n&quot;;
 
@@ -849,7 +849,7 @@ struct TestBadStuff
         std::cout &amp;lt;&amp;lt; &quot;(intentional) error: &quot; &amp;lt;&amp;lt; error &amp;lt;&amp;lt; &apos;\n&apos;;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;void test()&lt;br/&gt;
+    void test()&lt;br/&gt;
     {&lt;br/&gt;
         std::cout &amp;lt;&amp;lt; &quot;TestBadStuff\n&quot;;&lt;br/&gt;
         testBadFile();&lt;br/&gt;
@@ -860,10 +860,10 @@ struct TestBadStuff&lt;br/&gt;
 struct TestResolution
 {
     TestResolution() :
-        int_(IntSchema()), 
+        int_(IntSchema()),
         long_(LongSchema()),
-        bool_(BoolSchema()), 
-        float_(FloatSchema()), 
+        bool_(BoolSchema()),
+        float_(FloatSchema()),
         double_(DoubleSchema()),
 
         mapOfInt_(MapSchema(IntSchema())),
@@ -881,7 +881,7 @@ struct TestResolution
             two.addSymbol(&quot;Y&quot;);
             enumTwo_.setSchema(two);
         }&lt;/li&gt;
	&lt;li&gt;&lt;p&gt;+&lt;/p&gt;
         {
             UnionSchema one;
             one.addType(IntSchema());
@@ -900,31 +900,31 @@ struct TestResolution
         return writer.root()-&amp;gt;resolve(*reader.root());
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;void test()&lt;br/&gt;
+    void test()&lt;br/&gt;
     
{
         std::cout &amp;lt;&amp;lt; &quot;TestResolution\n&quot;;
 
-        BOOST_CHECK_EQUAL(resolve(long_, long_), RESOLVE_MATCH); 
-        BOOST_CHECK_EQUAL(resolve(long_, bool_), RESOLVE_NO_MATCH); 
-        BOOST_CHECK_EQUAL(resolve(bool_, long_), RESOLVE_NO_MATCH); 
+        BOOST_CHECK_EQUAL(resolve(long_, long_), RESOLVE_MATCH);
+        BOOST_CHECK_EQUAL(resolve(long_, bool_), RESOLVE_NO_MATCH);
+        BOOST_CHECK_EQUAL(resolve(bool_, long_), RESOLVE_NO_MATCH);
 
-        BOOST_CHECK_EQUAL(resolve(int_, long_), RESOLVE_PROMOTABLE_TO_LONG); 
-        BOOST_CHECK_EQUAL(resolve(long_, int_), RESOLVE_NO_MATCH); 
+        BOOST_CHECK_EQUAL(resolve(int_, long_), RESOLVE_PROMOTABLE_TO_LONG);
+        BOOST_CHECK_EQUAL(resolve(long_, int_), RESOLVE_NO_MATCH);
 
-        BOOST_CHECK_EQUAL(resolve(int_, float_), RESOLVE_PROMOTABLE_TO_FLOAT); 
-        BOOST_CHECK_EQUAL(resolve(float_, int_), RESOLVE_NO_MATCH); 
+        BOOST_CHECK_EQUAL(resolve(int_, float_), RESOLVE_PROMOTABLE_TO_FLOAT);
+        BOOST_CHECK_EQUAL(resolve(float_, int_), RESOLVE_NO_MATCH);
 
-        BOOST_CHECK_EQUAL(resolve(int_, double_), RESOLVE_PROMOTABLE_TO_DOUBLE); 
-        BOOST_CHECK_EQUAL(resolve(double_, int_), RESOLVE_NO_MATCH); 
+        BOOST_CHECK_EQUAL(resolve(int_, double_), RESOLVE_PROMOTABLE_TO_DOUBLE);
+        BOOST_CHECK_EQUAL(resolve(double_, int_), RESOLVE_NO_MATCH);
 
-        BOOST_CHECK_EQUAL(resolve(long_, float_), RESOLVE_PROMOTABLE_TO_FLOAT); 
-        BOOST_CHECK_EQUAL(resolve(float_, long_), RESOLVE_NO_MATCH); 
+        BOOST_CHECK_EQUAL(resolve(long_, float_), RESOLVE_PROMOTABLE_TO_FLOAT);
+        BOOST_CHECK_EQUAL(resolve(float_, long_), RESOLVE_NO_MATCH);
 
-        BOOST_CHECK_EQUAL(resolve(long_, double_), RESOLVE_PROMOTABLE_TO_DOUBLE); 
-        BOOST_CHECK_EQUAL(resolve(double_, long_), RESOLVE_NO_MATCH); 
+        BOOST_CHECK_EQUAL(resolve(long_, double_), RESOLVE_PROMOTABLE_TO_DOUBLE);
+        BOOST_CHECK_EQUAL(resolve(double_, long_), RESOLVE_NO_MATCH);
 
-        BOOST_CHECK_EQUAL(resolve(float_, double_), RESOLVE_PROMOTABLE_TO_DOUBLE); 
-        BOOST_CHECK_EQUAL(resolve(double_, float_), RESOLVE_NO_MATCH); 
+        BOOST_CHECK_EQUAL(resolve(float_, double_), RESOLVE_PROMOTABLE_TO_DOUBLE);
+        BOOST_CHECK_EQUAL(resolve(double_, float_), RESOLVE_NO_MATCH);
 
         BOOST_CHECK_EQUAL(resolve(int_, mapOfInt_), RESOLVE_NO_MATCH);
         BOOST_CHECK_EQUAL(resolve(mapOfInt_, int_), RESOLVE_NO_MATCH);
@@ -975,7 +975,7 @@ struct TestResolution
 }
&lt;p&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; boost::unit_test::test_suite*&lt;br/&gt;
-init_unit_test_suite( int argc, char* argv[] ) &lt;br/&gt;
+init_unit_test_suite( int argc, char* argv[] )&lt;br/&gt;
 {&lt;br/&gt;
     using namespace boost::unit_test;&lt;/p&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16649484" author="jira-bot" created="Sun, 14 Oct 2018 18:25:51 +0000"  >&lt;p&gt;Commit 51a92fea4ad197c6f8ddd91cefc1e35840c15c4a in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vimota&quot; class=&quot;user-hover&quot; rel=&quot;vimota&quot;&gt;Victor Mota&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=51a92fe&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=51a92fe&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1335&quot; title=&quot;C++ should support field default values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1335&quot;&gt;&lt;del&gt;AVRO-1335&lt;/del&gt;&lt;/a&gt;: Adds C++ support for default values in schema serialization to json.&lt;/p&gt;</comment>
                            <comment id="16649485" author="jira-bot" created="Sun, 14 Oct 2018 18:25:52 +0000"  >&lt;p&gt;Commit 377bc5848d066a851560fb921b6b77996f7d150f in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vimota&quot; class=&quot;user-hover&quot; rel=&quot;vimota&quot;&gt;Victor Mota&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=377bc58&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=377bc58&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1335&quot; title=&quot;C++ should support field default values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1335&quot;&gt;&lt;del&gt;AVRO-1335&lt;/del&gt;&lt;/a&gt;: Adds C++ support for default values in schema serialization to json.&lt;/p&gt;</comment>
                            <comment id="16649486" author="jira-bot" created="Sun, 14 Oct 2018 18:25:54 +0000"  >&lt;p&gt;Commit 089ee708b2b2deb0a3cb1f1c937288954c6a5700 in avro&apos;s branch refs/heads/master from Thiruvalluvan M G&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=089ee70&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=089ee70&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Merge pull request #241 from vimota/changes&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1335&quot; title=&quot;C++ should support field default values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1335&quot;&gt;&lt;del&gt;AVRO-1335&lt;/del&gt;&lt;/a&gt;: Adds C++ support for default values in schema serializatio&#8230;&lt;/p&gt;</comment>
                            <comment id="16649487" author="thiru_mg" created="Sun, 14 Oct 2018 18:26:26 +0000"  >&lt;p&gt;Merged the Pull Request. Thanks a lot &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vimota&quot; class=&quot;user-hover&quot; rel=&quot;vimota&quot;&gt;Victor Mota&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12734117" name="AVRO-1335.patch" size="12626" author="pidefrem" created="Wed, 20 May 2015 12:25:37 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 21 May 2013 03:50:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>328905</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            14 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kqwn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>329247</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>resolvingDecoder</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1336] Tests TestKeyValueWordCount and TestKeyWordCount fail due to missing files (Trevni mapreduce module)</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1336</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I tried to build Avro 1.7.4 with Hadoop 2 and get the following errors in Trevni  mapreduce module tests:&lt;/p&gt;

&lt;p&gt;==================================================&lt;br/&gt;
...&lt;br/&gt;
Running org.apache.trevni.avro.mapreduce.TestKeyValueWordCount&lt;br/&gt;
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 2.536 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!&lt;br/&gt;
Running org.apache.trevni.avro.mapreduce.TestKeyWordCount&lt;br/&gt;
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 2.505 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!&lt;br/&gt;
Running org.apache.trevni.avro.TestCases&lt;br/&gt;
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.671 sec&lt;br/&gt;
Running org.apache.trevni.avro.TestWordCount&lt;br/&gt;
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.651 sec&lt;/p&gt;

&lt;p&gt;Results :&lt;/p&gt;

&lt;p&gt;Tests in error: &lt;br/&gt;
  testIOFormat(org.apache.trevni.avro.mapreduce.TestKeyValueWordCount): target/wc/trevniMapReduceKeyValueTest/out/part-r-00000/part-0.trv (No such file or directory)&lt;br/&gt;
  testIOFormat(org.apache.trevni.avro.mapreduce.TestKeyWordCount): target/wc/trevniMapReduceKeyTest/out/part-r-00000/part-0.trv (No such file or directory)&lt;/p&gt;

&lt;p&gt;Tests run: 23, Failures: 0, Errors: 2, Skipped: 0&lt;/p&gt;

&lt;p&gt;...&lt;br/&gt;
==================================================&lt;/p&gt;


&lt;p&gt;StackTraces:&lt;/p&gt;


&lt;p&gt;-------------------------------------------------------------------------------&lt;br/&gt;
Test set: org.apache.trevni.avro.mapreduce.TestKeyValueWordCount&lt;br/&gt;
-------------------------------------------------------------------------------&lt;br/&gt;
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 2.537 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!&lt;br/&gt;
testIOFormat(org.apache.trevni.avro.mapreduce.TestKeyValueWordCount)  Time elapsed: 2.029 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!&lt;br/&gt;
java.io.FileNotFoundException: target/wc/trevniMapReduceKeyValueTest/out/part-r-00000/part-0.trv (No such file or directory)&lt;br/&gt;
        at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:124)&lt;br/&gt;
        at org.apache.trevni.InputFile.&amp;lt;init&amp;gt;(InputFile.java:33)&lt;br/&gt;
        at org.apache.trevni.avro.AvroColumnReader$Params.&amp;lt;init&amp;gt;(AvroColumnReader.java:69)&lt;br/&gt;
        at org.apache.trevni.avro.WordCountUtil.validateCountsFileGenericRecord(WordCountUtil.java:122)&lt;br/&gt;
        at org.apache.trevni.avro.mapreduce.TestKeyValueWordCount.checkOutputFormat(TestKeyValueWordCount.java:138)&lt;br/&gt;
        at org.apache.trevni.avro.mapreduce.TestKeyValueWordCount.testIOFormat(TestKeyValueWordCount.java:108)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:611)&lt;br/&gt;
        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)&lt;br/&gt;
        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)&lt;br/&gt;
        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)&lt;br/&gt;
        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)&lt;br/&gt;
        at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)&lt;br/&gt;
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)&lt;br/&gt;
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)&lt;br/&gt;
        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)&lt;br/&gt;
        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)&lt;br/&gt;
        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)&lt;br/&gt;
        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)&lt;br/&gt;
        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)&lt;br/&gt;
        at org.junit.runners.ParentRunner.run(ParentRunner.java:300)&lt;br/&gt;
        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:236)&lt;br/&gt;
        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:134)&lt;br/&gt;
        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:113)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:611)&lt;br/&gt;
        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)&lt;br/&gt;
        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)&lt;br/&gt;
        at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)&lt;br/&gt;
        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:103)&lt;br/&gt;
        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:74)&lt;br/&gt;
./trevni/avro/target/surefire-reports/org.apache.trevni.avro.mapreduce.TestKeyValueWordCount.txt (END) &lt;/p&gt;





&lt;p&gt;-------------------------------------------------------------------------------&lt;br/&gt;
Test set: org.apache.trevni.avro.mapreduce.TestKeyWordCount&lt;br/&gt;
-------------------------------------------------------------------------------&lt;br/&gt;
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 2.505 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!&lt;br/&gt;
testIOFormat(org.apache.trevni.avro.mapreduce.TestKeyWordCount)  Time elapsed: 2.039 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!&lt;br/&gt;
java.io.FileNotFoundException: target/wc/trevniMapReduceKeyTest/out/part-r-00000/part-0.trv (No such file or directory)&lt;br/&gt;
        at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:124)&lt;br/&gt;
        at org.apache.trevni.InputFile.&amp;lt;init&amp;gt;(InputFile.java:33)&lt;br/&gt;
        at org.apache.trevni.avro.AvroColumnReader$Params.&amp;lt;init&amp;gt;(AvroColumnReader.java:69)&lt;br/&gt;
        at org.apache.trevni.avro.WordCountUtil.validateCountsFile(WordCountUtil.java:109)&lt;br/&gt;
        at org.apache.trevni.avro.mapreduce.TestKeyWordCount.checkOutputFormat(TestKeyWordCount.java:149)&lt;br/&gt;
        at org.apache.trevni.avro.mapreduce.TestKeyWordCount.testIOFormat(TestKeyWordCount.java:120)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:611)&lt;br/&gt;
        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)&lt;br/&gt;
        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)&lt;br/&gt;
        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)&lt;br/&gt;
        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)&lt;br/&gt;
        at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)&lt;br/&gt;
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)&lt;br/&gt;
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)&lt;br/&gt;
        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)&lt;br/&gt;
        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)&lt;br/&gt;
        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)&lt;br/&gt;
        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)&lt;br/&gt;
        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)&lt;br/&gt;
        at org.junit.runners.ParentRunner.run(ParentRunner.java:300)&lt;br/&gt;
        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:236)&lt;br/&gt;
        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:134)&lt;br/&gt;
        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:113)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:611)&lt;br/&gt;
        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)&lt;br/&gt;
        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)&lt;br/&gt;
        at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)&lt;br/&gt;
        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:103)&lt;br/&gt;
        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:74)&lt;br/&gt;
./trevni/avro/target/surefire-reports/org.apache.trevni.avro.mapreduce.TestKeyWordCount.txt (END) &lt;/p&gt;




</description>
                <environment>&lt;p&gt;Red Hat Server 6.4 &lt;br/&gt;
Avro 1.7.4&lt;br/&gt;
Maven 3.0.5&lt;br/&gt;
Java 1.6 (IBM or Oracle)&lt;br/&gt;
Hadoop1 = 1.1.2&lt;br/&gt;
Hadoop2 = 2.0.4-alpha&lt;/p&gt;</environment>
        <key id="12648610">AVRO-1336</key>
            <summary>Tests TestKeyValueWordCount and TestKeyWordCount fail due to missing files (Trevni mapreduce module)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="rodrigotrujillo">Rodrigo Trujillo</assignee>
                                    <reporter username="rodrigotrujillo">Rodrigo Trujillo</reporter>
                        <labels>
                    </labels>
                <created>Tue, 21 May 2013 13:02:56 +0000</created>
                <updated>Fri, 10 Jan 2014 20:10:40 +0000</updated>
                                            <version>1.7.4</version>
                                                    <component>trevni</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13692298" author="rodrigotrujillo" created="Mon, 24 Jun 2013 19:39:33 +0000"  >&lt;p&gt;The error is caused by:&lt;br/&gt;
lang/java/trevni/avro/pom.xml&lt;/p&gt;

&lt;p&gt;It fixes Hadoop in version 1&lt;/p&gt;

&lt;p&gt;Using pom.xml from trunk fixes the problem&lt;/p&gt;</comment>
                            <comment id="13692302" author="rodrigotrujillo" created="Mon, 24 Jun 2013 19:45:05 +0000"  >&lt;p&gt;This patch backports lang/java/trevni/avro/pom.xml 1.7.5-snapshot version&lt;/p&gt;</comment>
                            <comment id="13692305" author="rodrigotrujillo" created="Mon, 24 Jun 2013 19:50:00 +0000"  >&lt;p&gt;&amp;#8212; lang/java/trevni/avro/pom.xml.orig	2013-06-24 15:54:00.329422972 -0300&lt;br/&gt;
+++ lang/java/trevni/avro/pom.xml	2013-06-24 15:55:08.984489901 -0300&lt;br/&gt;
@@ -50,18 +50,6 @@&lt;br/&gt;
       &amp;lt;version&amp;gt;${junit.version}&amp;lt;/version&amp;gt;&lt;br/&gt;
       &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&lt;br/&gt;
     &amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&amp;lt;dependency&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;groupId&amp;gt;org.apache.avro&amp;lt;/groupId&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;artifactId&amp;gt;avro-mapred&amp;lt;/artifactId&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/dependency&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;dependency&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;groupId&amp;gt;org.apache.hadoop&amp;lt;/groupId&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;artifactId&amp;gt;hadoop-core&amp;lt;/artifactId&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;version&amp;gt;${hadoop1.version}&amp;lt;/version&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;/li&gt;
	&lt;li&gt;&amp;lt;/dependency&amp;gt;&lt;br/&gt;
   &amp;lt;/dependencies&amp;gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   &amp;lt;build&amp;gt;&lt;br/&gt;
@@ -70,10 +58,104 @@&lt;br/&gt;
         &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&lt;br/&gt;
         &amp;lt;artifactId&amp;gt;maven-checkstyle-plugin&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
       &amp;lt;/plugin&amp;gt;&lt;br/&gt;
+      &amp;lt;plugin&amp;gt;&lt;br/&gt;
+        &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&lt;br/&gt;
+        &amp;lt;artifactId&amp;gt;maven-jar-plugin&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
+        &amp;lt;executions&amp;gt;&lt;br/&gt;
+          &amp;lt;execution&amp;gt;&lt;br/&gt;
+            &amp;lt;id&amp;gt;main&amp;lt;/id&amp;gt;&lt;br/&gt;
+            &amp;lt;goals&amp;gt;&amp;lt;goal&amp;gt;jar&amp;lt;/goal&amp;gt;&amp;lt;/goals&amp;gt;&lt;br/&gt;
+            &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt;&lt;br/&gt;
+          &amp;lt;/execution&amp;gt;&lt;br/&gt;
+          &amp;lt;execution&amp;gt;&lt;br/&gt;
+            &amp;lt;id&amp;gt;with-classifier&amp;lt;/id&amp;gt;&lt;br/&gt;
+            &amp;lt;goals&amp;gt;&amp;lt;goal&amp;gt;jar&amp;lt;/goal&amp;gt;&amp;lt;/goals&amp;gt;&lt;br/&gt;
+            &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt;&lt;br/&gt;
+            &amp;lt;configuration&amp;gt;&lt;br/&gt;
+              &amp;lt;classifier&amp;gt;${envClassifier}&amp;lt;/classifier&amp;gt;&lt;br/&gt;
+            &amp;lt;/configuration&amp;gt;&lt;br/&gt;
+          &amp;lt;/execution&amp;gt;&lt;br/&gt;
+        &amp;lt;/executions&amp;gt;&lt;br/&gt;
+      &amp;lt;/plugin&amp;gt;&lt;br/&gt;
     &amp;lt;/plugins&amp;gt;&lt;br/&gt;
   &amp;lt;/build&amp;gt;&lt;/p&gt;

&lt;p&gt;   &amp;lt;profiles&amp;gt;&lt;br/&gt;
+     &amp;lt;profile&amp;gt;&lt;br/&gt;
+      &amp;lt;id&amp;gt;hadoop1&amp;lt;/id&amp;gt;&lt;br/&gt;
+      &amp;lt;activation&amp;gt;&lt;br/&gt;
+        &amp;lt;property&amp;gt;&lt;br/&gt;
+          &amp;lt;name&amp;gt;&lt;span class=&quot;error&quot;&gt;Unable to render embedded object: File (hadoop.version&amp;lt;/name&amp;gt; &amp;lt;) not found.&lt;/span&gt;-- if no hadoop.version is set --&amp;gt;&lt;br/&gt;
+        &amp;lt;/property&amp;gt;&lt;br/&gt;
+      &amp;lt;/activation&amp;gt;&lt;br/&gt;
+      &amp;lt;properties&amp;gt;&lt;br/&gt;
+        &amp;lt;envClassifier&amp;gt;hadoop1&amp;lt;/envClassifier&amp;gt;&lt;br/&gt;
+      &amp;lt;/properties&amp;gt;&lt;br/&gt;
+      &amp;lt;dependencies&amp;gt;&lt;br/&gt;
+        &amp;lt;dependency&amp;gt;&lt;br/&gt;
+          &amp;lt;groupId&amp;gt;org.apache.hadoop&amp;lt;/groupId&amp;gt;&lt;br/&gt;
+          &amp;lt;artifactId&amp;gt;hadoop-core&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
+          &amp;lt;version&amp;gt;${hadoop1.version}&amp;lt;/version&amp;gt;&lt;br/&gt;
+          &amp;lt;!-- hadoop&apos;s execution environment provides its own jars, usurping any others.&lt;br/&gt;
+            So we should not include it here --&amp;gt;&lt;br/&gt;
+          &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;&lt;br/&gt;
+        &amp;lt;/dependency&amp;gt;&lt;br/&gt;
+        &amp;lt;dependency&amp;gt;&lt;br/&gt;
+          &amp;lt;groupId&amp;gt;org.apache.avro&amp;lt;/groupId&amp;gt;&lt;br/&gt;
+          &amp;lt;artifactId&amp;gt;avro-mapred&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
+          &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt;&lt;br/&gt;
+          &amp;lt;classifier&amp;gt;hadoop1&amp;lt;/classifier&amp;gt;&lt;br/&gt;
+          &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;br/&gt;
+        &amp;lt;/dependency&amp;gt;&lt;br/&gt;
+      &amp;lt;/dependencies&amp;gt;&lt;br/&gt;
+    &amp;lt;/profile&amp;gt;&lt;br/&gt;
+    &amp;lt;profile&amp;gt;&lt;br/&gt;
+      &amp;lt;id&amp;gt;hadoop2&amp;lt;/id&amp;gt;&lt;br/&gt;
+      &amp;lt;activation&amp;gt;&lt;br/&gt;
+        &amp;lt;property&amp;gt;&lt;br/&gt;
+          &amp;lt;name&amp;gt;hadoop.version&amp;lt;/name&amp;gt;&lt;br/&gt;
+          &amp;lt;value&amp;gt;2&amp;lt;/value&amp;gt;&lt;br/&gt;
+        &amp;lt;/property&amp;gt;&lt;br/&gt;
+      &amp;lt;/activation&amp;gt;&lt;br/&gt;
+      &amp;lt;properties&amp;gt;&lt;br/&gt;
+        &amp;lt;envClassifier&amp;gt;hadoop2&amp;lt;/envClassifier&amp;gt;&lt;br/&gt;
+      &amp;lt;/properties&amp;gt;&lt;br/&gt;
+      &amp;lt;dependencies&amp;gt;&lt;br/&gt;
+        &amp;lt;dependency&amp;gt;&lt;br/&gt;
+          &amp;lt;groupId&amp;gt;org.apache.hadoop&amp;lt;/groupId&amp;gt;&lt;br/&gt;
+          &amp;lt;artifactId&amp;gt;hadoop-client&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
+          &amp;lt;version&amp;gt;${hadoop2.version}&amp;lt;/version&amp;gt;&lt;br/&gt;
+          &amp;lt;!-- hadoop&apos;s execution environment provides its own jars, usurping any others.&lt;br/&gt;
+            So we should not include it here --&amp;gt;&lt;br/&gt;
+          &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;&lt;br/&gt;
+        &amp;lt;/dependency&amp;gt;&lt;br/&gt;
+        &amp;lt;dependency&amp;gt;&lt;br/&gt;
+          &amp;lt;groupId&amp;gt;org.apache.hadoop&amp;lt;/groupId&amp;gt;&lt;br/&gt;
+        &amp;lt;artifactId&amp;gt;hadoop-mapreduce-client-common&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
+        &amp;lt;version&amp;gt;${hadoop2.version}&amp;lt;/version&amp;gt;&lt;br/&gt;
+          &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;!-- for LocalJobRunner --&amp;gt;&lt;br/&gt;
+        &amp;lt;/dependency&amp;gt;&lt;br/&gt;
+        &amp;lt;dependency&amp;gt;&lt;br/&gt;
+          &amp;lt;groupId&amp;gt;commons-httpclient&amp;lt;/groupId&amp;gt;&lt;br/&gt;
+          &amp;lt;artifactId&amp;gt;commons-httpclient&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
+          &amp;lt;version&amp;gt;${commons-httpclient.version}&amp;lt;/version&amp;gt;&lt;br/&gt;
+          &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;!-- for LocalJobRunner --&amp;gt;&lt;br/&gt;
+        &amp;lt;/dependency&amp;gt;&lt;br/&gt;
+        &amp;lt;dependency&amp;gt;&lt;br/&gt;
+          &amp;lt;groupId&amp;gt;org.apache.avro&amp;lt;/groupId&amp;gt;&lt;br/&gt;
+          &amp;lt;artifactId&amp;gt;avro-mapred&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
+          &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt;&lt;br/&gt;
+          &amp;lt;classifier&amp;gt;hadoop2&amp;lt;/classifier&amp;gt;&lt;br/&gt;
+          &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;br/&gt;
+        &amp;lt;/dependency&amp;gt;&lt;br/&gt;
+        &amp;lt;dependency&amp;gt;&lt;br/&gt;
+          &amp;lt;groupId&amp;gt;org.apache.avro&amp;lt;/groupId&amp;gt;&lt;br/&gt;
+          &amp;lt;artifactId&amp;gt;avro&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
+          &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt;&lt;br/&gt;
+          &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;br/&gt;
+        &amp;lt;/dependency&amp;gt;&lt;br/&gt;
+      &amp;lt;/dependencies&amp;gt;&lt;br/&gt;
+    &amp;lt;/profile&amp;gt;&lt;br/&gt;
   &amp;lt;/profiles&amp;gt;&lt;/p&gt;

&lt;p&gt; &amp;lt;/project&amp;gt;&lt;/p&gt;</comment>
                            <comment id="13745138" author="cutting" created="Tue, 20 Aug 2013 17:09:20 +0000"  >&lt;p&gt;Is this still an issue in 1.7.5?  If so, perhaps we can fix it in 1.7.6.&lt;/p&gt;</comment>
                            <comment id="13751272" author="rodrigotrujillo" created="Tue, 27 Aug 2013 13:56:40 +0000"  >&lt;p&gt;Yes, it is an issue in 1.7.5&lt;/p&gt;</comment>
                            <comment id="13764739" author="cutting" created="Wed, 11 Sep 2013 20:40:42 +0000"  >&lt;p&gt;I&apos;m confused.  Isn&apos;t this a duplicate of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1322&quot; title=&quot;Publish trevni-avro artifact with Hadoop version classifier&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1322&quot;&gt;&lt;del&gt;AVRO-1322&lt;/del&gt;&lt;/a&gt;, which was included in Avro 1.7.5?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12589468" name="fix_avro_1.7.4_trevni_build_hadoop2.patch" size="4224" author="rodrigotrujillo" created="Mon, 24 Jun 2013 19:52:32 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 20 Aug 2013 17:09:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>328965</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 19 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1kr9r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>329307</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fix Trevni build with Hadoop 2 in Avro 1.7.4</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                </customfields>
    </item>


<item>
            <title>[AVRO-1337] Transform a single .avdl into many .avsc</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1337</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The syntax of avro IDL is attractive in order to build more readable and thus maintainable avro schemadata, even when not using protocols. However, there is currently no way of extracting the types of a schema (avdl) into multiple independent schemata (avsc). Here is a proposal.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12648742">AVRO-1337</key>
            <summary>Transform a single .avdl into many .avsc</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bdechoux">Bertrand Dechoux</assignee>
                                    <reporter username="bdechoux">Bertrand Dechoux</reporter>
                        <labels>
                    </labels>
                <created>Tue, 21 May 2013 21:33:17 +0000</created>
                <updated>Tue, 20 Aug 2013 17:46:04 +0000</updated>
                            <resolved>Wed, 7 Aug 2013 19:23:23 +0000</resolved>
                                    <version>1.7.4</version>
                                    <fixVersion>1.7.5</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13663436" author="bdechoux" created="Tue, 21 May 2013 21:42:37 +0000"  >&lt;p&gt;Proposal.&lt;br/&gt;
Limitations :&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;does not handle IO errors because there is no smart Exception strategy here (it fails if it fails)&lt;/li&gt;
	&lt;li&gt;assumes that the name of the type is unique (which might not be the case and that&apos;s why namespace exist but it should be a good practice inside a single protocol anyway)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13666593" author="cutting" created="Fri, 24 May 2013 19:35:55 +0000"  >&lt;p&gt;Generally looks good to me.&lt;/p&gt;

&lt;p&gt;A few minor things:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the tool might be better named idl2schemata or avdl2avsc&lt;/li&gt;
	&lt;li&gt;we should update Main.java, adding this tool there&lt;/li&gt;
	&lt;li&gt;indentation should be consistently two spaces per level, with &amp;lt;80 column lines&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13682084" author="bdechoux" created="Thu, 13 Jun 2013 10:05:56 +0000"  >&lt;p&gt;Thanks, I didn&apos;t see your answer.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I really didn&apos;t know how to name it. I wanted something simple to type/remember. I will use idl2schemata then.&lt;/li&gt;
	&lt;li&gt;I forgot to update Main.java. I will do it too.&lt;/li&gt;
	&lt;li&gt;I know about indentations and tried to respect the format rules. I will check again.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks for the feedback.&lt;/p&gt;</comment>
                            <comment id="13682856" author="bdechoux" created="Thu, 13 Jun 2013 22:44:28 +0000"  >&lt;p&gt;See attachment for updated patch.&lt;/p&gt;</comment>
                            <comment id="13732606" author="jira-bot" created="Wed, 7 Aug 2013 19:22:58 +0000"  >&lt;p&gt;Commit 1511449 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1511449&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1511449&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1337&quot; title=&quot;Transform a single .avdl into many .avsc&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1337&quot;&gt;&lt;del&gt;AVRO-1337&lt;/del&gt;&lt;/a&gt;. Java: Add a command line tool to generate schema files from a protocol.  Contributed by Bertrand Dechoux.&lt;/p&gt;</comment>
                            <comment id="13732607" author="cutting" created="Wed, 7 Aug 2013 19:23:23 +0000"  >&lt;p&gt;I committed this.  Thanks, Bertrand!&lt;/p&gt;</comment>
                            <comment id="13732665" author="hudson" created="Wed, 7 Aug 2013 20:02:30 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #388 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/388/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/388/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1337&quot; title=&quot;Transform a single .avdl into many .avsc&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1337&quot;&gt;&lt;del&gt;AVRO-1337&lt;/del&gt;&lt;/a&gt;. Java: Add a command line tool to generate schema files from a protocol.  Contributed by Bertrand Dechoux. (cutting: rev 1511449)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/IdlToSchemataTool.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/main/java/org/apache/avro/tool/Main.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/test/idl&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/test/idl/protocol.avdl&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/test/java/org/apache/avro/tool/TestIdlToSchemataTool.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12584176" name="AVRO-1337-0.diff" size="5632" author="bdechoux" created="Tue, 21 May 2013 21:42:37 +0000"/>
                            <attachment id="12587725" name="AVRO-1337-1.diff" size="6578" author="bdechoux" created="Thu, 13 Jun 2013 22:44:55 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 24 May 2013 19:35:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>329072</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 24 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1krxj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>329414</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
