<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:17:37 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2012-8-28+AND+created+%3C%3D+2012-9-5+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="4" total="4"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1143] avrogencpp generates $Undefined$ for some union types</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1143</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;When converting the attached file to a C++ header, a vector of type $Undefined$ is generated. I believe this is because there is no check for AVRO_UNION in CodeGen::cppTypeOf().&lt;/p&gt;</description>
                <environment></environment>
        <key id="12605255">AVRO-1143</key>
            <summary>avrogencpp generates $Undefined$ for some union types</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thiru_mg">Thiruvalluvan M. G.</assignee>
                                    <reporter username="janlugt">Jan van der Lugt</reporter>
                        <labels>
                    </labels>
                <created>Tue, 28 Aug 2012 17:13:50 +0000</created>
                <updated>Tue, 25 Sep 2012 21:16:13 +0000</updated>
                            <resolved>Sun, 9 Sep 2012 04:47:05 +0000</resolved>
                                    <version>1.7.1</version>
                                    <fixVersion>1.7.2</fixVersion>
                                    <component>c++</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13446102" author="scott_carey" created="Fri, 31 Aug 2012 16:30:25 +0000"  >&lt;p&gt;Thiru, any idea on the best way forward here?&lt;/p&gt;</comment>
                            <comment id="13450617" author="thiru_mg" created="Fri, 7 Sep 2012 13:36:20 +0000"  >&lt;p&gt;Good catch. Attached patch has a modified test that catches the problem and the fix for the problem.&lt;/p&gt;

&lt;p&gt;I&apos;m sorry I couldn&apos;t resolve the issue earlier.&lt;/p&gt;</comment>
                            <comment id="13450984" author="janlugt" created="Fri, 7 Sep 2012 21:10:43 +0000"  >&lt;p&gt;No problem. It seems to work for my example, thanks a lot!&lt;/p&gt;</comment>
                            <comment id="13451500" author="thiru_mg" created="Sun, 9 Sep 2012 04:47:05 +0000"  >&lt;p&gt;Committed revision 1382397.&lt;/p&gt;

&lt;p&gt;Thank you Jan van der Lugt for verifying the fix.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12544215" name="AVRO-1143.patch" size="1308" author="thiru_mg" created="Fri, 7 Sep 2012 13:36:20 +0000"/>
                            <attachment id="12542789" name="gm_avro_graph.avpr" size="1157" author="janlugt" created="Tue, 28 Aug 2012 17:14:23 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 31 Aug 2012 16:30:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>253692</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 20 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e4lz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80509</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1144] Deadlock with FSInput and Hadoop NativeS3FileSystem.</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1144</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Deadlock can occur when using org.apache.avro.mapred.FsInput to read files from S3 using the Hadoop NativeS3FileSystem and multiple threads.&lt;/p&gt;

&lt;p&gt;There are a lot of components involved, but the basic cause is pretty simple: Apache Commons HttpClient can deadlock waiting for a free HTTP connection when the number of threads downloading from S3 is greater than or equal to the maximum allowed HTTP connections per host.&lt;/p&gt;

&lt;p&gt;I&apos;ve filed this bug against Avro because the bug is easiest to fix in Avro.  Swap the order of the FileSystem.open() and FileSystem.getFileStatus() calls in the FSInput constructor:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;/** Construct given a path and a configuration. */
public FsInput(Path path, Configuration conf) throws IOException {
  this.stream = path.getFileSystem(conf).open(path);
  this.len = path.getFileSystem(conf).getFileStatus(path).getLen();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;/** Construct given a path and a configuration. */
public FsInput(Path path, Configuration conf) throws IOException {
  this.len = path.getFileSystem(conf).getFileStatus(path).getLen();
  this.stream = path.getFileSystem(conf).open(path);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here&apos;s what triggers the deadlock:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;FSInput calls FileSystem.open() which calls Jets3t to connect to S3 and open an HTTP connection for downloading content.  This acquires an HTTP connection but does not release it.&lt;/li&gt;
	&lt;li&gt;FSInput calls FileSystem.getFileStatus() which calls Jets3t to connect to S3 and perform a HEAD request to get object metadata.  This attempts to acquire a second HTTP connection.&lt;/li&gt;
	&lt;li&gt;Jets3t uses Apache Commons HTTP Client which limits the number of simultaneous HTTP connections to a given host.  Lets say this maximum is 4 (the default)...  If 4 threads all call the FSInput constructor concurrently, the 4 FileSystem.open() calls can acquire all 4 available connections and the FileSystem.getFileStatus() calls block forever waiting for a thread to release an HTTP connection back to the connection pool.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A simple way to reproduce the problem this problem is to create &quot;jets3t.properties&quot; in your classpath with &quot;httpclient.max-connections=1&quot;.  Then try to open a file using FSInput and the Native S3 file system (new Path(&quot;s3n://&amp;lt;bucket&amp;gt;/&amp;lt;path&amp;gt;&quot;)).  It will hang indefinitely inside the FSInput constructor.&lt;/p&gt;

&lt;p&gt;Swapping the order of the open() and getFileStatus() calls ensures that a given thread using FSInput has at most one outstanding connection S3 at a time.  As a result, one thread should always be able to make progress, avoiding deadlock.&lt;/p&gt;

&lt;p&gt;Here&apos;s a sample stack trace of a deadlocked thread:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;&quot;pool-10-thread-3&quot; prio=5 tid=11026f800 nid=0x116a04000 in Object.wait() [116a02000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on &amp;lt;785892cc0&amp;gt; (a org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool)
	at org.apache.commons.httpclient.MultiThreadedHttpConnectionManager.doGetConnection(MultiThreadedHttpConnectionManager.java:518)
	- locked &amp;lt;785892cc0&amp;gt; (a org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool)
	at org.apache.commons.httpclient.MultiThreadedHttpConnectionManager.getConnectionWithTimeout(MultiThreadedHttpConnectionManager.java:416)
	at org.apache.commons.httpclient.HttpMethodDirector.executeMethod(HttpMethodDirector.java:153)
	at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:397)
	at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:323)
	at org.jets3t.service.impl.rest.httpclient.RestS3Service.performRequest(RestS3Service.java:357)
	at org.jets3t.service.impl.rest.httpclient.RestS3Service.performRestHead(RestS3Service.java:652)
	at org.jets3t.service.impl.rest.httpclient.RestS3Service.getObjectImpl(RestS3Service.java:1556)
	at org.jets3t.service.impl.rest.httpclient.RestS3Service.getObjectDetailsImpl(RestS3Service.java:1492)
	at org.jets3t.service.S3Service.getObjectDetails(S3Service.java:1793)
	at org.jets3t.service.S3Service.getObjectDetails(S3Service.java:1225)
	at org.apache.hadoop.fs.s3native.Jets3tNativeFileSystemStore.retrieveMetadata(Jets3tNativeFileSystemStore.java:111)
	at sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:82)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:59)
	at org.apache.hadoop.fs.s3native.$Proxy25.retrieveMetadata(Unknown Source)
	at org.apache.hadoop.fs.s3native.NativeS3FileSystem.getFileStatus(NativeS3FileSystem.java:326)
	at org.apache.avro.mapred.FsInput.&amp;lt;init&amp;gt;(FsInput.java:38)
	at org.apache.crunch.io.avro.AvroFileReaderFactory.read(AvroFileReaderFactory.java:70)
	at org.apache.crunch.io.CompositePathIterable$2.&amp;lt;init&amp;gt;(CompositePathIterable.java:80)
	at org.apache.crunch.io.CompositePathIterable.iterator(CompositePathIterable.java:78)
	at com.example.load.BulkLoader$1.run(BulkLoadCommand.java:109)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment>&lt;p&gt;Hadoop 1.0.3&lt;/p&gt;</environment>
        <key id="12605280">AVRO-1144</key>
            <summary>Deadlock with FSInput and Hadoop NativeS3FileSystem.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="scott_carey">Scott Carey</assignee>
                                    <reporter username="ssmith">Shawn Smith</reporter>
                        <labels>
                    </labels>
                <created>Tue, 28 Aug 2012 19:45:03 +0000</created>
                <updated>Fri, 24 Jan 2014 15:00:31 +0000</updated>
                            <resolved>Wed, 31 Jul 2013 02:31:08 +0000</resolved>
                                    <version>1.7.0</version>
                                    <fixVersion>1.7.5</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13722489" author="jgibel" created="Mon, 29 Jul 2013 14:27:14 +0000"  >&lt;p&gt;Is there any update to this issue yet?&lt;/p&gt;</comment>
                            <comment id="13722677" author="scott_carey" created="Mon, 29 Jul 2013 17:26:19 +0000"  >&lt;p&gt;Looks reasonable to me.  With the change, all tests pass. I will commit this tomorrow if there are no objections, and provide the trivial patch now.&lt;/p&gt;</comment>
                            <comment id="13722678" author="scott_carey" created="Mon, 29 Jul 2013 17:27:48 +0000"  >&lt;p&gt;Trivial patch to address this issue.&lt;/p&gt;</comment>
                            <comment id="13724772" author="jira-bot" created="Wed, 31 Jul 2013 02:30:51 +0000"  >&lt;p&gt;Commit 1508713 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=scott_carey&quot; class=&quot;user-hover&quot; rel=&quot;scott_carey&quot;&gt;Scott Carey&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1508713&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1508713&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1144&quot; title=&quot;Deadlock with FSInput and Hadoop NativeS3FileSystem.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1144&quot;&gt;&lt;del&gt;AVRO-1144&lt;/del&gt;&lt;/a&gt; Deadlock with FSInput and Hadoop NativeS3FileSystem&lt;/p&gt;</comment>
                            <comment id="13724775" author="scott_carey" created="Wed, 31 Jul 2013 02:31:08 +0000"  >&lt;p&gt;Committed in revision 1508713.&lt;/p&gt;</comment>
                            <comment id="13724816" author="hudson" created="Wed, 31 Jul 2013 03:37:33 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #387 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/387/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/387/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1144&quot; title=&quot;Deadlock with FSInput and Hadoop NativeS3FileSystem.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1144&quot;&gt;&lt;del&gt;AVRO-1144&lt;/del&gt;&lt;/a&gt; Deadlock with FSInput and Hadoop NativeS3FileSystem (scottcarey: rev 1508713)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/src/main/java/org/apache/avro/mapred/FsInput.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13881022" author="zhenxiao" created="Fri, 24 Jan 2014 15:00:31 +0000"  >&lt;p&gt;Hi Scott and Shawn,&lt;/p&gt;

&lt;p&gt;I found exactly the same problem when running Presto(an open source SQL engine built on top of Hadoop) against NativeS3FileSystem. Could not get it fixed now. Currently I am using jets3t 0.6, which is using httpclient 3.1.&lt;/p&gt;

&lt;p&gt;Just wonder, would update to jets3t 0.9 get the problem fixed?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Zhenxiao&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12594738" name="AVRO-1144.patch" size="693" author="scott_carey" created="Mon, 29 Jul 2013 17:27:48 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 29 Jul 2013 14:27:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>253693</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e4m7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80510</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1145] Can&apos;t read union of null and primitive from value written with schema as primitive</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1145</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Using the its Java&apos;s generic representation API and I have a problem dealing with our current case of schema evolution. The scenario we&apos;re dealing with here is making a primitive-type field optional by changing the field to be a &lt;tt&gt;union&lt;/tt&gt; of &lt;tt&gt;null&lt;/tt&gt; and that primitive type.&lt;/p&gt;

&lt;p&gt;I&apos;m going to use a simple example. Basically, our schemas are:&lt;/p&gt;

&lt;p&gt;Initial: A record with one field of type &lt;tt&gt;int&lt;/tt&gt;&lt;br/&gt;
Second version: Same record, same field name but the type is now a union of &lt;tt&gt;null&lt;/tt&gt; and &lt;tt&gt;int&lt;/tt&gt;&lt;br/&gt;
According to the &lt;a href=&quot;http://avro.apache.org/docs/current/spec.html#Schema+Resolution&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;schema resolution&lt;/a&gt; chapter of Avro&apos;s spec, the resolution for such a case should be:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; reader&lt;span class=&quot;code-quote&quot;&gt;&apos;s is a union, but writer&apos;&lt;/span&gt;s is not

The first schema in the reader&apos;s union that matches
the writer&apos;s schema is recursively resolved against 
it. If none match, an error is signalled.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My interpretation is that we should resolve data serialized with the initial schema properly as int is part of the union in the reader&apos;s schema.&lt;/p&gt;

&lt;p&gt;However, when running a test of reading back a record serialized with version 1 using the version 2, I get&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;tt&gt;org.apache.avro.AvroTypeException: Attempt to process a int when a union was expected.&lt;/tt&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Here&apos;s a test that shows exactly this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;@Test
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testReadingUnionFromValueWrittenAsPrimitive() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
    Schema writerSchema = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Parser().parse(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;    \&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;    \&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;NeighborComparisons\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;    \&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;: [\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;      {\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;: \&quot;&lt;/span&gt;test\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;      \&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;: \&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot; }]} &quot;&lt;/span&gt;);

    Schema readersSchema = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Parser().parse(&lt;span class=&quot;code-quote&quot;&gt;&quot; {\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;    \&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;    \&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;NeighborComparisons\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;    \&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;: [ {\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;      \&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;: \&quot;&lt;/span&gt;test\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;      \&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;: [\&quot;&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;, \&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;],\n&quot;&lt;/span&gt; +
            &lt;span class=&quot;code-quote&quot;&gt;&quot;      \&quot;&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;: &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; } ]  }&quot;&lt;/span&gt;);

    &lt;span class=&quot;code-comment&quot;&gt;// Writing a record using the initial schema with the 
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// test field defined as an &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;
&lt;/span&gt;    GenericData.Record record = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericData.Record(writerSchema);
    record.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;test&quot;&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.valueOf(10));        
    ByteArrayOutputStream output = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream();
    JsonEncoder jsonEncoder = EncoderFactory.get().
       jsonEncoder(writerSchema, output);
    GenericDatumWriter&amp;lt;GenericData.Record&amp;gt; writer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; 
       GenericDatumWriter&amp;lt;GenericData.Record&amp;gt;(writerSchema);
    writer.write(record, jsonEncoder);
    jsonEncoder.flush();
    output.flush();

    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(output.toString());

    &lt;span class=&quot;code-comment&quot;&gt;// We &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; reading it back using the second schema 
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// version where the test field is defined as a union of &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; and &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;
&lt;/span&gt;    JsonDecoder jsonDecoder = DecoderFactory.get().
        jsonDecoder(readersSchema, output.toString());
    GenericDatumReader&amp;lt;GenericData.Record&amp;gt; reader =
            &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericDatumReader&amp;lt;GenericData.Record&amp;gt;(writerSchema, 
                readersSchema);
    GenericData.Record read = reader.read(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, jsonDecoder);

    &lt;span class=&quot;code-comment&quot;&gt;// We should be able to &lt;span class=&quot;code-keyword&quot;&gt;assert&lt;/span&gt; that the value is 10 but it
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// fails on reading the record before getting here
&lt;/span&gt;    assertEquals(10, read.get(&lt;span class=&quot;code-quote&quot;&gt;&quot;test&quot;&lt;/span&gt;));
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12605759">AVRO-1145</key>
            <summary>Can&apos;t read union of null and primitive from value written with schema as primitive</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="alexandre.normand">Alexandre Normand</reporter>
                        <labels>
                    </labels>
                <created>Fri, 31 Aug 2012 17:25:55 +0000</created>
                <updated>Tue, 25 Sep 2012 21:22:59 +0000</updated>
                            <resolved>Fri, 31 Aug 2012 21:27:58 +0000</resolved>
                                    <version>1.7.0</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13446149" author="alexandre.normand" created="Fri, 31 Aug 2012 17:28:26 +0000"  >&lt;p&gt;Unit test for this scenario.&lt;/p&gt;</comment>
                            <comment id="13446211" author="alexandre.normand" created="Fri, 31 Aug 2012 18:29:18 +0000"  >&lt;p&gt;The documentation in &lt;a href=&quot;http://svn.apache.org/viewvc/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/io/parsing/doc-files/parsing.html?view=log&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;parsing.html&lt;/a&gt; seems to suggest that we should have a &lt;tt&gt;ReaderUnionAction&lt;/tt&gt; to handle this case. I naively expected to find an action class called &lt;tt&gt;ReaderUnionAction&lt;/tt&gt; much in the same way there is a &lt;tt&gt;WriterUnionAction&lt;/tt&gt;. &lt;/p&gt;

&lt;p&gt;Is that something that&apos;s simply missing from the current implementation?&lt;/p&gt;</comment>
                            <comment id="13446387" author="cutting" created="Fri, 31 Aug 2012 21:19:38 +0000"  >&lt;p&gt;The problem is that you should be creating the JsonDecoder using the writer&apos;s schema, not the reader&apos;s, since it&apos;s decoding the data written.  It works for me if I change that to:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    JsonDecoder jsonDecoder = DecoderFactory.get().
        jsonDecoder(writerSchema, output.toString());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13446392" author="alexandre.normand" created="Fri, 31 Aug 2012 21:27:20 +0000"  >&lt;p&gt;Ah! Thanks. It actually makes complete sense.&lt;/p&gt;</comment>
                            <comment id="13446393" author="alexandre.normand" created="Fri, 31 Aug 2012 21:27:58 +0000"  >&lt;p&gt;It was me misusing the API.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12543305" name="TestPrimitiveToUnionResolution.java" size="2734" author="alexandre.normand" created="Fri, 31 Aug 2012 17:28:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 31 Aug 2012 21:19:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>253694</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 21 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e4mf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80511</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1146] Can&apos;t use ReflectData to get schema when the type has a BigDecimal or BigInteger field</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1146</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I&apos;m using avro Reflection API for a specific use case and I have a bug where if the object I&apos;m trying to get the Schema for has a field of type BigDecimal. Because BigDecimal extends java.lang.Number, we try to create a primitive schema for it but fail doing so with the following error:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;tt&gt;org.apache.avro.AvroRuntimeException: Not a Specific class: class java.math.BigDecimal&lt;/tt&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I&apos;m attaching a unit test that shows the problem with a basic type that has a single BigDecimal field.&lt;/p&gt;

&lt;p&gt;This basically also applied to all subclasses of java.lang.Number that are not primitives.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12605810">AVRO-1146</key>
            <summary>Can&apos;t use ReflectData to get schema when the type has a BigDecimal or BigInteger field</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="alexandre.normand">Alexandre Normand</assignee>
                                    <reporter username="alexandre.normand">Alexandre Normand</reporter>
                        <labels>
                            <label>newbie</label>
                    </labels>
                <created>Fri, 31 Aug 2012 22:51:35 +0000</created>
                <updated>Tue, 25 Sep 2012 21:16:14 +0000</updated>
                            <resolved>Mon, 10 Sep 2012 18:32:49 +0000</resolved>
                                    <version>1.7.0</version>
                                    <fixVersion>1.7.2</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13446475" author="alexandre.normand" created="Fri, 31 Aug 2012 23:00:43 +0000"  >&lt;p&gt;To add to the description, this actually also applies to every child class of java.lang.Number that aren&apos;t wrapper classes to primitive types.&lt;/p&gt;</comment>
                            <comment id="13446615" author="alexandre.normand" created="Sat, 1 Sep 2012 05:46:05 +0000"  >&lt;p&gt;One problem is that all subclasses of java.lang.Number are considered primitives in ReflectData.createSchema. Since BigDecimal and BigInteger are not actual primitives, I made the check more precise to actually check for all 9 primitive classes. &lt;br/&gt;
I&apos;ve added a map of wrapper classes to primitive types to make the code cleaner but I&apos;m not sure this fits the coding style. It could very well just be a long series of &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (c == &lt;span class=&quot;code-object&quot;&gt;Void&lt;/span&gt;.class || c == &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.class || ...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;ve made it so that BigDecimal and BigInteger are handled as Stringable types, which they are. &lt;/p&gt;

&lt;p&gt;I&apos;ve also added a test for this in TestReflect. &lt;/p&gt;</comment>
                            <comment id="13448932" author="cutting" created="Wed, 5 Sep 2012 17:59:22 +0000"  >&lt;p&gt;I&apos;d prefer we address this as follows:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Remove references to java.lang.Number, since Avro cannot correctly handle all subclasses.&lt;/li&gt;
	&lt;li&gt;Add a mechanism to declare that an arbitrary class is Stringable.&lt;/li&gt;
	&lt;li&gt;Use that mechanism to declare BigDecimal, BigInteger and other concrete Number subclasses.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ll work on a patch that does this.&lt;/p&gt;</comment>
                            <comment id="13448940" author="alexandre.normand" created="Wed, 5 Sep 2012 18:05:51 +0000"  >&lt;p&gt;I agree. My patch didn&apos;t cover any of the other subclasses of Number and that&apos;s likely to be helpful to others. &lt;/p&gt;</comment>
                            <comment id="13449030" author="cutting" created="Wed, 5 Sep 2012 19:17:19 +0000"  >&lt;p&gt;Here&apos;s a version that adds the ability to declare already-defined classes as stringable and that pre-defines BigDecimal and BigInteger this way.&lt;/p&gt;

&lt;p&gt;Strings are not an ideal representation for these as they&apos;ll not be sorted correctly, but it&apos;s perhaps better than not serializing them at all.&lt;/p&gt;</comment>
                            <comment id="13449053" author="alexandre.normand" created="Wed, 5 Sep 2012 19:48:07 +0000"  >&lt;p&gt;For what my opinion is worth, I think the patch looks good. It actually made me wish &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1147&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;we could define Stringable Map keys&lt;/a&gt; too to better coverage of reflection use cases. &lt;/p&gt;</comment>
                            <comment id="13451137" author="cutting" created="Fri, 7 Sep 2012 23:39:16 +0000"  >&lt;p&gt;Here&apos;s a new version of the patch that also handles URI, URL, Date and File.  I also added a comment and improved the tests.&lt;/p&gt;

&lt;p&gt;If there are no objections I&apos;ll commit this Monday.&lt;/p&gt;</comment>
                            <comment id="13452281" author="cutting" created="Mon, 10 Sep 2012 18:32:49 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                            <comment id="13452576" author="alexandre.normand" created="Mon, 10 Sep 2012 23:38:46 +0000"  >&lt;p&gt;There seems to be an issue with stringable fields that are nullable. I&apos;m mostly using ReflectData.AllowNull in my real usage of this feature and I&apos;m seeing it fail with this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;org.apache.avro.AvroRuntimeException: Unknown datum type: 10
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericData.getSchemaName(GenericData.java:574)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericData.resolveUnion(GenericData.java:539)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumWriter.resolveUnion(GenericDatumWriter.java:137)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumWriter.write(GenericDatumWriter.java:70)
	at org.apache.avro.reflect.ReflectDatumWriter.write(ReflectDatumWriter.java:104)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumWriter.writeRecord(GenericDatumWriter.java:105)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumWriter.write(GenericDatumWriter.java:65)
	at org.apache.avro.reflect.ReflectDatumWriter.write(ReflectDatumWriter.java:104)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m going to try and look at it this evening but, meanwhile, here&apos;s a quick test that shows this problem:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;N1 {
    BigDecimal number;
  }

  @Test &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testNullableStringableField() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
    N1 datum = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; N1();
    datum.number = BigDecimal.TEN;

    checkBinary(ReflectData.AllowNull.get(), ReflectData.AllowNull.get().getSchema(N1.class), datum, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13452586" author="cutting" created="Mon, 10 Sep 2012 23:51:25 +0000"  >&lt;p&gt;Let&apos;s open a new issue for this.  It&apos;s not a regression created by the new feature that might cause us to revert this change, it&apos;s only a bug for some folks using the new feature, right?&lt;/p&gt;

&lt;p&gt;Also, AllowNull is a crude tool, wrapping everything in a union with null.  If you&apos;re defining your own classes then you might be better off using @Nullable for those fields.&lt;/p&gt;

&lt;p&gt;This is not to say there&apos;s not a bug here that we should fix.&lt;/p&gt;</comment>
                            <comment id="13452590" author="alexandre.normand" created="Mon, 10 Sep 2012 23:57:53 +0000"  >&lt;p&gt;Yes, agreed. I&apos;ll create a new issue for it. &lt;/p&gt;

&lt;p&gt;As for AllowNull, I see what it does and it&apos;s actually the best solution for what I have here. It&apos;s a case where ideally, I wouldn&apos;t change the classes to be serialized. It&apos;s sub-optimal because of extra cost in size of the union with null but it&apos;s actually ok for that specific use. &lt;/p&gt;</comment>
                            <comment id="13452593" author="alexandre.normand" created="Tue, 11 Sep 2012 00:04:10 +0000"  >&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1153&quot; title=&quot;Exception when trying to write object with Nullable field that is of Stringable type&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1153&quot;&gt;&lt;del&gt;AVRO-1153&lt;/del&gt;&lt;/a&gt; for that last issue.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12544323" name="AVRO-1146.java" size="5283" author="cutting" created="Fri, 7 Sep 2012 23:39:16 +0000"/>
                            <attachment id="12543894" name="AVRO-1146.patch" size="4289" author="cutting" created="Wed, 5 Sep 2012 19:17:19 +0000"/>
                            <attachment id="12543412" name="AVRO-1146.patch" size="6009" author="alexandre.normand" created="Sat, 1 Sep 2012 05:46:31 +0000"/>
                            <attachment id="12543363" name="TestReflectDataWithBigDecimal.java" size="812" author="alexandre.normand" created="Fri, 31 Aug 2012 22:51:55 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 5 Sep 2012 17:59:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>253695</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 19 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e4mn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80512</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
