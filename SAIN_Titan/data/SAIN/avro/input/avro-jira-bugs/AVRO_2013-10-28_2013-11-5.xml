<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:19:25 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2013-10-28+AND+created+%3C%3D+2013-11-5+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="2" total="2"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1391] NettyTransceiver await called in IO thread</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1391</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The NettyTransceiver does a call to channelFuture.await() in the getChannel() method (line 271). This fails with the following exception if avro ipc is used from within an IO thread from another avro-ipc call.&lt;/p&gt;

&lt;p&gt;Caused by: java.lang.IllegalStateException: await*() in I/O thread causes a dead lock or sudden performance drop. Use addListener() instead or call await*() from a different thread.&lt;br/&gt;
        at org.jboss.netty.channel.DefaultChannelFuture.checkDeadLock(DefaultChannelFuture.java:314)&lt;br/&gt;
        at org.jboss.netty.channel.DefaultChannelFuture.await0(DefaultChannelFuture.java:278)&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;The use case where I was able to reproduce this is when apache flume&apos;s avro source is coupled with a custom flume sink that also uses avro-ipc to talk to something else. In that case, the thread that ultimately does the above getChannel() call is an &quot;avro io thread&quot;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12676858">AVRO-1391</key>
            <summary>NettyTransceiver await called in IO thread</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="janvanbesien">Jan Van Besien</reporter>
                        <labels>
                    </labels>
                <created>Thu, 31 Oct 2013 14:06:41 +0000</created>
                <updated>Tue, 5 Nov 2013 07:42:55 +0000</updated>
                                            <version>1.7.5</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13813724" author="janvanbesien" created="Tue, 5 Nov 2013 07:42:55 +0000"  >&lt;p&gt;FYI. I worked around the problem by starting up new threads for the (avro-ipc) communication with my backend system from within the custom flume sink. Although the whole flow is still synchronous (I start a thread to do the synchronous call and wait for the thread to finish), Netty no longer thinks that the call originates from an IO thread.&lt;/p&gt;

&lt;p&gt;The deadlock detection mechanism in Netty is wrong here I think, because the IO thread is actually only an IO thread on a different Netty pipeline.&lt;/p&gt;

&lt;p&gt;If the NettyTransceiver implementation in Avro would be truly asynchronous (i.e. do not wait for the channel to be created but add a listener which gets notified when it is ready), the problem would not occur. However, I can imagine that this would be a non trivial change which would ripple up in client code.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>356234</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 11 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1pev3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>356522</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1392] Unable to marshal enum to Avro</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1392</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I&apos;m trying to marshall below object to Avro format and unable to marshall it using ReflectDatum Writer.Enums are being rejected while marshalling.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;AccountAccess &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; DESBusinessEvent&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; {
    @XmlElement(required = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;)
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; accountId;
    @XmlElement(required = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;)
    @XmlSchemaType(name = &lt;span class=&quot;code-quote&quot;&gt;&quot;dateTime&quot;&lt;/span&gt;)
    @AvroEncode(using=XmlDateAsLong.class)
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; XMLGregorianCalendar dateTime;
&lt;span class=&quot;code-comment&quot;&gt;//    @XmlElement(namespace = DESNamespaces.ENUM_NAMESPACE, required = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;)
&lt;/span&gt;    @XmlElement(required = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;)
    @Stringable
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; ApplicationEnum application;
&lt;span class=&quot;code-comment&quot;&gt;//    @XmlElement(namespace = DESNamespaces.ENUM_NAMESPACE, required = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;)
&lt;/span&gt;    @XmlElement(required = &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;)
    @Stringable
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; UserTypeEnum userType;
    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; userId;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment>&lt;p&gt;DEV&lt;/p&gt;</environment>
        <key id="12677452">AVRO-1392</key>
            <summary>Unable to marshal enum to Avro</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.svg">Blocker</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="balaji.seshadri">Balaji Seshadri</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Nov 2013 21:27:20 +0000</created>
                <updated>Wed, 6 Nov 2013 20:34:58 +0000</updated>
                            <resolved>Wed, 6 Nov 2013 20:34:58 +0000</resolved>
                                                                    <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13815116" author="rdblue" created="Wed, 6 Nov 2013 18:24:42 +0000"  >&lt;p&gt;If you could post a stack trace of the problem, it would be easier to help troubleshoot.&lt;/p&gt;

&lt;p&gt;In the mean time, It looks like you&apos;re telling Avro to encode the enums, &lt;tt&gt;UserTypeEnum&lt;/tt&gt; and &lt;tt&gt;ApplicationEnum&lt;/tt&gt; as strings by annotating them with &lt;tt&gt;@Stringable&lt;/tt&gt;. But when it goes to set those fields, they aren&apos;t assignable from strings. A work-around you may want to try is to add getters/setters that translate:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; userType;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void setUserType(UserTypeEnum e) {
  &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.userType = e.toString();
}

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; UserTypeEnum getUserType() {
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; UserTypeEnum.valueOf(userType);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Another method that is probably better is to use &lt;tt&gt;@AvroEncode&lt;/tt&gt; that correctly translates to/from an Avro enum and your enum class. I don&apos;t see a way in the docs (e.g., and @Enum annotation) to set the type if the field is serialized as an enum, so it will probably default to &lt;tt&gt;GenericEnumSymbol&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="13815134" author="balaji.seshadri" created="Wed, 6 Nov 2013 18:38:51 +0000"  >&lt;p&gt;I&apos;m not getting any error while i encode it just skips enums when i dont annotate as String.&lt;/p&gt;

&lt;p&gt;I cant change enum field to string ,XSD&apos;s we generate would be messaged up then.&lt;/p&gt;</comment>
                            <comment id="13815137" author="rdblue" created="Wed, 6 Nov 2013 18:44:50 +0000"  >&lt;p&gt;I just tried the following, and it works for me if I &lt;b&gt;don&apos;t&lt;/b&gt; add the Stringable annotation (for both values of the enum).&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.Schema;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.DatumReader;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.DatumWriter;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.Decoder;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.DecoderFactory;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.Encoder;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.EncoderFactory;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.reflect.ReflectData;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.reflect.ReflectDatumReader;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.reflect.ReflectDatumWriter;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.junit.Assert;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.ByteArrayOutputStream;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;AvroRoundTrip {
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt; UserType {
    ANNOYING,
    ANGRY
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;User {
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; UserType type;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; name;
  }

  @Test
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testRoundTrip() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    Schema reflectedSchema = ReflectData.get().getSchema(User.class);
    ByteArrayOutputStream byteOutStream = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream();
    Encoder encoder = EncoderFactory.get().binaryEncoder(byteOutStream, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    DatumWriter&amp;lt;User&amp;gt; writer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReflectDatumWriter(reflectedSchema);

    User u = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; User();
    u.type = UserType.ANNOYING;
    u.name = &lt;span class=&quot;code-quote&quot;&gt;&quot;Blue&quot;&lt;/span&gt;;

    writer.write(u, encoder);
    encoder.flush();

    Decoder decoder = DecoderFactory.get().binaryDecoder(byteOutStream.toByteArray(), &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    DatumReader&amp;lt;User&amp;gt; reader = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReflectDatumReader(reflectedSchema);

    User u2 = reader.read(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, decoder);

    Assert.assertEquals(u.type, u2.type);
    Assert.assertEquals(u.name, u2.name);
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When I add &lt;tt&gt;Stringable&lt;/tt&gt; to the enum, I get this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;org.apache.avro.AvroRuntimeException: Failed to read Stringable
	at org.apache.avro.reflect.ReflectDatumReader.readField(ReflectDatumReader.java:225)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumReader.readRecord(GenericDatumReader.java:183)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumReader.read(GenericDatumReader.java:151)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumReader.read(GenericDatumReader.java:142)
	at com.cloudera.cdk.data.AvroRoundTrip.testRoundTrip(AvroRoundTrip.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:77)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:195)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
Caused by: org.apache.avro.AvroRuntimeException: java.lang.NoSuchMethodException: com.cloudera.cdk.data.AvroRoundTrip$UserType.&amp;lt;init&amp;gt;(java.lang.&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumReader.newInstanceFromString(GenericDatumReader.java:413)
	at org.apache.avro.reflect.ReflectDatumReader.readField(ReflectDatumReader.java:220)
	... 30 more
Caused by: java.lang.NoSuchMethodException: com.cloudera.cdk.data.AvroRoundTrip$UserType.&amp;lt;init&amp;gt;(java.lang.&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.getConstructor0(&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.java:2810)
	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.getDeclaredConstructor(&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.java:2053)
	at org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumReader.newInstanceFromString(GenericDatumReader.java:407)
	... 31 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13815139" author="rdblue" created="Wed, 6 Nov 2013 18:48:38 +0000"  >&lt;p&gt;For me, it appears to do the right thing without the annotation. Here&apos;s the schema produced for my &lt;tt&gt;User&lt;/tt&gt; test:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{
  &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;User&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt;.AvroRoundTrip$&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt; : [ {
    &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : {
      &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt;&quot;&lt;/span&gt;,
      &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;UserType&quot;&lt;/span&gt;,
      &lt;span class=&quot;code-quote&quot;&gt;&quot;symbols&quot;&lt;/span&gt; : [ &lt;span class=&quot;code-quote&quot;&gt;&quot;ANNOYING&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;ANGRY&quot;&lt;/span&gt; ]
    }
  }, {
    &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;,
    &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;
  } ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can you post the reflected Schema that you end up with? I&apos;m wondering if there isn&apos;t a different problem.&lt;/p&gt;</comment>
                            <comment id="13815140" author="balaji.seshadri" created="Wed, 6 Nov 2013 18:48:53 +0000"  >&lt;p&gt;Is it mandatory that enum should be in same package, we have it in different package.&lt;/p&gt;

&lt;p&gt;package com.dish.des.msgs.biz.common.enums;&lt;/p&gt;

&lt;p&gt;import javax.xml.bind.annotation.XmlEnum;&lt;br/&gt;
import javax.xml.bind.annotation.XmlType;&lt;/p&gt;

&lt;p&gt;import com.dish.des.msgs.DESNamespaces;&lt;/p&gt;

&lt;p&gt;@XmlType(namespace = DESNamespaces.BIZ_COMMON_ENUM_NAMESPACE)&lt;br/&gt;
@XmlEnum&lt;br/&gt;
public enum UserTypeEnum {&lt;/p&gt;

&lt;p&gt;    AGENT,&lt;br/&gt;
    CUSTOMER;&lt;/p&gt;

&lt;p&gt;    public String value() &lt;/p&gt;
{ return name(); }&lt;br/&gt;
&lt;br/&gt;
    public static UserTypeEnum fromValue(String v) { return valueOf(v); }&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
package com.dish.des.msgs.biz.common.enums;&lt;br/&gt;
&lt;br/&gt;
import javax.xml.bind.annotation.XmlEnum;&lt;br/&gt;
import javax.xml.bind.annotation.XmlType;&lt;br/&gt;
&lt;br/&gt;
import com.dish.des.msgs.DESNamespaces;&lt;br/&gt;
&lt;br/&gt;
@XmlType(namespace = DESNamespaces.BIZ_COMMON_ENUM_NAMESPACE)&lt;br/&gt;
@XmlEnum&lt;br/&gt;
public enum ApplicationEnum {&lt;br/&gt;
	DISH_PROMO,&lt;br/&gt;
	CSAWEB;&lt;br/&gt;
&lt;br/&gt;
    public String value() { return name(); }

&lt;p&gt;    public static ApplicationEnum fromValue(String v) &lt;/p&gt;
{ return valueOf(v); }
&lt;p&gt;}&lt;/p&gt;


&lt;p&gt;Whats the avro version you are using ,im using 1.7.5.&lt;/p&gt;</comment>
                            <comment id="13815148" author="rdblue" created="Wed, 6 Nov 2013 18:56:09 +0000"  >&lt;p&gt;I&apos;m using 1.7.5. As long as the classes are public (which they are) you should be fine with different packages.&lt;/p&gt;</comment>
                            <comment id="13815170" author="balaji.seshadri" created="Wed, 6 Nov 2013 19:13:16 +0000"  >&lt;p&gt;Im converting byte array to string and looks like i&apos;m missing the enum encoding there.&lt;br/&gt;
ByteArrayOutputStream os = new ByteArrayOutputStream();&lt;br/&gt;
data = os.toString();&lt;/p&gt;

&lt;p&gt;I need it to add &quot;\n&quot; while i persist to hadoop file.&lt;/p&gt;

&lt;p&gt;So whats the right way to convert without skipping enum encoding.&lt;/p&gt;</comment>
                            <comment id="13815177" author="rdblue" created="Wed, 6 Nov 2013 19:23:01 +0000"  >&lt;p&gt;Is your code in a repository I can view somewhere? Or maybe you could post a gist? It would be easier to follow if I could see where you serialize/deserialize, the reflected schema, and any stack traces you encounter.&lt;/p&gt;

&lt;p&gt;About the byte array to string problem: Are you sure you need to do this? Typically, you want to use Avro to produce efficient binary files that are compressable and splittable (if that makes no sense, just think of it as &quot;doing the right thing&quot; for you). That usually means that you don&apos;t just use Avro to encode an object as a String, but you also use Avro to write an entire file. But, it looks like you&apos;re trying to use Avro to encode a record, convert the bytes to a String, and then store that in your own format. Could you go in to why you chose to do it this way and what you want to accomplish? There is probably an easier way for you.&lt;/p&gt;

&lt;p&gt;Now, I think I know why you don&apos;t see the enum. They are actually encoded, just not as text strings. An enum is encoded in Avro as the index in the enum&apos;s schema. For example, look at the enum I had before:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{
  &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt;&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;code-quote&quot;&gt;&quot;UserType&quot;&lt;/span&gt;,
  &lt;span class=&quot;code-quote&quot;&gt;&quot;symbols&quot;&lt;/span&gt; : [ &lt;span class=&quot;code-quote&quot;&gt;&quot;ANNOYING&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;ANGRY&quot;&lt;/span&gt; ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Because the symbols aren&apos;t going to change, Avro actually stores that as a number: 0 for &quot;ANNOYING&quot; and 1 for &quot;ANGRY&quot; and so on if there were more symbols. So when you convert those bytes to a String and write them to a file, you won&apos;t see the &quot;ANNOYING&quot; or &quot;ANGRY&quot;, you&apos;ll see &quot;\x00&quot; or &quot;\x01&quot;.&lt;/p&gt;</comment>
                            <comment id="13815183" author="balaji.seshadri" created="Wed, 6 Nov 2013 19:27:57 +0000"  >&lt;p&gt;I will not be able to publish you entire code as DISH models are invloved sorry.I&apos;m just trying to convert Avro format bytes to string to append new line as heard from cloudera guys that between records i need to add new line charcater so i&apos;m appending it to each record thats why.&lt;/p&gt;
</comment>
                            <comment id="13815186" author="balaji.seshadri" created="Wed, 6 Nov 2013 19:29:30 +0000"  >&lt;p&gt;Uploading Avro Encoder code where loss is happening.&lt;/p&gt;

&lt;p&gt;package com.dish.des.msgs.encoders.avro;&lt;/p&gt;

&lt;p&gt;import java.io.ByteArrayInputStream;&lt;br/&gt;
import java.io.ByteArrayOutputStream;&lt;br/&gt;
import java.io.IOException;&lt;/p&gt;

&lt;p&gt;import org.apache.avro.Schema;&lt;br/&gt;
import org.apache.avro.io.BinaryDecoder;&lt;br/&gt;
import org.apache.avro.io.BinaryEncoder;&lt;br/&gt;
import org.apache.avro.io.DatumReader;&lt;br/&gt;
import org.apache.avro.io.DatumWriter;&lt;br/&gt;
import org.apache.avro.io.DecoderFactory;&lt;br/&gt;
import org.apache.avro.io.EncoderFactory;&lt;br/&gt;
import org.apache.avro.reflect.ReflectData;&lt;br/&gt;
import org.apache.avro.reflect.ReflectDatumReader;&lt;br/&gt;
import org.apache.avro.reflect.ReflectDatumWriter;&lt;/p&gt;

&lt;p&gt;import com.dish.des.msgs.encoders.Encoder;&lt;/p&gt;

&lt;p&gt;public class AvroEncoder&amp;lt;Pojo&amp;gt; extends Encoder&amp;lt;Pojo,String&amp;gt; {&lt;/p&gt;

&lt;p&gt;	public byte [] encodeAsBytes(Pojo pojo) {&lt;/p&gt;

&lt;p&gt;		ByteArrayOutputStream os = new ByteArrayOutputStream();&lt;br/&gt;
        BinaryEncoder e = EncoderFactory.get().binaryEncoder(os, null);&lt;br/&gt;
        Schema schema = ReflectData.get().getSchema(pojo.getClass());&lt;br/&gt;
        DatumWriter&amp;lt;Pojo&amp;gt; writer = new ReflectDatumWriter&amp;lt;Pojo&amp;gt;(schema);&lt;/p&gt;

&lt;p&gt;        try &lt;/p&gt;
{
			writer.write(pojo, e);
			e.flush();
		}
&lt;p&gt; catch (IOException e1) &lt;/p&gt;
{
			// TODO Auto-generated catch block
			throw new IllegalStateException(&quot;bad encode: &quot;, e1);
		}
&lt;p&gt;        finally{&lt;br/&gt;
        	try &lt;/p&gt;
{
				os.close();
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				throw new IllegalStateException(&quot;bad encode: &quot;, e1);
			}&lt;br/&gt;
        }&lt;br/&gt;
        &lt;br/&gt;
        return os.toByteArray();&lt;br/&gt;
	}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
	&lt;br/&gt;
	@Override&lt;br/&gt;
	public String encode(Pojo pojo) {&lt;br/&gt;
		&lt;br/&gt;
		ByteArrayOutputStream os = new ByteArrayOutputStream();&lt;br/&gt;
        BinaryEncoder e = EncoderFactory.get().binaryEncoder(os, null);&lt;br/&gt;
        Schema schema = ReflectData.get().getSchema(pojo.getClass());&lt;br/&gt;
        DatumWriter&amp;lt;Pojo&amp;gt; writer = new ReflectDatumWriter&amp;lt;Pojo&amp;gt;(schema);&lt;br/&gt;
        String data=&quot;&quot;;&lt;br/&gt;
        &lt;br/&gt;
        try {
			writer.write(pojo, e);
			e.flush();
			data = os.toString();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			throw new IllegalStateException(&quot;bad encode: &quot;, e1);
		}&lt;br/&gt;
        finally{&lt;br/&gt;
        	try {				os.close();			}
&lt;p&gt; catch (IOException e1) &lt;/p&gt;
{
				// TODO Auto-generated catch block
				throw new IllegalStateException(&quot;bad encode: &quot;, e1);
			}
&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;        return data;&lt;br/&gt;
	}&lt;/p&gt;

&lt;p&gt;	@Override&lt;br/&gt;
	public Pojo decode(String encoded, Class&amp;lt;Pojo&amp;gt; clazz) {&lt;br/&gt;
		ByteArrayInputStream bais = new ByteArrayInputStream(encoded.getBytes());&lt;br/&gt;
		BinaryDecoder in = new DecoderFactory().binaryDecoder(bais, null);&lt;br/&gt;
		Schema schema = ReflectData.get().getSchema(clazz);&lt;br/&gt;
		try &lt;/p&gt;
{
	        DatumReader&amp;lt;Pojo&amp;gt; reader = new ReflectDatumReader&amp;lt;Pojo&amp;gt;(schema);
	        Pojo pojo=null;
	        return reader.read(pojo, in);
		}
&lt;p&gt; catch (Exception e) &lt;/p&gt;
{
			processException(e);
			throw new IllegalStateException(&quot;bad decode: &quot;, e);
		}
&lt;p&gt;	}&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;


&lt;p&gt;package com.dish.des.msgs.encoders;&lt;/p&gt;

&lt;p&gt;import java.util.ArrayList;&lt;br/&gt;
import java.util.List;&lt;/p&gt;

&lt;p&gt;import javax.xml.bind.annotation.XmlTransient;&lt;/p&gt;

&lt;p&gt;@XmlTransient&lt;br/&gt;
public abstract class Encoder&amp;lt;Pojo,Representation&amp;gt; {&lt;/p&gt;

&lt;p&gt;	public abstract Representation encode(Pojo pojo);&lt;br/&gt;
	public abstract Pojo decode(Representation encoded, Class&amp;lt;Pojo&amp;gt; clazz);&lt;/p&gt;

&lt;p&gt;	protected void processException(Exception e) {}&lt;/p&gt;

&lt;p&gt;	@SuppressWarnings(&quot;serial&quot;)&lt;br/&gt;
	protected static List&amp;lt;String&amp;gt; getPackageImportStringList() {&lt;br/&gt;
		return new ArrayList&amp;lt;String&amp;gt;() {&lt;/p&gt;
			{
				add(&quot;com.dish.des.msgs.common.v1&quot;);
				add(&quot;com.dish.des.msgs.common.v2&quot;);
				add(&quot;com.dish.des.msgs.accountAccess&quot;);
				add(&quot;com.dish.des.msgs.accountCreated&quot;);
				add(&quot;com.dish.des.msgs.accountInfoUpdated&quot;);
				add(&quot;com.dish.des.msgs.customerCues&quot;);
				add(&quot;com.dish.des.msgs.outboundCommunications&quot;);
				add(&quot;com.dish.des.msgs.subscriberEvents&quot;);
			}
&lt;p&gt;		};&lt;br/&gt;
	}&lt;/p&gt;

&lt;p&gt;	protected static String buildPackageImportString() {&lt;br/&gt;
		StringBuilder builder = new StringBuilder();&lt;br/&gt;
		for (String packageImport : getPackageImportStringList()) &lt;/p&gt;
{
			builder.append(packageImport);
			builder.append(&quot;:&quot;);
		}
&lt;p&gt;		return builder.toString();&lt;br/&gt;
	}&lt;br/&gt;
}&lt;/p&gt;


</comment>
                            <comment id="13815201" author="rdblue" created="Wed, 6 Nov 2013 19:37:00 +0000"  >&lt;p&gt;No problem if the code is private, I think we have this figured out.&lt;/p&gt;

&lt;p&gt;What are you trying to do with the records that you&apos;ve serialized? I&apos;m wondering why we would have told you to add new lines!&lt;/p&gt;

&lt;p&gt;Generally, we recommend using Avro to write the files using a &lt;tt&gt;DataFileWriter&lt;/tt&gt;. If your goal is to get your Dataset in HDFS and be able to use it easily, that&apos;s actually something my project (CDK) is trying to make easier than worrying about writing to files yourself. In your case, here&apos;s what you would do to get started:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;DatasetRepository repo = DatasetRepositories.open(&lt;span class=&quot;code-quote&quot;&gt;&quot;repo:hdfs:/data/repository&quot;&lt;/span&gt;); &lt;span class=&quot;code-comment&quot;&gt;// wherever you want to keep data sets
&lt;/span&gt;DatasetDescriptor accountMeta = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DatasetDescriptor.Builder().schema(AccountAccess.class).get();
Dataset accounts = repo.create(&lt;span class=&quot;code-quote&quot;&gt;&quot;account_access&quot;&lt;/span&gt;, accountMeta);

DatasetWriter&amp;lt;AccountAccess&amp;gt; writer = accounts.getWriter();
writer.open()
writer.write( &lt;span class=&quot;code-comment&quot;&gt;/* an AccountAccess object */&lt;/span&gt; );
writer.close()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;CDK handles all of the things you don&apos;t want to care about, like the file format. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13815206" author="rdblue" created="Wed, 6 Nov 2013 19:42:22 +0000"  >&lt;p&gt;Balaji, feel free to e-mail me and I can help you out with what you&apos;re trying to get done. It will be better to continue this discussion in e-mail rather than on an Avro bug report.&lt;/p&gt;

&lt;p&gt;For someone that can resolve this, I don&apos;t think this is an Avro bug and this issue can be closed.&lt;/p&gt;</comment>
                            <comment id="13815248" author="rdblue" created="Wed, 6 Nov 2013 20:22:37 +0000"  >&lt;p&gt;From Balaji in an e-mail exchange:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I&#8217;m able to convert to Avro and read Avro successfully now,I was experiencing loss when I converted byte array to string and its fixed now.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Balaji: Is it okay with you if we close this issue?&lt;/p&gt;</comment>
                            <comment id="13815256" author="balaji.seshadri@dish.com" created="Wed, 6 Nov 2013 20:27:21 +0000"  >&lt;p&gt;Please close this issue.&lt;/p&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 6 Nov 2013 18:24:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>356827</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 11 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1pij3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>357117</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
