<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:15:56 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2011-8-3+AND+created+%3C%3D+2011-8-10+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="4" total="4"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-869] Lifetimes of streams and encoder/decoders not managed propertly</title>
                <link>https://issues.apache.org/jira/browse/AVRO-869</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Encoders and decoders are designed to be used with a single OutputStream and InputStream respectively. Init() dunction is used to attach a new OutputStream/InputStream with Encoder/Decoder in place of the current one. There is no way to cleanly detach the current stream. The init method cleans up the current stream before detaching it. If the old stream is not valid, it tries to clean up and crash.&lt;/p&gt;

&lt;p&gt;The forthcoming patch will fix this issue.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12517738">AVRO-869</key>
            <summary>Lifetimes of streams and encoder/decoders not managed propertly</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thiru_mg">Thiruvalluvan M. G.</assignee>
                                    <reporter username="thiru_mg">Thiruvalluvan M. G.</reporter>
                        <labels>
                    </labels>
                <created>Wed, 3 Aug 2011 02:12:13 +0000</created>
                <updated>Tue, 1 Nov 2011 18:36:04 +0000</updated>
                            <resolved>Wed, 12 Oct 2011 13:15:40 +0000</resolved>
                                                    <fixVersion>1.6.0</fixVersion>
                                    <component>c++</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13123541" author="thiru_mg" created="Sat, 8 Oct 2011 18:04:01 +0000"  >&lt;p&gt;This patch has the solution and a test that could (but not always) crash without the fix.&lt;/p&gt;</comment>
                            <comment id="13124032" author="thiru_mg" created="Mon, 10 Oct 2011 12:20:57 +0000"  >&lt;p&gt;If there are no objections, I&apos;ll commit this tomorrow.&lt;/p&gt;</comment>
                            <comment id="13125820" author="thiru_mg" created="Wed, 12 Oct 2011 13:15:40 +0000"  >&lt;p&gt;Committed revision 1182350.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12498322" name="AVRO-869.patch" size="1513" author="thiru_mg" created="Sat, 8 Oct 2011 18:04:01 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>50607</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 15 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e2yv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80243</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-870] Use singleton class instances for primitive Schemas</title>
                <link>https://issues.apache.org/jira/browse/AVRO-870</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Would make a solid performance improvement for operations like Schema.equals() if the &lt;tt&gt;Schema.create(Schema.Type.INT)&lt;/tt&gt; operation (and STRING, LONG, and other primitive types) returned referentially--equal objects every time.&lt;/p&gt;

&lt;p&gt;This would require disallowing calls to &lt;tt&gt;addProp()&lt;/tt&gt;, or else something clever.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12517839">AVRO-870</key>
            <summary>Use singleton class instances for primitive Schemas</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="kimballa">Aaron Kimball</reporter>
                        <labels>
                    </labels>
                <created>Wed, 3 Aug 2011 20:59:03 +0000</created>
                <updated>Fri, 5 Aug 2011 00:08:38 +0000</updated>
                                            <version>1.5.1</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13079688" author="scott_carey" created="Fri, 5 Aug 2011 00:06:56 +0000"  >&lt;p&gt;We should be able to add a constructor that takes (Schema.Type, Props) for primitives, disallow addProp() for primitive Schemas.&lt;/p&gt;

&lt;p&gt;We will have to change Schema.parse() and a few other things as well.  However, all such changes would be required for a truly immutable Schema implementation anyway, and I would like to evolve in that direction.&lt;/p&gt;</comment>
                            <comment id="13079689" author="scott_carey" created="Fri, 5 Aug 2011 00:08:38 +0000"  >&lt;p&gt;I have noticed that big Schemas can be bulky in memory use as well.  Re-using instances should help with that as well.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 5 Aug 2011 00:06:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>66035</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 25 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e2z3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80244</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-871] Document permissable charsets for enum values</title>
                <link>https://issues.apache.org/jira/browse/AVRO-871</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Update documentation to point out that enum values have the same charset rules as name values:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://avro.apache.org/docs/1.5.1/spec.html#Names&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/1.5.1/spec.html#Names&lt;/a&gt; &lt;/p&gt;</description>
                <environment></environment>
        <key id="12518360">AVRO-871</key>
            <summary>Document permissable charsets for enum values</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="billgraham">Bill Graham</reporter>
                        <labels>
                    </labels>
                <created>Tue, 9 Aug 2011 20:28:38 +0000</created>
                <updated>Tue, 13 Dec 2011 19:08:35 +0000</updated>
                            <resolved>Fri, 7 Oct 2011 21:00:45 +0000</resolved>
                                                    <fixVersion>1.6.0</fixVersion>
                                    <component>doc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13123192" author="cutting" created="Fri, 7 Oct 2011 21:00:45 +0000"  >&lt;p&gt;I just committed a fix for this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 7 Oct 2011 21:00:45 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>50518</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 16 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e2zb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80245</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-872] Allow interdependancies across IDL schema imports</title>
                <link>https://issues.apache.org/jira/browse/AVRO-872</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;This currently doesn&apos;t work because Player depends on Position, but it should:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;$ cat position.avsc 
{&quot;type&quot;:&quot;enum&quot;, &quot;name&quot;: &quot;Position&quot;, &quot;namespace&quot;: &quot;avro.examples.baseball&quot;,
    &quot;symbols&quot;: [&quot;P&quot;, &quot;C&quot;, &quot;B1&quot;, &quot;B2&quot;, &quot;B3&quot;, &quot;SS&quot;, &quot;LF&quot;, &quot;CF&quot;, &quot;RF&quot;, &quot;DH&quot;]
}

$ cat player.avsc 
{&quot;type&quot;:&quot;record&quot;, &quot;name&quot;:&quot;Player&quot;, &quot;namespace&quot;: &quot;avro.examples.baseball&quot;,
  &quot;fields&quot;: [
   {&quot;name&quot;: &quot;number&quot;, &quot;type&quot;: &quot;int&quot;},
   {&quot;name&quot;: &quot;first_name&quot;, &quot;type&quot;: &quot;string&quot;},
   {&quot;name&quot;: &quot;last_name&quot;, &quot;type&quot;: &quot;string&quot;},
   {&quot;name&quot;: &quot;position&quot;, &quot;type&quot;: {&quot;type&quot;: &quot;array&quot;, &quot;items&quot;: &quot;avro.examples.baseball.Position&quot;} }
  ]
}

$ cat baseball.avdl 
@namespace(&quot;avro.examples.baseball&quot;)
protocol Baseball {
   import schema &quot;position.avsc&quot;;
   import schema &quot;player.avsc&quot;;
}

$ java -jar avro-tools-1.5.1.jar idl baseball.avdl baseball.avpr
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12518361">AVRO-872</key>
            <summary>Allow interdependancies across IDL schema imports</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="billgraham">Bill Graham</reporter>
                        <labels>
                    </labels>
                <created>Tue, 9 Aug 2011 20:33:18 +0000</created>
                <updated>Tue, 13 Dec 2011 19:06:54 +0000</updated>
                            <resolved>Fri, 12 Aug 2011 20:48:21 +0000</resolved>
                                                    <fixVersion>1.5.3</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13081952" author="cutting" created="Tue, 9 Aug 2011 21:50:30 +0000"  >&lt;p&gt;Here&apos;s a patch that fixes this.&lt;/p&gt;

&lt;p&gt;It replaces the Schema.parse() methods with a more flexible Schema.Parser API.  If folks think this new API is reasonable, then we should perhaps switch all of the calls to Schema.parse() to the new API.&lt;/p&gt;

&lt;p&gt;This includes the test case you provided.&lt;/p&gt;</comment>
                            <comment id="13081989" author="cutting" created="Tue, 9 Aug 2011 23:06:55 +0000"  >&lt;p&gt;Updated patch.  Schema.Parser setter methods now permit chaining.&lt;/p&gt;</comment>
                            <comment id="13082133" author="billgraham" created="Wed, 10 Aug 2011 04:52:15 +0000"  >&lt;p&gt;Thanks Doug. I&apos;ve verified that the idl tool now generates a protocol file. I&apos;m unable to parse this using the Schema.parse(File file) method though. Is that supposed to work, or am I doing it wrong? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I&apos;ve also verified that this now works:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Schema.Parser parser = new Schema.Parser();
parser.parse(new File(&quot;position.avsc&quot;));
Schema playerSchema = parser.parse(new File(&quot;player.avsc&quot;));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On the email list we&apos;ve been discussion alternate APIs (&lt;a href=&quot;http://search-hadoop.com/m/wzbMK11aTL82&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://search-hadoop.com/m/wzbMK11aTL82&lt;/a&gt;). Something like this:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;public Schema Schema.parse(File[] files);
public Schema Schema.parse(File[] files, Map&amp;lt;Name, Schema&amp;gt; context);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I propose morphing these two approaches to something that could be used like this:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Schema.Parser parser = new Schema.Parser();
parser.parse(new File(&quot;position.avsc&quot;));
parser.parse(new File(&quot;player.avsc&quot;));
Schema schema = parser.getSchemaByName(&quot;Player&quot;);

// or alternatively you can pass multiple files to the parse method once
parser.parse(mySchemaFiles);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="13082452" author="cutting" created="Wed, 10 Aug 2011 16:32:02 +0000"  >&lt;p&gt;I believe the former will work with the current patch: sequential calls using the same parser will accumulate names in the parser.  The latter would be an easy addition to the patch, if desired.&lt;/p&gt;

&lt;p&gt;To parse a protocol file use Protocol.parse(File).  We should perhaps convert that to a Schema.Parser-style API too.&lt;/p&gt;</comment>
                            <comment id="13082456" author="cutting" created="Wed, 10 Aug 2011 16:39:04 +0000"  >&lt;p&gt;Note that the &apos;getSchemaByName&apos; method you use in the first case above does not exist.  Instead you can either use the value of parser.parse().  If we did want to add a &apos;getSchemaByName&apos; method it would need to accept a fully-qualified name, e.g., parser.getSchemaByName(&quot;org.apache.avro.examples.Player&quot;).  Or we could change parser.getTypes() to instead return Map&amp;lt;String,Schema&amp;gt; so you could call parser.getTypes().get(&quot;org.apache.avro.examples.Player&quot;).&lt;/p&gt;</comment>
                            <comment id="13082486" author="billgraham" created="Wed, 10 Aug 2011 17:15:25 +0000"  >&lt;p&gt;Yes, the former parsing approach will work with the current patch. We&apos;d just need to add the convenience method to do&lt;/p&gt;

&lt;p&gt;&lt;tt&gt;Schema schema = parser.getSchemaByName(&quot;Player&quot;);&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;(Or maybe &lt;tt&gt;getType&lt;/tt&gt; aligns more with the existing API?) This would allow the caller to load a number of files and then fetch the schema(s) they&apos;re interested in, without necessarily knowing which file contained it. They&apos;d still need to be sure to parse in reverse-dependent order.&lt;/p&gt;

&lt;p&gt;Thanks for the pointer re Protocol parsing, that worked.&lt;/p&gt;</comment>
                            <comment id="13082489" author="billgraham" created="Wed, 10 Aug 2011 17:19:31 +0000"  >&lt;p&gt;My last comment was sent before seeing yours FYI. Sure we can either expose the Map or a method to get a value from the map. Either way works. Exposing the Map might be be better since it provides more flexibility to the caller.&lt;/p&gt;</comment>
                            <comment id="13082541" author="cutting" created="Wed, 10 Aug 2011 18:31:21 +0000"  >&lt;p&gt;Here&apos;s a version where getTypes() returns Map&amp;lt;String,Schema&amp;gt;.  This implementation not very efficient since it creates new Map entries each time its called.  This could be optimized, either by defining and returning a Map implementation wrapping the Names instance, or by converting Names to be a Map&amp;lt;String,Schema&amp;gt; and returning it directly.  But I&apos;m not sure that&apos;s worth the effort now, since this doesn&apos;t seem a likely performance bottleneck.&lt;/p&gt;</comment>
                            <comment id="13082570" author="cutting" created="Wed, 10 Aug 2011 19:06:57 +0000"  >&lt;p&gt;I&apos;m beginning to question the motivation for this a bit.  The example player.avsc file is not a well-formed JSON schema, since it&apos;s not standalone, but rather depends on another .avsc file.  To date, we&apos;ve only consumed or produced standalone JSON, not fragmentary.  JSON is meant to be the low-level schema language, with IDL as the higher level language, better supporting manually maintained schemas.&lt;/p&gt;

&lt;p&gt;So, before we commit this, I&apos;d like to understand the use case a bit more.  Is there a reason one couldn&apos;t define the two schemas in a single .avsc, .avpr file, or multiple .avdl files?&lt;/p&gt;

&lt;p&gt;We could I suppose change the Schema parser to, when it encounters an undefined name, look for a file defining it, much like the Java compiler looks for a .java file on the CLASSPATH, but I feel such features should be confined to IDL and that JSON should be primarily used for self-contained schemas.  Standalone JSON schemas are what we save with files and exchange in RPC handshakes.  Currently the API will not permit one to write a non-standalone Schema so I&apos;m a bit reluctant to permit reading them.&lt;/p&gt;

&lt;p&gt;Do others have thoughts on this?&lt;/p&gt;</comment>
                            <comment id="13082635" author="billgraham" created="Wed, 10 Aug 2011 20:05:40 +0000"  >&lt;p&gt;The last patch works well, thanks. Attached is patch #4 which also has a parse(File[]) method, if we choose to go this route.&lt;/p&gt;

&lt;p&gt;The value of being able to parse multiple JSON files into a single schema is that it allows for a more modular approach when creating and managing schema definitions. Without support for this at the JSON level, users will resort to copy and pasting common schemas into much larger and less manageable schema definitions.&lt;/p&gt;

&lt;p&gt;It seems like a defacto best-practice is emerging to concat multiple schemas together into a union as a way to partially get around repeatedly in-lining JSON child schemas. This approach gets the job done, but has manageability problems.&lt;/p&gt;

&lt;p&gt;This problem can be solved at the IDL level, but that provides yet another level of abstraction, a new language syntax and a compilation step to complicate what would otherwise be a very simple use case.&lt;/p&gt;

&lt;p&gt;Regarding consuming/producing fragmentary JSON, with the proposed approach producing JSON fragments will still not occur, since the in-memory schema is always complete, due to the reverse-dependency ordering that is required at parse time (not unlike parsing a union). Also, parsing a JSON fragment will still fail without parsing it&apos;s dependancies first so it&apos;s not loosening the contract of how parsing is handled in any way.&lt;/p&gt;

&lt;p&gt;I&apos;d also like to hear others thoughts on this though. &lt;/p&gt;</comment>
                            <comment id="13082669" author="scott_carey" created="Wed, 10 Aug 2011 20:54:54 +0000"  >&lt;p&gt;Two things block me from using AvroIDL:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I started maintaining and using Avro schemas before AvroIDL existed, so it is natural for developers on my project to use the JSON form, not AvroIDL.&lt;/li&gt;
	&lt;li&gt;AvroIDL only supports protocols.  I only use schemas.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The former can be overcome, AvroIDL should be easier to use anyway.&lt;br/&gt;
The latter needs work, and I haven&apos;t looked at what it would take to extend AvroIDL to work with schemas.&lt;/p&gt;</comment>
                            <comment id="13082695" author="cutting" created="Wed, 10 Aug 2011 21:35:09 +0000"  >&lt;p&gt;There&apos;s not much overhead to using IDL for schemas: just use an idl file without any messages:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;@namespace(&lt;span class=&quot;code-quote&quot;&gt;&quot;foo.bar&quot;&lt;/span&gt;)
protocol MyProtocol {
  &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; idl &lt;span class=&quot;code-quote&quot;&gt;&quot;Bar.avdl&quot;&lt;/span&gt; ;
  record Foo {
    ...
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you&apos;re generating specific code, then Foo will have the same name as if you defined it in a .avsc file, so no changes to clients should be required.&lt;/p&gt;

&lt;p&gt;The only unnecessary part is the protocol name and the fact that an interface is generated with no methods that you&apos;ll never use.  We could change that, e.g., by changing the idl parser to accept files of the form:&lt;/p&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;@namespace(&lt;span class=&quot;code-quote&quot;&gt;&quot;foo.bar&quot;&lt;/span&gt;)
record Foo {
  &lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; idl &lt;span class=&quot;code-quote&quot;&gt;&quot;Bar.avdl&quot;&lt;/span&gt;;
  ...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The return type for the IDL parser could then be either a schema or a protocol, and clients would need to do different things depending.&lt;/p&gt;</comment>
                            <comment id="13082716" author="billgraham" created="Wed, 10 Aug 2011 22:21:47 +0000"  >&lt;p&gt;It is possible to generate the Protocol at run time directly from an IDL file. That way the Project can be generated and consumed without the extra step to pre-generate an avpr file. Something like this works:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Idl parser = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Idl(idfFile);
Protocol p = parser.CompilationUnit();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The downside is that now the avro-compiler jar would be needed at run time. I agree though that it would be nice to not have to create and use Protocols if you only need Schemas.&lt;/p&gt;

&lt;p&gt;@Doug if all your schema objects are defined in your avsc files, then defining a dummy &quot;record Foo&quot; would be needed, right? Could you instead do something like this to load a collection of Schemas instead?:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;@namespace(&quot;foo.bar&quot;)
schema MySchema {
  import schema &quot;Bar.avsc&quot;;
  ...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Granted, now there&apos;s a dummy MySchema thing, but it&apos;s not a record.&lt;/p&gt;</comment>
                            <comment id="13082723" author="cutting" created="Wed, 10 Aug 2011 22:33:50 +0000"  >&lt;p&gt;Bill, I don&apos;t understand the need for the dummy.  Why would all your schemas be defined in avsc files?  Why wouldn&apos;t you use avdl files to define them?&lt;/p&gt;</comment>
                            <comment id="13082750" author="billgraham" created="Wed, 10 Aug 2011 23:19:35 +0000"  >&lt;p&gt;We&apos;d like to continue to use avsc files because they&apos;re easier to read and author and our developers are already familiar with them. They&apos;re also not experimental and changing like the IDL language. So we&apos;d just use IDL as a mechanism to combine fragmented avsc files, like the initial problem statement:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;@namespace(&quot;avro.examples.baseball&quot;)
protocol Baseball {
   import schema &quot;position.avsc&quot;;
   import schema &quot;player.avsc&quot;;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13083499" author="cutting" created="Thu, 11 Aug 2011 20:29:23 +0000"  >&lt;p&gt;We should perhaps remove the &apos;experimental&apos; declaration from the IDL documentation.  I don&apos;t think we should make incompatible changes to the syntax of IDL, so we might as well declare it stable.  But that&apos;s another issue...&lt;/p&gt;

&lt;p&gt;Bill, will you use the parse(File[]) method, or would you instead use an IDL file?  It&apos;s not yet clear to me that method is so common a pattern that it warrants adding here.  If we think it&apos;s a common pattern then we should at add some javadoc, otherwise we should remove it.  Other than that, I&apos;m willing to commit this.&lt;/p&gt;
</comment>
                            <comment id="13083550" author="billgraham" created="Thu, 11 Aug 2011 21:20:48 +0000"  >&lt;p&gt;If I could I&apos;d prefer to just use the parse(File[]) method approach without having to deal with the IDL files.&lt;/p&gt;</comment>
                            <comment id="13083705" author="cutting" created="Thu, 11 Aug 2011 22:01:30 +0000"  >&lt;p&gt;Here&apos;s a version that includes javadoc for the parse(File[]) method and improves the javadoc for Parser in general.&lt;/p&gt;

&lt;p&gt;Any objections to committing this?&lt;/p&gt;</comment>
                            <comment id="13083831" author="billgraham" created="Fri, 12 Aug 2011 00:04:42 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Thanks, Doug!&lt;/p&gt;</comment>
                            <comment id="13083896" author="scott_carey" created="Fri, 12 Aug 2011 03:29:37 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;I like it.  Parser is a big improvement.&lt;/p&gt;</comment>
                            <comment id="13083936" author="billgraham" created="Fri, 12 Aug 2011 05:16:53 +0000"  >&lt;p&gt;Doug if you&apos;re hesitant about the parse(File[]) method, we can always leave that one out. Calling parse(File) repeatedly is not a big deal for the client.&lt;/p&gt;</comment>
                            <comment id="13084228" author="scott_carey" created="Fri, 12 Aug 2011 16:25:16 +0000"  >&lt;p&gt;The most recent patch has:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+    /** Parse schemas from the provided files, in the specified order.
+     * If named, each schema is added to the names known to this parser. */
+    public Schema[] parse(File[] files) throws IOException {
+      Schema[] schemas = new Schema[files.length];
+      for (int i = 0; i &amp;lt; files.length; i++)
+        schemas[i] = parse(files[i]);
+      return schemas;
+    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;in the Parser class.&lt;/p&gt;</comment>
                            <comment id="13084248" author="cutting" created="Fri, 12 Aug 2011 16:57:14 +0000"  >&lt;p&gt;My slight preference would be to leave parse(File[]) out, since I can imagine many use cases that are slightly different, e.g., &apos;List&amp;lt;Schema&amp;gt; parse(List&amp;lt;File&amp;gt;)&apos; or &apos;Schema parse(File[])&apos; that returns the last schema, etc.  All of these are just a few lines of code that I think is reasonable to leave to applications.  On the other hand, if lots of applications are using the same few lines of code, then it makes sense to capture it in a utility, but I don&apos;t yet know what the common idioms are here.  Meh.&lt;/p&gt;</comment>
                            <comment id="13084293" author="billgraham" created="Fri, 12 Aug 2011 18:24:44 +0000"  >&lt;p&gt;+1 on leaving parse(File[]) out.&lt;/p&gt;

&lt;p&gt;Another reason to omit it it to keep other similar APIs (i.e. Protocol) consistant and concise. No need to re-implement Array-based support everywhere else. Also I&apos;m already thinking about contributing a parse(URL) method. Not having to support each type as both single and array signatures will keep the code from bloating. &lt;/p&gt;</comment>
                            <comment id="13084369" author="cutting" created="Fri, 12 Aug 2011 20:48:21 +0000"  >&lt;p&gt;I committed this, without the parse(File[]) method.&lt;/p&gt;</comment>
                            <comment id="13084442" author="billgraham" created="Fri, 12 Aug 2011 22:57:26 +0000"  >&lt;p&gt;Attaching the patch that reflects what was committed, for those playing along at home.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12490180" name="AVRO-872.patch" size="8958" author="cutting" created="Thu, 11 Aug 2011 22:01:30 +0000"/>
                            <attachment id="12490023" name="AVRO-872.patch" size="8182" author="cutting" created="Wed, 10 Aug 2011 18:31:21 +0000"/>
                            <attachment id="12489911" name="AVRO-872.patch" size="8112" author="cutting" created="Tue, 9 Aug 2011 23:06:55 +0000"/>
                            <attachment id="12489904" name="AVRO-872.patch" size="8098" author="cutting" created="Tue, 9 Aug 2011 21:50:30 +0000"/>
                            <attachment id="12490031" name="AVRO-872_4.patch" size="8479" author="billgraham" created="Wed, 10 Aug 2011 20:05:40 +0000"/>
                            <attachment id="12490297" name="AVRO_872_commit.patch" size="9233" author="billgraham" created="Fri, 12 Aug 2011 22:57:26 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 9 Aug 2011 21:50:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>63272</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 24 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e2zj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80246</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
