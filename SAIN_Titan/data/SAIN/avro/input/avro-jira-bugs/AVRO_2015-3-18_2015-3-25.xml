<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:21:38 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2015-3-18+AND+created+%3C%3D+2015-3-25+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="1" total="1"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1650] Avro deserialization fails depending on the value of integer/long fields</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1650</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Here is a test that fails depending on the value of the zipCode integer.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;TestBinaryDecoderSeparateSchema {

  @Test
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void checkAvroWithoutEmbeddedSchema () &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {

    log (&lt;span class=&quot;code-quote&quot;&gt;&quot;\n\n\nBeginning without-schema\n&quot;&lt;/span&gt;);
    Person datum = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Person();

    ReflectData rdata = ReflectData.AllowNull.get();
    Schema schema = rdata.getSchema(Person.class);

    &lt;span class=&quot;code-comment&quot;&gt;// Write avro as binary
&lt;/span&gt;    ByteArrayOutputStream baos = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream();
    DatumWriter&amp;lt;Person&amp;gt; dout = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReflectDatumWriter&amp;lt;Person&amp;gt;(Person.class, rdata);
    Encoder encoder = EncoderFactory.get().binaryEncoder(baos, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    dout.write(datum, encoder);
    encoder.flush();
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] bytes = baos.toByteArray();
    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; binaryString = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; (bytes);
    log (binaryString);

    &lt;span class=&quot;code-comment&quot;&gt;// Read avro binary string into GenericRecord
&lt;/span&gt;    BinaryDecoder decoder = DecoderFactory.get().binaryDecoder(binaryString.getBytes(), &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    GenericDatumReader&amp;lt;GenericRecord&amp;gt; datumReader = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericDatumReader&amp;lt;GenericRecord&amp;gt; ();
    datumReader.setSchema(schema);
    GenericRecord record = datumReader.read(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, decoder);
    log (&lt;span class=&quot;code-quote&quot;&gt;&quot;Read zipCode = &quot;&lt;/span&gt; + record.get(&lt;span class=&quot;code-quote&quot;&gt;&quot;zipCode&quot;&lt;/span&gt;));
  }

  @Test
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void checkAvroWithEmbeddedSchema () &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {

    log (&lt;span class=&quot;code-quote&quot;&gt;&quot;\n\n\nBeginning with-schema\n&quot;&lt;/span&gt;);
    Person datum = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Person();

    ReflectData rdata = ReflectData.AllowNull.get();
    Schema schema = rdata.getSchema(Person.class);

    &lt;span class=&quot;code-comment&quot;&gt;// Write avro with embedded schema
&lt;/span&gt;    ByteArrayOutputStream baos = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream();
    ReflectDatumWriter&amp;lt;Person&amp;gt; dout = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReflectDatumWriter&amp;lt;Person&amp;gt; (Person.class, rdata);
    DataFileWriter&amp;lt;Person&amp;gt; fileWriter = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DataFileWriter&amp;lt;Person&amp;gt; (dout);
    fileWriter.create(schema, baos);
    fileWriter.append(datum);
    fileWriter.close();
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] bytes = baos.toByteArray();
    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; binaryString = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; (bytes);
    log (binaryString);

    &lt;span class=&quot;code-comment&quot;&gt;// Read avro with embedded schema
&lt;/span&gt;    GenericDatumReader&amp;lt;GenericRecord&amp;gt; datumReader = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericDatumReader&amp;lt;GenericRecord&amp;gt; ();
    SeekableByteArrayInput avroInputStream = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SeekableByteArrayInput(bytes);
    DataFileReader&amp;lt;GenericRecord&amp;gt; fileReader =
            &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DataFileReader&amp;lt;GenericRecord&amp;gt;(avroInputStream, datumReader);

    schema = fileReader.getSchema();
    GenericRecord record = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
    List&amp;lt;GenericRecord&amp;gt; records = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;GenericRecord&amp;gt; ();
    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (fileReader.hasNext())
        records.add (fileReader.next(record));

    log (&lt;span class=&quot;code-quote&quot;&gt;&quot;Read &quot;&lt;/span&gt; + records.size() + &lt;span class=&quot;code-quote&quot;&gt;&quot; records&quot;&lt;/span&gt;);
   log (&lt;span class=&quot;code-quote&quot;&gt;&quot;Read zipCode = &quot;&lt;/span&gt; + records.get(0).get(&lt;span class=&quot;code-quote&quot;&gt;&quot;zipCode&quot;&lt;/span&gt;));
  }

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;Person {
    &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt; zipCode = 90900;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void log (&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; s) {
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println (s);
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
&lt;b&gt;Issues:&lt;/b&gt;&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;zipCode = 1, no exception but data zipCode is readWrong&lt;/li&gt;
	&lt;li&gt;zipCode = 90900, exception in checkAvroWithoutEmbeddedSchema()&lt;br/&gt;
&lt;font color=&quot;red&quot;&gt;&lt;br/&gt;
java.io.IOException: Invalid int encoding&lt;br/&gt;
at org.apache.avro.io.BinaryDecoder.readInt(BinaryDecoder.java:145)&lt;br/&gt;
at org.apache.avro.io.ValidatingDecoder.readInt(ValidatingDecoder.java:83)&lt;br/&gt;
at org.apache.avro.generic.GenericDatumReader.readInt(GenericDatumReader.java:444)&lt;br/&gt;
at org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:159)&lt;br/&gt;
at org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:155)&lt;br/&gt;
at org.apache.avro.generic.GenericDatumReader.readField(GenericDatumReader.java:193)&lt;br/&gt;
at org.apache.avro.generic.GenericDatumReader.readRecord(GenericDatumReader.java:183)&lt;br/&gt;
at org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:151)&lt;br/&gt;
at org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:155)&lt;br/&gt;
at org.apache.avro.generic.GenericDatumReader.readField(GenericDatumReader.java:193)&lt;br/&gt;
at org.apache.avro.generic.GenericDatumReader.readRecord(GenericDatumReader.java:183)&lt;br/&gt;
at org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:151)&lt;br/&gt;
at org.apache.avro.generic.GenericDatumReader.read(GenericDatumReader.java:142)&lt;br/&gt;
at org.apache.avro.io.TestBinaryDecoderSeparateSchema.checkAvroWithoutEmbeddedSchema(TestBinaryDecoderSeparateSchema.java:68)&lt;/font&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;br class=&quot;atl-forced-newline&quot; /&gt;
Am I even supposed to read/write like the way shown in checkAvroWithoutEmbeddedSchema()?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12783336">AVRO-1650</key>
            <summary>Avro deserialization fails depending on the value of integer/long fields</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Not A Problem</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="sachingoyal">Sachin Goyal</reporter>
                        <labels>
                    </labels>
                <created>Thu, 19 Mar 2015 19:11:05 +0000</created>
                <updated>Thu, 19 Mar 2015 20:29:41 +0000</updated>
                            <resolved>Thu, 19 Mar 2015 20:29:41 +0000</resolved>
                                                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="14369997" author="robair" created="Thu, 19 Mar 2015 19:58:14 +0000"  >&lt;p&gt;I suspect it is an character encoding issue as the Avro bytes generated are converted to a String using the default character encoding which is probably UTF-8 and then converted back to bytes using the same character encoding. This does not preserve the original bytes in general as some byte values are not valid UTF-8. You can use the ISO-8859-1 encoding on the new String(bytes, &quot;ISO-8859-1&quot;) and binaryString.getBytes(&quot;ISO-8859-1&quot;) or better still just use the bytes variable in the call to binaryDecoder.&lt;/p&gt;</comment>
                            <comment id="14370052" author="sachingoyal" created="Thu, 19 Mar 2015 20:29:22 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=robair&quot; class=&quot;user-hover&quot; rel=&quot;robair&quot;&gt;Rob Turner&lt;/a&gt;!&lt;br/&gt;
I tried ISO-8859-1 and it did work just fine.&lt;/p&gt;

&lt;p&gt;For other users, this link explains in good detail too:&lt;br/&gt;
&lt;a href=&quot;http://stackoverflow.com/questions/15925458/iso-8859-1-encoding-and-binary-data-preservation&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/15925458/iso-8859-1-encoding-and-binary-data-preservation&lt;/a&gt; &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 19 Mar 2015 19:58:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 44 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i26zv3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
