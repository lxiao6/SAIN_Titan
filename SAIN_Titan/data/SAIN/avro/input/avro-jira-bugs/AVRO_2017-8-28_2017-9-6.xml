<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:25:29 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2017-8-28+AND+created+%3C%3D+2017-9-6+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="6" total="6"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-2069] Use primitive fields in generated getters &amp; setters in Java code</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2069</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently, for primitive types (such as int, long, etc) generated getters and setters return and accept java.lang.* boxed (while fields actually holds primitive values). This is inefeccient and produces code boilerplate.&lt;/p&gt;

&lt;p&gt;Changed this behaviour in pull request: &lt;br/&gt;
&lt;a href=&quot;https://github.com/apache/avro/pull/243&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/243&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="13098205">AVRO-2069</key>
            <summary>Use primitive fields in generated getters &amp; setters in Java code</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dguitelson">Daniil Gitelson</assignee>
                                    <reporter username="dguitelson">Daniil Gitelson</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Aug 2017 09:13:14 +0000</created>
                <updated>Mon, 10 Dec 2018 21:54:31 +0000</updated>
                            <resolved>Mon, 10 Dec 2018 21:54:28 +0000</resolved>
                                    <version>1.8.2</version>
                                    <fixVersion>1.9.0</fixVersion>
                                        <due></due>
                            <votes>1</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="16144980" author="githubbot" created="Tue, 29 Aug 2017 09:24:25 +0000"  >&lt;p&gt;GitHub user daniilguit opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/243&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/243&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2069&quot; title=&quot;Use primitive fields in generated getters &amp;amp; setters in Java code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2069&quot;&gt;&lt;del&gt;AVRO-2069&lt;/del&gt;&lt;/a&gt;: Use primitive fields in generated getters &amp;amp; setters in Java code&lt;/p&gt;



&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/daniilguit/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/daniilguit/avro&lt;/a&gt; master&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/243.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/243.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #243&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 3414eae643517591015e3a6154c726c31f2d3095&lt;br/&gt;
Author: Daniil Guitelson &amp;lt;dguitelson@openwaygroup.com&amp;gt;&lt;br/&gt;
Date:   2017-08-29T09:13:42Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2069&quot; title=&quot;Use primitive fields in generated getters &amp;amp; setters in Java code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2069&quot;&gt;&lt;del&gt;AVRO-2069&lt;/del&gt;&lt;/a&gt;: Use primitive fields in generated getters &amp;amp; setters in Java code&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="16147129" author="nkollar" created="Wed, 30 Aug 2017 12:09:15 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dguitelson&quot; class=&quot;user-hover&quot; rel=&quot;dguitelson&quot;&gt;Daniil Gitelson&lt;/a&gt; looks like three tests fail in TestSpecificCompilerTool: testCompileSchemaTwoFiles, testCompileSchemasUsingString and testCompileSchemaFileAndDirectory. You should change the expected files (lang/java/tools/src/test/compiler/output/Player.java and lang/java/tools/src/test/compiler/output/Position.java), the methods should return primitive types there according to your modification.&lt;/p&gt;</comment>
                            <comment id="16147464" author="dguitelson" created="Wed, 30 Aug 2017 15:40:22 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkollar&quot; class=&quot;user-hover&quot; rel=&quot;nkollar&quot;&gt;Nandor Kollar&lt;/a&gt;, sorry, missed them. Fixed.&lt;/p&gt;
</comment>
                            <comment id="16148697" author="nkollar" created="Thu, 31 Aug 2017 09:14:45 +0000"  >&lt;p&gt;Thanks Daniil, now all tests passed. Looks good to me!&lt;/p&gt;</comment>
                            <comment id="16150070" author="dguitelson" created="Fri, 1 Sep 2017 05:48:24 +0000"  >&lt;p&gt;Great, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkollar&quot; class=&quot;user-hover&quot; rel=&quot;nkollar&quot;&gt;Nandor Kollar&lt;/a&gt;! Will it be scheduled to 1.9.0 release?&lt;/p&gt;</comment>
                            <comment id="16150481" author="busbey" created="Fri, 1 Sep 2017 13:12:19 +0000"  >&lt;p&gt;we&apos;ll need to flag this as an incompatible change, but I agree that it&apos;s a great improvement.&lt;/p&gt;

&lt;p&gt;Normally users who rely on the specific compiler are performance sensitive. Do we have any idea if the use of boxed object here was a discussed design decision? The only reason I can think of to use them is it allows returning null, but that won&apos;t be the case if we&apos;re directly referencing the primitives anyways.&lt;/p&gt;</comment>
                            <comment id="16150536" author="anna.szonyi" created="Fri, 1 Sep 2017 13:38:08 +0000"  >&lt;p&gt;I looked at the git blame/history and it seems that it hasn&apos;t been changed since the initial commit &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-839&quot; title=&quot;Implement builder pattern in generated record classes that sets default values when omitted&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-839&quot;&gt;&lt;del&gt;AVRO-839&lt;/del&gt;&lt;/a&gt; and there didn&apos;t seem to be a discussion around this, &lt;b&gt;however&lt;/b&gt; I found the duplicate of that jira &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-784&quot; title=&quot;SpecificCompiler should generate accessors&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-784&quot;&gt;&lt;del&gt;AVRO-784&lt;/del&gt;&lt;/a&gt; where it seems this exact discussion happened between Doug Cutting and the author and it seems to be in favor of the unboxed solution.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Anna &lt;/p&gt;</comment>
                            <comment id="16150545" author="busbey" created="Fri, 1 Sep 2017 13:43:09 +0000"  >&lt;p&gt;excellent find Anna! I&apos;ll go read back through those discussions.&lt;/p&gt;</comment>
                            <comment id="16150565" author="nkollar" created="Fri, 1 Sep 2017 13:56:06 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dguitelson&quot; class=&quot;user-hover&quot; rel=&quot;dguitelson&quot;&gt;Daniil Gitelson&lt;/a&gt; looks like we still have test failures, TestSpecificRecordBuilder#testInterop fails on my desktop with &lt;tt&gt;java.lang.AssertionError: Use assertEquals(expected, actual, delta) to compare floating-point numbers&lt;/tt&gt;. There are two asserts for float and double in this test, could you please replace them to one with an additional delta parameter?&lt;/p&gt;</comment>
                            <comment id="16150594" author="dguitelson" created="Fri, 1 Sep 2017 14:14:21 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkollar&quot; class=&quot;user-hover&quot; rel=&quot;nkollar&quot;&gt;Nandor Kollar&lt;/a&gt;, it is because recently you updated from legacy junit.framework.Assert to org.junit.Assert here: &lt;a href=&quot;https://github.com/apache/avro/commit/189368ed485f5577528824dd88856991a51b6918&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/commit/189368ed485f5577528824dd88856991a51b6918&lt;/a&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Nice change! Those deprecations really annoys.&lt;br/&gt;
I will sync from master and fix this test.&lt;/p&gt;</comment>
                            <comment id="16150636" author="nkollar" created="Fri, 1 Sep 2017 14:33:14 +0000"  >&lt;p&gt;Ahhh, yes you&apos;re right, my bad, sorry for that! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="16150652" author="dguitelson" created="Fri, 1 Sep 2017 14:39:52 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkollar&quot; class=&quot;user-hover&quot; rel=&quot;nkollar&quot;&gt;Nandor Kollar&lt;/a&gt;, fixed.&lt;/p&gt;</comment>
                            <comment id="16150660" author="nkollar" created="Fri, 1 Sep 2017 14:49:43 +0000"  >&lt;p&gt;Perfect, looks good, tests are green again, thanks!&lt;/p&gt;</comment>
                            <comment id="16167822" author="busbey" created="Fri, 15 Sep 2017 12:52:01 +0000"  >&lt;p&gt;I like this as the approach going forward, but this will be an incompatible change. Should we make a follow on jira to make a backwards compatible version for 1.8/1.7 (something like getUnboxedFieldName in addition to getFieldName).&lt;/p&gt;</comment>
                            <comment id="16409170" author="githubbot" created="Thu, 22 Mar 2018 07:31:40 +0000"  >&lt;p&gt;scottcarey commented on issue #243: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2069&quot; title=&quot;Use primitive fields in generated getters &amp;amp; setters in Java code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2069&quot;&gt;&lt;del&gt;AVRO-2069&lt;/del&gt;&lt;/a&gt;: Use primitive fields in generated getters &amp;amp; setters in Java code&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/243#issuecomment-375204378&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/243#issuecomment-375204378&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   This can be an option at generation time for those that don&apos;t want to break compatibility (defaulting to the old way prior to 1.9). &lt;/p&gt;


&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16715624" author="jira-bot" created="Mon, 10 Dec 2018 21:54:27 +0000"  >&lt;p&gt;Commit e65411f5cce2d58588fbb96a366560f6e6803dab in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dkulp&quot; class=&quot;user-hover&quot; rel=&quot;dkulp&quot;&gt;Daniel Kulp&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=e65411f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=e65411f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Squashed commit of the following:&lt;br/&gt;
This closes #243&lt;/p&gt;

&lt;p&gt;commit b2a5607578652f203e117c5b80d228618dd101f1&lt;br/&gt;
Merge: 500c28c2 54fc3f53&lt;br/&gt;
Author: Daniel Kulp &amp;lt;dan@kulp.com&amp;gt;&lt;br/&gt;
Date:   Mon Dec 3 14:46:47 2018 -0500&lt;/p&gt;

&lt;p&gt;    Merge branch &apos;master&apos; into master&lt;/p&gt;

&lt;p&gt;commit 500c28c212d20e40fe48b6229cfc7764631f56e8&lt;br/&gt;
Author: Daniil Guitelson &amp;lt;dguitelson@openwaygroup.com&amp;gt;&lt;br/&gt;
Date:   Fri Sep 1 17:37:10 2017 +0300&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2069&quot; title=&quot;Use primitive fields in generated getters &amp;amp; setters in Java code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2069&quot;&gt;&lt;del&gt;AVRO-2069&lt;/del&gt;&lt;/a&gt;: Use primitive fields in generated getters &amp;amp; setters in Java code&lt;/p&gt;

&lt;p&gt;    Fix broken unit tests in TestSpecificCompilerTool after migrating to org.junit.Test&lt;/p&gt;

&lt;p&gt;commit 35b891ebf868cea12f278641229807c1e2a35db2&lt;br/&gt;
Merge: c642adaf 189368ed&lt;br/&gt;
Author: Daniil Gitelson &amp;lt;daniil.guit@gmail.com&amp;gt;&lt;br/&gt;
Date:   Fri Sep 1 17:33:13 2017 +0300&lt;/p&gt;

&lt;p&gt;    Merge pull request #1 from apache/master&lt;/p&gt;

&lt;p&gt;    Sync up with origin repository&lt;/p&gt;

&lt;p&gt;commit c642adaf3d29183049cd4ad2e0012b002d95d7c6&lt;br/&gt;
Author: Daniil Guitelson &amp;lt;dguitelson@openwaygroup.com&amp;gt;&lt;br/&gt;
Date:   Wed Aug 30 18:37:41 2017 +0300&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2069&quot; title=&quot;Use primitive fields in generated getters &amp;amp; setters in Java code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2069&quot;&gt;&lt;del&gt;AVRO-2069&lt;/del&gt;&lt;/a&gt;: Use primitive fields in generated getters &amp;amp; setters in Java code&lt;/p&gt;

&lt;p&gt;    Fix broken unit tests in TestSpecificCompilerTool&lt;/p&gt;

&lt;p&gt;commit 3414eae643517591015e3a6154c726c31f2d3095&lt;br/&gt;
Author: Daniil Guitelson &amp;lt;dguitelson@openwaygroup.com&amp;gt;&lt;br/&gt;
Date:   Tue Aug 29 12:13:42 2017 +0300&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2069&quot; title=&quot;Use primitive fields in generated getters &amp;amp; setters in Java code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2069&quot;&gt;&lt;del&gt;AVRO-2069&lt;/del&gt;&lt;/a&gt;: Use primitive fields in generated getters &amp;amp; setters in Java code&lt;/p&gt;</comment>
                            <comment id="16715625" author="jira-bot" created="Mon, 10 Dec 2018 21:54:29 +0000"  >&lt;p&gt;Commit e65411f5cce2d58588fbb96a366560f6e6803dab in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dkulp&quot; class=&quot;user-hover&quot; rel=&quot;dkulp&quot;&gt;Daniel Kulp&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=e65411f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=e65411f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Squashed commit of the following:&lt;br/&gt;
This closes #243&lt;/p&gt;

&lt;p&gt;commit b2a5607578652f203e117c5b80d228618dd101f1&lt;br/&gt;
Merge: 500c28c2 54fc3f53&lt;br/&gt;
Author: Daniel Kulp &amp;lt;dan@kulp.com&amp;gt;&lt;br/&gt;
Date:   Mon Dec 3 14:46:47 2018 -0500&lt;/p&gt;

&lt;p&gt;    Merge branch &apos;master&apos; into master&lt;/p&gt;

&lt;p&gt;commit 500c28c212d20e40fe48b6229cfc7764631f56e8&lt;br/&gt;
Author: Daniil Guitelson &amp;lt;dguitelson@openwaygroup.com&amp;gt;&lt;br/&gt;
Date:   Fri Sep 1 17:37:10 2017 +0300&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2069&quot; title=&quot;Use primitive fields in generated getters &amp;amp; setters in Java code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2069&quot;&gt;&lt;del&gt;AVRO-2069&lt;/del&gt;&lt;/a&gt;: Use primitive fields in generated getters &amp;amp; setters in Java code&lt;/p&gt;

&lt;p&gt;    Fix broken unit tests in TestSpecificCompilerTool after migrating to org.junit.Test&lt;/p&gt;

&lt;p&gt;commit 35b891ebf868cea12f278641229807c1e2a35db2&lt;br/&gt;
Merge: c642adaf 189368ed&lt;br/&gt;
Author: Daniil Gitelson &amp;lt;daniil.guit@gmail.com&amp;gt;&lt;br/&gt;
Date:   Fri Sep 1 17:33:13 2017 +0300&lt;/p&gt;

&lt;p&gt;    Merge pull request #1 from apache/master&lt;/p&gt;

&lt;p&gt;    Sync up with origin repository&lt;/p&gt;

&lt;p&gt;commit c642adaf3d29183049cd4ad2e0012b002d95d7c6&lt;br/&gt;
Author: Daniil Guitelson &amp;lt;dguitelson@openwaygroup.com&amp;gt;&lt;br/&gt;
Date:   Wed Aug 30 18:37:41 2017 +0300&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2069&quot; title=&quot;Use primitive fields in generated getters &amp;amp; setters in Java code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2069&quot;&gt;&lt;del&gt;AVRO-2069&lt;/del&gt;&lt;/a&gt;: Use primitive fields in generated getters &amp;amp; setters in Java code&lt;/p&gt;

&lt;p&gt;    Fix broken unit tests in TestSpecificCompilerTool&lt;/p&gt;

&lt;p&gt;commit 3414eae643517591015e3a6154c726c31f2d3095&lt;br/&gt;
Author: Daniil Guitelson &amp;lt;dguitelson@openwaygroup.com&amp;gt;&lt;br/&gt;
Date:   Tue Aug 29 12:13:42 2017 +0300&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2069&quot; title=&quot;Use primitive fields in generated getters &amp;amp; setters in Java code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2069&quot;&gt;&lt;del&gt;AVRO-2069&lt;/del&gt;&lt;/a&gt;: Use primitive fields in generated getters &amp;amp; setters in Java code&lt;/p&gt;</comment>
                            <comment id="16715626" author="jira-bot" created="Mon, 10 Dec 2018 21:54:30 +0000"  >&lt;p&gt;Commit e65411f5cce2d58588fbb96a366560f6e6803dab in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dkulp&quot; class=&quot;user-hover&quot; rel=&quot;dkulp&quot;&gt;Daniel Kulp&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=e65411f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=e65411f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Squashed commit of the following:&lt;br/&gt;
This closes #243&lt;/p&gt;

&lt;p&gt;commit b2a5607578652f203e117c5b80d228618dd101f1&lt;br/&gt;
Merge: 500c28c2 54fc3f53&lt;br/&gt;
Author: Daniel Kulp &amp;lt;dan@kulp.com&amp;gt;&lt;br/&gt;
Date:   Mon Dec 3 14:46:47 2018 -0500&lt;/p&gt;

&lt;p&gt;    Merge branch &apos;master&apos; into master&lt;/p&gt;

&lt;p&gt;commit 500c28c212d20e40fe48b6229cfc7764631f56e8&lt;br/&gt;
Author: Daniil Guitelson &amp;lt;dguitelson@openwaygroup.com&amp;gt;&lt;br/&gt;
Date:   Fri Sep 1 17:37:10 2017 +0300&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2069&quot; title=&quot;Use primitive fields in generated getters &amp;amp; setters in Java code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2069&quot;&gt;&lt;del&gt;AVRO-2069&lt;/del&gt;&lt;/a&gt;: Use primitive fields in generated getters &amp;amp; setters in Java code&lt;/p&gt;

&lt;p&gt;    Fix broken unit tests in TestSpecificCompilerTool after migrating to org.junit.Test&lt;/p&gt;

&lt;p&gt;commit 35b891ebf868cea12f278641229807c1e2a35db2&lt;br/&gt;
Merge: c642adaf 189368ed&lt;br/&gt;
Author: Daniil Gitelson &amp;lt;daniil.guit@gmail.com&amp;gt;&lt;br/&gt;
Date:   Fri Sep 1 17:33:13 2017 +0300&lt;/p&gt;

&lt;p&gt;    Merge pull request #1 from apache/master&lt;/p&gt;

&lt;p&gt;    Sync up with origin repository&lt;/p&gt;

&lt;p&gt;commit c642adaf3d29183049cd4ad2e0012b002d95d7c6&lt;br/&gt;
Author: Daniil Guitelson &amp;lt;dguitelson@openwaygroup.com&amp;gt;&lt;br/&gt;
Date:   Wed Aug 30 18:37:41 2017 +0300&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2069&quot; title=&quot;Use primitive fields in generated getters &amp;amp; setters in Java code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2069&quot;&gt;&lt;del&gt;AVRO-2069&lt;/del&gt;&lt;/a&gt;: Use primitive fields in generated getters &amp;amp; setters in Java code&lt;/p&gt;

&lt;p&gt;    Fix broken unit tests in TestSpecificCompilerTool&lt;/p&gt;

&lt;p&gt;commit 3414eae643517591015e3a6154c726c31f2d3095&lt;br/&gt;
Author: Daniil Guitelson &amp;lt;dguitelson@openwaygroup.com&amp;gt;&lt;br/&gt;
Date:   Tue Aug 29 12:13:42 2017 +0300&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2069&quot; title=&quot;Use primitive fields in generated getters &amp;amp; setters in Java code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2069&quot;&gt;&lt;del&gt;AVRO-2069&lt;/del&gt;&lt;/a&gt;: Use primitive fields in generated getters &amp;amp; setters in Java code&lt;/p&gt;</comment>
                            <comment id="16715627" author="githubbot" created="Mon, 10 Dec 2018 21:54:31 +0000"  >&lt;p&gt;dkulp closed pull request #243: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2069&quot; title=&quot;Use primitive fields in generated getters &amp;amp; setters in Java code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2069&quot;&gt;&lt;del&gt;AVRO-2069&lt;/del&gt;&lt;/a&gt;: Use primitive fields in generated getters &amp;amp; setters in Java code&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/243&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/243&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/classic/record.vm b/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/classic/record.vm&lt;br/&gt;
index 25b4101a6..f2e3bcfe4 100644&lt;br/&gt;
&amp;#8212; a/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/classic/record.vm&lt;br/&gt;
+++ b/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/classic/record.vm&lt;br/&gt;
@@ -228,7 +228,7 @@ public class ${this.mangle($schema.getName())}#if ($schema.isError()) extends or&lt;br/&gt;
 #else   * @return The value of the &apos;${this.mangle($field.name(), $schema.isError())}&apos; field.&lt;br/&gt;
 #end&lt;br/&gt;
    */&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public ${this.javaType($field.schema())} ${this.generateGetMethod($schema, $field)}() {&lt;br/&gt;
+  public ${this.javaUnbox($field.schema())} ${this.generateGetMethod($schema, $field)}() {&lt;br/&gt;
     return ${this.mangle($field.name(), $schema.isError())};&lt;br/&gt;
   }&lt;br/&gt;
 #end&lt;br/&gt;
@@ -252,7 +252,7 @@ public class ${this.mangle($schema.getName())}#if ($schema.isError()) extends or&lt;br/&gt;
 #end&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;@param value the value to set.&lt;br/&gt;
    */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public void ${this.generateSetMethod($schema, $field)}(${this.javaType($field.schema())} value) {&lt;br/&gt;
+  public void ${this.generateSetMethod($schema, $field)}(${this.javaUnbox($field.schema())} value) {&lt;br/&gt;
     this.${this.mangle($field.name(), $schema.isError())} = value;&lt;br/&gt;
   }&lt;br/&gt;
 #end&lt;br/&gt;
@@ -384,7 +384,7 @@ public class ${this.mangle($schema.getName())}#if ($schema.isError()) extends or&lt;br/&gt;
 #end&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;@return The value.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public ${this.javaType($field.schema())} ${this.generateGetMethod($schema, $field)}() {&lt;br/&gt;
+    public ${this.javaUnbox($field.schema())} ${this.generateGetMethod($schema, $field)}() {&lt;br/&gt;
       return ${this.mangle($field.name(), $schema.isError())};&lt;br/&gt;
     }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;diff --git a/lang/java/ipc/src/test/java/org/apache/avro/message/TestCustomSchemaStore.java b/lang/java/ipc/src/test/java/org/apache/avro/message/TestCustomSchemaStore.java&lt;br/&gt;
index ba960442a..5de9d6a38 100644&lt;br/&gt;
&amp;#8212; a/lang/java/ipc/src/test/java/org/apache/avro/message/TestCustomSchemaStore.java&lt;br/&gt;
+++ b/lang/java/ipc/src/test/java/org/apache/avro/message/TestCustomSchemaStore.java&lt;br/&gt;
@@ -62,7 +62,7 @@ public void testCompatibleReadWithSchemaFromSchemaStore() throws Exception &lt;/p&gt;
{
     // Should work
     assertEquals(nestedEvolve1.getRootName(), &quot;RootName&quot;);
     assertEquals(nestedEvolve1.getNested().getName(), &quot;Name&quot;);
-    assertEquals(nestedEvolve1.getNested().getValue(), Long.valueOf(1));
+    assertEquals(nestedEvolve1.getNested().getValue(), 1);
   }

&lt;p&gt;   @Test(expected = MissingSchemaException.class)&lt;br/&gt;
diff --git a/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java b/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java&lt;br/&gt;
index 4fa6fe0b7..1223e2325 100644&lt;br/&gt;
&amp;#8212; a/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java&lt;br/&gt;
+++ b/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java&lt;br/&gt;
@@ -47,7 +47,7 @@ public void testSpecificBuilder() {&lt;br/&gt;
     Assert.assertTrue(builder.hasName());&lt;br/&gt;
     Assert.assertEquals(&quot;James Gosling&quot;, builder.getName());&lt;br/&gt;
     Assert.assertTrue(builder.hasYearOfBirth());&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Assert.assertEquals(new Integer(1955), builder.getYearOfBirth());&lt;br/&gt;
+    Assert.assertEquals(1955, builder.getYearOfBirth());&lt;br/&gt;
     Assert.assertFalse(builder.hasCountry());&lt;br/&gt;
     Assert.assertNull(builder.getCountry());&lt;br/&gt;
     Assert.assertTrue(builder.hasState());&lt;br/&gt;
@@ -102,13 +102,13 @@ public void testUnions() {&lt;br/&gt;
           .setProduct(product)&lt;br/&gt;
           .build())&lt;br/&gt;
       .build();&lt;/li&gt;
	&lt;li&gt;Assert.assertEquals(datetime, p.getDatetime().longValue());&lt;br/&gt;
+    Assert.assertEquals(datetime, p.getDatetime());&lt;br/&gt;
     Assert.assertEquals(ProductPage.class, p.getPageContext().getClass());&lt;br/&gt;
     Assert.assertEquals(product, ((ProductPage)p.getPageContext()).getProduct());&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     PageView p2 = PageView.newBuilder(p).build();&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Assert.assertEquals(datetime, p2.getDatetime().longValue());&lt;br/&gt;
+    Assert.assertEquals(datetime, p2.getDatetime());&lt;br/&gt;
     Assert.assertEquals(ProductPage.class, p2.getPageContext().getClass());&lt;br/&gt;
     Assert.assertEquals(product, ((ProductPage)p2.getPageContext()).getProduct());&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -141,10 +141,10 @@ public void testInterop() {&lt;br/&gt;
     Assert.assertEquals(interop.getArrayField(), copy.getArrayField());&lt;br/&gt;
     Assert.assertEquals(interop.getBoolField(), copy.getBoolField());&lt;br/&gt;
     Assert.assertEquals(interop.getBytesField(), copy.getBytesField());&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Assert.assertEquals(interop.getDoubleField(), copy.getDoubleField());&lt;br/&gt;
+    Assert.assertEquals(interop.getDoubleField(), copy.getDoubleField(), 0.001);&lt;br/&gt;
     Assert.assertEquals(interop.getEnumField(), copy.getEnumField());&lt;br/&gt;
     Assert.assertEquals(interop.getFixedField(), copy.getFixedField());&lt;/li&gt;
	&lt;li&gt;Assert.assertEquals(interop.getFloatField(), copy.getFloatField());&lt;br/&gt;
+    Assert.assertEquals(interop.getFloatField(), copy.getFloatField(), 0.001);&lt;br/&gt;
     Assert.assertEquals(interop.getIntField(), copy.getIntField());&lt;br/&gt;
     Assert.assertEquals(interop.getLongField(), copy.getLongField());&lt;br/&gt;
     Assert.assertEquals(interop.getMapField(), copy.getMapField());&lt;br/&gt;
diff --git a/lang/java/tools/src/test/compiler/output-string/avro/examples/baseball/Player.java b/lang/java/tools/src/test/compiler/output-string/avro/examples/baseball/Player.java&lt;br/&gt;
index 531cc6fd9..8f8a9a4ed 100644
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/java/tools/src/test/compiler/output-string/avro/examples/baseball/Player.java&lt;br/&gt;
+++ b/lang/java/tools/src/test/compiler/output-string/avro/examples/baseball/Player.java&lt;br/&gt;
@@ -127,7 +127,7 @@ public void put(int field$, java.lang.Object value$) {&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;Gets the value of the &apos;number&apos; field.&lt;/li&gt;
	&lt;li&gt;@return The number of the player&lt;br/&gt;
    */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public java.lang.Integer getNumber() {&lt;br/&gt;
+  public int getNumber() 
{
     return number;
   }&lt;br/&gt;
 &lt;br/&gt;
@@ -136,7 +136,7 @@ public void put(int field$, java.lang.Object value$) {&lt;br/&gt;
    * The number of the player&lt;br/&gt;
    * @param value the value to set.&lt;br/&gt;
    */&lt;br/&gt;
-  public void setNumber(java.lang.Integer value) {&lt;br/&gt;
+  public void setNumber(int value) {
     this.number = value;
   }&lt;br/&gt;
 &lt;br/&gt;
@@ -292,7 +292,7 @@ private Builder(avro.examples.baseball.Player other) {&lt;br/&gt;
       * The number of the player&lt;br/&gt;
       * @return The value.&lt;br/&gt;
       */&lt;br/&gt;
-    public java.lang.Integer getNumber() {&lt;br/&gt;
+    public int getNumber() {
       return number;
     }&lt;br/&gt;
 &lt;br/&gt;
diff --git a/lang/java/tools/src/test/compiler/output/Player.java b/lang/java/tools/src/test/compiler/output/Player.java&lt;br/&gt;
index 94fc7d0b3..f20af1db5 100644&lt;br/&gt;
&amp;#8212; a/lang/java/tools/src/test/compiler/output/Player.java&lt;br/&gt;
+++ b/lang/java/tools/src/test/compiler/output/Player.java&lt;br/&gt;
@@ -127,7 +127,7 @@ public void put(int field$, java.lang.Object value$) {&lt;br/&gt;
    * Gets the value of the &apos;number&apos; field.&lt;br/&gt;
    * @return The number of the player&lt;br/&gt;
    */&lt;br/&gt;
-  public java.lang.Integer getNumber() {&lt;br/&gt;
+  public int getNumber() {     return number;   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -136,7 +136,7 @@ public void put(int field$, java.lang.Object value$) {&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;The number of the player&lt;/li&gt;
	&lt;li&gt;@param value the value to set.&lt;br/&gt;
    */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public void setNumber(java.lang.Integer value) {&lt;br/&gt;
+  public void setNumber(int value) 
{
     this.number = value;
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@@ -292,7 +292,7 @@ private Builder(avro.examples.baseball.Player other) {&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;The number of the player&lt;/li&gt;
	&lt;li&gt;@return The value.&lt;br/&gt;
       */&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;public java.lang.Integer getNumber() {&lt;br/&gt;
+    public int getNumber() 
{
       return number;
     }&lt;/li&gt;
&lt;/ul&gt;






&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Aug 2017 09:24:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3je3r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2070] Tolerate any Number when writing primitive values in Java in GenericDatumWriter</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2070</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Tolerating any Number (instead of concrete Long, Double, Float) makes possible to use mutable Number implmentation for performance reasons (specially for primitive collection iterations)&lt;br/&gt;
Currently, this only works for int only:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;      &lt;span class=&quot;code-comment&quot;&gt;// Here it works
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; INT:     out.writeInt(((&lt;span class=&quot;code-object&quot;&gt;Number&lt;/span&gt;)datum).intValue()); &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
      &lt;span class=&quot;code-comment&quot;&gt;// This should be replaced with ((&lt;span class=&quot;code-object&quot;&gt;Number&lt;/span&gt;)datum).longValue() etc
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; LONG:    out.writeLong((&lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;)datum);       &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
      &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; FLOAT:   out.writeFloat((&lt;span class=&quot;code-object&quot;&gt;Float&lt;/span&gt;)datum);     &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
      &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; DOUBLE:  out.writeDouble((&lt;span class=&quot;code-object&quot;&gt;Double&lt;/span&gt;)datum);   &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="13098252">AVRO-2070</key>
            <summary>Tolerate any Number when writing primitive values in Java in GenericDatumWriter</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="dguitelson">Daniil Gitelson</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Aug 2017 12:28:55 +0000</created>
                <updated>Sun, 30 Dec 2018 04:09:32 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 20 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3jee7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2071] Change of signatures in release</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2071</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;blockquote&gt;
&lt;p&gt;Hi PMC,&lt;/p&gt;

&lt;p&gt;   The Release Distribution Policy&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; changed regarding .sha files.&lt;br/&gt;
   See under &quot;Cryptographic Signatures and Checksums Requirements&quot; &lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;  Old policy :&lt;/p&gt;

&lt;p&gt;    &amp;#8211; use extension .sha for any SHA checksum (SHA-1, SHA-256, SHA-512)&lt;/p&gt;

&lt;p&gt;  New policy :&lt;/p&gt;

&lt;p&gt;     &amp;#8211; use .sha1 for a SHA-1 checksum&lt;br/&gt;
     &amp;#8211; use .sha256 for a SHA-256 checksum&lt;br/&gt;
     &amp;#8211; use .sha512 for a SHA-512 checksum&lt;br/&gt;
     &amp;#8211; &lt;span class=&quot;error&quot;&gt;&amp;#91;*&amp;#93;&lt;/span&gt; .sha should contain a SHA-1&lt;/p&gt;

&lt;p&gt;  Why this change ?&lt;/p&gt;

&lt;p&gt;     &amp;#8211; Verifying a checksum under the old policy is/was not handy.&lt;br/&gt;
        You have to inspect the .sha to find out which algorithm&lt;br/&gt;
        should be used ; or try them all (SHA-1, SHA256, etc).&lt;br/&gt;
        The new scheme avoids this ambiguity.&lt;br/&gt;
     &amp;#8211; The last point&lt;span class=&quot;error&quot;&gt;&amp;#91;*&amp;#93;&lt;/span&gt; was only added for clarity. Most of the&lt;br/&gt;
        old, stale .sha&apos;s contain a SHA-1. The relatively new .sha&apos;s&lt;br/&gt;
        contain a SHA-512. The expectation is that the last catagory will&lt;br/&gt;
        disappear, when active projects adapt to the &apos;new&apos; convention.&lt;/p&gt;

&lt;p&gt;  Impact :&lt;/p&gt;

&lt;p&gt;     &amp;#8211; Should be none ; many projects already use the &apos;new&apos; convention.&lt;br/&gt;
     &amp;#8211; Please ask your release managers to use .sha1, .sha256, .sha512&lt;br/&gt;
        instead of the .sha extension.&lt;br/&gt;
     &amp;#8211; Please fix your build-tools if you have any.&lt;/p&gt;

&lt;p&gt;  Piggyback :&lt;/p&gt;

&lt;p&gt;     &amp;#8211; The policy requires a .md5 for every package ;&lt;br/&gt;
        providing a .sha512 is recommended.&lt;br/&gt;
        Since MD5 is essentially broken, it is to be expected that&lt;br/&gt;
        in the future a .sha512 will be required.&lt;br/&gt;
        Perhaps it is wize to start providing .sha512&apos;s&lt;br/&gt;
        with your releases if you do not already do so.&lt;/p&gt;

&lt;p&gt;     &amp;#8211; Visit &lt;a href=&quot;http://mirror-vm.apache.org/checker/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mirror-vm.apache.org/checker/&lt;/a&gt;&lt;br/&gt;
        to check the health of your /dist/-area ;&lt;br/&gt;
        my stuff ; any feedback is most welcome.&lt;/p&gt;

&lt;p&gt;  Thanks ; regards,&lt;/p&gt;

&lt;p&gt;  Henk Penning&lt;/p&gt;

&lt;p&gt;   &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://www.apache.org/dev/release-distribution&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/dev/release-distribution&lt;/a&gt;&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://www.apache.org/dev/release-distribution#sigs-and-sums&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/dev/release-distribution#sigs-and-sums&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;------------------------------------------------------------&lt;br/&gt;
Henk P. Penning ; apache.org infrastructure volunteer.&lt;br/&gt;
henkp@apache.org ; &lt;a href=&quot;http://mirror-vm.apache.org/~henkp/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mirror-vm.apache.org/~henkp/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We will need to update the build.sh to conform to these activities.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13098315">AVRO-2071</key>
            <summary>Change of signatures in release</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="sacharya">Suraj Acharya</assignee>
                                    <reporter username="sacharya">Suraj Acharya</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Aug 2017 16:16:29 +0000</created>
                <updated>Tue, 29 Aug 2017 16:16:29 +0000</updated>
                                            <version>1.7.8</version>
                    <version>1.9.0</version>
                    <version>1.8.3</version>
                                                    <component>build</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 20 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3jes7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2072] ResolvingGrammarGenerator doesn&apos;t implement schema resolution correctly for unions</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2072</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;According to &lt;a href=&quot;https://avro.apache.org/docs/current/spec.html#Schema+Resolution&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;specification&lt;/a&gt;, int and long is promotable to float, but when using SchemaValidator, a union with a single int or long branch is not readable by an union with a float branch.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13098518">AVRO-2072</key>
            <summary>ResolvingGrammarGenerator doesn&apos;t implement schema resolution correctly for unions</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nkollar">Nandor Kollar</assignee>
                                    <reporter username="nkollar">Nandor Kollar</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 Aug 2017 09:36:33 +0000</created>
                <updated>Tue, 12 Sep 2017 08:36:29 +0000</updated>
                            <resolved>Tue, 12 Sep 2017 08:36:29 +0000</resolved>
                                    <version>1.7.7</version>
                    <version>1.8.1</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="16147089" author="zolyfarkas" created="Wed, 30 Aug 2017 11:23:16 +0000"  >&lt;p&gt;Applying the patch results in some test failures:&lt;/p&gt;

&lt;p&gt;Failed tests: &lt;br/&gt;
  TestReadingWritingDataInEvolvedSchemas.intUnionIsNotConvertedToFloatUnion Expected test to throw (an instance of org.apache.avro.AvroTypeException and exception with message a string containing &quot;Found int, expecting union&quot;)&lt;br/&gt;
  TestReadingWritingDataInEvolvedSchemas.longUnionIsNotConvertedToFloatUnion Expected test to throw (an instance of org.apache.avro.AvroTypeException and exception with message a string containing &quot;Found long, expecting union&quot;)&lt;br/&gt;
  TestReadingWritingDataInEvolvedSchemas.longWrittenWithUnionSchemaIsConvertedToFloatDoubleUnionSchema:205 expected: java.lang.Double&amp;lt;42.0&amp;gt; but was: java.lang.Float&amp;lt;42.0&amp;gt;&lt;/p&gt;</comment>
                            <comment id="16147116" author="nkollar" created="Wed, 30 Aug 2017 11:54:38 +0000"  >&lt;p&gt;Thanks Zoltan, I&apos;ll have a look at the failing tests!&lt;/p&gt;</comment>
                            <comment id="16147147" author="nkollar" created="Wed, 30 Aug 2017 12:30:02 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zolyfarkas&quot; class=&quot;user-hover&quot; rel=&quot;zolyfarkas&quot;&gt;Zoltan Farkas&lt;/a&gt; I don&apos;t see any test failure, guess you executed tests on your forked version instead of Apache master. Looks like &lt;a href=&quot;https://github.com/zolyfarkas/avro/blob/trunk/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java#L158&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;intUnionIsNotConvertedToFloatUnion &lt;/a&gt; and &lt;a href=&quot;https://github.com/zolyfarkas/avro/blob/trunk/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java#L181&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;longUnionIsNotConvertedToFloatUnion&lt;/a&gt; are negative test: testing exactly what this Jira intends to fix right? Are these tests your own test cases, or this was merged with a patch available Jira, which is not yet merged to upstream trunk? As of the last test case, I&apos;m not sure what is the problem.&lt;/p&gt;</comment>
                            <comment id="16147229" author="zolyfarkas" created="Wed, 30 Aug 2017 13:20:44 +0000"  >&lt;p&gt;I executed this against my branch... which is ahead of the official branch in certain places and behind in others... &lt;br/&gt;
THeese failures do highligh the need for this patch to contains some tests to test the functionality.&lt;/p&gt;

&lt;p&gt;TestReadingWritingDataInEvolvedSchemas.longWrittenWithUnionSchemaIsConvertedToFloatDoubleUnionSchema&lt;/p&gt;

&lt;p&gt;highlights actually an interesting evolution case which the patch does not cover:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; field -&amp;gt; union {&lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt;} field;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The test validates that int are promoted to double... meanwhile the patch promotes it to float (first compatible type in the union)&lt;/p&gt;

&lt;p&gt;I think the spec should be undated to clarify what needs to be done here...&lt;/p&gt;</comment>
                            <comment id="16147294" author="nkollar" created="Wed, 30 Aug 2017 14:21:20 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zolyfarkas&quot; class=&quot;user-hover&quot; rel=&quot;zolyfarkas&quot;&gt;Zoltan Farkas&lt;/a&gt; I think this is fine, the test should expect float instead of Double in this case, since the spec says:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;if reader&apos;s is a union, but writer&apos;s is not&lt;/b&gt;&lt;br/&gt;
The first schema in the reader&apos;s union that matches the writer&apos;s schema is recursively resolved against it. If none match, an error is signalled.&lt;/p&gt;

&lt;p&gt;and int field will (with the attach patch) match with float branch now, and not with double. I think this is exactly what the spec says, no?&lt;/p&gt;</comment>
                            <comment id="16147312" author="zolyfarkas" created="Wed, 30 Aug 2017 14:31:17 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkollar&quot; class=&quot;user-hover&quot; rel=&quot;nkollar&quot;&gt;Nandor Kollar&lt;/a&gt; Missed that part of the spec, the patch behavior is compliant with the spec... an update to the unit test is needed to comply with the patch.&lt;/p&gt;

&lt;p&gt;BTW these unit tests have been added in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1931&quot; title=&quot;SchemaCompatibility fails to recognize reader compatible with all branches of a union&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1931&quot;&gt;&lt;del&gt;AVRO-1931&lt;/del&gt;&lt;/a&gt;: &lt;a href=&quot;https://issues.apache.org/jira/secure/attachment/12832657/AVRO-1931-2.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/secure/attachment/12832657/AVRO-1931-2.patch&lt;/a&gt; &lt;/p&gt;

</comment>
                            <comment id="16147348" author="nkollar" created="Wed, 30 Aug 2017 14:46:09 +0000"  >&lt;p&gt;Ah okay, I think the pull request for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1931&quot; title=&quot;SchemaCompatibility fails to recognize reader compatible with all branches of a union&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1931&quot;&gt;&lt;del&gt;AVRO-1931&lt;/del&gt;&lt;/a&gt; didn&apos;t include these tests, just the attached patch, that&apos;s why it was closed but the tests are not there. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=epkanol&quot; class=&quot;user-hover&quot; rel=&quot;epkanol&quot;&gt;Anders Sundelin&lt;/a&gt; could you please help identifying the difference between your attached patch and your PR? Looks like some test cases are missing.&lt;/p&gt;</comment>
                            <comment id="16148959" author="epkanol" created="Thu, 31 Aug 2017 13:15:00 +0000"  >&lt;p&gt;Hi Nandor and others,&lt;/p&gt;

&lt;p&gt;My bad, I based my pull request on my original patch, so the additional &lt;br/&gt;
test cases are not there, hence, are not merged into master.&lt;/p&gt;

&lt;p&gt;Can I add the additional test cases to &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2072&quot; title=&quot;ResolvingGrammarGenerator doesn&amp;#39;t implement schema resolution correctly for unions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2072&quot;&gt;&lt;del&gt;AVRO-2072&lt;/del&gt;&lt;/a&gt;, or should we create a &lt;br/&gt;
separate issue for this?&lt;/p&gt;

&lt;p&gt;There is no semantic difference (only white-space) in the &lt;br/&gt;
SchemaCompatibility class itself, comparing the &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1931&quot; title=&quot;SchemaCompatibility fails to recognize reader compatible with all branches of a union&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1931&quot;&gt;&lt;del&gt;AVRO-1931&lt;/del&gt;&lt;/a&gt;.patch and &lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1931&quot; title=&quot;SchemaCompatibility fails to recognize reader compatible with all branches of a union&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1931&quot;&gt;&lt;del&gt;AVRO-1931&lt;/del&gt;&lt;/a&gt;-2.patch.&lt;/p&gt;

&lt;p&gt;As I also have another PR open (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1933&quot; title=&quot;SchemaCompatibility class could be more user-friendly about incompatibilities&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1933&quot;&gt;&lt;del&gt;AVRO-1933&lt;/del&gt;&lt;/a&gt;), we certainly could add the &lt;br/&gt;
tests there, (this patch also deals with SchemaCompatibility). But that &lt;br/&gt;
patch is slightly more involved, and has no real bearing on &lt;br/&gt;
TestReadingWritingDataInEvolvedSchemas.&lt;/p&gt;


&lt;p&gt;I seem to recall how I ended up like this - first I discovered the &lt;br/&gt;
problem, created the fix and some elementary tests, which was added as a &lt;br/&gt;
Jira. Then, I expanded on the tests, and updated the patch (hence, the &lt;br/&gt;
-2 suffix), but this was apparently forgotten when I created the github &lt;br/&gt;
fork. The perils of mixing patches and github :-/ I totally agree that &lt;br/&gt;
we should stick to github (i.e. &lt;b&gt;one&lt;/b&gt; way of doing patches)&lt;/p&gt;

&lt;p&gt;BR&lt;/p&gt;

&lt;p&gt;/Anders&lt;/p&gt;



</comment>
                            <comment id="16149055" author="epkanol" created="Thu, 31 Aug 2017 14:28:20 +0000"  >&lt;p&gt;Attached the additional test cases (compared with current Avro master), that I forgot in PR for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1931&quot; title=&quot;SchemaCompatibility fails to recognize reader compatible with all branches of a union&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1931&quot;&gt;&lt;del&gt;AVRO-1931&lt;/del&gt;&lt;/a&gt; (but was included in the JIRA patch for said issue).&lt;br/&gt;
Note! I have not modified your original &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2072&quot; title=&quot;ResolvingGrammarGenerator doesn&amp;#39;t implement schema resolution correctly for unions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2072&quot;&gt;&lt;del&gt;AVRO-2072&lt;/del&gt;&lt;/a&gt; patch, so it is likely that these tests will break when applied on &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2072&quot; title=&quot;ResolvingGrammarGenerator doesn&amp;#39;t implement schema resolution correctly for unions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2072&quot;&gt;&lt;del&gt;AVRO-2072&lt;/del&gt;&lt;/a&gt; patch (as indicated by Zoltan Farkas in above comment)&lt;/p&gt;</comment>
                            <comment id="16149057" author="epkanol" created="Thu, 31 Aug 2017 14:29:22 +0000"  >&lt;p&gt;Please feel free to update the tests accordingly&lt;/p&gt;</comment>
                            <comment id="16156991" author="nkollar" created="Thu, 7 Sep 2017 14:10:06 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=epkanol&quot; class=&quot;user-hover&quot; rel=&quot;epkanol&quot;&gt;Anders Sundelin&lt;/a&gt;, I uploaded &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2072&quot; title=&quot;ResolvingGrammarGenerator doesn&amp;#39;t implement schema resolution correctly for unions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2072&quot;&gt;&lt;del&gt;AVRO-2072&lt;/del&gt;&lt;/a&gt;_2.patch with your additional test cases, modified the failing ones in &lt;tt&gt;TestReadingWritingDataInEvolvedSchemas&lt;/tt&gt; which shouldn&apos;t fail after the fix in &lt;tt&gt;ResolvingGrammarGenerator&lt;/tt&gt;, and deleted the ignored case from &lt;tt&gt;TestSchemaCompatibility&lt;/tt&gt;, since we should support those promotions: changing the specification is not the best idea according to &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;, so we should allow this promotion, thus this is a bug in the implementation (see discussion on Avro user&apos;s mailing list). Anders, could you please help with a review?&lt;/p&gt;</comment>
                            <comment id="16160428" author="epkanol" created="Sun, 10 Sep 2017 18:11:28 +0000"  >&lt;p&gt;I have reviewed your patch, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkollar&quot; class=&quot;user-hover&quot; rel=&quot;nkollar&quot;&gt;Nandor Kollar&lt;/a&gt;, and it certainly looks OK with me. All the relevant test cases are there, and you updated the failing ones, like you said.&lt;br/&gt;
My only gripe is that the case statements are on the same line (this was also the case before your patch, so I understand why you kept the style). This is not according to the Avro conventions (which says that Sun Java conventions, with two-space indent) shall be used.&lt;br/&gt;
Also, I think that the method &quot;ResolvingGrammarGenerator.bestBranch&quot; does not really live up to its name - it will find the first matching branch, not necessarily the best one (e.g. when the writer schema is &lt;span class=&quot;error&quot;&gt;&amp;#91;long&amp;#93;&lt;/span&gt; and the reader is &lt;span class=&quot;error&quot;&gt;&amp;#91;float, double&amp;#93;&lt;/span&gt;, in that order, it will pick float to read the value, instead of double, which would prevent data-loss. Easily verified by the following test case (placed in TestReadingWritingDataInEvolvedSchemas):&lt;br/&gt;
{{&lt;br/&gt;
@Test&lt;br/&gt;
  public void longIsReadByUnionFloatDoubleSchema() throws Exception &lt;/p&gt;
{
    Schema writer = LONG_RECORD;
    Record record = defaultRecordWithSchema(writer, FIELD_A, 42L);
    byte[] encoded = encodeGenericBlob(record);
    assertEquals(42.0f, decodeGenericBlob(UNION_FLOAT_DOUBLE_RECORD, writer, encoded).get(FIELD_A));
  }
&lt;p&gt;}}&lt;br/&gt;
But this method was called that before your patch as well, so I would not fail the patch because of this.&lt;br/&gt;
+1 from me &lt;/p&gt;</comment>
                            <comment id="16160465" author="epkanol" created="Sun, 10 Sep 2017 20:17:15 +0000"  >&lt;p&gt;Please substitute &lt;span class=&quot;error&quot;&gt;&amp;#91;long&amp;#93;&lt;/span&gt; with &lt;span class=&quot;error&quot;&gt;&amp;#91;int&amp;#93;&lt;/span&gt; in my prior comment - long-to-double conversion would always be lossy (both are 64-bit quantities). But my argument about the method name still remains, it will pick the &quot;first match&quot;, not necessarily the &quot;best match&quot; (though its behaviour is according to the Avro spec, afaik)&lt;/p&gt;</comment>
                            <comment id="16160994" author="nkollar" created="Mon, 11 Sep 2017 09:53:15 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=epkanol&quot; class=&quot;user-hover&quot; rel=&quot;epkanol&quot;&gt;Anders Sundelin&lt;/a&gt; thanks for the review, in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2072&quot; title=&quot;ResolvingGrammarGenerator doesn&amp;#39;t implement schema resolution correctly for unions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2072&quot;&gt;&lt;del&gt;AVRO-2072&lt;/del&gt;&lt;/a&gt;_3.patch I modified the indentation according to your comment, and renamed the method to firstMatchingBranch to reflect the logic better.&lt;/p&gt;</comment>
                            <comment id="16161044" author="epkanol" created="Mon, 11 Sep 2017 10:35:33 +0000"  >&lt;p&gt;+1 for patch 3, I have no further comments, it looks good to me.&lt;/p&gt;</comment>
                            <comment id="16161149" author="gszadovszky" created="Mon, 11 Sep 2017 12:31:24 +0000"  >&lt;p&gt;+1&lt;br/&gt;
Will push it soon&lt;/p&gt;</comment>
                            <comment id="16162578" author="jira-bot" created="Tue, 12 Sep 2017 06:59:59 +0000"  >&lt;p&gt;Commit 50eebb8a0b96565641bb56a0f11e326b3f5cc50b in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkollar&quot; class=&quot;user-hover&quot; rel=&quot;nkollar&quot;&gt;Nandor Kollar&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=50eebb8&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=50eebb8&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-2072&quot; title=&quot;ResolvingGrammarGenerator doesn&amp;#39;t implement schema resolution correctly for unions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-2072&quot;&gt;&lt;del&gt;AVRO-2072&lt;/del&gt;&lt;/a&gt;: ResolvingGrammarGenerator doesn&apos;t implement schema resolution correctly for unions&lt;/p&gt;

&lt;p&gt;Signed-off-by: Anders Sundelin &amp;lt;anders.sundelin@ericsson.com&amp;gt;&lt;br/&gt;
Signed-off-by: Gabor Szadovszky &amp;lt;gabor@apache.org&amp;gt;&lt;/p&gt;</comment>
                            <comment id="16162605" author="nkollar" created="Tue, 12 Sep 2017 07:32:19 +0000"  >&lt;p&gt;Thanks &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gszadovszky&quot; class=&quot;user-hover&quot; rel=&quot;gszadovszky&quot;&gt;Gabor Szadovszky&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=epkanol&quot; class=&quot;user-hover&quot; rel=&quot;epkanol&quot;&gt;Anders Sundelin&lt;/a&gt; for reviewing and committing this patch!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="13011653">AVRO-1933</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12884683" name="0001-AVRO-1931-Additional-test-cases.patch" size="12459" author="epkanol" created="Thu, 31 Aug 2017 14:26:07 +0000"/>
                            <attachment id="12884451" name="AVRO-2072.patch" size="942" author="nkollar" created="Wed, 30 Aug 2017 09:54:35 +0000"/>
                            <attachment id="12885819" name="AVRO-2072_2.patch" size="9763" author="nkollar" created="Thu, 7 Sep 2017 14:01:17 +0000"/>
                            <attachment id="12886380" name="AVRO-2072_3.patch" size="10647" author="nkollar" created="Mon, 11 Sep 2017 09:50:34 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 30 Aug 2017 11:23:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 18 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3jg13:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>However, schema resolution is now working according to spec it is a backward incompatible change in the behaviour that int is promotable to float (in addition to long and double) and log to float (in addition to double) when used in unions.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-2073] Update example projects to be compatible with the actual release</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2073</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Update the example code and the related dependencies at &lt;tt&gt;doc/examples&lt;/tt&gt; so that they are working properly with the actual Avro release. (E.g. currently outdated Avro and Hadoop versions are referenced in the dependencies.)&lt;/p&gt;</description>
                <environment></environment>
        <key id="13099556">AVRO-2073</key>
            <summary>Update example projects to be compatible with the actual release</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="gszadovszky">Gabor Szadovszky</reporter>
                        <labels>
                            <label>newbie</label>
                    </labels>
                <created>Mon, 4 Sep 2017 08:09:24 +0000</created>
                <updated>Mon, 4 Sep 2017 08:17:31 +0000</updated>
                                            <version>1.9.0</version>
                                                    <component>doc</component>
                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 20 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3jlwf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-2074] SchemaValidator can&apos;t cope with recursive schemas?</title>
                <link>https://issues.apache.org/jira/browse/AVRO-2074</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;When trying to validate a record which is recursively defined:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;    Schema record = Schema.createRecord(&lt;span class=&quot;code-quote&quot;&gt;&quot;List&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
    record.setFields(list(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;head&quot;&lt;/span&gt;, Schema.create(Schema.Type.INT), &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;),
      &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;tail&quot;&lt;/span&gt;, record, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;then schema validation&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SchemaValidatorBuilder().canReadStrategy().validateAll().validate(record, asList(record));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;fails with StackOverflowError:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;java.lang.StackOverflowError
	at org.apache.avro.io.parsing.Symbol$Sequence.flattenedSize(Symbol.java:337)
	at org.apache.avro.io.parsing.Symbol.flattenedSize(Symbol.java:230)
	at org.apache.avro.io.parsing.Symbol$Sequence.flattenedSize(Symbol.java:337)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="13099640">AVRO-2074</key>
            <summary>SchemaValidator can&apos;t cope with recursive schemas?</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="nkollar">Nandor Kollar</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Sep 2017 15:23:51 +0000</created>
                <updated>Tue, 17 Oct 2017 15:10:23 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="16173297" author="zkobza" created="Wed, 20 Sep 2017 14:52:48 +0000"  >&lt;p&gt;This appears to be a bug in Avro 1.8.2. If I downgrade to Avro 1.8.1, I do not see this issue when validating schemas.&lt;/p&gt;</comment>
                            <comment id="16173372" author="nkollar" created="Wed, 20 Sep 2017 15:46:13 +0000"  >&lt;p&gt;Hm, interesting, it seems those lines which stuck in infinite recursion are submitted with &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-328&quot; title=&quot;Performance improvements Validating encoder/decoder for nested records&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-328&quot;&gt;&lt;del&gt;AVRO-328&lt;/del&gt;&lt;/a&gt;, which was committed quite a long ago. Do you have any idea what could be the root cause, what has changed between the two releases which broke this logic?&lt;/p&gt;</comment>
                            <comment id="16173401" author="zkobza" created="Wed, 20 Sep 2017 15:59:22 +0000"  >&lt;p&gt;Did not investigate any further because we can depend on Avro 1.8.1 in most cases. However, we would like to use Avro 1.8.2 because of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-607&quot; title=&quot;SpecificData.getSchema not thread-safe&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-607&quot;&gt;&lt;del&gt;AVRO-607&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="16207753" author="nkollar" created="Tue, 17 Oct 2017 15:10:23 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zkobza&quot; class=&quot;user-hover&quot; rel=&quot;zkobza&quot;&gt;Zack Kobza&lt;/a&gt; are you sure that it is a regression, and works fine in Avro 1.8.1? I checked out &lt;tt&gt;release-1.8.1&lt;/tt&gt; tag from Avro Github repository, and this test case failed:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  @Test
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testRecursiveSchema() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; SchemaValidationException {
    Schema record = Schema.createRecord(&lt;span class=&quot;code-quote&quot;&gt;&quot;List&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;);
    record.setFields(asList(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;head&quot;&lt;/span&gt;, Schema.create(Schema.Type.INT), &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;),
      &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;tail&quot;&lt;/span&gt;, record, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)));
    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SchemaValidatorBuilder().canReadStrategy().validateAll().validate(record, asList(record));
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It failed on &lt;tt&gt;master&lt;/tt&gt;, and on &lt;tt&gt;release-1.8.0&lt;/tt&gt; release tag too. Could you please tell me how did you verify that it is okay on Avro 1.8.1?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 20 Sep 2017 14:52:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 13 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3jmf3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>
