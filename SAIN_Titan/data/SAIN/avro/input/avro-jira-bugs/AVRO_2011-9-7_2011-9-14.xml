<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:16:04 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2011-9-7+AND+created+%3C%3D+2011-9-14+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="3" total="3"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-885] explicit schema verification</title>
                <link>https://issues.apache.org/jira/browse/AVRO-885</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;when we declare some fields in a record, it&apos;s assumed to be mandatory unless we specify it with a union &lt;/p&gt;
{original_type, null}
&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;this feature is actually very useful to me: I declare a schema, and if some new user creates a record, but fails to populate some mandatory field, I want some mechanism to throw an exception.&lt;/p&gt;

&lt;p&gt;currently I get this feature &quot;by accident&quot;: if the user misses some mandatory fields, when I send this record as a param to some RPC method, or when I serialize it through SpecificDatumWriter, Avro throws a NULLPointerException.  I can catch this and let user know that it&apos;s due to lack of mandatory fields.&lt;/p&gt;

&lt;p&gt;but instead of NPE, could we make Avro throw a more explicit exception, so it&apos;s more descriptive?&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Yang&lt;/p&gt;


&lt;p&gt;On 09/07/2011 01:17 PM, Yang wrote:&lt;br/&gt;
&amp;gt; but instead of NPE, could we make Avro throw a more explicit exception,&lt;br/&gt;
&amp;gt; so it&apos;s more descriptive?&lt;/p&gt;

&lt;p&gt;This is possible.  It could be done back-compatibly by throwing a&lt;br/&gt;
subclass of NullPointerException, e.g., AvroNullValueException.  The&lt;br/&gt;
logic in question is in GenericDatumWriter, where Avro builds an error&lt;br/&gt;
message indicating the path to the null in the data.&lt;/p&gt;

&lt;p&gt;Please file an issue in Jira for this.&lt;/p&gt;

&lt;p&gt;Doug&lt;/p&gt;</description>
                <environment></environment>
        <key id="12521659">AVRO-885</key>
            <summary>explicit schema verification</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="yangyangyyy">Yang Yang</reporter>
                        <labels>
                    </labels>
                <created>Wed, 7 Sep 2011 20:56:14 +0000</created>
                <updated>Thu, 27 Oct 2011 22:34:59 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13137665" author="jbaldassari" created="Thu, 27 Oct 2011 22:34:59 +0000"  >&lt;p&gt;Adding some comments from the e-mail thread about this issue:&lt;/p&gt;

&lt;p&gt;From Doug Cutting:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I see three choices, none perfect:&lt;/p&gt;

&lt;p&gt; 1. Use a subclass of NullPointerException in both builder and&lt;br/&gt;
non-builder code.  This provides consistency and back-compatibility, but&lt;br/&gt;
does not permit folks to catch all Avro runtime exceptions with a single&lt;br/&gt;
clause.&lt;/p&gt;

&lt;p&gt; 2. Use a subclass of AvroRuntimeException in both builder and&lt;br/&gt;
non-builder code.  This would not be backwards compatible, but would&lt;br/&gt;
provide consistency and permits folks to catch all Avro runtime&lt;br/&gt;
exceptions with a single clause.&lt;/p&gt;

&lt;p&gt; 3. Throw one exception from the builder code and a different exception&lt;br/&gt;
from the non-builder code.&lt;/p&gt;

&lt;p&gt;My instinct is to go with (1).  Folks can always add a second catch&lt;br/&gt;
clause if they wish to distinguish Avro runtime exceptions from other&lt;br/&gt;
runtime exceptions.  I&apos;m not sure that distinction is always meaningful&lt;br/&gt;
anyway, since Avro might already throw other runtime exceptions that are&lt;br/&gt;
not subclasses of AvroRuntimeException.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;From Scott Carey:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Before the SpecificRecord  Builder API, a common practice was to use wrapper classes and/or static helpers for your types so that users can only create valid objects.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 27 Oct 2011 22:34:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>62014</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 13 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e32f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80259</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-886] Support doc strings in IDL for protocols and message interfaces</title>
                <link>https://issues.apache.org/jira/browse/AVRO-886</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I would like to be able to add documentation to the IDL that will get parsed with more types than Enum, Fixed and Record. Specifically, I&apos;d like to support doc strings for protocols and message interfaces. One purpose is to be able to write the documentation into the generated code.&lt;/p&gt;

&lt;p&gt;The specific use case is to use information in the documentation strings to auto generate java annotations in the generated Java code. This is done with our own specifics compiler.&lt;/p&gt;

&lt;p&gt;Here is an example &apos;marked up&apos; IDL file...&lt;/p&gt;

&lt;p&gt;/** class=@AccessControl(group=&quot;normal&quot;) */&lt;br/&gt;
@namespace(&quot;com.aol.interfaces.echo&quot;)&lt;br/&gt;
protocol EchoService {&lt;/p&gt;

&lt;p&gt;    import idl &quot;Errors.avdl&quot;;&lt;/p&gt;

&lt;p&gt;    /** Message structure for the echo service */&lt;br/&gt;
    record Message &lt;/p&gt;
{
        /** the string to be echo&apos;d */
        string echome;
        map&amp;lt;string&amp;gt; echoes;
    }

&lt;p&gt;    /** method=@AccessControl(source=&quot;MyService&quot;) */&lt;br/&gt;
    string echoString(string msg) throws com.aol.interfaces.error.ServiceError;&lt;br/&gt;
    Message echoMessage(Message msg) throws com.aol.interfaces.error.ServiceError;&lt;/p&gt;

&lt;p&gt;    void publishMessage(string msg) oneway;&lt;br/&gt;
}&lt;/p&gt;</description>
                <environment></environment>
        <key id="12522279">AVRO-886</key>
            <summary>Support doc strings in IDL for protocols and message interfaces</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gffletch">George Fletcher</assignee>
                                    <reporter username="gffletch">George Fletcher</reporter>
                        <labels>
                    </labels>
                <created>Thu, 8 Sep 2011 17:07:12 +0000</created>
                <updated>Tue, 13 Dec 2011 19:06:49 +0000</updated>
                            <resolved>Tue, 20 Sep 2011 17:56:15 +0000</resolved>
                                    <version>1.6.0</version>
                                    <fixVersion>1.6.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13100515" author="cutting" created="Thu, 8 Sep 2011 18:07:12 +0000"  >&lt;p&gt;I think getting protocol and message documentation into javadoc would be a good thing.&lt;/p&gt;

&lt;p&gt;That said, if generating protocol annotations is the desired end-goal, then it does not seem appropriate to use documentation strings.  Rather, I&apos;d suggest that protocols and messages in Java be extended to support arbitrary properties (like schemas and fields already do).  Then the IDL parser would need to be changed to parse these (as it already does for schemas and fields).  Finally, we could alter the templates to emit annotations from the value of the &quot;java-annotations&quot; property of protocols, messages, schemas and fields.  Does that make sense?&lt;/p&gt;</comment>
                            <comment id="13102060" author="gffletch" created="Sat, 10 Sep 2011 15:14:48 +0000"  >&lt;p&gt;Yes, that makes a lot of sense. Ideally, I&apos;d like to see both options implemented. I realize that leveraging the doc block as a way to get annotations is a work around (a.k.a. hack&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;... when I started down that path, I was hoping it was something I could do without changing the avro code.&lt;/p&gt;

&lt;p&gt;So it seems there are really two things to tackle...&lt;br/&gt;
1. Modify the IDL parser to capture doc for both the protocols and messages and save it.&lt;br/&gt;
2. Modify the IDL parser to allow properties for the protocol and message definitions and then expose these properties via the parsed code. &lt;/p&gt;

&lt;p&gt;I&apos;m assuming that the property information would need to appear in the JSON version of the protocol? This then would affect all languages that depend on the JSON encoding (e.g. python). Correct?&lt;/p&gt;</comment>
                            <comment id="13102351" author="cutting" created="Sun, 11 Sep 2011 21:13:05 +0000"  >&lt;p&gt;The JSON is meant to be extensible:&lt;/p&gt;

&lt;p&gt;&quot;Attributes not defined in this document are permitted as metadata, but must not affect the format of serialized data.&quot;&lt;/p&gt;

&lt;p&gt;from &lt;a href=&quot;http://avro.apache.org/docs/current/spec.html#schemas&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/current/spec.html#schemas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So no changes are required to other implementations if we start using a &quot;java-annotations&quot; property.&lt;/p&gt;</comment>
                            <comment id="13104739" author="gffletch" created="Wed, 14 Sep 2011 18:12:44 +0000"  >&lt;p&gt;So I believe I&apos;ve got code working against 1.6.0-SNAPSHOT (revision 1170735) to handle doc strings for protocol and message entities. I&apos;ll submit a patch.&lt;/p&gt;

&lt;p&gt;I ran into a couple interesting issues that are probably undiscovered bugs in the existing implementations.&lt;/p&gt;

&lt;p&gt;1. The SpecificCompiler.java javaEscape() method is currently escaping double-quotes even if they are already escaped in the string. I changed the replace() call with replaceAll(&quot;([&lt;sup&gt;\\\\])\&quot;&quot;, &quot;$1\\\\\&quot;&quot;).replaceFirst(&quot;&lt;/sup&gt;\&quot;&quot;, &quot;\\\\\&quot;&quot;) which basically will replace a double-quote with \&quot; as long as it is not already escaped.&lt;/p&gt;

&lt;p&gt;2. JSON doc strings need newlines to be escaped. If a doc string was multi-line and contained newlines, the JSON parser complained. I fixed these by escaping the newlines when ever generated the JSON objects (e.g. toJson()).&lt;/p&gt;</comment>
                            <comment id="13104744" author="gffletch" created="Wed, 14 Sep 2011 18:16:18 +0000"  >&lt;p&gt;Did not attache the patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="13104746" author="gffletch" created="Wed, 14 Sep 2011 18:22:18 +0000"  >&lt;p&gt;Patch to avro 1.6.0 that improves the IDL parser to capture doc strings for both protocols and messages.&lt;/p&gt;</comment>
                            <comment id="13104747" author="gffletch" created="Wed, 14 Sep 2011 18:23:00 +0000"  >&lt;p&gt;Attached file avro-doc.patch to this jira ticket&lt;/p&gt;</comment>
                            <comment id="13104794" author="gffletch" created="Wed, 14 Sep 2011 19:11:58 +0000"  >&lt;p&gt;Minor update to the patch that restores newlines in the multi-line doc strings when written by the velocity templates.&lt;/p&gt;</comment>
                            <comment id="13104795" author="gffletch" created="Wed, 14 Sep 2011 19:12:39 +0000"  >&lt;p&gt;Not sure how to delete attached files, so if interested in the patch, please use avro-doc-v2.patch to pick up all the latest tweaks.  Thanks.&lt;/p&gt;</comment>
                            <comment id="13104882" author="cutting" created="Wed, 14 Sep 2011 21:16:53 +0000"  >&lt;p&gt;&amp;gt; JSON doc strings need newlines to be escaped.&lt;/p&gt;

&lt;p&gt;Jackson does not usually emit JSON it cannot parse.  Here&apos;s a patch that adds a test of parsing newlines in a doc string.  The modified test passes for me.  Where are you seeing failures?&lt;/p&gt;</comment>
                            <comment id="13105070" author="gffletch" created="Thu, 15 Sep 2011 02:17:58 +0000"  >&lt;p&gt;Right and that is the problem I ran into with multi-line comments in the IDL. In the patch you provided, the newline (\n) is escaped as in &lt;br class=&quot;atl-forced-newline&quot; /&gt;n. As long as the JSON string has the newlines escaped everything is fine. The problem that I found is that the IDL parsing logic does NOT escape the newlines in a multi-line comment. This is true for enum, fixed and record schemas.&lt;/p&gt;

&lt;p&gt;The code generation phased worked fine, but when it came time to compile the generated java code, the Protocol.parse() method failed because the &quot;doc&quot; string in the JSON structure did not have the newlines properly escaped.&lt;/p&gt;

&lt;p&gt;For example, try adding the following multi-line comment to the avroTrace.avdl file.&lt;/p&gt;

&lt;p&gt;  /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;An individual span is the basic unit of testing.&lt;/li&gt;
	&lt;li&gt;The record is used by both client and server.&lt;br/&gt;
   */&lt;br/&gt;
  record Span {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The some of the tests in the ipc module will fail because the doc string contains an un-escaped newline. I&apos;ve uploaded the simple patch for the avroTrace.avdl file.&lt;/p&gt;

&lt;p&gt;Hence in my patch, I explicitly escape any newlines in the doc strings when generating the JSON format, and convert them back to newlines when &quot;getting&quot; the doc (protocol.getDoc()) so that comments in the generated code look much better.&lt;/p&gt;</comment>
                            <comment id="13105071" author="gffletch" created="Thu, 15 Sep 2011 02:24:42 +0000"  >&lt;p&gt;Argh... looks like I need wiki help&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; The first sentence of my last comment should read...&lt;/p&gt;

&lt;p&gt;Right and that is the problem I ran into with multi-line comments in the IDL. In the patch you provided, the newline (\n) is escaped as in &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;\\n&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13105076" author="gffletch" created="Thu, 15 Sep 2011 02:43:43 +0000"  >&lt;p&gt;For good measure, if you make the comment of the Span record in the avroTrace.avdl file look like this&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    /**
     * An individual span is the basic unit of testing.
     * The record is used by both \&quot;client\&quot; and \&quot;server\&quot;.
     */
    record Span {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;you will trigger the other bug I ran into while adding doc support for Protocols and Messages. Bascially, the SpecificCompiler.java in it&apos;s javaEscape() method doesn&apos;t ignore already escaped double-quotes and hence replaces &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;\&quot; with \\&quot;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; which causes an improperly escaped string in the generated java sources. In the case the code doesn&apos;t even compile. The resulting generated avroTrace.java file contains this statement.&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;public static final org.apache.avro.Protocol PROTOCOL = org.apache.avro.Protocol.parse(&quot;{\&quot;protocol\&quot;:\&quot;AvroTrace\&quot;,\&quot;namespace\&quot;:\&quot;org.apache.avro.ipc.trace\&quot;,\&quot;types\&quot;:[{\&quot;type\&quot;:\&quot;enum\&quot;,\&quot;name\&quot;:\&quot;SpanEvent\&quot;,\&quot;symbols\&quot;:[\&quot;SERVER_RECV\&quot;,\&quot;SERVER_SEND\&quot;,\&quot;CLIENT_RECV\&quot;,\&quot;CLIENT_SEND\&quot;]},{\&quot;type\&quot;:\&quot;fixed\&quot;,\&quot;name\&quot;:\&quot;ID\&quot;,\&quot;size\&quot;:8},{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;TimestampedEvent\&quot;,\&quot;fields\&quot;:[{\&quot;name\&quot;:\&quot;timeStamp\&quot;,\&quot;type\&quot;:\&quot;long\&quot;},{\&quot;name\&quot;:\&quot;event\&quot;,\&quot;type\&quot;:[\&quot;SpanEvent\&quot;,\&quot;string\&quot;]}]},{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;Span\&quot;,\&quot;doc\&quot;:\&quot;* An individual span is the basic unit of testing.\n   * The record is used by both \\\\&quot;client\\\\&quot; and \\\\&quot;server\\\\&quot;.\&quot;,\&quot;fields\&quot;:[{\&quot;name\&quot;:\&quot;traceID\&quot;,\&quot;type\&quot;:\&quot;ID\&quot;},{\&quot;name\&quot;:\&quot;spanID\&quot;,\&quot;type\&quot;:\&quot;ID\&quot;},{\&quot;name\&quot;:\&quot;parentSpanID\&quot;,\&quot;type\&quot;:[\&quot;ID\&quot;,\&quot;null\&quot;]},{\&quot;name\&quot;:\&quot;messageName\&quot;,\&quot;type\&quot;:\&quot;string\&quot;},{\&quot;name\&quot;:\&quot;requestPayloadSize\&quot;,\&quot;type\&quot;:\&quot;long\&quot;},{\&quot;name\&quot;:\&quot;responsePayloadSize\&quot;,\&quot;type\&quot;:\&quot;long\&quot;},{\&quot;name\&quot;:\&quot;requestorHostname\&quot;,\&quot;type\&quot;:[\&quot;string\&quot;,\&quot;null\&quot;]},{\&quot;name\&quot;:\&quot;responderHostname\&quot;,\&quot;type\&quot;:[\&quot;string\&quot;,\&quot;null\&quot;]},{\&quot;name\&quot;:\&quot;events\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;array\&quot;,\&quot;items\&quot;:\&quot;TimestampedEvent\&quot;}},{\&quot;name\&quot;:\&quot;complete\&quot;,\&quot;type\&quot;:\&quot;boolean\&quot;}]}],\&quot;messages\&quot;:{\&quot;getAllSpans\&quot;:{\&quot;request\&quot;:[],\&quot;response\&quot;:{\&quot;type\&quot;:\&quot;array\&quot;,\&quot;items\&quot;:\&quot;Span\&quot;}},\&quot;getSpansInRange\&quot;:{\&quot;request\&quot;:[{\&quot;name\&quot;:\&quot;start\&quot;,\&quot;type\&quot;:\&quot;long\&quot;},{\&quot;name\&quot;:\&quot;end\&quot;,\&quot;type\&quot;:\&quot;long\&quot;}],\&quot;response\&quot;:{\&quot;type\&quot;:\&quot;array\&quot;,\&quot;items\&quot;:\&quot;Span\&quot;}}}}&quot;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Scroll until you find the &quot;doc&quot; string for the &quot;Span&quot; record. I used a fresh checkout of 1.6.0 for this test that did NOT contain my patch.&lt;/p&gt;

&lt;p&gt;I&apos;m sorry that my initial comments weren&apos;t very clear.&lt;/p&gt;</comment>
                            <comment id="13105659" author="cutting" created="Thu, 15 Sep 2011 20:17:00 +0000"  >&lt;p&gt;George: you&apos;re right, there&apos;s a bug in the escaping of schemas included in specific compiler output.  I&apos;ve attached a one-line change that fixes this.  With this, I don&apos;t believe you&apos;ll need to make all the escape-related changes in your patch.&lt;/p&gt;

&lt;p&gt;Should I file a separate issue for this, or would you just like to include this change in your patch?&lt;/p&gt;</comment>
                            <comment id="13106495" author="gffletch" created="Fri, 16 Sep 2011 14:51:42 +0000"  >&lt;p&gt;I&apos;m happy to update my patch to include this simplification.&lt;/p&gt;</comment>
                            <comment id="13106551" author="gffletch" created="Fri, 16 Sep 2011 16:02:19 +0000"  >&lt;p&gt;Simplified JSON string escaping logic (thanks Doug!)&lt;/p&gt;</comment>
                            <comment id="13106554" author="gffletch" created="Fri, 16 Sep 2011 16:02:57 +0000"  >&lt;p&gt;Ok, new patch file (avro-doc-v3.patch) uploaded.&lt;/p&gt;</comment>
                            <comment id="13107000" author="gffletch" created="Sat, 17 Sep 2011 02:10:41 +0000"  >&lt;p&gt;This time with ASF license grant&lt;/p&gt;</comment>
                            <comment id="13108128" author="cutting" created="Mon, 19 Sep 2011 20:45:38 +0000"  >&lt;p&gt;This is looking great.  A few nits:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The changes to output/unicode.avpr were garbled.&lt;/li&gt;
	&lt;li&gt;There were some whitespace/indendation changes in Protocol.java that weren&apos;t needed.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ve attached a new version of a patch that fixes these details.  I&apos;ll commit this tomorrow unless there are objections.&lt;/p&gt;</comment>
                            <comment id="13108861" author="cutting" created="Tue, 20 Sep 2011 17:56:15 +0000"  >&lt;p&gt;I committed this.  Thanks, George!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12495142" name="AVRO-866.patch" size="14487" author="cutting" created="Mon, 19 Sep 2011 20:45:38 +0000"/>
                            <attachment id="12494487" name="avro-doc-v2.patch" size="19199" author="gffletch" created="Wed, 14 Sep 2011 19:11:58 +0000"/>
                            <attachment id="12494900" name="avro-doc-v3.patch" size="14475" author="gffletch" created="Sat, 17 Sep 2011 02:10:41 +0000"/>
                            <attachment id="12494553" name="avroTrace-bug.patch" size="593" author="gffletch" created="Thu, 15 Sep 2011 02:19:21 +0000"/>
                            <attachment id="12494688" name="idl-escapes.patch" size="1405" author="cutting" created="Thu, 15 Sep 2011 20:17:00 +0000"/>
                            <attachment id="12494525" name="newline-in-doc-test.patch" size="1247" author="cutting" created="Wed, 14 Sep 2011 21:16:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 8 Sep 2011 18:07:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>59980</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 18 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e32n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80260</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>IDL parsing updated to support capturing doc strings for both Protocol and Message entities.</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>IDL, Code generation</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-887] ReflectData.findField needs better error message</title>
                <link>https://issues.apache.org/jira/browse/AVRO-887</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;In this method:&lt;br/&gt;
  Field findField(Class c, String name)&lt;br/&gt;
a loop is done over c, replacing it each time with c = c.getSuperClass() and exiting if null.  This means that at the end of the loop c will always be null.  The exception message is then always&lt;br/&gt;
  No field named XXX in null&lt;/p&gt;

&lt;p&gt;The fix is trivial:&lt;/p&gt;

&lt;p&gt;  private static Field findField(Class c, String name) {&lt;br/&gt;
     Class originalClass = c;&lt;br/&gt;
    do {&lt;br/&gt;
      try &lt;/p&gt;
{
        Field f = c.getDeclaredField(name);
        f.setAccessible(true);
        return f;
      }
&lt;p&gt; catch (NoSuchFieldException e) {}&lt;br/&gt;
      c = c.getSuperclass();&lt;br/&gt;
    } while (c != null);&lt;br/&gt;
    throw new AvroRuntimeException(&quot;No field named &quot;&lt;ins&gt;name&lt;/ins&gt;&quot; in: &quot;+originalClass);&lt;br/&gt;
  }&lt;/p&gt;</description>
                <environment></environment>
        <key id="12522348">AVRO-887</key>
            <summary>ReflectData.findField needs better error message</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.svg">Trivial</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="cwilkes">Chris Wilkes</reporter>
                        <labels>
                    </labels>
                <created>Thu, 8 Sep 2011 23:36:21 +0000</created>
                <updated>Tue, 1 Nov 2011 18:36:10 +0000</updated>
                            <resolved>Wed, 21 Sep 2011 20:45:04 +0000</resolved>
                                    <version>1.5.3</version>
                                    <fixVersion>1.6.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                    <timeoriginalestimate seconds="900">0.25h</timeoriginalestimate>
                            <timeestimate seconds="900">0.25h</timeestimate>
                                        <comments>
                            <comment id="13109055" author="cutting" created="Tue, 20 Sep 2011 22:51:27 +0000"  >&lt;p&gt;Here&apos;s a patch that fixes this and includes a test.&lt;/p&gt;</comment>
                            <comment id="13109056" author="cutting" created="Tue, 20 Sep 2011 22:51:49 +0000"  >&lt;p&gt;I&apos;ll commit this tomorrow unless someone objects.&lt;/p&gt;</comment>
                            <comment id="13109863" author="cutting" created="Wed, 21 Sep 2011 20:45:04 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12495285" name="AVRO-887.patch" size="1634" author="cutting" created="Tue, 20 Sep 2011 22:51:27 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 20 Sep 2011 22:51:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>59884</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 18 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e32v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80261</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
