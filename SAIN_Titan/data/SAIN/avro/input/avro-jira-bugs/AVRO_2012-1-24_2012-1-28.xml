<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:16:41 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2012-1-24+AND+created+%3C%3D+2012-1-28+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="11" total="11"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1002] Broken link in the Avro spec</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1002</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The link to the variable-length coding of integers in the Lucene documentation is broken: &lt;a href=&quot;http://lucene.apache.org/java/2_4_0/fileformats.html#VInt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.apache.org/java/2_4_0/fileformats.html#VInt&lt;/a&gt;. &lt;a href=&quot;http://lucene.apache.org/java/3_5_0/fileformats.html#VInt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://lucene.apache.org/java/3_5_0/fileformats.html#VInt&lt;/a&gt; is the most recent working version. They don&apos;t seem to use the &quot;current&quot; symlink convention that we use; perhaps we could suggest that to them?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12539571">AVRO-1002</key>
            <summary>Broken link in the Avro spec</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="hammer">Jeff Hammerbacher</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Jan 2012 06:10:10 +0000</created>
                <updated>Wed, 15 Feb 2012 00:46:30 +0000</updated>
                            <resolved>Tue, 24 Jan 2012 21:35:38 +0000</resolved>
                                                    <fixVersion>1.6.2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13192548" author="cutting" created="Tue, 24 Jan 2012 21:35:38 +0000"  >&lt;p&gt;Thanks for noticing this, Jeff.  I just committed a fix.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 24 Jan 2012 21:35:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>225073</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3rz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80374</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1003] Invalid pkgconfig file when compiling without optional codecs</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1003</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The codecs that were added in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-957&quot; title=&quot;Added Codec Support to Avro-C&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-957&quot;&gt;&lt;del&gt;AVRO-957&lt;/del&gt;&lt;/a&gt; (zlib and lzma) are optional.  However, if you compile the C library with the required libraries being present, you get an invalid pkgconfig file:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;$ cat src/avro-c.pc
Name: avro-c
Description: C library for parsing Avro data
Version: 1.6.2-SNAPSHOT
URL: http://avro.apache.org/
Libs: -L/usr/local/Cellar/avro-c/HEAD/lib -lavro
Cflags: -I/usr/local/Cellar/avro-c/HEAD/include
Requires: zlib @LZMA_PKG@
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(The @LZMA_PKG@ part is a substitution variable that wasn&apos;t substituted.)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12539628">AVRO-1003</key>
            <summary>Invalid pkgconfig file when compiling without optional codecs</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dcreager">Douglas Creager</assignee>
                                    <reporter username="dcreager">Douglas Creager</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Jan 2012 16:08:42 +0000</created>
                <updated>Wed, 15 Feb 2012 00:46:28 +0000</updated>
                            <resolved>Thu, 26 Jan 2012 14:00:15 +0000</resolved>
                                    <version>1.6.1</version>
                                    <fixVersion>1.6.2</fixVersion>
                                    <component>c</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13192239" author="dcreager" created="Tue, 24 Jan 2012 16:10:08 +0000"  >&lt;p&gt;The variables aren&apos;t substituted if they have no values.  So if any of the codec libraries is missing, we set the corresponding variable to &quot;&quot;.&lt;/p&gt;</comment>
                            <comment id="13193846" author="dcreager" created="Thu, 26 Jan 2012 14:00:15 +0000"  >&lt;p&gt;Committed to SVN.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12511681" name="0001-AVRO-1003.-C-Only-include-pkg-config-requirements-fo.patch" size="969" author="dcreager" created="Tue, 24 Jan 2012 16:10:08 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>225130</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3s7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80375</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1004] avropipe displays NUL terminator for string values</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1004</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The avropipe tool displays the NUL terminator for any string values:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;$ avropipe examples/quickstop.db | head -n 7
/	[]
/0	{}
/0/ID	1
/0/First	&quot;Dante\u0000&quot;
/0/Last	&quot;Hicks\u0000&quot;
/0/Phone	&quot;(0)\u0000&quot;
/0/Age	32
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12539629">AVRO-1004</key>
            <summary>avropipe displays NUL terminator for string values</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dcreager">Douglas Creager</assignee>
                                    <reporter username="dcreager">Douglas Creager</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Jan 2012 16:14:31 +0000</created>
                <updated>Wed, 15 Feb 2012 00:46:32 +0000</updated>
                            <resolved>Thu, 26 Jan 2012 14:02:24 +0000</resolved>
                                    <version>1.6.1</version>
                                    <fixVersion>1.6.2</fixVersion>
                                    <component>c</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13192243" author="dcreager" created="Tue, 24 Jan 2012 16:15:22 +0000"  >&lt;p&gt;Here&apos;s a patch.&lt;/p&gt;</comment>
                            <comment id="13193848" author="dcreager" created="Thu, 26 Jan 2012 14:02:24 +0000"  >&lt;p&gt;Committed to SVN.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12511684" name="0001-AVRO-1004.-C-avropipe-Don-t-display-NUL-terminators-.patch" size="850" author="dcreager" created="Tue, 24 Jan 2012 16:15:22 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>225131</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3sf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80376</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1005] Add optional parameter to HttpTransceiver for Proxy</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1005</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description></description>
                <environment></environment>
        <key id="12539672">AVRO-1005</key>
            <summary>Add optional parameter to HttpTransceiver for Proxy</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="craigtlandry">Craig Landry</assignee>
                                    <reporter username="craigtlandry">Craig Landry</reporter>
                        <labels>
                            <label>patch</label>
                    </labels>
                <created>Tue, 24 Jan 2012 21:32:54 +0000</created>
                <updated>Wed, 15 Feb 2012 00:46:24 +0000</updated>
                            <resolved>Tue, 7 Feb 2012 22:41:31 +0000</resolved>
                                    <version>1.6.1</version>
                                    <fixVersion>1.6.2</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13192596" author="cutting" created="Tue, 24 Jan 2012 22:04:01 +0000"  >&lt;p&gt;Here&apos;s a slightly revised patch.&lt;/p&gt;</comment>
                            <comment id="13192597" author="cutting" created="Tue, 24 Jan 2012 22:04:36 +0000"  >&lt;p&gt;Unless there are objections I&apos;ll commit this soon.&lt;/p&gt;</comment>
                            <comment id="13194784" author="craigtlandry" created="Fri, 27 Jan 2012 14:26:26 +0000"  >&lt;p&gt;The revised patch works fine for me, but I think it may change the expected default behavior for others.  &lt;/p&gt;

&lt;p&gt;Currently (avro 1.6.1) if an HttpTranceiver is created with only the url argument (no Proxy provided) the url connection will respect the http.proxyHost system property if set.  The modified patch will set the proxy to the static NO_PROXY in this case though, which will will cause the http.proxyHost property to be ignored.  Users using the HttpTranceiver class with the single-argment constructor and a http.proxyHost system property will find that the property is ignored when previously it was not.&lt;/p&gt;

&lt;p&gt;For backwards compatibility/consistency, it may be better to use the URL class&apos; different constructors as seen in the original patch.&lt;/p&gt;</comment>
                            <comment id="13202887" author="cutting" created="Tue, 7 Feb 2012 22:41:31 +0000"  >&lt;p&gt;I committed the version Craig originally posted.&lt;/p&gt;

&lt;p&gt;Thanks, Craig!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12511743" name="AVRO-1005.patch" size="1426" author="cutting" created="Tue, 24 Jan 2012 22:04:01 +0000"/>
                            <attachment id="12511732" name="optional_proxy_for_url_connection.patch" size="1563" author="craigtlandry" created="Tue, 24 Jan 2012 21:34:13 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 24 Jan 2012 22:04:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>225175</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 50 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3sn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80377</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1006] Fingerprints for Avro Schemas</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1006</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Add function that returns a standardized, 64-bit fingerprint for schemas.  Fingerprints are designed such that the chances of collisions is very, very low.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12539716">AVRO-1006</key>
            <summary>Fingerprints for Avro Schemas</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="raymie">Raymie Stata</assignee>
                                    <reporter username="raymie">Raymie Stata</reporter>
                        <labels>
                            <label>features</label>
                    </labels>
                <created>Wed, 25 Jan 2012 06:41:18 +0000</created>
                <updated>Sat, 21 Jun 2014 13:56:52 +0000</updated>
                            <resolved>Wed, 7 Mar 2012 21:02:00 +0000</resolved>
                                                    <fixVersion>1.7.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>14</watches>
                                                                <comments>
                            <comment id="13192893" author="raymie" created="Wed, 25 Jan 2012 06:45:02 +0000"  >&lt;p&gt;Detailed description of the proposed feature.&lt;/p&gt;</comment>
                            <comment id="13192909" author="raymie" created="Wed, 25 Jan 2012 07:18:01 +0000"  >&lt;p&gt;An &lt;em&gt;Avro schema fingerprint&lt;/em&gt; is a hash of an Avro schema.  Within a collection of even a million schemas, the probability of a collision is still around 0.001%.  Thus, fingerprints can be used in place of schemas.&lt;/p&gt;

&lt;p&gt;One motivating use-case for fingerprints is a pub/sub message bus.  On a pub/sub bus, since multiple writers can publish to the same topic using different schemas, each message must be associated with its schema.  Rather than include the actual schema with every message, one can instead include the fingerprint of the schema, which would be smaller.  When a reader encounters a fingerprint it hasn&apos;t seen before, it can look it up and cache it.  (The attached document describes possible lookup mechanisms.)&lt;/p&gt;

&lt;p&gt;The proposed approach to fingerprinting is pretty straight forward.  First, we convert Avro schemas into a &lt;em&gt;canonical form.&lt;/em&gt;  Two equivalent schemas always have the same canonical form.  Once we have the canonical form, we simply take a 64-bit &quot;Rabin fingerprint&quot; (a CRC) of that text.&lt;/p&gt;</comment>
                            <comment id="13192915" author="raymie" created="Wed, 25 Jan 2012 07:43:48 +0000"  >&lt;p&gt;In implementing canonical forms, we identified some bugs (both spec and impl bugs) that it would be nice to resolve:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The parser assumes that names are defined before they are used, although this is not required by the specification.  We recommend that the spec be changed to agree with the impl (i.e., require that names are defined before they are used).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;When a schema name is redefined, the parser throws an exception, even if the two definitions of the name are the same.  This is contrary to the spec, which says &quot;A schema may only contain multiple definitions of a fullname if the definitions are equivalent.&quot;  We recommend that the spec be changed to agree with the implementation (i.e., disallow multiple definitions of the same name, even if the def&apos;s are the same).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;The parser calls &lt;tt&gt;validateName&lt;/tt&gt; on the symbols of an enumeration, restricting the syntax of enumeration symbols.  The spec does not call for such a restriction.  We recommend that the spec be changed to conform to the implementation (i.e., restrict symbols the same way we restrict names).  This helps in cannonicalization (don&apos;t have to worry about Unicode normalization).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;tt&gt;Schema.validateName&lt;/tt&gt; uses &lt;tt&gt;Character.isLetter&lt;/tt&gt; and &lt;tt&gt;Character.isLetterOrDigit&lt;/tt&gt; to test characters.  These accept all Unicode characters (except supplemental ones).  The Avro spec says that names should be restricted to ASCII letters.  We think this is an implementation bug and should be fixed.  (Again, nice to avoid Unicode normalization.)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;When the parser descends into a named schema, the default namespace in the &lt;tt&gt;names&lt;/tt&gt; variable is stored into the local variable &lt;tt&gt;savedSpace&lt;/tt&gt;, which is restored on exit.  However, if the routine exits abruptly (with an exception), this restoration does not occur.  This is probably a bug, and restoration should be in a finally.  (In &lt;tt&gt;Parser.parse&lt;/tt&gt;, the flag &lt;tt&gt;validateNames&lt;/tt&gt; is restored in a finally clause.)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Before submitting fixes, I&apos;ll file separate JIRAs, but I&apos;d like to get any feedback here first.&lt;/p&gt;</comment>
                            <comment id="13193303" author="spullara" created="Wed, 25 Jan 2012 20:29:11 +0000"  >&lt;p&gt;This would be great. I ended up using the text representation + SHA256 in Avrobase for my schema keys. I would love to see a standard way that worked across languages and no matter how mangled the schema JSON was rendered. On the 0.001% collision rate, that seems high to me - would a 128-bit hash be a better choice?&lt;/p&gt;</comment>
                            <comment id="13193690" author="raymie" created="Thu, 26 Jan 2012 09:32:49 +0000"  >&lt;p&gt;Updated design doc based on feedback:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Fixed typos and clarified some text.&lt;/li&gt;
	&lt;li&gt;Added suggestion that the spec be explicit about case-sensitivity.&lt;/li&gt;
	&lt;li&gt;Most significantly, fixed error in stated probability of collisions, and added a bunch more text around that issue.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13193699" author="raymie" created="Thu, 26 Jan 2012 09:46:29 +0000"  >&lt;p&gt;Sam writes:&lt;blockquote&gt;&lt;p&gt;On the 0.001% collision rate, that seems high to me - would a 128-bit hash be a better choice?&lt;/p&gt;&lt;/blockquote&gt;&lt;/p&gt;

&lt;p&gt;Thanks for pointing this out.  Turns out the 0.001% is a bug in the writeup, the actual probabilities are quite a bit lower: 3E-8 (0.000003%) for a million-item cache, 3E-10 for 100K items, and 3E-12 for 10K items (I&apos;d love to have someone check my math).  Assuming an insertion per minute into a fixed-sized table (ie, random eviction), you&apos;d expect a collision every year with the 1M item cache, every century with 100K items, and every millennia with 10K items.  This seems acceptable, especially since I expect these caches to be closer to 10K items than a million (there&apos;s a bit of a discussion on this point in the updated writeup).  So are you happier now with 64 bits?&lt;/p&gt;

&lt;p&gt;(The doc defines a canonical text for schemas, and fingerprints based that text.  The patch will contain a function for returning the canonical text.  This approach implicitly standardizes how one would take an MD5-or SHA-xxx fingerprint of a schema, but perhaps I can be explicit on this point.)&lt;/p&gt;</comment>
                            <comment id="13193941" author="raymie" created="Thu, 26 Jan 2012 16:25:48 +0000"  >&lt;p&gt;Sigh. My math is wrong. I think things are better than stated, but I need to think about this more. &lt;/p&gt;</comment>
                            <comment id="13194415" author="raymie" created="Fri, 27 Jan 2012 03:52:43 +0000"  >&lt;p&gt;Major change: yet another fix to the text discussing the adequacy of 64-bit fingerprints.  Also a bunch of editorial fixes.&lt;/p&gt;</comment>
                            <comment id="13194420" author="raymie" created="Fri, 27 Jan 2012 03:56:18 +0000"  >&lt;p&gt;I fixed the math bug in the writeup (I misapplied the &quot;birthday probability&quot; where I should&apos;ve applied a much more favorable probability).  The bottom line is 64 bits seem adequate for most use-cases.  For use-cases that want longer fingerprints, the spec now explicitly recommends using MD5 or the SHA-family to the canonical text of a schema.&lt;/p&gt;

&lt;p&gt;I&apos;m happy to continue discussing the overall proposal, but my next step here is to file patches for the &quot;surrounding issues&quot; (e.g., the spec fixes).&lt;/p&gt;</comment>
                            <comment id="13194460" author="spullara" created="Fri, 27 Jan 2012 05:12:46 +0000"  >&lt;p&gt;I think the specification should really separate the canonicalization and the hashing stuff. Enumerating various ways of hashing the result of the canonical form doesn&apos;t really seem necessary since in any of the cases you have listed you could just as easily use a monotonically increasing number for the schema &amp;#8211; as long as your central repository or other schema provider lets you look up the number with the canonical schema text. This was the design I ultimately went with for Avrobase on top of MySQL since it is easy to lookup a row by a value of a column.&lt;/p&gt;</comment>
                            <comment id="13194836" author="raymie" created="Fri, 27 Jan 2012 15:14:54 +0000"  >&lt;p&gt;We believe that, in pub/sub and other scenarios, schema repositories will become a standard part of the Avro infrastructure.  Given that, to promote an ecosystem with interoperable but alternative implementations, we believe that &quot;common&quot; (let&apos;s not call them &quot;standard&quot;) ways to generate good, hash-based fingerprints will be useful.  In particular, while standard, cryptographic hashes are good enough for fingerprints of size greater than 128 bits, we believe that 64-bit hashes represent a very useful point in the size/diversity tradeoff space, and there should be a common way in the Avro ecosystem for generating 64-bit hashes.&lt;/p&gt;

&lt;p&gt;Does this make sense?  If so, I think I&apos;ll re-write the explanation around this line of reasoning, which is indeed closer to our original though process.&lt;/p&gt;

&lt;p&gt;All this being said, your point about schema numbers is a good one, I&apos;ll add a note about that technique on the section about schema repositories.  It seems like the right protocol here is for the &quot;inserter&quot; of a schema to insert the schema and get an identifier back from the repository before using the schema.  Is that how you do it?&lt;/p&gt;</comment>
                            <comment id="13194934" author="spullara" created="Fri, 27 Jan 2012 17:29:51 +0000"  >&lt;p&gt;It seems that the protocol for any system, even one using hashes, would have to follow that same protocol even if the &quot;inserter&quot; also acts as the repository. The only critical thing is that there is some way to generate a unique identifier and store a schema with that as the key that can be looked up by any receiver of the message. Only after that is done can you send a message using that identifier (and expect it to be understood). &lt;/p&gt;

&lt;p&gt;One advantage that using hashes have over my sequence number suggestion is that you can easily shard, federate and merge hash-based repositories, qualities that could be useful in practice. Also, looking up a schema by its canonical text rather than determining its existence in the repository through hash lookup would likely be more efficient.&lt;/p&gt;</comment>
                            <comment id="13203082" author="cutting" created="Wed, 8 Feb 2012 01:07:34 +0000"  >&lt;p&gt;Some notes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Primitive types may have attributes, e.g., 
{&quot;type&quot;:&quot;int&quot;, &quot;java-class&quot;:&quot;java.lang.Short&quot;}
&lt;p&gt;, so only primitives without any attributes may be represented by their name alone.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Attributes within JSON objects are not ordered.  A correct JSON parser need not preserve ordering.  Relying on order-preservation may require some implementations to write their own JSON libraries.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;With multiple Avro implementations, the chance of an inconsistent canonicalization implementation is significant.  Creating an adequate test suite and validating all implementations would require significant effort.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Given the above, I&apos;d be hesitant to build a system that depends on consistent canonical schemas for correct operation.  Folks who build systems that use Avro would thus be wise to design them to gracefully handle inconsistent canonicalization.  For example, Avro&apos;s RPC handshake currently uses a fingerprint-like approach without requiring canonicalization.  Two implementations that represent a schema using the same string will have more efficient handshakes, but implementations that produce different strings for equivalent schemas will still interoperate correctly.  So a standard, recommended canonical form could be useful, but folks should perhaps not assume that every implementation is correct.&lt;/p&gt;

&lt;p&gt;I like the idea of a schema repository.  A related idea I&apos;ve had is to use something like a URL shortener.  Instead of mapping url-&amp;gt;url, it could map url-&amp;gt;schema.  One would register one&apos;s schema with the shortener, then hand out references.  A shortener would, as an optimization, return the same ID for equivalent schemas.  The shortener would only need to rely on only a single canonicalization implementation, its own.&lt;/p&gt;
</comment>
                            <comment id="13203181" author="scott_carey" created="Wed, 8 Feb 2012 02:35:58 +0000"  >&lt;p&gt;More notes:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Schema equivalence has a few variations
	&lt;ul&gt;
		&lt;li&gt;Serialization equivalent &amp;#8211; attribute metadata is irrelevant,  
{&quot;type&quot;:&quot;int&quot;, &quot;java-class&quot;:&quot;java.lang.Short&quot;}
&lt;p&gt; is equal to &lt;/p&gt;
{&quot;int&quot;}
&lt;p&gt;.  Defaults and doc are also irrelevant for this case.&lt;/p&gt;&lt;/li&gt;
		&lt;li&gt;Serialization and metadata equivalence, where the above two are not equivalent.&lt;/li&gt;
		&lt;li&gt;Reversible transformation equivalence, e.g. &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;int&amp;quot;, &amp;quot;string&amp;quot;&amp;#93;&lt;/span&gt; equals &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;string&amp;quot;, &amp;quot;int&amp;#93;&lt;/span&gt;, or records with pure field reordering.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Other schema relationships that are related to equivalence but cannot satisfy associativity and transitivity
	&lt;ul&gt;
		&lt;li&gt;Alias equivalence is not transitive, but is associative.&lt;/li&gt;
		&lt;li&gt;Schema resolution and transformation is often neither transitive or associative.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All three equivalence variations above may be useful for different purposes, especially the first two.  Serialization equivalence is important for long term storage.  Full equivalence with metadata is often needed for internal state.  But we may want to let users specify which optional components are included (attributes, defaults, doc).  Doug&apos;s point about JSON being an unordered format is important and limits using the json string as the fingerprint.&lt;br/&gt;
Perhaps we can complete the Avro Schema for schemas (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-251&quot; title=&quot;add schema for schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-251&quot;&gt;AVRO-251&lt;/a&gt;) which can define field order and equivalence unambiguously and all implementations should be able to support.  The output bytes from the Avro binary serialization of the schema can be used to feed a hash algorithm.&lt;/p&gt;
</comment>
                            <comment id="13203202" author="ewhauser" created="Wed, 8 Feb 2012 02:50:07 +0000"  >&lt;p&gt;I believe LinkedIn has already written a schema service for Avro that there were interested in open sourcing at one point.  Someone with contacts on the Kafka team might want to contact them and see if they are able to do so.&lt;/p&gt;</comment>
                            <comment id="13203219" author="thiru_mg" created="Wed, 8 Feb 2012 03:17:09 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Doug&apos;s point about JSON being an unordered format is important and limits using the json string as the fingerprint.&lt;br/&gt;
Perhaps we can complete the Avro Schema for schemas (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-251&quot; title=&quot;add schema for schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-251&quot;&gt;AVRO-251&lt;/a&gt;) which can define field order and equivalence unambiguously and all implementations should be able to support. The output bytes from the Avro binary serialization of the schema can be used to feed a hash algorithm.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;While representing the canonical schema as Avro data reduces it (compared to Json representation) it does not eliminate ambiguity. Non-empty arrays (and maps) can be represented in Avro in more than one way.&lt;/p&gt;

&lt;p&gt;Doug&apos;s observation implies that we cannot use a third-party Json library to generate the canonical representation. For fingerprinting to work, we need some canonical representation (which by definition is not ambiguous). Either we restrict (by removing ambiguities) an existing standard or invent a new one.&lt;/p&gt;

&lt;p&gt;I think Raymie&apos;s canonicalization rules are simple and given that we&apos;ll have only US-ASCII characters in the canonical representation, writing a JSON generator in any language will not be hard. And it will be parsable (with no new code) and human-readable.&lt;/p&gt;</comment>
                            <comment id="13203230" author="scott_carey" created="Wed, 8 Feb 2012 03:36:28 +0000"  >&lt;blockquote&gt;
&lt;p&gt;    The parser assumes that names are defined before they are used, although this is not required by the specification. We recommend that the spec be changed to agree with the impl (i.e., require that names are defined before they are used).&lt;/p&gt;&lt;/blockquote&gt; 
&lt;p&gt;I think we can fix the parser.  I have been thinking about how to implement Schema/Field/Protocol as immutable data structures and a requirement for that is to prevent cyclic references in the Schema objects, which requires storing name references and a name based schema registry &amp;#8211; the same tools needed for such a parser.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;    When a schema name is redefined, the parser throws an exception, even if the two definitions of the name are the same. This is contrary to the spec, which says &quot;A schema may only contain multiple definitions of a fullname if the definitions are equivalent.&quot; We recommend that the spec be changed to agree with the implementation (i.e., disallow multiple definitions of the same name, even if the def&apos;s are the same).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this is a decent spec change, especiallyl since &quot;if the definitions are equivalent&quot; is insufficiently defined currently &amp;#8211; equivalent at what level?  Including all metadata, even &apos;doc&apos;?  It is probably best if a single schema definition does not re-define any named schema elements.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;    The parser calls validateName on the symbols of an enumeration, restricting the syntax of enumeration symbols. The spec does not call for such a restriction. We recommend that the spec be changed to conform to the implementation (i.e., restrict symbols the same way we restrict names). This helps in cannonicalization (don&apos;t have to worry about Unicode normalization).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I wonder how various language implementations deal with this currently, it would not surprise me if more than Java already have an implicit restriction beyond the spec.  We should change the spec to restrict symbols to the same restriction as field names.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;    Schema.validateName uses Character.isLetter and Character.isLetterOrDigit to test characters. These accept all Unicode characters (except supplemental ones). The Avro spec says that names should be restricted to ASCII letters. We think this is an implementation bug and should be fixed. (Again, nice to avoid Unicode normalization.)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree.&lt;/p&gt;

&lt;p&gt;From the spec:&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;&lt;a name=&quot;Names&quot;&gt;&lt;/a&gt;Names&lt;/h3&gt;
&lt;p&gt;Record, enums and fixed are named types. Each has a fullname that is composed of two parts; a name and a namespace. Equality of names is defined on the fullname.&lt;/p&gt;

&lt;p&gt;The name portion of a fullname, record field names, and enum symbols must:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;start with &lt;span class=&quot;error&quot;&gt;&amp;#91;A-Za-z_&amp;#93;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;subsequently contain only &lt;span class=&quot;error&quot;&gt;&amp;#91;A-Za-z0-9_&amp;#93;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A namespace is a dot-separated sequence of such names.&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;    When the parser descends into a named schema, the default namespace in the names variable is stored into the local variable savedSpace, which is restored on exit. However, if the routine exits abruptly (with an exception), this restoration does not occur. This is probably a bug, and restoration should be in a finally. (In Parser.parse, the flag validateNames is restored in a finally clause.)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds like a bug, a patch containing a reproducible test case that fails and a fix for another ticket would be great!&lt;/p&gt;</comment>
                            <comment id="13203237" author="scott_carey" created="Wed, 8 Feb 2012 03:43:05 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I think we can fix the parser. I have been thinking about how to implement Schema/Field/Protocol as immutable data structures and a requirement for that is to prevent cyclic references in the Schema objects, which requires storing name references and a name based schema registry &#8211; the same tools needed for such a parser.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Although we could make the parser work with use-before-define, it is probably a good spec simplification to avoid it that will be easier to build and test across languages. &lt;/p&gt;</comment>
                            <comment id="13203256" author="scott_carey" created="Wed, 8 Feb 2012 04:13:38 +0000"  >&lt;blockquote&gt;
&lt;p&gt;While representing the canonical schema as Avro data reduces it (compared to Json representation) it does not eliminate ambiguity. Non-empty arrays (and maps) can be represented in Avro in more than one way.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can you provide an example?  I am having trouble thinking of an example that doesn&apos;t fall under the other disambiguations in the document, e.g. &lt;/p&gt;
{&quot;type&quot;:&quot;int&quot;}
&lt;p&gt; == &quot;int&quot;.  Can we have an avro serialized canonical form without the ambiguity?   The document describes two forms of normailzation: the Avro normalization, and the JSON normalization.  I don&apos;t think that something that has undergone the Avro normalization can have ambiguous array definition.  If so that would break both the JSON string fingerprint case as well as the avro binary fingerprint.  I am suggesting we avoid the JSON normalization and its dependency on JSON serializers that support ordering by using an avro binary representation for the input to a hash.  Both cases require the Avro normalization component.&lt;/p&gt;

&lt;p&gt;It might be useful to ALWAYS store schemas in memory in normalized form &amp;#8211; with attributes and doc represented and attached separately.  The PRIMITIVES, FULLNAME, and MINIMIZE optimizatoins can always be applied, the STRIP optimization can be trivial by using a shared canonical schema.  For example, a Schema can have a CanonicalSchema member variable, plus attributes and doc.  Two Schema.Fixed that only vary on their doc or attributes would share thee same CanonicalSchema.  Is it ever useful to know that two schemas differ only due to FULLNAME, MINIMIZE, or PRIMITIVE expansion?&lt;/p&gt;</comment>
                            <comment id="13203274" author="thiru_mg" created="Wed, 8 Feb 2012 04:57:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;Can you provide an example?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;A three string array can be encoded in Avro binary as:&lt;br/&gt;
&lt;tt&gt;&amp;lt;1&amp;gt;&amp;lt;string1&amp;gt;&amp;lt;1&amp;gt;&amp;lt;string2&amp;gt;&amp;lt;1&amp;gt;&amp;lt;string3&amp;gt;&amp;lt;0&amp;gt;&lt;/tt&gt; or &lt;tt&gt;&amp;lt;3&amp;gt;&amp;lt;string1&amp;gt;&amp;lt;string2&amp;gt;&amp;lt;string3&amp;gt;&amp;lt;0&amp;gt;&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;So, when you and encode the fields of a record as an array, the binary version of the schema can have more than one valid representations which are equivalent but not not equal. The fingerprints could thus be different.&lt;/p&gt;</comment>
                            <comment id="13203284" author="scott_carey" created="Wed, 8 Feb 2012 05:10:59 +0000"  >&lt;blockquote&gt;
&lt;p&gt;A three string array can be encoded in Avro binary as:&lt;br/&gt;
&amp;lt;1&amp;gt;&amp;lt;string1&amp;gt;&amp;lt;1&amp;gt;&amp;lt;string2&amp;gt;&amp;lt;1&amp;gt;&amp;lt;string3&amp;gt;&amp;lt;0&amp;gt; or &amp;lt;3&amp;gt;&amp;lt;string1&amp;gt;&amp;lt;string2&amp;gt;&amp;lt;string3&amp;gt;&amp;lt;0&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Oh, I see.  You mean that the binary representation of an avro array has multiple forms. That is an issue.  We could require that the single block form for arrays/maps is used.  I believe this is easier than implementing and testing a conforming json stringification in every language. &lt;/p&gt;</comment>
                            <comment id="13203304" author="raymie" created="Wed, 8 Feb 2012 05:59:57 +0000"  >&lt;p&gt;Separating out the specification issues raised above.&lt;/p&gt;</comment>
                            <comment id="13203426" author="raymie" created="Wed, 8 Feb 2012 09:47:54 +0000"  >&lt;p&gt;A clarification, which addresses issues raised by Doug and Scott.  The need I&apos;m solving for is to capture that part of a writer&apos;s schema which a reader needs to read data.  This is a relatively straight-forward notion of &quot;equivalence,&quot; and a very useful one.  And the good news is that this notion of equivalence allows us to ignore many aspects of schemas (e.g., attributes, aliases, default values).&lt;/p&gt;

&lt;p&gt;I&apos;ve attached code that generates the canonical string as defined in the design document.  The attached code is untested, but I included it so folks have a rough idea of what it would look like.  Leaving aside my APL-ish style, I don&apos;t think it&apos;s terribly long or complicated.&lt;/p&gt;</comment>
                            <comment id="13203664" author="raymie" created="Wed, 8 Feb 2012 15:25:47 +0000"  >&lt;p&gt;Having slept on it, I don&apos;t think that the Schema class is a good place for this code. Rather, I&apos;ll create a o.a.avro.util.SchemaFP class, which will contain a static method to canonicalize schemas (ie, the code in the current patch), and will also contain static methods for generating fingerprints of various lengths (64-bit CRC fingerprints, 128-bit MD5 fingerprints, etc). I&apos;ll try to post something over the next few days. But in the meantime, please continue commenting as if that&apos;s the plan of record.&lt;/p&gt;</comment>
                            <comment id="13214375" author="raymie" created="Thu, 23 Feb 2012 06:35:07 +0000"  >&lt;p&gt;I&apos;ve uploaded my patch.  I&apos;ve put the canonicalization and fingerprinting code in a new class, util.SchemaFP, rather than extending the already too-long Schema class.&lt;/p&gt;</comment>
                            <comment id="13214932" author="cutting" created="Thu, 23 Feb 2012 18:54:22 +0000"  >&lt;p&gt;This looks generally good.  A few nits:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;In class and method names, should we abbreviate &apos;fp&apos; or spell out &apos;fingerprint&apos;?  FP means &quot;floating point&quot; to my eye.&lt;/li&gt;
	&lt;li&gt;Might we instead put this in org.apache.avro.SchemaFingerprint, rather than in util?  Right now things in the util package depend only on the JDK, not on other parts of Avro.&lt;/li&gt;
	&lt;li&gt;Public methods and classes need javadoc comments.&lt;/li&gt;
	&lt;li&gt;The changes to the spec are not correctly processed by Forrest 0.8 for me.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13215480" author="raymie" created="Fri, 24 Feb 2012 08:10:07 +0000"  >&lt;p&gt;&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;fp&amp;#39; or &amp;#39;fingerprint&amp;#39;&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;I renamed classes to &quot;fingerprint,&quot; but left methods &quot;fp.&quot;  SchemaFingerprint.fingerprint seems unnecessarily long...&lt;/p&gt;

&lt;p&gt;&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;put in o.a.avro&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Good idea &amp;#8211; I moved it.&lt;/p&gt;

&lt;p&gt;&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;missing javadoc&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Added&lt;/p&gt;

&lt;p&gt;&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;breaks Forrest&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;I can&apos;t get Forrest running on my machine &amp;#8211; can you send me the errors?  (Or maybe just fix them?)&lt;/p&gt;</comment>
                            <comment id="13216629" author="gsanderson" created="Sun, 26 Feb 2012 04:48:23 +0000"  >&lt;p&gt;&quot;A clarification, which addresses issues raised by Doug and Scott. The need I&apos;m solving for is to capture that part of a writer&apos;s schema which a reader needs to read data. This is a relatively straight-forward notion of &quot;equivalence,&quot; and a very useful one. And the good news is that this notion of equivalence allows us to ignore many aspects of schemas (e.g., attributes, aliases, default values).&quot;&lt;/p&gt;

&lt;p&gt;Perhaps this should be made clearer (when naming the class/method), I came across this feature because of a desire to hash/fingerprint avro schemas for messaging, and was seeing if there was already a util to do it. In my case I potentially might use custom properties on fields in the schema to indicate they are being transmitted using a certain named dictionary and thus in my case they affect the ability to interpret the message, so I&apos;d rather stick with something that I can reliably use on the producer end to encode the entire state of the schema, rather than a particular well defined sub-set of the schema.&lt;/p&gt;

&lt;p&gt;Note that (thanks to someone making Props a LinkedHashMap since the code base I&apos;m using) and the particular implementation of Jackson, schema.toString() in the Java impl appears like it will be fine for my purposes, and if another language implementation happens to produce a different hash value I&apos;m cool with that, as long as it is relatively stable; for example: &lt;/p&gt;

&lt;p&gt;SchemaInstance1 &lt;del&gt;toJson&lt;/del&gt;&amp;gt; string x&lt;br/&gt;
string x &lt;del&gt;fromJson&lt;/del&gt;&amp;gt; SchemInstance2 -&amp;gt; toJson string y&lt;br/&gt;
string x and string y being equal seems a reasonable enough guarantee for me&lt;/p&gt;</comment>
                            <comment id="13216630" author="gsanderson" created="Sun, 26 Feb 2012 04:53:39 +0000"  >&lt;p&gt;Note, more succinctly, given that I and other people in this issue have been discussing or inferring schema repositories, I think maybe it makes sense in general or at least as a separate issue to deal with a digest of the schema in its entirety, even if that results in a number of hash values mapping to equivalent schemas. Generally I think the use cases don&apos;t involve insane quantities of schemas in the first place (although I won&apos;t say that for certain, because the ability to define an anonymous schema on the fly for certain applications is rather appealing)&lt;/p&gt;</comment>
                            <comment id="13219815" author="raymie" created="Thu, 1 Mar 2012 05:20:27 +0000"  >&lt;p&gt;On the one hand, the &quot;Parsing Canonical Form&quot; as I&apos;ve defined it has important uses and I think should be part of the Avro system.&lt;/p&gt;

&lt;p&gt;On the other hand, it&apos;s a good point that there may be additional canonical forms that satisfy different needs in the future.  The class- and method-names of the previous patch implicitly assumed a single canonical form.  I&apos;ve modified the patch with new names that will better support the addition of new canonical forms in the future.  (I think I also fixed the Forrest problems, although I haven&apos;t been able to verify.)&lt;/p&gt;</comment>
                            <comment id="13219859" author="gsanderson" created="Thu, 1 Mar 2012 06:58:25 +0000"  >&lt;p&gt;Raymie, thank you; I think we&apos;re in agreement. However the latest patch has class SchemaNormalization with static toParsingForm and static build methods&lt;/p&gt;

&lt;p&gt;the other static methods reference these specific versions directly.&lt;/p&gt;

&lt;p&gt;Perhaps it would be best (since the guts of the parsing form are in the current build method) to leave SchemaNormalization as a class of static methods, but pass a Normalizer instance to most of the static method... in this case the current build method would basically be the guts of the ParsingFormNormalizer class&lt;/p&gt;

&lt;p&gt;Note the common Normalizer instances would likely be sensibly named singletons in the SchemaNormalizer class&lt;/p&gt;</comment>
                            <comment id="13221342" author="cutting" created="Fri, 2 Mar 2012 23:15:54 +0000"  >&lt;p&gt;Raymie&amp;gt; SchemaFingerprint.fingerprint seems unnecessarily long...&lt;/p&gt;

&lt;p&gt;Now this becomes SchemaNormalization.fp(SchemaNormalization.toParsingForm(schema)).  The &apos;fp&apos; might better be spelled out as &apos;fingerprint&apos;.  Also a utility method like SchemaNormalization.parsingFingerprint(schema) might be useful.&lt;/p&gt;

&lt;p&gt;Graham&amp;gt; pass a Normalizer instance...&lt;/p&gt;

&lt;p&gt;With the latest API, someone can already call SchemaNormalization.fingerprint() with a differently normalized schema, so I don&apos;t see the need for this.  As we add more normalizers to Avro we can add new methods, so I&apos;m not (yet) seeing the advantage of adding a Normalization interface.&lt;/p&gt;</comment>
                            <comment id="13221365" author="raymie" created="Sat, 3 Mar 2012 00:05:35 +0000"  >&lt;p&gt;Renamed methods as suggested by Doug (convenience method was already in there).&lt;/p&gt;</comment>
                            <comment id="13221386" author="cutting" created="Sat, 3 Mar 2012 00:29:34 +0000"  >&lt;p&gt;A few minor nits:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the &apos;href&apos; in one of the documentation links is missing its &apos;h&apos;&lt;/li&gt;
	&lt;li&gt;the WHITESPACE comment should perhaps read, &quot;Eliminate all whitespace in JSON outside of string literals.&quot;&lt;/li&gt;
	&lt;li&gt;we might define a nested FingerprintAlgorithm Enum for the implemented fingerprint algorithm names.&lt;/li&gt;
	&lt;li&gt;SchemaNormalization should probably have a private constructor, e.g., &apos;private SchemaNormalization() {}&apos;&lt;/li&gt;
	&lt;li&gt;the #fingerprint link in the class documentation is broken.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Otherwise I&apos;m +1 and look forward to committing this early next week unless there are objections.&lt;/p&gt;</comment>
                            <comment id="13221388" author="raymie" created="Sat, 3 Mar 2012 00:33:47 +0000"  >&lt;p&gt;The string passed to the fingerprint method is in turn passed through to MessageDigest.getInstance.  Using an enum here would prevent folks from accessing digest algo&apos;s in the underlying library.  I suggest leaving that as-is.&lt;/p&gt;

&lt;p&gt;Otherwise I&apos;ll fix the rest of these issues.&lt;/p&gt;</comment>
                            <comment id="13221396" author="dkaminsky" created="Sat, 3 Mar 2012 00:50:10 +0000"  >&lt;p&gt;Is cross language support in scope for this feature? The trickiest part is getting the output to match between implementations. That&apos;s where I see most of the value in this being incorporated into the core framework instead of implemented by individual users (as we do now)&lt;/p&gt;</comment>
                            <comment id="13221403" author="raymie" created="Sat, 3 Mar 2012 01:05:48 +0000"  >&lt;p&gt;Yes, this is meant to be a cross-language feature, and the definition of &quot;parsing normal form&quot; is in the Avro spec as a result.&lt;/p&gt;

&lt;p&gt;To aid in assuring interoperability, this patch includes file-based test data that should be used across languages.  Test inputs and outputs can be found in share/test/data/schema-tests.txt&lt;/p&gt;</comment>
                            <comment id="13223428" author="cutting" created="Tue, 6 Mar 2012 17:06:51 +0000"  >&lt;p&gt;Patch looks good. +1 I&apos;ll commit this unless there are objections.&lt;/p&gt;</comment>
                            <comment id="13223464" author="thiru_mg" created="Tue, 6 Mar 2012 17:46:08 +0000"  >&lt;p&gt;+1 Looks good to me.&lt;/p&gt;</comment>
                            <comment id="13224704" author="cutting" created="Wed, 7 Mar 2012 21:02:01 +0000"  >&lt;p&gt;I just committed this.  Thanks, Raymie!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12443053">AVRO-251</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10001">
                    <name>dependent</name>
                                            <outwardlinks description="depends upon">
                                        <issuelink>
            <issuekey id="12541753">AVRO-1021</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12541755">AVRO-1022</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12513781" name="AVRO-1006-prelim.patch" size="2505" author="raymie" created="Wed, 8 Feb 2012 08:34:57 +0000"/>
                            <attachment id="12516910" name="AVRO-1006.patch" size="61004" author="raymie" created="Sat, 3 Mar 2012 00:37:44 +0000"/>
                            <attachment id="12516905" name="AVRO-1006.patch" size="60928" author="raymie" created="Sat, 3 Mar 2012 00:05:35 +0000"/>
                            <attachment id="12516646" name="AVRO-1006.patch" size="60800" author="raymie" created="Thu, 1 Mar 2012 05:11:20 +0000"/>
                            <attachment id="12515903" name="AVRO-1006.patch" size="59944" author="raymie" created="Fri, 24 Feb 2012 08:08:14 +0000"/>
                            <attachment id="12515715" name="AVRO-1006.patch" size="59871" author="raymie" created="Thu, 23 Feb 2012 06:31:05 +0000"/>
                            <attachment id="12512073" name="schema-fingerprinting.html" size="32803" author="raymie" created="Fri, 27 Jan 2012 03:52:43 +0000"/>
                            <attachment id="12511966" name="schema-fingerprinting.html" size="32158" author="raymie" created="Thu, 26 Jan 2012 09:32:49 +0000"/>
                            <attachment id="12511807" name="schema-fingerprinting.html" size="30524" author="raymie" created="Wed, 25 Jan 2012 06:45:02 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 25 Jan 2012 20:29:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>225219</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 46 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0a4gf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>56995</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1007] Insufficient validation in generated specific record builder implementations</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1007</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The are two main problems with the generated build() method in specific record builders:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;For non-primitive types, if there is no default value and the user does not set the value, build() will execute successfully without throwing an exception
	&lt;ul&gt;
		&lt;li&gt;Instead, an AvroRuntimeException should be thrown with an exception message indicating the name of the required field that was not set&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;For primitive types, if there is no default value and the user does not set the value, an AvroRuntimeException is thrown with the &apos;cause&apos; set to a NullPointerException, which is not very helpful
	&lt;ul&gt;
		&lt;li&gt;The NPE comes from attempting to set the primitive field to the result of defaultValue(), which is null&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12539732">AVRO-1007</key>
            <summary>Insufficient validation in generated specific record builder implementations</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jbaldassari">James Baldassari</assignee>
                                    <reporter username="jbaldassari">James Baldassari</reporter>
                        <labels>
                            <label>java</label>
                    </labels>
                <created>Wed, 25 Jan 2012 09:14:48 +0000</created>
                <updated>Wed, 15 Feb 2012 00:46:27 +0000</updated>
                            <resolved>Thu, 9 Feb 2012 00:16:14 +0000</resolved>
                                    <version>1.6.1</version>
                                    <fixVersion>1.6.2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13192950" author="jbaldassari" created="Wed, 25 Jan 2012 09:16:45 +0000"  >&lt;p&gt;Here&apos;s a patch for record.vm along with some new test cases in TestSpecificRecordBuilder.&lt;/p&gt;</comment>
                            <comment id="13192977" author="jbaldassari" created="Wed, 25 Jan 2012 10:46:36 +0000"  >&lt;p&gt;Updated the patch to fix unit test failures in TestSpecificErrorBuilder and TestSpecificCompilerTool&lt;/p&gt;</comment>
                            <comment id="13202043" author="scott_carey" created="Tue, 7 Feb 2012 03:19:14 +0000"  >&lt;p&gt;This looks good.  Do we want to make this sort of change in 1.6.x?  Users who have relied upon the builder API to create objects that are invalid and later set them to be valid will break.  However, I don&apos;t think there are very many users of the builder API yet and we could better javadoc the behavior of build() to indicate the conditions that it will succeed and fail.&lt;/p&gt;</comment>
                            <comment id="13202046" author="scott_carey" created="Tue, 7 Feb 2012 03:23:33 +0000"  >&lt;p&gt;This has a patch to review.  Should this be fixed for 1.6.2, or only 1.7.0 ?&lt;/p&gt;</comment>
                            <comment id="13202077" author="jbaldassari" created="Tue, 7 Feb 2012 04:56:05 +0000"  >&lt;p&gt;I just realized that this issue also affects the generic builder.  Here&apos;s a third iteration of the patch (including new unit tests) that also improves validation in the generic builder&lt;/p&gt;</comment>
                            <comment id="13202078" author="jbaldassari" created="Tue, 7 Feb 2012 04:58:04 +0000"  >&lt;p&gt;These changes require regenerating/recompiling the specific record classes.  However, all of these changes should be backwards-compatible with 1.6.  So if this goes out in 1.6.2 and a user doesn&apos;t regenerate the specific records, everything should still work.&lt;/p&gt;</comment>
                            <comment id="13203822" author="scott_carey" created="Wed, 8 Feb 2012 18:31:52 +0000"  >&lt;p&gt;This patch (v4) rebases the (v3) version to apply clean to trunk @rev 1242036&lt;/p&gt;

&lt;p&gt;It works and passes tests with the change, and tests fail without the change.&lt;/p&gt;

&lt;p&gt;+1 &lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="13203839" author="cutting" created="Wed, 8 Feb 2012 18:51:42 +0000"  >&lt;p&gt;Seems like we&apos;re generating a lot of code that looks very similar.  Let me see if I can simplify this...&lt;/p&gt;</comment>
                            <comment id="13203849" author="cutting" created="Wed, 8 Feb 2012 19:00:44 +0000"  >&lt;p&gt;Here&apos;s a version that just changes getDefault() to throw an exception when there&apos;s no default value and the field&apos;s type is not null.  This is equivalent to the prior patch but with less generated code.&lt;/p&gt;</comment>
                            <comment id="13203865" author="cutting" created="Wed, 8 Feb 2012 19:20:41 +0000"  >&lt;p&gt;Here&apos;s a new version that also handles unions with null and adds a test case for that.&lt;/p&gt;</comment>
                            <comment id="13203869" author="scott_carey" created="Wed, 8 Feb 2012 19:22:51 +0000"  >&lt;p&gt;+1 to Doug&apos;s last patch.  Tests fail without the one line change in RecordBuilderBase, and succeed with it.&lt;/p&gt;</comment>
                            <comment id="13203873" author="scott_carey" created="Wed, 8 Feb 2012 19:24:41 +0000"  >&lt;p&gt;Race condition:  My last +1 was to the version prior to the union handling.  Looking at the new one now.&lt;/p&gt;</comment>
                            <comment id="13203883" author="scott_carey" created="Wed, 8 Feb 2012 19:34:10 +0000"  >&lt;p&gt;Should this work if any of the union branches are null, not just the first branch?  Although the spec mentions that a union default applies to the first branch, there seems to be an implicit exception for null in the Java implementation.  The following has always worked:&lt;/p&gt;

&lt;p&gt;{&quot;type&quot;:&quot;record&quot;, &quot;name&quot;:&quot;Rec&quot;, &quot;fields&quot;:[&lt;/p&gt;
{&quot;name&quot;:&quot;f&quot;, &quot;type&quot;:[&quot;string&quot;, &quot;null&quot;], &quot;default&quot;:null}
&lt;p&gt;]}&lt;/p&gt;

&lt;p&gt;The BuilderAPI does not need to hold to the spec however, and if any branch is null, an unset field is ok IMO.&lt;/p&gt;</comment>
                            <comment id="13203889" author="scott_carey" created="Wed, 8 Feb 2012 19:37:40 +0000"  >&lt;p&gt;Slight clarification:&lt;/p&gt;

&lt;p&gt;The schema above has worked for me in the past, but I am not sure if it has &lt;em&gt;always&lt;/em&gt; worked &amp;#8211; that was too strong of a statement.&lt;/p&gt;</comment>
                            <comment id="13203928" author="cutting" created="Wed, 8 Feb 2012 20:14:16 +0000"  >&lt;p&gt;According to the spec, that schema is malformed.  The default value of a union should always be interpreted as the first type in the union.&lt;/p&gt;

&lt;p&gt;I don&apos;t think this schema currently works when reading records that lack the field &quot;f&quot;.  See line 348 of ResovlingGrammarGenerator, where the default value is encoded using the first type in the union.&lt;/p&gt;

&lt;p&gt;I suppose we could change the spec to permit a null default value if any element of the union is null, but I don&apos;t see why we should.  It makes the spec more complex and doesn&apos;t provide any additional expressive power.&lt;/p&gt;

&lt;p&gt;This patch would make the builder API enforce the spec, consistent with ResolvingDecoder.&lt;/p&gt;</comment>
                            <comment id="13203991" author="scott_carey" created="Wed, 8 Feb 2012 21:14:24 +0000"  >&lt;p&gt;I am not sure I see how this makes the Builder API respect the spec.  Does it allow the following?&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;{&quot;type&quot;:&quot;record&quot;, &quot;name&quot;:&quot;Person&quot;, &quot;fields&quot;:[
  {&quot;name&quot;:&quot;address&quot;, &quot;type&quot;: [&quot;null&quot;, &quot;string&quot;]}
]}

Person.newBuilder().build(); // should error, address has no explicit default

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;?  &lt;br/&gt;
If so, to adhere to the spec that should throw an error since address was not set and has no specified default.&lt;/p&gt;

&lt;p&gt;Or, if the above is allowed, it is consistent to allow it regardless of the order in the union.  Either we enforce that all fields without a specified default must be set, or allow for nullable fields to build without being set.  Half way in between seems inconsistent.  In short, either we interpret an unset field as an unset field that is only valid if there is a default, or we interpret it as a null, which is valid for null schemas or unions with any branch null.&lt;/p&gt;


&lt;p&gt;A related case is below:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;{&quot;type&quot;:&quot;record&quot;, &quot;name&quot;:&quot;Nothing&quot;, &quot;fields&quot;:[
  {&quot;name&quot;:&quot;blank&quot;, &quot;type&quot;: &quot;null&quot;}
]}

Nothing.newBuilder().build(); // should error, blank not set and has no explicit default

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


</comment>
                            <comment id="13204021" author="scott_carey" created="Wed, 8 Feb 2012 21:37:00 +0000"  >&lt;p&gt;With this patch, the below tests are not consistent.  IMO these should all pass, or all fail.  No record has a default, so if any of these were missing  during schema resolution it would fail.  If we want the builder API to behave similar to schema resolution all should fail.  If we want an unset field to behave as if it were set to null, then all should pass.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  Schema rec = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Parser().parse(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;, \&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Nothing\&lt;span class=&quot;code-quote&quot;&gt;&quot;, \&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[&quot;&lt;/span&gt; +
      &lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;blank\&lt;span class=&quot;code-quote&quot;&gt;&quot;, \&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;: \&quot;&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}&quot;&lt;/span&gt;);
  Schema unionSchema = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Parser().parse(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;, \&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Person\&lt;span class=&quot;code-quote&quot;&gt;&quot;, \&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[&quot;&lt;/span&gt; +
  		&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;address\&lt;span class=&quot;code-quote&quot;&gt;&quot;, \&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;: [\&quot;&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;, \&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;]}]}&quot;&lt;/span&gt;);
  Schema unionSchema2 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Parser().parse(&lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;, \&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Person\&lt;span class=&quot;code-quote&quot;&gt;&quot;, \&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[&quot;&lt;/span&gt; +
      &lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;address\&lt;span class=&quot;code-quote&quot;&gt;&quot;, \&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;: [\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;]}]}&quot;&lt;/span&gt;);
  
  @Test
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void buildNoFieldSet() {
    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericRecordBuilder(rec).build();
  }
  
  @Test
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void buildNoFieldSetUnion() {
    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericRecordBuilder(unionSchema).build();
  }
  
  @Test
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void buildNoFieldSetUnion2() {
    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericRecordBuilder(unionSchema2).build();
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13204030" author="cutting" created="Wed, 8 Feb 2012 21:49:40 +0000"  >&lt;p&gt;Good point.  It fixes builder to be consistent with ResolvingDecoder and the spec in using the first type of the union for defaults, but ot does not fix the issue you mention aove, where no default is specified yet a null is the first type in the union.&lt;/p&gt;

&lt;p&gt;ResolvingDecoder does currently implement this correctly, failing if no default value is specified in the schema even if the schema is a union with null as its first value.&lt;/p&gt;

&lt;p&gt;Here&apos;s a patch that fixes the builder API to conform to the spec in this case too.&lt;/p&gt;

&lt;p&gt;There&apos;s a separate question about whether we should change the spec so that the default value for default values is not unspecified but null.  That would permit folks to use schemas like the one you have above.  It would require some minor changes to ResolvingDecoder and to this patch.&lt;/p&gt;</comment>
                            <comment id="13204120" author="scott_carey" created="Wed, 8 Feb 2012 23:46:14 +0000"  >&lt;p&gt;This approach works for me and the code is clear.&lt;/p&gt;

&lt;p&gt;Minor nit we should fix at the same time: RecordBuilderBase.validate() has incorrect javadoc, it says it throws NullPointerException but it throws AvroRuntimeException.&lt;/p&gt;

&lt;p&gt;However, there is a new test failure in TestSpecificRecordBuilder.testInterop() now that we are more strict and a null field without a default must be set.&lt;/p&gt;</comment>
                            <comment id="13204141" author="cutting" created="Thu, 9 Feb 2012 00:16:14 +0000"  >&lt;p&gt;I fixed RecordBuilderBase and TestSpecificRecordBuilder as suggested and committed this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12511823" name="AVRO-1007-v2.patch" size="7681" author="jbaldassari" created="Wed, 25 Jan 2012 10:46:36 +0000"/>
                            <attachment id="12513572" name="AVRO-1007-v3.patch" size="10854" author="jbaldassari" created="Tue, 7 Feb 2012 04:56:04 +0000"/>
                            <attachment id="12513840" name="AVRO-1007-v4.patch" size="10853" author="scott_carey" created="Wed, 8 Feb 2012 18:31:52 +0000"/>
                            <attachment id="12513868" name="AVRO-1007.patch" size="6864" author="cutting" created="Wed, 8 Feb 2012 21:49:40 +0000"/>
                            <attachment id="12513846" name="AVRO-1007.patch" size="6603" author="cutting" created="Wed, 8 Feb 2012 19:20:41 +0000"/>
                            <attachment id="12513844" name="AVRO-1007.patch" size="5621" author="cutting" created="Wed, 8 Feb 2012 19:00:44 +0000"/>
                            <attachment id="12511818" name="AVRO-1007.patch" size="3553" author="jbaldassari" created="Wed, 25 Jan 2012 09:16:45 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Feb 2012 03:19:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>225235</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 50 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3sv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80378</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1008] Allow IPC clients to perform the IPC handshake before the first RPC is invoked</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1008</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently, the first RPC must complete before any subsequent RPCs may be invoked using the same Transceiver instance.  The reason for this behavior is that the IPC client-server handshake must be performed before any requests can be exchanged.  So while the first RPC is being invoked, all other threads using the same Transceiver instance will block.  The goal of this enhancement is to allow clients to perform a handshake with the server &lt;em&gt;before&lt;/em&gt; any RPCs are invoked to avoid blocking any threads once the Transceiver is put into service.&lt;/p&gt;

&lt;p&gt;I have a patch for review that I think will enable clients to perform the handshake before the first RPC is sent.  The changes consist of:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Modification to the Responder to handle a request that contains only a handshake (without an RPC)&lt;/li&gt;
	&lt;li&gt;Addition of overridden SpecificRequestor.getClient(...) methods that take an boolean indicating whether the handshake should be performed immediately upon initialization of the Requestor&lt;/li&gt;
	&lt;li&gt;Unit test which is essentially the same as the test I wrote for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1001&quot; title=&quot;Adding thread pool to NettyServerAvroHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1001&quot;&gt;&lt;del&gt;AVRO-1001&lt;/del&gt;&lt;/a&gt;, but it uses a pre-RPC handshake rather than invoking the add(...) RPC to perform the handshake&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12539736">AVRO-1008</key>
            <summary>Allow IPC clients to perform the IPC handshake before the first RPC is invoked</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jbaldassari">James Baldassari</assignee>
                                    <reporter username="jbaldassari">James Baldassari</reporter>
                        <labels>
                            <label>java</label>
                    </labels>
                <created>Wed, 25 Jan 2012 09:50:04 +0000</created>
                <updated>Wed, 27 Feb 2013 00:54:03 +0000</updated>
                            <resolved>Thu, 20 Dec 2012 20:53:31 +0000</resolved>
                                    <version>1.6.1</version>
                                    <fixVersion>1.7.4</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13192963" author="jbaldassari" created="Wed, 25 Jan 2012 09:55:16 +0000"  >&lt;p&gt;Patch attached.&lt;/p&gt;</comment>
                            <comment id="13202661" author="cutting" created="Tue, 7 Feb 2012 19:30:10 +0000"  >&lt;p&gt;We already support pre-forcing the handshake by calling getRemote().  However this currently creates an error message on the server side each time it&apos;s done, which you address here.  Also it would be good to make this more widely known, as it&apos;s useful.&lt;/p&gt;

&lt;p&gt;Some comments &amp;amp; questions:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;We should update the RPC specification to note that if the empty string is passed as the message name during a handshake negotiation then it should be ignored.  Or we might say that an empty message name is always to be ignored, to permit ping messages in any protocol at any time.&lt;/li&gt;
	&lt;li&gt;The change to Responder might also check !wasConnected, unless we decide that pings are desired.&lt;/li&gt;
	&lt;li&gt;What&apos;s the advantage of passing a boolean to the Requestor constructor to calling a method like getRemote()?  We might instead add a new method ensureHandshake() or somesuch that does nothing but call getRemote().&lt;/li&gt;
	&lt;li&gt;Why doesn&apos;t SpecificRequestor#getClient() just pass performHandshake to the requestor constructor, so the only call to getRemote() is in the base Requestor class, avoiding the duplication of that logic?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13216586" author="jbaldassari" created="Sat, 25 Feb 2012 23:59:37 +0000"  >&lt;blockquote&gt;&lt;p&gt;We should update the RPC specification to note that if the empty string is passed as the message name during a handshake negotiation then it should be ignored. Or we might say that an empty message name is always to be ignored, to permit ping messages in any protocol at any time.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think that both of these sound like good solutions.  Either way an RPC with an empty name should be considered reserved for internal use by Avro.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The change to Responder might also check !wasConnected, unless we decide that pings are desired.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Makes sense.  I&apos;ve been thinking about the question of whether pings should be a core part of the protocol, and it doesn&apos;t seem like they would be useful in the general case.  Can you think of a use case for pings that the majority of users would want/need?  I suppose that one use case might be a type of pessimistic connection management scheme in which we ping the server periodically to make sure the connection is alive before we attempt an RPC.  However, there is nothing to prevent the connection from terminating between the ping and the RPC, so even in this case the client would have to support an optimistic connection management policy in which the connection is assumed to be alive until a failure occurs, at which time the connection would have to be reestablished.  The only other use case I can think of right now would be measuring client-server latency.  Now this might be useful, and we could consider adding a method in Responder to give some kind of estimate of client-server latency by using pings.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;What&apos;s the advantage of passing a boolean to the Requestor constructor to calling a method like getRemote()? We might instead add a new method ensureHandshake() or somesuch that does nothing but call getRemote().&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I suppose there is no real advantage to having this flag in the constructor, other than possibly making it more obvious to users who are more likely to look at the JavaDoc of the constructor than all of the other methods in the class.  If we decide that we want to include pings as a general feature of Avro protocols, I suppose we could simply have a method called ping() or ensureHandshake() or measureLantency() that would establish this handshake if necessary.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Why doesn&apos;t SpecificRequestor#getClient() just pass performHandshake to the requestor constructor, so the only call to getRemote() is in the base Requestor class, avoiding the duplication of that logic?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good catch.  It should be changed as you suggested.&lt;/p&gt;

&lt;p&gt;So I guess the next steps are:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Decide whether to change the RPC spec to make an empty message name reserved for use by Avro and to specify what should happen when a server receives a request with an empty message name&lt;/li&gt;
	&lt;li&gt;Decide whether pings should be supported&lt;/li&gt;
	&lt;li&gt;Make the suggested changes to the patch&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13536174" author="cutting" created="Wed, 19 Dec 2012 17:32:45 +0000"  >&lt;p&gt;&amp;gt; Decide whether to change the RPC spec to make an empty message name reserved for use by Avro&lt;/p&gt;

&lt;p&gt;The specification already prohibits empty names, so the empty name is already reserved.  But we should document in the spec that an empty message name might be used by clients to ping or force a handshake, that the server should not do anything crazy like exit when it receives one but should instead return a well-formed response, as most already do.&lt;/p&gt;

&lt;p&gt;The patch includes two changes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;stopping the logging of an error on the server when an empty-message name is received&lt;/li&gt;
	&lt;li&gt;adding calls to getRemote() to constructors when a boolean parameter is true&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Neither change is essential.  The desired functionality is already present.&lt;/p&gt;

&lt;p&gt;I fully support the first change.&lt;/p&gt;

&lt;p&gt;Stylistically I&apos;d prefer we not add more logic to the constructors but perhaps rather just better document getRemote()&apos;s ability to force a handshake.  If an application always desires to force a handshake when connections are created then it can add a method that does this.&lt;/p&gt;

&lt;p&gt;I&apos;ll try to post a revised patch later today that includes the spec change.&lt;/p&gt;</comment>
                            <comment id="13536524" author="cutting" created="Wed, 19 Dec 2012 22:52:23 +0000"  >&lt;p&gt;Here&apos;s a revised patch.&lt;/p&gt;

&lt;p&gt;It:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;no longer logs an error on the server when getRemote() sends an empty message name to force a handshake&lt;/li&gt;
	&lt;li&gt;updates TestNettyServerConcurrentExecution to call getRemote() to force the handshake&lt;/li&gt;
	&lt;li&gt;updates the specification to document this use of the empty message name&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13536998" author="tomwhite" created="Thu, 20 Dec 2012 12:40:00 +0000"  >&lt;p&gt;+1 this looks good to me.&lt;/p&gt;</comment>
                            <comment id="13537370" author="cutting" created="Thu, 20 Dec 2012 20:53:31 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12596045">AVRO-1122</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12561801" name="AVRO-1008.patch" size="2505" author="cutting" created="Wed, 19 Dec 2012 22:52:23 +0000"/>
                            <attachment id="12511820" name="AVRO-1008.patch" size="12001" author="jbaldassari" created="Wed, 25 Jan 2012 09:55:16 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Feb 2012 19:30:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>225239</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 5 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0axvj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>61761</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1009] Use ExecutionHandler by default in NettyServer and/or clarify documentation</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1009</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It may be a good idea to use an ExecutionHandler with a cached thread pool by default in NettyServer.  If an ExecutionHandler is not used then, as pointed out in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-976&quot; title=&quot;NettyServer: enable use of an ExecutionHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-976&quot;&gt;&lt;del&gt;AVRO-976&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1001&quot; title=&quot;Adding thread pool to NettyServerAvroHandler&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1001&quot;&gt;&lt;del&gt;AVRO-1001&lt;/del&gt;&lt;/a&gt;, each Netty session can only execute one RPC at a time.  Users should still be allowed to override the ExecutionHandler with their own implementation.  Whether we make this change or not, I think the documentation in NettyServer should explain in a little more detail the behavior of NettyServer with and without an ExecutionHandler.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12539738">AVRO-1009</key>
            <summary>Use ExecutionHandler by default in NettyServer and/or clarify documentation</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jbaldassari">James Baldassari</reporter>
                        <labels>
                            <label>java</label>
                    </labels>
                <created>Wed, 25 Jan 2012 10:15:55 +0000</created>
                <updated>Sun, 30 Dec 2018 05:25:51 +0000</updated>
                                            <version>1.6.2</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>225241</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3t3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80379</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1010] Improve Javadoc for CodecFactory, AvroJob and AvroOutputFormat mostly concerning compression</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1010</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;CodecFactory doesn&apos;t mention which codecs are registered and some comments make it seem as it this takes a full class name. The registered codecs should be documented. Similarly AvroOutputFormat doesn&apos;t document how it can be configured to use compression.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12539760">AVRO-1010</key>
            <summary>Improve Javadoc for CodecFactory, AvroJob and AvroOutputFormat mostly concerning compression</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lars_francke">Lars Francke</assignee>
                                    <reporter username="lars_francke">Lars Francke</reporter>
                        <labels>
                    </labels>
                <created>Wed, 25 Jan 2012 13:07:51 +0000</created>
                <updated>Wed, 15 Feb 2012 00:46:29 +0000</updated>
                            <resolved>Tue, 7 Feb 2012 22:50:47 +0000</resolved>
                                    <version>1.6.1</version>
                                    <fixVersion>1.6.2</fixVersion>
                                    <component>doc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13193010" author="lars_francke" created="Wed, 25 Jan 2012 13:11:59 +0000"  >&lt;p&gt;Added Javadoc to document a few things.&lt;/p&gt;

&lt;p&gt;Only code change is removing superflous semicolons after methods... I don&apos;t know why they were there but I was working on the class anyway so I hope it&apos;s okay otherwise I&apos;ll provide a patch without that change.&lt;/p&gt;

&lt;p&gt;Can&apos;t put it on Review Board because there&apos;s no &quot;avro-git&quot; repository.&lt;/p&gt;</comment>
                            <comment id="13202045" author="scott_carey" created="Tue, 7 Feb 2012 03:21:49 +0000"  >&lt;p&gt;+1, looks good.&lt;/p&gt;</comment>
                            <comment id="13202897" author="cutting" created="Tue, 7 Feb 2012 22:50:47 +0000"  >&lt;p&gt;I removed references to non-public classes from the added javadoc &amp;amp; committed this.&lt;/p&gt;

&lt;p&gt;Thanks, Lars!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12511832" name="AVRO-1010.1.patch" size="4903" author="lars_francke" created="Wed, 25 Jan 2012 13:11:59 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Feb 2012 03:21:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>225263</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 50 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3tb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80380</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1011] Improve POM structure</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1011</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I&apos;ve gone through all the POM files and reworked them a bit:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Remove all tabs with spaces, remove whitespace from line ends&lt;/li&gt;
	&lt;li&gt;Reformat XML&lt;/li&gt;
	&lt;li&gt;All POM files are using a consistent order of elements&lt;/li&gt;
	&lt;li&gt;Remove extra autogenerated pom.xml in lang/java/archetypes/avro-service-archetype/src/main/resources/archetype-resources/&lt;/li&gt;
	&lt;li&gt;Include missing Jackson (and others) dependencies in the modules&lt;/li&gt;
	&lt;li&gt;Changed property names from foo-version to foo.version to be more consistent&lt;/li&gt;
	&lt;li&gt;Removed jopt-simple dependency from mapred package by removing unused imports from a test&lt;/li&gt;
	&lt;li&gt;Removed duplicate maven-enforcer-plugin definition&lt;/li&gt;
	&lt;li&gt;Remove unused repositories (apache.snapshots not needed and coming from parent, jboss stuff is in maven central)&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12540152">AVRO-1011</key>
            <summary>Improve POM structure</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lars_francke">Lars Francke</assignee>
                                    <reporter username="lars_francke">Lars Francke</reporter>
                        <labels>
                    </labels>
                <created>Fri, 27 Jan 2012 17:10:00 +0000</created>
                <updated>Wed, 15 Feb 2012 00:46:31 +0000</updated>
                            <resolved>Tue, 7 Feb 2012 19:25:59 +0000</resolved>
                                    <version>1.6.1</version>
                                    <fixVersion>1.6.2</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13201934" author="scott_carey" created="Tue, 7 Feb 2012 01:21:43 +0000"  >&lt;p&gt;Overall this looks good.  Some things that are a minor concern are addressed in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1012&quot; title=&quot;Improve avro-service-archetype: POM and IT changes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1012&quot;&gt;&lt;del&gt;AVRO-1012&lt;/del&gt;&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;This patch also places many version properties in leaf projects, I would rather have these in a shared parent project so that there is one place to go to configure dependency versions along side the dependency management section.&lt;/p&gt;

&lt;p&gt;I have a slightly modified patch that moves dependency properties not related to the archetype into lang/java/pom.xml that I will submit shortly.&lt;/p&gt;</comment>
                            <comment id="13201941" author="scott_carey" created="Tue, 7 Feb 2012 01:28:39 +0000"  >&lt;p&gt;Attached is an updated patch that has the following differences from the prior one:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;It consolidates non-archetype related version properties to lang/java/pom.xml&lt;/li&gt;
	&lt;li&gt;It does not include import-order changes to java files.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I plan to commit this soon unless there are objections.&lt;/p&gt;</comment>
                            <comment id="13202138" author="lars_francke" created="Tue, 7 Feb 2012 07:32:59 +0000"  >&lt;p&gt;Thanks for reviewing.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I always manage my dependencies as close as possible to where they are actually used that&apos;s why I left those that are not shared in leaf projects but that&apos;s a matter of taste and I&apos;m good with your approach too&lt;/li&gt;
	&lt;li&gt;The imports I changed were &lt;em&gt;all&lt;/em&gt; unused in that test and I removed them because they were the only mention of jopt in the mapreduce project. With this code change we can get rid of the jopt-simple dependency in that project&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There&apos;s one thing I didn&apos;t change in this patch because I didn&apos;t have the time to think it through fully. The dependencies (SLF4J + JUnit) declared in lang/java/pom.xml have a comment saying that children can just exclude them. That&apos;s not true as far as I know. I don&apos;t think there&apos;s an easy way to exclude dependencies inherited from a parent. Optional dependencies are a clutch and I think those should be moved to the subprojects where they are actually used (perhaps with the exception of junit because it shouldn&apos;t do any harm).&lt;/p&gt;</comment>
                            <comment id="13202582" author="scott_carey" created="Tue, 7 Feb 2012 18:04:31 +0000"  >&lt;p&gt;I tend to place all of my dependency literals in one place in the parent project for two reasons:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;It is easier to locate the versions when they need to change and review in bulk.&lt;/li&gt;
	&lt;li&gt;If only one child uses a dependency, it is often temporary.  Sibling projects have a habit of spawning or adding dependencies from other siblings leading to mismatches over time (e.g. how we got different versions in the archetype modules)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The unused imports should be changed, I thought it was an unrelated change and therefore for a different ticket.  I see it is in the description, I missed that.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There&apos;s one thing I didn&apos;t change in this patch because I didn&apos;t have the time to think it through fully. The dependencies (SLF4J + JUnit) declared in lang/java/pom.xml have a comment saying that children can just exclude them. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You are right, the doc is wrong.  We could move this to dependencyManagement and have all children declare, but I do not foresee any child that does not have these two dependencies.  There may be a case (such as tools) that doesn&apos;t directly use slf4j, but depends on other components that do so there is an implicit dependency anyway.&lt;/p&gt;


&lt;p&gt;This brings up another discussion:&lt;/p&gt;

&lt;p&gt;Why re-declare dependencies in downstream modules?  For example, you added explicit dependencies on jackson-core-asl and jackson-mapper-asl to several projects in what is IMO an unnecessary duplication of the implicit dependency from the avro module.  In addition, jackson-mapper-asl depends on jackson-core-asl, so it is redundant to list jackson-core-asl.  I have always seen this as a violation of the DRY principle (it is listed in &apos;avro&apos;, &apos;avro-mapred&apos; depends on &apos;avro&apos;, therefore already depends on it), but it does seem to be common maven practice to list all jars that are referenced directly and not depend on implicit dependencies.  I figure the compile and test process ensures correctness.&lt;/p&gt;

&lt;p&gt;What are the arguments for this approach?  I can go either way, the duplication factor is not that high in Avro and is mostly related to Jackson and how we expose it in the Avro Schema API rather than hide it.&lt;/p&gt;

</comment>
                            <comment id="13202593" author="scott_carey" created="Tue, 7 Feb 2012 18:20:58 +0000"  >&lt;p&gt;I will attach a patch that adds back in the removal of unused jopt-simple imports (but does not re-order imports).  I will commit this soon if there are no objections.  We have a consensus above and any expansion of scope can go into another ticket, or be addressed in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1012&quot; title=&quot;Improve avro-service-archetype: POM and IT changes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1012&quot;&gt;&lt;del&gt;AVRO-1012&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-995&quot; title=&quot;Java: Update Dependencies for 1.6.2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-995&quot;&gt;&lt;del&gt;AVRO-995&lt;/del&gt;&lt;/a&gt;, I believe this is a step in the right direction and the remaining discussion is minor details.&lt;/p&gt;</comment>
                            <comment id="13202604" author="lars_francke" created="Tue, 7 Feb 2012 18:36:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;I tend to place all of my dependency literals in one place in the parent project for two reasons&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I do that too for all dependencies that are shared but I personally find it easier to have them as close to their actual usage as possible so if they are only used in one submodule then I keep them there. That is very much a matter of taste and past experience I think and you&apos;re definitely the Avro Maven master so I don&apos;t object to any change that relates to this. I&apos;m just used to do it differently I guess.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You are right, the doc is wrong. We could move this to dependencyManagement and have all children declare, but I do not foresee any child that does not have these two dependencies. There may be a case (such as tools) that doesn&apos;t directly use slf4j, but depends on other components that do so there is an implicit dependency anyway.&lt;/p&gt;&lt;/blockquote&gt;

&lt;ul&gt;
	&lt;li&gt;SLF4J API is not used by:&#160;avro-maven-plugin, avro-tools, avro-protobuf&lt;/li&gt;
	&lt;li&gt;SLF4J-Simple shouldn&apos;t be used for anything that might be used as a library anywhere else like avro-mapred. We&apos;re forcing an SLF4J implementation on users (I know it&apos;s declared optional here) for no reason, the actual logging implementation should always be up to the end-user so avro-tools and avro-maven-plugin should probably be the only ones that have one?&#160;I&apos;m not sure how all projects are used actually so I might be wrong. And if it stays in it is definitely the wrong scope, should be runtime instead of compile.&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;Why re-declare dependencies in downstream modules?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s the result of a mvn dependency:analyze and a Tattletale run.&lt;/p&gt;

&lt;p&gt;Example from avro-protobuf:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;[WARNING] Used undeclared dependencies found:
[WARNING]    org.codehaus.jackson:jackson-mapper-asl:jar:1.8.6:compile
[WARNING]    org.codehaus.jackson:jackson-core-asl:jar:1.8.6:compile
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All those project are using classes from those specific JARs directly. avro-protobuf for example has this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.codehaus.jackson.JsonFactory;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.codehaus.jackson.JsonNode;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and they come from &lt;tt&gt;jackson-core&lt;/tt&gt;. Thus we need to declare a dependency on it. If &lt;tt&gt;jackson-mapper&lt;/tt&gt; for any reason removed its dependency on &lt;tt&gt;jackson-core&lt;/tt&gt; later then the Avro build would fail even though we just upgraded. To put it differently: That &lt;tt&gt;jackson-mapper&lt;/tt&gt; depends on &lt;tt&gt;jackson-core&lt;/tt&gt; is an implementation detail of Jackson and can not be relied upon.&lt;/p&gt;

&lt;p&gt;That&apos;d at least be my reasoning &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I&apos;ve been bitten by this more than once and I also find it nicer for documentation reasons for third party users.&lt;/p&gt;

&lt;p&gt;About your concrete example: &lt;tt&gt;avro&lt;/tt&gt; itself is using all kinds of Jackson classes itself so even though it gets the dependency through &lt;tt&gt;avro-mapred&lt;/tt&gt; it still depends on them itself.&lt;/p&gt;</comment>
                            <comment id="13202607" author="lars_francke" created="Tue, 7 Feb 2012 18:37:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;I will attach a patch that adds back in the removal of unused jopt-simple imports (but does not re-order imports). I will commit this soon if there are no objections. We have a consensus above and any expansion of scope can go into another ticket, or be addressed in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1012&quot; title=&quot;Improve avro-service-archetype: POM and IT changes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1012&quot;&gt;&lt;del&gt;AVRO-1012&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-995&quot; title=&quot;Java: Update Dependencies for 1.6.2&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-995&quot;&gt;&lt;del&gt;AVRO-995&lt;/del&gt;&lt;/a&gt;, I believe this is a step in the right direction and the remaining discussion is minor details.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1 Thanks!&lt;/p&gt;</comment>
                            <comment id="13202638" author="scott_carey" created="Tue, 7 Feb 2012 19:11:05 +0000"  >&lt;p&gt;This patch adds back the import cleanup that allows a false dependency on jopt-simple in avro-mapred to be removed.&lt;/p&gt;</comment>
                            <comment id="13202655" author="scott_carey" created="Tue, 7 Feb 2012 19:25:59 +0000"  >&lt;p&gt;Committed @ revision 1241561&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12512190" name="AVRO-1011.1.patch" size="54489" author="lars_francke" created="Fri, 27 Jan 2012 17:12:34 +0000"/>
                            <attachment id="12513546" name="AVRO-1011.2.patch" size="46102" author="scott_carey" created="Tue, 7 Feb 2012 01:28:39 +0000"/>
                            <attachment id="12513659" name="AVRO-1011.3.patch" size="48222" author="scott_carey" created="Tue, 7 Feb 2012 19:11:05 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Feb 2012 01:21:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>225567</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 50 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3tj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80381</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1012] Improve avro-service-archetype: POM and IT changes</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1012</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;ul&gt;
	&lt;li&gt;Use the same dependency versions as Avro itself where applicable (all except logback which I&apos;ve updated to 1.0.0)&lt;/li&gt;
	&lt;li&gt;Replace all tabs with spaces/code formatting&lt;/li&gt;
	&lt;li&gt;Set source encoding to prevent compiler warnings&lt;/li&gt;
	&lt;li&gt;Fix logback.xml to be well-formed XML&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12540155">AVRO-1012</key>
            <summary>Improve avro-service-archetype: POM and IT changes</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lars_francke">Lars Francke</assignee>
                                    <reporter username="lars_francke">Lars Francke</reporter>
                        <labels>
                    </labels>
                <created>Fri, 27 Jan 2012 17:26:37 +0000</created>
                <updated>Wed, 15 Feb 2012 00:46:29 +0000</updated>
                            <resolved>Wed, 8 Feb 2012 20:09:00 +0000</resolved>
                                    <version>1.6.1</version>
                                    <fixVersion>1.6.2</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13201948" author="scott_carey" created="Tue, 7 Feb 2012 01:35:29 +0000"  >&lt;p&gt;Looks good.  &lt;/p&gt;

&lt;p&gt;Is there any way to consolidate the versions in the pom in the resource bundle so that we don&apos;t repeat ourselves?  avro.version, jackson.version, and sfl4j.version need to be manually kept the same as the rest of the project.  It would be nice if the build could enforce this, at minimum during the release process.&lt;/p&gt;

&lt;p&gt;I am +1 as is unless there is a straightforward way to enhance this further and enforce the above.&lt;/p&gt;</comment>
                            <comment id="13202704" author="scott_carey" created="Tue, 7 Feb 2012 19:57:00 +0000"  >&lt;p&gt;Patch rebased after &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1011&quot; title=&quot;Improve POM structure&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1011&quot;&gt;&lt;del&gt;AVRO-1011&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13202717" author="scott_carey" created="Tue, 7 Feb 2012 20:03:55 +0000"  >&lt;p&gt;I noticed that the build creates a file that is not in the target/ dir.  Should we move it or set svn:ignore for it?&lt;/p&gt;

&lt;p&gt;The file in question is:&lt;/p&gt;

&lt;p&gt;lang/java/archetypes/avro-service-archetype/src/main/resources/archetype-resources/pom.xml&lt;/p&gt;

&lt;p&gt;IMO if this is a generated file, it should be placed in &lt;br/&gt;
lang/java/archetypes/avro-service-archetype/target/generated-resources/archetype-resources/pom.xml&lt;/p&gt;

&lt;p&gt;or similar.&lt;/p&gt;

&lt;p&gt;Opinions / ideas?&lt;/p&gt;

&lt;p&gt;I also note that in lang/java/archetypes/avro-service-archetype/src/main/pom/pom.xml there are a few versions for plugins that are not shared with the parent build, in particular the surefire plugin, failsafe plugin, and compiler plugin.&lt;/p&gt;</comment>
                            <comment id="13203320" author="scott_carey" created="Wed, 8 Feb 2012 06:54:47 +0000"  >&lt;p&gt;This patch additionally moves the pom.xml filtering into the generate-resource phase and the output into the target/generated-resources folder so that no cruft is left in a src/ folder after a build.&lt;/p&gt;

&lt;p&gt;I will commit this tomorrow if there are no objections.&lt;/p&gt;</comment>
                            <comment id="13203922" author="scott_carey" created="Wed, 8 Feb 2012 20:09:00 +0000"  >&lt;p&gt;Committed @revision 1242069&lt;/p&gt;

&lt;p&gt;Thanks Lars!&lt;/p&gt;</comment>
                            <comment id="13204517" author="lars_francke" created="Thu, 9 Feb 2012 13:44:13 +0000"  >&lt;p&gt;Sorry for the delay. Yes that sounds much better. I left it as it is because I thought there might have been a reason for it. Your solution is good, thanks.&lt;/p&gt;

&lt;p&gt;We could probably filter the pom and include the &quot;upstream&quot; versions if we wanted to.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12512194" name="AVRO-1012.1.patch" size="11225" author="lars_francke" created="Fri, 27 Jan 2012 17:27:12 +0000"/>
                            <attachment id="12513674" name="AVRO-1012.2.patch" size="10038" author="scott_carey" created="Tue, 7 Feb 2012 19:57:00 +0000"/>
                            <attachment id="12513771" name="AVRO-1012.3.patch" size="12789" author="scott_carey" created="Wed, 8 Feb 2012 06:54:47 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Feb 2012 01:35:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>225570</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 50 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0e3tr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>80382</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
