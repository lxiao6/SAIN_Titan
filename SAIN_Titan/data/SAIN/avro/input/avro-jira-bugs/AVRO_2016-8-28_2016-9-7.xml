<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:23:58 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2016-8-28+AND+created+%3C%3D+2016-9-7+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="7" total="7"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1902] C: namespace &quot;&quot; should mean namespace = NULL</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1902</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1295&quot; title=&quot;null namespace within non-null is not print/parse consistent&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1295&quot;&gt;&lt;del&gt;AVRO-1295&lt;/del&gt;&lt;/a&gt; but for the C library. Namespace &quot;&quot; should be the NULL namespace when the schema is parsed. For example this breaks:&lt;/p&gt;

&lt;p&gt;```&lt;br/&gt;
{&quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;R&quot;, &quot;fields&quot;: [&lt;br/&gt;
  {&quot;name&quot;: &quot;s&quot;, &quot;type&quot;: {&quot;type&quot;: &quot;record&quot;, &quot;namespace&quot;: &quot;x&quot;, &quot;name&quot;: &quot;Y&quot;, &quot;fields&quot;: [&lt;br/&gt;
    {&quot;name&quot;: &quot;e&quot;, &quot;type&quot;: {&quot;type&quot;: &quot;record&quot;, &quot;namespace&quot;: &quot;&quot;, &quot;name&quot;: &quot;Z&quot;, &quot;fields&quot;: [&lt;/p&gt;
      {&quot;name&quot;: &quot;f&quot;, &quot;type&quot;: &quot;Z&quot;}
&lt;p&gt;    ]}}&lt;br/&gt;
  ]}},&lt;/p&gt;
  {&quot;name&quot;: &quot;t&quot;, &quot;type&quot;: &quot;Z&quot;}
&lt;p&gt;]}&lt;br/&gt;
```&lt;/p&gt;</description>
                <environment></environment>
        <key id="13001231">AVRO-1902</key>
            <summary>C: namespace &quot;&quot; should mean namespace = NULL</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dkulp">Daniel Kulp</assignee>
                                    <reporter username="bw123">Ben Walsh</reporter>
                        <labels>
                    </labels>
                <created>Tue, 30 Aug 2016 08:28:08 +0000</created>
                <updated>Thu, 29 Nov 2018 21:04:00 +0000</updated>
                            <resolved>Wed, 21 Nov 2018 15:02:07 +0000</resolved>
                                                    <fixVersion>1.9.0</fixVersion>
                                    <component>c</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="15668060" author="githubbot" created="Tue, 15 Nov 2016 19:40:28 +0000"  >&lt;p&gt;GitHub user walshb opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/158&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/158&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1902&quot; title=&quot;C: namespace &amp;quot;&amp;quot; should mean namespace = NULL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1902&quot;&gt;&lt;del&gt;AVRO-1902&lt;/del&gt;&lt;/a&gt;: C: Namespace &quot;&quot; means space = NULL.&lt;/p&gt;



&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/walshb/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/walshb/avro&lt;/a&gt; avro-1902-c-namespace-null&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/158.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/158.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #158&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 54a05269d4f275afc5d55766ab230739b163d3b8&lt;br/&gt;
Author: Ben Walsh &amp;lt;ben.walsh@byhiras.com&amp;gt;&lt;br/&gt;
Date:   2013-05-17T10:11:08Z&lt;/p&gt;

&lt;p&gt;    C: Namespace &quot;&quot; means space = NULL.&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="16636963" author="githubbot" created="Wed, 3 Oct 2018 13:39:24 +0000"  >&lt;p&gt;c4urself commented on issue #158: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1902&quot; title=&quot;C: namespace &amp;quot;&amp;quot; should mean namespace = NULL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1902&quot;&gt;&lt;del&gt;AVRO-1902&lt;/del&gt;&lt;/a&gt;: C: Namespace &quot;&quot; means space = NULL.&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/158#issuecomment-426640874&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/158#issuecomment-426640874&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   @johnsgill3 @walshb &amp;#8211; any progress here?&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16693682" author="githubbot" created="Tue, 20 Nov 2018 19:17:26 +0000"  >&lt;p&gt;walshb commented on issue #158: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1902&quot; title=&quot;C: namespace &amp;quot;&amp;quot; should mean namespace = NULL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1902&quot;&gt;&lt;del&gt;AVRO-1902&lt;/del&gt;&lt;/a&gt;: C: Namespace &quot;&quot; means space = NULL.&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/158#issuecomment-440397330&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/158#issuecomment-440397330&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   I have no idea. All the people with commit access in Avro land don&apos;t seem to understand C. I have 4 patches which the just ignore. I&apos;m no longer using Avro so I&apos;ve just given up.&lt;/p&gt;

&lt;p&gt;   If you are interested in getting this fixed, I suggest finding the last person who committed a significant change to the C code (ie. someone with commit access, who cares about C), and contacting them directly.&lt;/p&gt;



&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16693684" author="githubbot" created="Tue, 20 Nov 2018 19:17:44 +0000"  >&lt;p&gt;walshb edited a comment on issue #158: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1902&quot; title=&quot;C: namespace &amp;quot;&amp;quot; should mean namespace = NULL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1902&quot;&gt;&lt;del&gt;AVRO-1902&lt;/del&gt;&lt;/a&gt;: C: Namespace &quot;&quot; means space = NULL.&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/158#issuecomment-440397330&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/158#issuecomment-440397330&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   I have no idea. All the people with commit access in Avro land don&apos;t seem to understand C. I have 4 patches which they just ignore. I&apos;m no longer using Avro so I&apos;ve just given up.&lt;/p&gt;

&lt;p&gt;   If you are interested in getting this fixed, I suggest finding the last person who committed a significant change to the C code (ie. someone with commit access, who cares about C), and contacting them directly.&lt;/p&gt;



&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16694814" author="githubbot" created="Wed, 21 Nov 2018 15:01:22 +0000"  >&lt;p&gt;dkulp closed pull request #158: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1902&quot; title=&quot;C: namespace &amp;quot;&amp;quot; should mean namespace = NULL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1902&quot;&gt;&lt;del&gt;AVRO-1902&lt;/del&gt;&lt;/a&gt;: C: Namespace &quot;&quot; means space = NULL.&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/158&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/158&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/c/src/schema.c b/lang/c/src/schema.c&lt;br/&gt;
index 3ade1140e..a78f73314 100644&lt;br/&gt;
&amp;#8212; a/lang/c/src/schema.c&lt;br/&gt;
+++ b/lang/c/src/schema.c&lt;br/&gt;
@@ -935,6 +935,9 @@ avro_schema_from_json_t(json_t *json, avro_schema_t *schema,&lt;br/&gt;
 				avro_str_free(namespace);&lt;br/&gt;
 			} else if (json_is_string(json_namespace)) {&lt;br/&gt;
 				const char *namespace = json_string_value(json_namespace);&lt;br/&gt;
+				if (strlen(namespace) == 0) &lt;/p&gt;
{
+					namespace = NULL;
+				}&lt;br/&gt;
 				*schema = avro_schema_record(fullname, namespace);&lt;br/&gt;
 			} else {
 				*schema = avro_schema_record(fullname, parent_namespace);
@@ -1032,6 +1035,9 @@ avro_schema_from_json_t(json_t *json, avro_schema_t *schema,
 				avro_str_free(namespace);
 			} else if (json_is_string(json_namespace)) {&lt;br/&gt;
 				const char *namespace = json_string_value(json_namespace);&lt;br/&gt;
+				if (strlen(namespace) == 0) {+					namespace = NULL;+				}
&lt;p&gt; 				*schema = avro_schema_enum_ns(fullname, namespace);&lt;br/&gt;
 			} else &lt;/p&gt;
{
 				*schema = avro_schema_enum_ns(fullname, parent_namespace);
@@ -1166,6 +1172,9 @@ avro_schema_from_json_t(json_t *json, avro_schema_t *schema,
 				avro_str_free(namespace);
 			}
&lt;p&gt; else if (json_is_string(json_namespace)) {&lt;br/&gt;
 				const char *namespace = json_string_value(json_namespace);&lt;br/&gt;
+				if (strlen(namespace) == 0) &lt;/p&gt;
{
+					namespace = NULL;
+				}
&lt;p&gt; 				*schema = avro_schema_fixed_ns(fullname, namespace, (int64_t) size);&lt;br/&gt;
 			} else {&lt;br/&gt;
 				*schema = avro_schema_fixed_ns(fullname, parent_namespace, (int64_t) size);&lt;br/&gt;
@@ -1638,9 +1647,11 @@ static int write_record(avro_writer_t out, const struct avro_record_schema_t *re&lt;br/&gt;
 	check(rval, avro_write_str(out, &quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;&quot;));&lt;br/&gt;
 	check(rval, avro_write_str(out, record-&amp;gt;name));&lt;br/&gt;
 	check(rval, avro_write_str(out, &quot;\&quot;,&quot;));&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (record-&amp;gt;space &amp;amp;&amp;amp; nullstrcmp(record-&amp;gt;space, parent_namespace)) {&lt;br/&gt;
+	if (nullstrcmp(record-&amp;gt;space, parent_namespace)) {&lt;br/&gt;
 		check(rval, avro_write_str(out, &quot;\&quot;namespace\&quot;:\&quot;&quot;));&lt;/li&gt;
	&lt;li&gt;check(rval, avro_write_str(out, record-&amp;gt;space));&lt;br/&gt;
+		if (record-&amp;gt;space) 
{
+			check(rval, avro_write_str(out, record-&amp;gt;space));
+		}
&lt;p&gt; 		check(rval, avro_write_str(out, &quot;\&quot;,&quot;));&lt;br/&gt;
 	}&lt;br/&gt;
 	check(rval, avro_write_str(out, &quot;\&quot;fields\&quot;:[&quot;));&lt;br/&gt;
@@ -1666,9 +1677,11 @@ static int write_enum(avro_writer_t out, const struct avro_enum_schema_t *enump,&lt;br/&gt;
 	check(rval, avro_write_str(out, &quot;{\&quot;type\&quot;:\&quot;enum\&quot;,\&quot;name\&quot;:\&quot;&quot;));&lt;br/&gt;
 	check(rval, avro_write_str(out, enump-&amp;gt;name));&lt;br/&gt;
 	check(rval, avro_write_str(out, &quot;\&quot;,&quot;));&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;if (enump-&amp;gt;space &amp;amp;&amp;amp; nullstrcmp(enump-&amp;gt;space, parent_namespace)) {&lt;br/&gt;
+	if (nullstrcmp(enump-&amp;gt;space, parent_namespace)) {&lt;br/&gt;
 		check(rval, avro_write_str(out, &quot;\&quot;namespace\&quot;:\&quot;&quot;));&lt;/li&gt;
	&lt;li&gt;check(rval, avro_write_str(out, enump-&amp;gt;space));&lt;br/&gt;
+		if (enump-&amp;gt;space) 
{
+			check(rval, avro_write_str(out, enump-&amp;gt;space));
+		}
&lt;p&gt; 		check(rval, avro_write_str(out, &quot;\&quot;,&quot;));&lt;br/&gt;
 	}&lt;br/&gt;
 	check(rval, avro_write_str(out, &quot;\&quot;symbols\&quot;:[&quot;));&lt;br/&gt;
@@ -1697,9 +1710,11 @@ static int write_fixed(avro_writer_t out, const struct avro_fixed_schema_t *fixe&lt;br/&gt;
 	check(rval, avro_write_str(out, &quot;{\&quot;type\&quot;:\&quot;fixed\&quot;,\&quot;name\&quot;:\&quot;&quot;));&lt;br/&gt;
 	check(rval, avro_write_str(out, fixed-&amp;gt;name));&lt;br/&gt;
 	check(rval, avro_write_str(out, &quot;\&quot;,&quot;));&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;if (fixed-&amp;gt;space &amp;amp;&amp;amp; nullstrcmp(fixed-&amp;gt;space, parent_namespace)) {&lt;br/&gt;
+	if (nullstrcmp(fixed-&amp;gt;space, parent_namespace)) {&lt;br/&gt;
 		check(rval, avro_write_str(out, &quot;\&quot;namespace\&quot;:\&quot;&quot;));&lt;/li&gt;
	&lt;li&gt;check(rval, avro_write_str(out, fixed-&amp;gt;space));&lt;br/&gt;
+		if (fixed-&amp;gt;space) 
{
+			check(rval, avro_write_str(out, fixed-&amp;gt;space));
+		}
&lt;p&gt; 		check(rval, avro_write_str(out, &quot;\&quot;,&quot;));&lt;br/&gt;
 	}&lt;br/&gt;
 	check(rval, avro_write_str(out, &quot;\&quot;size\&quot;:&quot;));&lt;br/&gt;
diff --git a/lang/c/tests/schema_tests/pass/namespace_null_enum b/lang/c/tests/schema_tests/pass/namespace_null_enum&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 000000000..3c3a74528&lt;/p&gt;
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;/dev/null&lt;br/&gt;
+++ b/lang/c/tests/schema_tests/pass/namespace_null_enum&lt;br/&gt;
@@ -0,0 +1,8 @@&lt;br/&gt;
+{&quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;R&quot;, &quot;fields&quot;: [&lt;br/&gt;
+  {&quot;name&quot;: &quot;s&quot;, &quot;type&quot;: {&quot;type&quot;: &quot;record&quot;, &quot;namespace&quot;: &quot;x&quot;, &quot;name&quot;: &quot;Y&quot;, &quot;fields&quot;: [&lt;br/&gt;
+    
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {&amp;quot;name&amp;quot;}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+  ]}},&lt;br/&gt;
+  &lt;/p&gt;
{&quot;name&quot;: &quot;t&quot;, &quot;type&quot;: &quot;Z&quot;}
&lt;p&gt;+]}&lt;br/&gt;
diff --git a/lang/c/tests/schema_tests/pass/namespace_null_fixed b/lang/c/tests/schema_tests/pass/namespace_null_fixed&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 000000000..a3aa5701f&lt;/p&gt;&lt;/li&gt;
			&lt;li&gt;/dev/null&lt;br/&gt;
+++ b/lang/c/tests/schema_tests/pass/namespace_null_fixed&lt;br/&gt;
@@ -0,0 +1,7 @@&lt;br/&gt;
+{&quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;R&quot;, &quot;fields&quot;: [&lt;br/&gt;
+  {&quot;name&quot;: &quot;s&quot;, &quot;type&quot;: {&quot;type&quot;: &quot;record&quot;, &quot;namespace&quot;: &quot;x&quot;, &quot;name&quot;: &quot;Y&quot;, &quot;fields&quot;: [&lt;br/&gt;
+    
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {&amp;quot;name&amp;quot;}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+  ]}},&lt;br/&gt;
+  &lt;/p&gt;
{&quot;name&quot;: &quot;t&quot;, &quot;type&quot;: &quot;Z&quot;}
&lt;p&gt;+]}&lt;br/&gt;
diff --git a/lang/c/tests/schema_tests/pass/namespace_null_record b/lang/c/tests/schema_tests/pass/namespace_null_record&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 000000000..4b18dd54b&lt;/p&gt;&lt;/li&gt;
			&lt;li&gt;/dev/null&lt;br/&gt;
+++ b/lang/c/tests/schema_tests/pass/namespace_null_record&lt;br/&gt;
@@ -0,0 +1,8 @@&lt;br/&gt;
+{&quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;R&quot;, &quot;fields&quot;: [&lt;br/&gt;
+  {&quot;name&quot;: &quot;s&quot;, &quot;type&quot;: {&quot;type&quot;: &quot;record&quot;, &quot;namespace&quot;: &quot;x&quot;, &quot;name&quot;: &quot;Y&quot;, &quot;fields&quot;: [&lt;br/&gt;
+    {&quot;name&quot;: &quot;e&quot;, &quot;type&quot;: {&quot;type&quot;: &quot;record&quot;, &quot;namespace&quot;: &quot;&quot;, &quot;name&quot;: &quot;Z&quot;, &quot;fields&quot;: [&lt;br/&gt;
+      
{&quot;name&quot;: &quot;f&quot;, &quot;type&quot;: &quot;Z&quot;}
&lt;p&gt;+    ]}}&lt;br/&gt;
+  ]}},&lt;br/&gt;
+  &lt;/p&gt;
{&quot;name&quot;: &quot;t&quot;, &quot;type&quot;: &quot;Z&quot;}
&lt;p&gt;+]}&lt;/p&gt;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16703814" author="githubbot" created="Thu, 29 Nov 2018 21:04:00 +0000"  >&lt;p&gt;walshb commented on issue #158: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1902&quot; title=&quot;C: namespace &amp;quot;&amp;quot; should mean namespace = NULL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1902&quot;&gt;&lt;del&gt;AVRO-1902&lt;/del&gt;&lt;/a&gt;: C: Namespace &quot;&quot; means space = NULL.&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/158#issuecomment-442992415&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/158#issuecomment-442992415&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;   @dkulp That is awesome! Thank you very much!&lt;/p&gt;

&lt;p&gt;   Sorry to trouble you further, but please would you mind taking a look at some other Avro-C pull requests?&lt;/p&gt;

&lt;p&gt;   &lt;a href=&quot;https://github.com/apache/avro/pull/398&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/398&lt;/a&gt;&lt;br/&gt;
   &lt;a href=&quot;https://github.com/apache/avro/pull/159&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/159&lt;/a&gt;&lt;br/&gt;
   &lt;a href=&quot;https://github.com/apache/avro/pull/160&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/160&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;   Thanks again.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12826149" name="AVRO-1902.patch" size="3591" author="bw123" created="Tue, 30 Aug 2016 08:30:50 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Nov 2016 19:40:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32zrz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1903] Java package/class bindings for specific records</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1903</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Naming convention of the Avro schemas we create are not always in line with the Java coding convention. The maven-plugin to generate specific record classes should provide a way to bind namespace or schema names to a custom Java package or class name.&lt;/p&gt;

&lt;p&gt;We have implemented a solution where we can add bindings into the maven-plugin configuration:&lt;/p&gt;

&lt;p&gt;One to one binding:&lt;br/&gt;
&amp;lt;binding&amp;gt;&lt;br/&gt;
    &amp;lt;from&amp;gt;com.namspace.order.state&amp;lt;/from&amp;gt;&lt;br/&gt;
    &amp;lt;to&amp;gt;com.package.Order&amp;lt;/to&amp;gt;&lt;br/&gt;
&amp;lt;/binding&amp;gt;&lt;br/&gt;
It will create a class &quot;Order&quot; into package &quot;com.package&quot; for schema &quot;state&quot; and namespace &quot;com.namspace.order&quot;&lt;/p&gt;

&lt;p&gt;Reg-exp based binding:&lt;br/&gt;
&amp;lt;binding&amp;gt;&lt;br/&gt;
    &amp;lt;from&amp;gt;com.namespace.order.(&lt;span class=&quot;error&quot;&gt;&amp;#91;a-zA-Z&amp;#93;&lt;/span&gt;+)&amp;lt;/from&amp;gt;&lt;br/&gt;
    &amp;lt;to&amp;gt;com.package.order.Order$1&amp;lt;/to&amp;gt;&lt;br/&gt;
&amp;lt;/binding&amp;gt;&lt;/p&gt;

&lt;p&gt;Bindings are matched in order, which means the most specific bindings have to be put before the generic ones.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13001331">AVRO-1903</key>
            <summary>Java package/class bindings for specific records</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="fboucher38">Frederic Boucher</reporter>
                        <labels>
                    </labels>
                <created>Tue, 30 Aug 2016 14:13:31 +0000</created>
                <updated>Thu, 24 Nov 2016 08:57:21 +0000</updated>
                                            <version>1.8.1</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="15676018" author="k.burstev" created="Fri, 18 Nov 2016 07:20:06 +0000"  >&lt;p&gt;Hey Frederic,&lt;/p&gt;

&lt;p&gt;I see little value in adding this complexity (along with possible bugs and issues) to Avro.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Java 9 will allow you to alias imports.&lt;/li&gt;
	&lt;li&gt;Schema&apos;s should be agnostic to language details&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Regarding the patch/implementation detail, I have concerns:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Relies on both class&apos;s generated by specific maven plugin, some people use some alternative generation in other build tools such as sbt, as well as the runtime Avro version.&lt;/li&gt;
	&lt;li&gt;What occurs where I have a shared generated Java bundle, yet some users are on a previous Avro 1.8.x runtime version (mainly due to other third class libraries, depending on them, Storm, Spark, general Hadoop eco-sphere)&lt;/li&gt;
	&lt;li&gt;Files written in Java on Avro 1.8.x (We have 1.5 PB of these on our Hadoop cluster) or before will not contain in their datum files the schema that has this &quot;magic&quot; mapping/binding as such will cause a ClassNotFound if using 1.8.NEW with mapping/bindings&lt;/li&gt;
	&lt;li&gt;What occurs with compatibility with c clients, where they will write Avro files without this special Java field.&lt;/li&gt;
	&lt;li&gt;Does this work with other languages such as Scala, Clojure that generally build/reuse Java implementations?&lt;/li&gt;
	&lt;li&gt;There is no testing.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Also it be great to have a discussion thread on this.&lt;/p&gt;</comment>
                            <comment id="15677224" author="fboucher38" created="Fri, 18 Nov 2016 17:32:42 +0000"  >&lt;p&gt;Hi Konstantin,&lt;/p&gt;

&lt;p&gt;It allows us to have a different naming convention for our schema and our java code and to workaround the few cases where people create schema which are named with a java keyword.&lt;/p&gt;

&lt;p&gt;This is built on the same model the Java stringType has been built: The actual schema (.avsc file) does not contain these annotations. These annotations are added to the SpecificRecord&apos;s internal schema during java code generation, are only used internally by SpecificRecord reader, and are not required to be shared with other systems/languages.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;* Relies on both class&apos;s generated by specific maven plugin, some people use some alternative generation in other build tools such as sbt, as well as the runtime Avro version.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I believe this change has no impact on other build tools.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;* What occurs where I have a shared generated Java bundle, yet some users are on a previous Avro 1.8.x runtime version (mainly due to other third class libraries, depending on them, Storm, Spark, general Hadoop eco-sphere)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If you have to share java classes generated with bindings, you wont be able to use old Avro runtime to use them.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;* Files written in Java on Avro 1.8.x (We have 1.5 PB of these on our Hadoop cluster) or before will not contain in their datum files the schema that has this &quot;magic&quot; mapping/binding as such will cause a ClassNotFound if using 1.8.NEW with mapping/bindings&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;* What occurs with compatibility with c clients, where they will write Avro files without this special Java field.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;As I explained above, the schema shared with other systems/languages does not need to know about it. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;* Does this work with other languages such as Scala, Clojure that generally build/reuse Java implementations?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I believe this won&apos;t be a problem as long they use a avro runtime compatible.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;* There is no testing.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Concerning the testing, we are happy to work on it if the community cans consider integrating this feature in Avro once all problems have been fixed.&lt;/p&gt;

&lt;p&gt;Happy to discuss further about it on a different discussion thread.&lt;/p&gt;</comment>
                            <comment id="15692686" author="k.burstev" created="Thu, 24 Nov 2016 08:57:21 +0000"  >&lt;p&gt;Thanks for replying.&lt;/p&gt;

&lt;p&gt;Unfortunately i think you&apos;ve missed the point we were trying to raise with back/forward compatibility issues.&lt;/p&gt;

&lt;p&gt;Avro has always ensured this.&lt;/p&gt;

&lt;p&gt;An Avro datum file when written by a SpecicDatumWriter stores both the binary, and the schema for that in the file.&lt;/p&gt;

&lt;p&gt;If i have a datum file written with 1.8.0 this contains both the schema and the data. At this point the schema in that datum file WILL NOT contain your magic schema props.&lt;/p&gt;

&lt;p&gt;Then if i go try read this with a process that is on 1.8.BINDINGS, when the SpecificDatumReader reads the datum file, it will read the schema, from the datum file, and try find this on the class path. Because the magic info isn&apos;t there telling it to look for a different class, it will get a class not found issue.&lt;/p&gt;

&lt;p&gt;The same issue will apply where other systems will continue to write data to hadoop without these props but consumed by the new application, generated with bindings. Older processes on earlier versions producing, and like wise other languages producing.&lt;/p&gt;

&lt;p&gt;This is different to the UTF8 / Strings, as both of these WILL be on the classpath, as such won&apos;t fail with a class not found, and will be able to get the SpecificRecord schema, and perform up conversion where expecting String, and like wise down conversion need not worry.&lt;/p&gt;

&lt;p&gt;Obviously this would become very evident if there was a good suite of tests around this, especially on backward forward compatibility, for a multi tenanted environment which Hadoop is, and Avro is quite universal.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12826188" name="AVRO-1903.patch" size="26734" author="fboucher38" created="Tue, 30 Aug 2016 14:33:53 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 18 Nov 2016 07:20:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310250" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10430"><![CDATA[Patch]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 8 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i330dz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1904] C: record with no fields should be allowed</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1904</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Avro-C should allow record with no fields.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13001587">AVRO-1904</key>
            <summary>C: record with no fields should be allowed</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="bw123">Ben Walsh</reporter>
                        <labels>
                    </labels>
                <created>Wed, 31 Aug 2016 08:32:56 +0000</created>
                <updated>Thu, 29 Nov 2018 21:47:00 +0000</updated>
                            <resolved>Thu, 29 Nov 2018 21:47:00 +0000</resolved>
                                                    <fixVersion>1.9.0</fixVersion>
                                    <component>c</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="15668063" author="githubbot" created="Tue, 15 Nov 2016 19:40:55 +0000"  >&lt;p&gt;GitHub user walshb opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/159&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/159&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1904&quot; title=&quot;C: record with no fields should be allowed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1904&quot;&gt;&lt;del&gt;AVRO-1904&lt;/del&gt;&lt;/a&gt;: C: Allow record to have no fields.&lt;/p&gt;



&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/walshb/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/walshb/avro&lt;/a&gt; avro-1904-record-no-fields&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/159.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/159.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #159&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit e2328d0cc3a644fa5cb4f9e5c8318d5033aad2fb&lt;br/&gt;
Author: Ben Walsh &amp;lt;ben.walsh@byhiras.com&amp;gt;&lt;br/&gt;
Date:   2013-08-20T08:41:46Z&lt;/p&gt;

&lt;p&gt;    C: Allow record to have no fields.&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="16703831" author="githubbot" created="Thu, 29 Nov 2018 21:24:50 +0000"  >&lt;p&gt;dkulp closed pull request #159: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1904&quot; title=&quot;C: record with no fields should be allowed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1904&quot;&gt;&lt;del&gt;AVRO-1904&lt;/del&gt;&lt;/a&gt;: C: Allow record to have no fields.&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/159&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/159&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/c/src/avro_generic_internal.h b/lang/c/src/avro_generic_internal.h&lt;br/&gt;
index dec7652a0..dd6d52d32 100644&lt;br/&gt;
&amp;#8212; a/lang/c/src/avro_generic_internal.h&lt;br/&gt;
+++ b/lang/c/src/avro_generic_internal.h&lt;br/&gt;
@@ -60,7 +60,7 @@ typedef struct avro_generic_value_iface &lt;/p&gt;
{
 
 
 #define avro_value_instance_size(gcls) \
-    ((gcls)-&amp;gt;instance_size == NULL? 0: (gcls)-&amp;gt;instance_size(&amp;amp;(gcls)-&amp;gt;parent))
+    ((gcls)-&amp;gt;instance_size == NULL ? (ssize_t)-1 : (ssize_t)(gcls)-&amp;gt;instance_size(&amp;amp;(gcls)-&amp;gt;parent))
 #define avro_value_init(gcls, self) \
     ((gcls)-&amp;gt;init == NULL? EINVAL: (gcls)-&amp;gt;init(&amp;amp;(gcls)-&amp;gt;parent, (self)))
 #define avro_value_done(gcls, self) \
diff --git a/lang/c/src/datafile.c b/lang/c/src/datafile.c
index f2da60376..95096c1f3 100644
--- a/lang/c/src/datafile.c
+++ b/lang/c/src/datafile.c
@@ -460,11 +460,13 @@ static int file_read_block_count(avro_file_reader_t r)
 		r-&amp;gt;current_blocklen = len;
 	}

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;check_prefix(rval, avro_read(r-&amp;gt;reader, r-&amp;gt;current_blockdata, len),&lt;/li&gt;
	&lt;li&gt;&quot;Cannot read file block: &quot;);&lt;br/&gt;
+	if (len &amp;gt; 0) 
{
+		check_prefix(rval, avro_read(r-&amp;gt;reader, r-&amp;gt;current_blockdata, len),
+			     &quot;Cannot read file block: &quot;);
 
-	check_prefix(rval, avro_codec_decode(r-&amp;gt;codec, r-&amp;gt;current_blockdata, len),
-		     &quot;Cannot decode file block: &quot;);
+		check_prefix(rval, avro_codec_decode(r-&amp;gt;codec, r-&amp;gt;current_blockdata, len),
+			     &quot;Cannot decode file block: &quot;);
+	}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; 	avro_reader_memory_set_source(r-&amp;gt;block_reader, (const char *) r-&amp;gt;codec-&amp;gt;block_data, r-&amp;gt;codec-&amp;gt;used_size);&lt;/p&gt;

&lt;p&gt;diff --git a/lang/c/src/generic.c b/lang/c/src/generic.c&lt;br/&gt;
index ddef81aaa..5f957b7db 100644&lt;br/&gt;
&amp;#8212; a/lang/c/src/generic.c&lt;br/&gt;
+++ b/lang/c/src/generic.c&lt;br/&gt;
@@ -551,16 +551,21 @@ avro_generic_link_init(const avro_value_iface_t *viface, void *vself)&lt;br/&gt;
 	    container_of(viface, avro_generic_link_value_iface_t, parent.parent);&lt;/p&gt;

&lt;p&gt; 	avro_value_t  *self = (avro_value_t *) vself;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;size_t  target_instance_size =&lt;br/&gt;
+	ssize_t  target_instance_size =&lt;br/&gt;
 	    avro_value_instance_size(iface-&amp;gt;target_giface);&lt;/li&gt;
	&lt;li&gt;if (target_instance_size == 0) {&lt;br/&gt;
+	if (target_instance_size &amp;lt; 0) 
{
 		return EINVAL;
 	}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; 	self-&amp;gt;iface = &amp;amp;iface-&amp;gt;target_giface-&amp;gt;parent;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;self-&amp;gt;self = avro_malloc(target_instance_size);&lt;/li&gt;
	&lt;li&gt;if (self-&amp;gt;self == NULL) {&lt;/li&gt;
	&lt;li&gt;return ENOMEM;&lt;br/&gt;
+&lt;br/&gt;
+	if (target_instance_size == 0) 
{
+		self-&amp;gt;self = NULL;
+	}
&lt;p&gt; else &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+		self-&amp;gt;self = avro_malloc(target_instance_size);+		if (self-&amp;gt;self == NULL) {
+			return ENOMEM;
+		} 	}&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; 	rval = avro_value_init(iface-&amp;gt;target_giface, self-&amp;gt;self);&lt;br/&gt;
@@ -2124,8 +2129,8 @@ avro_generic_array_class(avro_schema_t schema, memoize_state_t *state)&lt;br/&gt;
 		return NULL;&lt;br/&gt;
 	}&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;size_t  child_size = avro_value_instance_size(child_giface);&lt;/li&gt;
	&lt;li&gt;if (child_size == 0) {&lt;br/&gt;
+	ssize_t  child_size = avro_value_instance_size(child_giface);&lt;br/&gt;
+	if (child_size &amp;lt; 0) 
{
 		avro_set_error(&quot;Array item class must provide instance_size&quot;);
 		avro_value_iface_decref(&amp;amp;child_giface-&amp;gt;parent);
 		return NULL;
@@ -2780,8 +2785,8 @@ avro_generic_map_class(avro_schema_t schema, memoize_state_t *state)
 		return NULL;
 	}&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;size_t  child_size = avro_value_instance_size(child_giface);&lt;/li&gt;
	&lt;li&gt;if (child_size == 0) {&lt;br/&gt;
+	ssize_t  child_size = avro_value_instance_size(child_giface);&lt;br/&gt;
+	if (child_size &amp;lt; 0) {&lt;br/&gt;
 		avro_set_error(&quot;Map value class must provide instance_size&quot;);&lt;br/&gt;
 		avro_value_iface_decref(&amp;amp;child_giface-&amp;gt;parent);&lt;br/&gt;
 		return NULL;&lt;br/&gt;
@@ -3103,14 +3108,19 @@ avro_generic_record_class(avro_schema_t schema, memoize_state_t *state)&lt;br/&gt;
 	size_t  field_ifaces_size =&lt;br/&gt;
 		sizeof(avro_generic_value_iface_t *) * iface-&amp;gt;field_count;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;iface-&amp;gt;field_offsets = (size_t *) avro_malloc(field_offsets_size);&lt;/li&gt;
	&lt;li&gt;if (iface-&amp;gt;field_offsets == NULL) 
{
-		goto error;
-	}
&lt;p&gt;+	if (iface-&amp;gt;field_count == 0) &lt;/p&gt;
{
+		iface-&amp;gt;field_offsets = NULL;
+		iface-&amp;gt;field_ifaces = NULL;
+	}
&lt;p&gt; else &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+		iface-&amp;gt;field_offsets = (size_t *) avro_malloc(field_offsets_size);+		if (iface-&amp;gt;field_offsets == NULL) {
+			goto error;
+		}&lt;br/&gt;
 &lt;br/&gt;
-	iface-&amp;gt;field_ifaces = (avro_generic_value_iface_t **) avro_malloc(field_ifaces_size);&lt;br/&gt;
-	if (iface-&amp;gt;field_ifaces == NULL) {&lt;br/&gt;
-		goto error;&lt;br/&gt;
+		iface-&amp;gt;field_ifaces = (avro_generic_value_iface_t **) avro_malloc(field_ifaces_size);&lt;br/&gt;
+		if (iface-&amp;gt;field_ifaces == NULL) {+			goto error;+		} 	}&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; 	size_t  next_offset = sizeof(avro_generic_record_t);&lt;br/&gt;
@@ -3139,9 +3149,9 @@ avro_generic_record_class(avro_schema_t schema, memoize_state_t *state)&lt;br/&gt;
 			goto error;&lt;br/&gt;
 		}&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;size_t  field_size =&lt;br/&gt;
+		ssize_t  field_size =&lt;br/&gt;
 		    avro_value_instance_size(iface-&amp;gt;field_ifaces&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;);&lt;/li&gt;
	&lt;li&gt;if (field_size == 0) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+		if (field_size &amp;lt; 0) {
 			avro_set_error(&quot;Record field class must provide instance_size&quot;);
 			goto error;
 		}@@ -3506,9 +3516,9 @@ avro_generic_union_class(avro_schema_t schema, memoize_state_t *state) 			goto error; 		}&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;size_t  branch_size =&lt;br/&gt;
+		ssize_t  branch_size =&lt;br/&gt;
 		    avro_value_instance_size(iface-&amp;gt;branch_ifaces&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;);&lt;/li&gt;
	&lt;li&gt;if (branch_size == 0) {&lt;br/&gt;
+		if (branch_size &amp;lt; 0) 
{
 			avro_set_error(&quot;Union branch class must provide instance_size&quot;);
 			goto error;
 		}
&lt;p&gt;@@ -3518,8 +3528,8 @@ avro_generic_union_class(avro_schema_t schema, memoize_state_t *state)&lt;br/&gt;
 			i, branch_size);&lt;br/&gt;
 #endif&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (branch_size &amp;gt; max_branch_size) {&lt;/li&gt;
	&lt;li&gt;max_branch_size = branch_size;&lt;br/&gt;
+		if ((size_t)branch_size &amp;gt; max_branch_size) 
{
+			max_branch_size = (size_t)branch_size;
 		}
&lt;p&gt; 	}&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;diff --git a/lang/c/src/schema.c b/lang/c/src/schema.c&lt;br/&gt;
index 3ade1140e..d523d5569 100644&lt;br/&gt;
&amp;#8212; a/lang/c/src/schema.c&lt;br/&gt;
+++ b/lang/c/src/schema.c&lt;br/&gt;
@@ -919,10 +919,6 @@ avro_schema_from_json_t(json_t *json, avro_schema_t *schema,&lt;br/&gt;
 				return EINVAL;&lt;br/&gt;
 			}&lt;br/&gt;
 			num_fields = json_array_size(json_fields);&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (num_fields == 0) 
{
-				avro_set_error(&quot;Record type must have at least one field&quot;);
-				return EINVAL;
-			}
&lt;p&gt; 			fullname = json_string_value(json_name);&lt;br/&gt;
 			if (!fullname) {&lt;br/&gt;
 				avro_set_error(&quot;Record type must have a \&quot;name\&quot;&quot;);&lt;br/&gt;
diff --git a/lang/c/tests/CMakeLists.txt b/lang/c/tests/CMakeLists.txt&lt;br/&gt;
index 445e689a7..c66f67c68 100644&lt;/p&gt;
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/c/tests/CMakeLists.txt&lt;br/&gt;
+++ b/lang/c/tests/CMakeLists.txt&lt;br/&gt;
@@ -64,3 +64,4 @@ add_avro_test(test_refcount)&lt;br/&gt;
 add_avro_test(test_cpp test_cpp.cpp)&lt;br/&gt;
 add_avro_test(test_avro_1379)&lt;br/&gt;
 add_avro_test(test_avro_1691)&lt;br/&gt;
+add_avro_test(test_avro_1904)&lt;br/&gt;
diff --git a/lang/c/tests/schema_tests/pass/record_no_fields b/lang/c/tests/schema_tests/pass/record_no_fields&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 000000000..142f45272&lt;/li&gt;
			&lt;li&gt;/dev/null&lt;br/&gt;
+++ b/lang/c/tests/schema_tests/pass/record_no_fields&lt;br/&gt;
@@ -0,0 +1 @@&lt;br/&gt;
+
{&quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;R&quot;, &quot;fields&quot;: []}
&lt;p&gt;diff --git a/lang/c/tests/test_avro_1904.c b/lang/c/tests/test_avro_1904.c&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 000000000..ac20e20d1&lt;/p&gt;&lt;/li&gt;
			&lt;li&gt;/dev/null&lt;br/&gt;
+++ b/lang/c/tests/test_avro_1904.c&lt;br/&gt;
@@ -0,0 +1,130 @@&lt;br/&gt;
+/*&lt;br/&gt;
+ * Licensed to the Apache Software Foundation (ASF) under one or more&lt;br/&gt;
+ * contributor license agreements.  See the NOTICE file distributed with&lt;br/&gt;
+ * this work for additional information regarding copyright ownership.&lt;br/&gt;
+ * The ASF licenses this file to you under the Apache License, Version 2.0&lt;br/&gt;
+ * (the &quot;License&quot;); you may not use this file except in compliance with&lt;br/&gt;
+ * the License.  You may obtain a copy of the License at&lt;br/&gt;
+ *&lt;br/&gt;
+ * &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
+ *&lt;br/&gt;
+ * Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
+ * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or&lt;br/&gt;
+ * implied.  See the License for the specific language governing&lt;br/&gt;
+ * permissions and limitations under the License.&lt;br/&gt;
+ */&lt;br/&gt;
+&lt;br/&gt;
+#include &amp;lt;stdio.h&amp;gt;&lt;br/&gt;
+#include &amp;lt;sys/stat.h&amp;gt;&lt;br/&gt;
+#include &quot;avro.h&quot;&lt;br/&gt;
+&lt;br/&gt;
+#define NUM_RECORDS 100&lt;br/&gt;
+&lt;br/&gt;
+static const char *filename = &quot;avro_file.dat&quot;;&lt;br/&gt;
+&lt;br/&gt;
+static const char PERSON_SCHEMA[] =&lt;br/&gt;
+	&quot;
{&quot;
+	&quot;    \&quot;type\&quot;:\&quot;record\&quot;,&quot;
+	&quot;    \&quot;name\&quot;:\&quot;Person\&quot;,&quot;
+	&quot;    \&quot;fields\&quot;: [&quot;
+	&quot;    ]&quot;
+	&quot;}
&lt;p&gt;&quot;;&lt;br/&gt;
+&lt;br/&gt;
+static int read_data() &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+	int rval;+	int records_read = 0;++	avro_file_reader_t reader;+	avro_value_iface_t *iface;+	avro_value_t value;++	fprintf(stderr, &amp;quot;nReading...n&amp;quot;);++	rval = avro_file_reader(filename, &amp;amp;reader);++	if (rval) {
+		fprintf(stderr, &quot;Error: %s\n&quot;, avro_strerror());
+		return EXIT_FAILURE;
+	}++	avro_schema_t schema = avro_file_reader_get_writer_schema(reader);++	iface = avro_generic_class_from_schema(schema);+	avro_generic_value_new(iface, &amp;amp;value);++	while ((rval = avro_file_reader_read_value(reader, &amp;amp;value)) == 0) {
+		records_read++;
+		avro_value_reset(&amp;amp;value);
+	}++	avro_value_decref(&amp;amp;value);+	avro_value_iface_decref(iface);+	avro_schema_decref(schema);+	avro_file_reader_close(reader);++	fprintf(stderr, &amp;quot;read %d records.n&amp;quot;, records_read);++	if (rval != EOF || records_read != NUM_RECORDS) {
+		fprintf(stderr, &quot;Error: %s\n&quot;, avro_strerror());
+		return EXIT_FAILURE;
+	}++	return EXIT_SUCCESS;+}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+&lt;br/&gt;
+static int write_data() {&lt;br/&gt;
+	int  i;&lt;br/&gt;
+	avro_schema_t schema;&lt;br/&gt;
+	avro_schema_error_t error;&lt;br/&gt;
+	avro_file_writer_t writer;&lt;br/&gt;
+	avro_value_iface_t *iface;&lt;br/&gt;
+	avro_value_t value;&lt;br/&gt;
+&lt;br/&gt;
+	fprintf(stderr, &quot;\nWriting...\n&quot;);&lt;br/&gt;
+&lt;br/&gt;
+	if (avro_schema_from_json(PERSON_SCHEMA, 0, &amp;amp;schema, &amp;amp;error)) &lt;/p&gt;
{
+		fprintf(stderr, &quot;Unable to parse schema\n&quot;);
+		return EXIT_FAILURE;
+	}
&lt;p&gt;+&lt;br/&gt;
+	iface = avro_generic_class_from_schema(schema);&lt;br/&gt;
+	avro_generic_value_new(iface, &amp;amp;value);&lt;br/&gt;
+&lt;br/&gt;
+	if (avro_file_writer_create(filename, schema, &amp;amp;writer)) &lt;/p&gt;
{
+		fprintf(stderr, &quot;There was an error creating file: %s\n&quot;, avro_strerror());
+		return EXIT_FAILURE;
+	}
&lt;p&gt;+&lt;br/&gt;
+	for (i = 0; i &amp;lt; NUM_RECORDS; i++) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+		if (avro_file_writer_append_value(writer, &amp;amp;value)) {
+			fprintf(stderr, &quot;There was an error creating file: %s\n&quot;, avro_strerror());
+			return EXIT_FAILURE;
+		}+	}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+&lt;br/&gt;
+	if (avro_file_writer_close(writer)) &lt;/p&gt;
{
+		fprintf(stderr, &quot;There was an error creating file: %s\n&quot;, avro_strerror());
+		return EXIT_FAILURE;
+	}
&lt;p&gt;+&lt;br/&gt;
+	avro_value_iface_decref(iface);&lt;br/&gt;
+	avro_value_decref(&amp;amp;value);&lt;br/&gt;
+	avro_schema_decref(schema);&lt;br/&gt;
+&lt;br/&gt;
+	return EXIT_SUCCESS;&lt;br/&gt;
+}&lt;br/&gt;
+&lt;br/&gt;
+int main()&lt;br/&gt;
+&lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+	int read_data_result;++	if (write_data()) {
+		return EXIT_FAILURE;
+	}++	read_data_result = read_data();+	remove(filename);++	return read_data_result;+}&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12826352" name="AVRO-1904.patch" size="10030" author="bw123" created="Wed, 31 Aug 2016 08:37:19 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Nov 2016 19:40:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i331z3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1905] Backward and forward compatible</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1905</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I am under the understanding that Avro is both backward and forward compatible (for certain schema changes). But as per my test it is neither backward nor forward compatible.&lt;/p&gt;

&lt;p&gt;Maven project with avro&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;example.avro&quot;&lt;/span&gt;,
 &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
 &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;user&quot;&lt;/span&gt;,
 &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [
     {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;},
     {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;favorite_number&quot;&lt;/span&gt;,  &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt;}
 ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Producer&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;Producer {
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; (ByteArrayOutputStream outputStream = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream()) {
      user u1 = user.newBuilder().setFavoriteNumber(1).setName(&lt;span class=&quot;code-quote&quot;&gt;&quot;Amod&quot;&lt;/span&gt;).build();
      writeBinaryEncodedAvro(u1, outputStream);
      user u2 = user.newBuilder().setFavoriteNumber(2).setName(&lt;span class=&quot;code-quote&quot;&gt;&quot;Pandey&quot;&lt;/span&gt;).build();
      writeBinaryEncodedAvro(u2, outputStream);
      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(Arrays.toString(outputStream.toByteArray()));
    }
  }

  &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void writeBinaryEncodedAvro(SpecificRecord specificRecord, OutputStream os) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    BinaryEncoder binaryEncoder = EncoderFactory.get().binaryEncoder(os, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    @SuppressWarnings(&lt;span class=&quot;code-quote&quot;&gt;&quot;unchecked&quot;&lt;/span&gt;)
    DatumWriter&amp;lt;SpecificRecord&amp;gt; datumWriter =
        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SpecificDatumWriter&amp;lt;SpecificRecord&amp;gt;((&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;SpecificRecord&amp;gt;) specificRecord.getClass());
    datumWriter.write(specificRecord, binaryEncoder);
    binaryEncoder.flush();
  }

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Consumer &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;Consumer {
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] data = {8, 65, 109, 111, 100, 2, 10, 103, 114, 101, 101, 110};
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; (ByteArrayInputStream inputStream = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayInputStream(data)) {
      &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(fromBinaryMulti(inputStream));
    }
  }

  &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; user fromBinary(InputStream is) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    BinaryDecoder binaryDecoder = DecoderFactory.get().binaryDecoder(is, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    DatumReader&amp;lt;user&amp;gt; datumReader = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SpecificDatumReader&amp;lt;user&amp;gt;(user.class);
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; datumReader.read(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, binaryDecoder);
  }

  &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; List&amp;lt;user&amp;gt; fromBinaryMulti(InputStream is) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    List&amp;lt;user&amp;gt; users = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;user&amp;gt;();
    BinaryDecoder binaryDecoder = DecoderFactory.get().binaryDecoder(is, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (!binaryDecoder.isEnd()) {
      DatumReader&amp;lt;user&amp;gt; datumReader = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SpecificDatumReader&amp;lt;user&amp;gt;(user.class);
      users.add(datumReader.read(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, binaryDecoder));
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; users;
  }

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I changed the schema to &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;{&lt;span class=&quot;code-quote&quot;&gt;&quot;namespace&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;example.avro&quot;&lt;/span&gt;,
 &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;record&quot;&lt;/span&gt;,
 &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;user&quot;&lt;/span&gt;,
 &lt;span class=&quot;code-quote&quot;&gt;&quot;fields&quot;&lt;/span&gt;: [
     {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;},
     {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;favorite_number&quot;&lt;/span&gt;,  &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;&quot;&lt;/span&gt;},
     {&lt;span class=&quot;code-quote&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;favorite_color&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;string&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt;: &lt;span class=&quot;code-quote&quot;&gt;&quot;green&quot;&lt;/span&gt;}
 ]
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The following does not work.&lt;/p&gt;

&lt;p&gt;Consume code using new schema generated code cannot consume byte array generated by old schema.&lt;/p&gt;

&lt;p&gt;Consume code using old schema generated code cannot consume byte array generated with new schema.&lt;/p&gt;

&lt;p&gt;Is there a problem in the way I am trying to understand the forward or backward compatibility.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13001603">AVRO-1905</key>
            <summary>Backward and forward compatible</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="10008">Information Provided</resolution>
                                        <assignee username="busbey">Sean Busbey</assignee>
                                    <reporter username="amodpandey">Amod Kumar Pandey</reporter>
                        <labels>
                    </labels>
                <created>Wed, 31 Aug 2016 10:38:56 +0000</created>
                <updated>Wed, 31 Aug 2016 16:04:20 +0000</updated>
                            <resolved>Wed, 31 Aug 2016 16:04:18 +0000</resolved>
                                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="15452632" author="busbey" created="Wed, 31 Aug 2016 16:04:18 +0000"  >&lt;p&gt;When using Apache Avro as a serialization format, you must always know what schema was used to write the data and present that schema to the library as a part of reading.&lt;/p&gt;

&lt;p&gt;In your examples above, it appears you are attempting to read data written with &lt;em&gt;old_schema&lt;/em&gt; using only &lt;em&gt;new_schema&lt;/em&gt;, which will not work. Avro will need to know both &lt;em&gt;old_schemea&lt;/em&gt; and &lt;em&gt;new_schema&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Please use the user@avro mailing list for help with getting started using Avro: &lt;a href=&quot;http://avro.apache.org/mailing_lists.html#Users&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/mailing_lists.html#Users&lt;/a&gt;. It is easiest to do so by first subscribing to the user list and then posting your question.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 31 Aug 2016 16:04:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 20 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3322n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1906] C: allow file with no records</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1906</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description></description>
                <environment></environment>
        <key id="13001766">AVRO-1906</key>
            <summary>C: allow file with no records</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="bw123">Ben Walsh</reporter>
                        <labels>
                    </labels>
                <created>Wed, 31 Aug 2016 17:51:18 +0000</created>
                <updated>Thu, 29 Nov 2018 21:46:41 +0000</updated>
                            <resolved>Thu, 29 Nov 2018 21:46:41 +0000</resolved>
                                                    <fixVersion>1.9.0</fixVersion>
                                    <component>c</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="15668064" author="githubbot" created="Tue, 15 Nov 2016 19:41:26 +0000"  >&lt;p&gt;GitHub user walshb opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/160&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/160&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1906&quot; title=&quot;C: allow file with no records&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1906&quot;&gt;&lt;del&gt;AVRO-1906&lt;/del&gt;&lt;/a&gt;: C: Allow file with no records.&lt;/p&gt;



&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/walshb/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/walshb/avro&lt;/a&gt; avro-1906-file-no-records&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/160.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/160.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #160&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 783b3bed8ebab2c2ff8b0484e3127f9f914bc791&lt;br/&gt;
Author: Ben Walsh &amp;lt;ben.walsh@byhiras.com&amp;gt;&lt;br/&gt;
Date:   2014-05-22T14:26:40Z&lt;/p&gt;

&lt;p&gt;    C: Allow file with no records.&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="16703834" author="githubbot" created="Thu, 29 Nov 2018 21:26:26 +0000"  >&lt;p&gt;dkulp closed pull request #160: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1906&quot; title=&quot;C: allow file with no records&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1906&quot;&gt;&lt;del&gt;AVRO-1906&lt;/del&gt;&lt;/a&gt;: C: Allow file with no records.&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/160&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/160&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/c/src/datafile.c b/lang/c/src/datafile.c&lt;br/&gt;
index 95096c1f3..4dad1ba79 100644&lt;br/&gt;
&amp;#8212; a/lang/c/src/datafile.c&lt;br/&gt;
+++ b/lang/c/src/datafile.c&lt;br/&gt;
@@ -527,7 +527,9 @@ int avro_file_reader_fp(FILE *fp, const char *path, int should_close,&lt;br/&gt;
 	r-&amp;gt;current_blocklen = 0;&lt;/p&gt;

&lt;p&gt; 	rval = file_read_block_count(r);&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if (rval) {&lt;br/&gt;
+	if (rval == EOF) 
{
+		r-&amp;gt;blocks_total = 0;
+	}
&lt;p&gt; else if (rval) &lt;/p&gt;
{
 		avro_reader_free(r-&amp;gt;reader);
 		avro_codec_reset(r-&amp;gt;codec);
 		avro_freet(struct avro_codec_t_, r-&amp;gt;codec);
@@ -536,7 +538,7 @@ int avro_file_reader_fp(FILE *fp, const char *path, int should_close,
 	}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; 	*reader = r;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;return rval;&lt;br/&gt;
+	return 0;&lt;br/&gt;
 }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; int avro_file_reader(const char *path, avro_file_reader_t * reader)&lt;br/&gt;
@@ -692,10 +694,11 @@ int avro_file_reader_read(avro_file_reader_t r, avro_schema_t readers_schema,&lt;br/&gt;
 	check_param(EINVAL, r, &quot;reader&quot;);&lt;br/&gt;
 	check_param(EINVAL, datum, &quot;datum&quot;);&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;check(rval,&lt;/li&gt;
	&lt;li&gt;avro_read_data(r-&amp;gt;block_reader, r-&amp;gt;writers_schema, readers_schema,&lt;/li&gt;
	&lt;li&gt;datum));&lt;/li&gt;
	&lt;li&gt;r-&amp;gt;blocks_read++;&lt;br/&gt;
+	/* This will be set to zero when an empty file is opened.&lt;br/&gt;
+	 * Return EOF here when the user attempts to read. */&lt;br/&gt;
+	if (r-&amp;gt;blocks_total == 0) 
{
+		return EOF;
+	}&lt;br/&gt;
 &lt;br/&gt;
 	if (r-&amp;gt;blocks_read == r-&amp;gt;blocks_total) {
 		check(rval, avro_read(r-&amp;gt;reader, sync, sizeof(sync)));
@@ -704,9 +707,14 @@ int avro_file_reader_read(avro_file_reader_t r, avro_schema_t readers_schema,
 			avro_set_error(&quot;Incorrect sync bytes&quot;);
 			return EILSEQ;
 		}&lt;br/&gt;
-		/* For now, ignore errors (e.g. EOF) */&lt;br/&gt;
-		file_read_block_count(r);&lt;br/&gt;
+		check(rval, file_read_block_count(r));&lt;br/&gt;
 	}&lt;br/&gt;
+&lt;br/&gt;
+	check(rval,&lt;br/&gt;
+	      avro_read_data(r-&amp;gt;block_reader, r-&amp;gt;writers_schema, readers_schema,&lt;br/&gt;
+			     datum));&lt;br/&gt;
+	r-&amp;gt;blocks_read++;&lt;br/&gt;
+&lt;br/&gt;
 	return 0;&lt;br/&gt;
 }&lt;br/&gt;
 &lt;br/&gt;
@@ -719,6 +727,12 @@ avro_file_reader_read_value(avro_file_reader_t r, avro_value_t *value)&lt;br/&gt;
 	check_param(EINVAL, r, &quot;reader&quot;);&lt;br/&gt;
 	check_param(EINVAL, value, &quot;value&quot;);&lt;br/&gt;
 &lt;br/&gt;
+	/* This will be set to zero when an empty file is opened.&lt;br/&gt;
+	 * Return EOF here when the user attempts to read. */&lt;br/&gt;
+	if (r-&amp;gt;blocks_total == 0) {+		return EOF;+	}
&lt;p&gt;+&lt;br/&gt;
 	if (r-&amp;gt;blocks_read == r-&amp;gt;blocks_total) {&lt;br/&gt;
 		/* reads sync bytes and buffers further bytes */&lt;br/&gt;
 		check(rval, avro_read(r-&amp;gt;reader, sync, sizeof(sync)));&lt;br/&gt;
diff --git a/lang/c/tests/CMakeLists.txt b/lang/c/tests/CMakeLists.txt&lt;br/&gt;
index c66f67c68..1d533c670 100644&lt;/p&gt;
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/c/tests/CMakeLists.txt&lt;br/&gt;
+++ b/lang/c/tests/CMakeLists.txt&lt;br/&gt;
@@ -64,4 +64,5 @@ add_avro_test(test_refcount)&lt;br/&gt;
 add_avro_test(test_cpp test_cpp.cpp)&lt;br/&gt;
 add_avro_test(test_avro_1379)&lt;br/&gt;
 add_avro_test(test_avro_1691)&lt;br/&gt;
+add_avro_test(test_avro_1906)&lt;br/&gt;
 add_avro_test(test_avro_1904)&lt;br/&gt;
diff --git a/lang/c/tests/test_avro_1906.c b/lang/c/tests/test_avro_1906.c&lt;br/&gt;
new file mode 100644&lt;br/&gt;
index 000000000..574cd6d91&lt;/li&gt;
			&lt;li&gt;/dev/null&lt;br/&gt;
+++ b/lang/c/tests/test_avro_1906.c&lt;br/&gt;
@@ -0,0 +1,204 @@&lt;br/&gt;
+/*&lt;br/&gt;
+ * Licensed to the Apache Software Foundation (ASF) under one or more&lt;br/&gt;
+ * contributor license agreements.  See the NOTICE file distributed with&lt;br/&gt;
+ * this work for additional information regarding copyright ownership.&lt;br/&gt;
+ * The ASF licenses this file to you under the Apache License, Version 2.0&lt;br/&gt;
+ * (the &quot;License&quot;); you may not use this file except in compliance with&lt;br/&gt;
+ * the License.  You may obtain a copy of the License at&lt;br/&gt;
+ *&lt;br/&gt;
+ * &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
+ *&lt;br/&gt;
+ * Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
+ * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or&lt;br/&gt;
+ * implied.  See the License for the specific language governing&lt;br/&gt;
+ * permissions and limitations under the License.&lt;br/&gt;
+ */&lt;br/&gt;
+&lt;br/&gt;
+#include &amp;lt;stdio.h&amp;gt;&lt;br/&gt;
+#include &amp;lt;sys/stat.h&amp;gt;&lt;br/&gt;
+#include &quot;avro.h&quot;&lt;br/&gt;
+&lt;br/&gt;
+static const char *filename = &quot;avro_file.dat&quot;;&lt;br/&gt;
+&lt;br/&gt;
+static const char PERSON_SCHEMA[] =&lt;br/&gt;
+	&quot;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {&amp;quot;+	&amp;quot;    &amp;quot;type&amp;quot;}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;&quot;;&lt;br/&gt;
+&lt;br/&gt;
+static int read_data() &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+	int rval;+	int records_read = 0;++	avro_file_reader_t reader;+	avro_value_iface_t *iface;+	avro_value_t value;++	fprintf(stderr, &amp;quot;nReading...n&amp;quot;);++	rval = avro_file_reader(filename, &amp;amp;reader);++	if (rval) {
+		fprintf(stderr, &quot;Error: %s\n&quot;, avro_strerror());
+		return -1;
+	}++	avro_schema_t schema = avro_file_reader_get_writer_schema(reader);++	iface = avro_generic_class_from_schema(schema);+	avro_generic_value_new(iface, &amp;amp;value);++	while ((rval = avro_file_reader_read_value(reader, &amp;amp;value)) == 0) {
+		avro_value_t field;
+		int32_t val;
+		avro_value_get_by_index(&amp;amp;value, 0, &amp;amp;field, NULL);
+		avro_value_get_int(&amp;amp;field, &amp;amp;val);
+		fprintf(stderr, &quot;value = %d\n&quot;, val);
+		records_read++;
+		avro_value_reset(&amp;amp;value);
+	}++	avro_value_decref(&amp;amp;value);+	avro_value_iface_decref(iface);+	avro_schema_decref(schema);+	avro_file_reader_close(reader);++	fprintf(stderr, &amp;quot;read %d records.n&amp;quot;, records_read);++	if (rval != EOF) {
+		fprintf(stderr, &quot;Error: %s\n&quot;, avro_strerror());
+		return -1;
+	}++	return records_read;+}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+&lt;br/&gt;
+static int read_data_datum() {&lt;br/&gt;
+	int rval;&lt;br/&gt;
+	int records_read = 0;&lt;br/&gt;
+&lt;br/&gt;
+	avro_file_reader_t reader;&lt;br/&gt;
+	avro_datum_t datum;&lt;br/&gt;
+&lt;br/&gt;
+	fprintf(stderr, &quot;\nReading...\n&quot;);&lt;br/&gt;
+&lt;br/&gt;
+	rval = avro_file_reader(filename, &amp;amp;reader);&lt;br/&gt;
+&lt;br/&gt;
+	if (rval) &lt;/p&gt;
{
+		fprintf(stderr, &quot;Error using &apos;datum&apos;: %s\n&quot;, avro_strerror());
+		return -1;
+	}
&lt;p&gt;+&lt;br/&gt;
+	avro_schema_t schema = avro_file_reader_get_writer_schema(reader);&lt;br/&gt;
+&lt;br/&gt;
+	while ((rval = avro_file_reader_read(reader, schema, &amp;amp;datum)) == 0) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+		avro_datum_t val_datum;+		int32_t val;+		if (avro_record_get(datum, &amp;quot;ab&amp;quot;, &amp;amp;val_datum)) {
+			fprintf(stderr, &quot;Error getting value: %s\n&quot;, avro_strerror());
+			return -1;
+		}+		avro_int32_get(val_datum, &amp;amp;val);+		fprintf(stderr, &amp;quot;value = %dn&amp;quot;, val);+		records_read++;+		avro_datum_decref(datum);+	}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+&lt;br/&gt;
+	avro_schema_decref(schema);&lt;br/&gt;
+	avro_file_reader_close(reader);&lt;br/&gt;
+&lt;br/&gt;
+	fprintf(stderr, &quot;read %d records using &apos;datum&apos;.\n&quot;, records_read);&lt;br/&gt;
+&lt;br/&gt;
+	if (rval != EOF) &lt;/p&gt;
{
+		fprintf(stderr, &quot;Error using &apos;datum&apos;: %s\n&quot;, avro_strerror());
+		return -1;
+	}
&lt;p&gt;+&lt;br/&gt;
+	return records_read;&lt;br/&gt;
+}&lt;br/&gt;
+&lt;br/&gt;
+static int write_data(int n_records) {&lt;br/&gt;
+	int  i;&lt;br/&gt;
+	avro_schema_t schema;&lt;br/&gt;
+	avro_schema_error_t error;&lt;br/&gt;
+	avro_file_writer_t writer;&lt;br/&gt;
+	avro_value_iface_t *iface;&lt;br/&gt;
+	avro_value_t value;&lt;br/&gt;
+&lt;br/&gt;
+	fprintf(stderr, &quot;\nWriting...\n&quot;);&lt;br/&gt;
+&lt;br/&gt;
+	if (avro_schema_from_json(PERSON_SCHEMA, 0, &amp;amp;schema, &amp;amp;error)) &lt;/p&gt;
{
+		fprintf(stderr, &quot;Unable to parse schema\n&quot;);
+		return -1;
+	}
&lt;p&gt;+&lt;br/&gt;
+	if (avro_file_writer_create(filename, schema, &amp;amp;writer)) &lt;/p&gt;
{
+		fprintf(stderr, &quot;There was an error creating file: %s\n&quot;, avro_strerror());
+		return -1;
+	}
&lt;p&gt;+&lt;br/&gt;
+	iface = avro_generic_class_from_schema(schema);&lt;br/&gt;
+	avro_generic_value_new(iface, &amp;amp;value);&lt;br/&gt;
+&lt;br/&gt;
+	avro_value_t field;&lt;br/&gt;
+&lt;br/&gt;
+	avro_value_get_by_index(&amp;amp;value, 0, &amp;amp;field, NULL);&lt;br/&gt;
+	avro_value_set_int(&amp;amp;field, 123);&lt;br/&gt;
+&lt;br/&gt;
+	for (i = 0; i &amp;lt; n_records; i++) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+		if (avro_file_writer_append_value(writer, &amp;amp;value)) {
+			fprintf(stderr, &quot;There was an error writing file: %s\n&quot;, avro_strerror());
+			return -1;
+		}+	}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+&lt;br/&gt;
+	if (avro_file_writer_close(writer)) &lt;/p&gt;
{
+		fprintf(stderr, &quot;There was an error creating file: %s\n&quot;, avro_strerror());
+		return -1;
+	}
&lt;p&gt;+&lt;br/&gt;
+	avro_value_decref(&amp;amp;value);&lt;br/&gt;
+	avro_value_iface_decref(iface);&lt;br/&gt;
+	avro_schema_decref(schema);&lt;br/&gt;
+&lt;br/&gt;
+	return n_records;&lt;br/&gt;
+}&lt;br/&gt;
+&lt;br/&gt;
+static int test_n_records(int n_records) &lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+	int res = 0;++	if (write_data(n_records) != n_records) {
+		remove(filename);
+		return -1;
+	}&lt;br/&gt;
+&lt;br/&gt;
+	if (read_data() != n_records) {+		remove(filename);+		return -1;+	}++	if (read_data_datum() != n_records) {
+		remove(filename);
+		return -1;
+	}++	remove(filename);+	return 0;+}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;+&lt;br/&gt;
+int main()&lt;br/&gt;
+&lt;/p&gt;
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {+	if (test_n_records(1) &amp;lt; 0) {
+		return EXIT_FAILURE;
+	}&lt;br/&gt;
+&lt;br/&gt;
+	if (test_n_records(0) &amp;lt; 0) {+		return EXIT_FAILURE;+	}++	return EXIT_SUCCESS;+}&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12826467" name="AVRO-1906.patch" size="5014" author="bw123" created="Wed, 31 Aug 2016 17:53:18 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Nov 2016 19:41:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3332v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1907] Add logging to logical type handling in java library</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1907</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Right now we don&apos;t have any logging while handling logical type information in a Schema. In particular, we use &lt;tt&gt;LogicalTypes.fromSchemaIgnoreInvalid&lt;/tt&gt; which means when folks have a problem in their schema logical types just disappear with no debugging information.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13002056">AVRO-1907</key>
            <summary>Add logging to logical type handling in java library</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gszadovszky">Gabor Szadovszky</assignee>
                                    <reporter username="busbey">Sean Busbey</reporter>
                        <labels>
                    </labels>
                <created>Thu, 1 Sep 2016 13:42:20 +0000</created>
                <updated>Sun, 6 Nov 2016 08:30:39 +0000</updated>
                            <resolved>Sat, 5 Nov 2016 19:48:13 +0000</resolved>
                                    <version>1.8.0</version>
                                    <fixVersion>1.8.2</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="15522825" author="githubbot" created="Mon, 26 Sep 2016 11:48:17 +0000"  >&lt;p&gt;GitHub user gszadovszky opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/130&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/130&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1907&quot; title=&quot;Add logging to logical type handling in java library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1907&quot;&gt;&lt;del&gt;AVRO-1907&lt;/del&gt;&lt;/a&gt; - Add logging to logical type handling in java library&lt;/p&gt;

&lt;p&gt;    Didn&apos;t find other parts related to logical type handling where we would swallow an exception and therefore, some logging is required. &lt;br/&gt;
    Please, review and comment any idea if I should look into something more deeply.&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/gszadovszky/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/gszadovszky/avro&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1907&quot; title=&quot;Add logging to logical type handling in java library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1907&quot;&gt;&lt;del&gt;AVRO-1907&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/130.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/130.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #130&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 8810a93e00880396c7251e38defe97e3d41ba6f8&lt;br/&gt;
Author: Gabor Szadovszky &amp;lt;gabor.szadovszky@cloudera.com&amp;gt;&lt;br/&gt;
Date:   2016-09-26T11:44:25Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1907&quot; title=&quot;Add logging to logical type handling in java library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1907&quot;&gt;&lt;del&gt;AVRO-1907&lt;/del&gt;&lt;/a&gt; - Add logging to logical type handling in java library&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15640449" author="jira-bot" created="Sat, 5 Nov 2016 19:38:09 +0000"  >&lt;p&gt;Commit bf7f3934c3f33bbd1d8923bf3c33e0fe45831ec5 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gszadovszky&quot; class=&quot;user-hover&quot; rel=&quot;gszadovszky&quot;&gt;Gabor Szadovszky&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=bf7f393&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=bf7f393&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1907&quot; title=&quot;Add logging to logical type handling in java library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1907&quot;&gt;&lt;del&gt;AVRO-1907&lt;/del&gt;&lt;/a&gt;: Java: Add debug logging for invalid logical types.&lt;/p&gt;

&lt;p&gt;Contributed by Gabor Szadovszky.&lt;/p&gt;</comment>
                            <comment id="15640465" author="rdblue" created="Sat, 5 Nov 2016 19:48:13 +0000"  >&lt;p&gt;Merged #130 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gszadovszky&quot; class=&quot;user-hover&quot; rel=&quot;gszadovszky&quot;&gt;Gabor Szadovszky&lt;/a&gt;. Thanks!&lt;/p&gt;</comment>
                            <comment id="15640518" author="jira-bot" created="Sat, 5 Nov 2016 20:20:51 +0000"  >&lt;p&gt;Commit 16870af3aa3abe5e2cdc8ccc48ba4ecf20f10f9c in avro&apos;s branch refs/heads/branch-1.8 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gszadovszky&quot; class=&quot;user-hover&quot; rel=&quot;gszadovszky&quot;&gt;Gabor Szadovszky&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=16870af&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=16870af&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1907&quot; title=&quot;Add logging to logical type handling in java library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1907&quot;&gt;&lt;del&gt;AVRO-1907&lt;/del&gt;&lt;/a&gt;: Java: Add debug logging for invalid logical types.&lt;/p&gt;

&lt;p&gt;Contributed by Gabor Szadovszky.&lt;/p&gt;</comment>
                            <comment id="15640660" author="jira-bot" created="Sat, 5 Nov 2016 22:03:30 +0000"  >&lt;p&gt;Commit 454db15472ee849e58220fb714638610eb869bac in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdblue&quot; class=&quot;user-hover&quot; rel=&quot;rdblue&quot;&gt;Ryan Blue&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=454db15&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=454db15&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1907&quot; title=&quot;Add logging to logical type handling in java library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1907&quot;&gt;&lt;del&gt;AVRO-1907&lt;/del&gt;&lt;/a&gt; ADDENDUM: Do not warn when logical type name is null.&lt;/p&gt;</comment>
                            <comment id="15640664" author="jira-bot" created="Sat, 5 Nov 2016 22:05:14 +0000"  >&lt;p&gt;Commit 695efafb45f96c9d9ae0f905ef3c33fe75751612 in avro&apos;s branch refs/heads/branch-1.8 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdblue&quot; class=&quot;user-hover&quot; rel=&quot;rdblue&quot;&gt;Ryan Blue&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=695efaf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=695efaf&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1907&quot; title=&quot;Add logging to logical type handling in java library&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1907&quot;&gt;&lt;del&gt;AVRO-1907&lt;/del&gt;&lt;/a&gt; ADDENDUM: Do not warn when logical type name is null.&lt;/p&gt;</comment>
                            <comment id="15641416" author="githubbot" created="Sun, 6 Nov 2016 08:30:39 +0000"  >&lt;p&gt;Github user gszadovszky closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/130&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/130&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 26 Sep 2016 11:48:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 11 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i334vb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1908] IPC TestSpecificCompiler build is broken</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1908</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1884&quot; title=&quot;Add set source file suffix function for generate non-java file #90&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1884&quot;&gt;&lt;del&gt;AVRO-1884&lt;/del&gt;&lt;/a&gt; changed &lt;tt&gt;SpecificCompiler.makePath&lt;/tt&gt; to &lt;tt&gt;private SpecificCompiler#makePath&lt;/tt&gt;, which broke building the tests in the IPC package.&lt;/p&gt;</description>
                <environment></environment>
        <key id="13002641">AVRO-1908</key>
            <summary>IPC TestSpecificCompiler build is broken</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rdblue">Ryan Blue</assignee>
                                    <reporter username="rdblue">Ryan Blue</reporter>
                        <labels>
                    </labels>
                <created>Sun, 4 Sep 2016 21:54:07 +0000</created>
                <updated>Thu, 8 Sep 2016 16:05:27 +0000</updated>
                            <resolved>Thu, 8 Sep 2016 15:59:50 +0000</resolved>
                                                    <fixVersion>1.9.0</fixVersion>
                    <fixVersion>1.8.2</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="15463574" author="githubbot" created="Sun, 4 Sep 2016 21:57:43 +0000"  >&lt;p&gt;GitHub user rdblue opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/117&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/117&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1908&quot; title=&quot;IPC TestSpecificCompiler build is broken&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1908&quot;&gt;&lt;del&gt;AVRO-1908&lt;/del&gt;&lt;/a&gt;: Fix TestSpecificCompiler reference to private method.&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1884&quot; title=&quot;Add set source file suffix function for generate non-java file #90&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1884&quot;&gt;&lt;del&gt;AVRO-1884&lt;/del&gt;&lt;/a&gt; changed makePath to a private method from a package-private&lt;br/&gt;
    static method. This broke the test that references the method in IPC.&lt;br/&gt;
    The fix is to make the instance method package-private and update the&lt;br/&gt;
    test to use an instance of SpecificCompiler.&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/rdblue/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/rdblue/avro&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1908&quot; title=&quot;IPC TestSpecificCompiler build is broken&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1908&quot;&gt;&lt;del&gt;AVRO-1908&lt;/del&gt;&lt;/a&gt;-fix-build-after-1884&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/117.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/117.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #117&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 42cc964207170ab71ab306429ecea642e54048a0&lt;br/&gt;
Author: Ryan Blue &amp;lt;blue@apache.org&amp;gt;&lt;br/&gt;
Date:   2016-09-04T21:54:40Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1908&quot; title=&quot;IPC TestSpecificCompiler build is broken&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1908&quot;&gt;&lt;del&gt;AVRO-1908&lt;/del&gt;&lt;/a&gt;: Fix TestSpecificCompiler reference to private method.&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1884&quot; title=&quot;Add set source file suffix function for generate non-java file #90&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1884&quot;&gt;&lt;del&gt;AVRO-1884&lt;/del&gt;&lt;/a&gt; changed makePath to a private method from a package-private&lt;br/&gt;
    static method. This broke the test that references the method in IPC.&lt;br/&gt;
    The fix is to make the instance method package-private and update the&lt;br/&gt;
    test to use an instance of SpecificCompiler.&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15463575" author="rdblue" created="Sun, 4 Sep 2016 21:58:31 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;, could you review? Thanks!&lt;/p&gt;</comment>
                            <comment id="15470542" author="busbey" created="Wed, 7 Sep 2016 12:52:54 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="15474244" author="jira-bot" created="Thu, 8 Sep 2016 15:59:20 +0000"  >&lt;p&gt;Commit 4c992a58743b564fba831bb7349e3bc07fca4b8e in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdblue&quot; class=&quot;user-hover&quot; rel=&quot;rdblue&quot;&gt;Ryan Blue&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=4c992a5&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=4c992a5&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1908&quot; title=&quot;IPC TestSpecificCompiler build is broken&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1908&quot;&gt;&lt;del&gt;AVRO-1908&lt;/del&gt;&lt;/a&gt;: Fix TestSpecificCompiler reference to private method.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1884&quot; title=&quot;Add set source file suffix function for generate non-java file #90&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1884&quot;&gt;&lt;del&gt;AVRO-1884&lt;/del&gt;&lt;/a&gt; changed makePath to a private method from a package-private&lt;br/&gt;
static method. This broke the test that references the method in IPC.&lt;br/&gt;
The fix is to make the instance method package-private and update the&lt;br/&gt;
test to use an instance of SpecificCompiler.&lt;/p&gt;</comment>
                            <comment id="15474263" author="rdblue" created="Thu, 8 Sep 2016 16:05:05 +0000"  >&lt;p&gt;Thanks for reviewing &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=busbey&quot; class=&quot;user-hover&quot; rel=&quot;busbey&quot;&gt;Sean Busbey&lt;/a&gt;!&lt;/p&gt;</comment>
                            <comment id="15474265" author="githubbot" created="Thu, 8 Sep 2016 16:05:27 +0000"  >&lt;p&gt;Github user rdblue closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/117&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/117&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="12990761">AVRO-1885</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 4 Sep 2016 21:57:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 19 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i338gn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
