<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:13:07 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2009-12-8+AND+created+%3C%3D+2009-12-15+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="7" total="7"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-250] reflect&apos;s Union annotation should be applicable to method parameters and return types</title>
                <link>https://issues.apache.org/jira/browse/AVRO-250</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Some interface method parameters may optionally be null, which Avro&apos;s reflection does not normally allow.  Similarly, some methods may return null instead of an instance of their declared return type.  Avro&apos;s Union annotation should permit one to annotate such parameters and methods so that the correct schema is inferred.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12442780">AVRO-250</key>
            <summary>reflect&apos;s Union annotation should be applicable to method parameters and return types</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Tue, 8 Dec 2009 23:00:14 +0000</created>
                <updated>Mon, 1 Mar 2010 17:09:12 +0000</updated>
                            <resolved>Thu, 10 Dec 2009 22:07:35 +0000</resolved>
                                                    <fixVersion>1.3.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12787806" author="cutting" created="Tue, 8 Dec 2009 23:43:30 +0000"  >&lt;p&gt;Here&apos;s a patch that implements this.&lt;/p&gt;</comment>
                            <comment id="12788933" author="philip" created="Thu, 10 Dec 2009 21:23:35 +0000"  >&lt;p&gt;+1.  Looks good.&lt;/p&gt;

&lt;p&gt;One thing that you could add a test for is to make sure that the correct methods are getting chosen by SpecificResponder.respond().  Specifically, reflect should fail clearly if there are multiple methods named the same.  But I&apos;m content with that being tested implicitly, too.&lt;/p&gt;</comment>
                            <comment id="12788965" author="cutting" created="Thu, 10 Dec 2009 22:07:35 +0000"  >&lt;p&gt;I just committed this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12427394" name="AVRO-250.patch" size="8316" author="cutting" created="Tue, 8 Dec 2009 23:43:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 10 Dec 2009 21:23:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94577</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 7 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dz6f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79629</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-251] add schema for schemas</title>
                <link>https://issues.apache.org/jira/browse/AVRO-251</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;A schema for schemas would permits schemas to be written in binary.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12443053">AVRO-251</key>
            <summary>add schema for schemas</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Fri, 11 Dec 2009 00:53:49 +0000</created>
                <updated>Fri, 5 Sep 2014 17:09:41 +0000</updated>
                                                                            <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                <comments>
                            <comment id="12789058" author="cutting" created="Fri, 11 Dec 2009 01:00:20 +0000"  >&lt;p&gt;Here&apos;s an early version of this.  It defines org.apache.avro.meta.SchemaDef.  We still need a method that converts this to an org.apache.avro.Schema, which should not be hard to write.&lt;/p&gt;

&lt;p&gt;Alternately, we could rely on ValidatingEncoder and ValidatingDecoder, and add methods directly to Schema.java to read/write a schema in binary according to this schema declaration.&lt;/p&gt;</comment>
                            <comment id="12789612" author="cutting" created="Fri, 11 Dec 2009 23:45:57 +0000"  >&lt;p&gt;Here&apos;s a new, complete version of this.  It directly encodes and decodes schemas.&lt;/p&gt;

&lt;p&gt;JsonNode#equals() doesn&apos;t seem to do what I expect, so I had to modify Schema.Field.equals() to use string comparison of default values.  I wonder if we even need to serialize default values.  The typical application of this code is to efficiently store the schema used to write data with that data.  In this case, the default value is never used and just adds baggage.  (Default values are only used when reading data written by a schema that lacks that value.)  This patch would also be simplified somewhat if we didn&apos;t need to read/write arbitrary json for default values, although it might be a shame to discard this json-in-avro implementation.&lt;/p&gt;</comment>
                            <comment id="12789741" author="thiru_mg" created="Sat, 12 Dec 2009 13:51:21 +0000"  >&lt;p&gt;It&apos;s unfortunate that if you serialize an Avro schema using JSON encoder and schema for schema, it won&apos;t match the standard JSON version of the schema. I don&apos;t think it&apos;ll be possible to fix the JSON encoder to match the standard JSON version. But we can do the other way around. Though it&apos;s desirable to have this property, it&apos;ll be cause incompatibility with the existing schemas and I think the schema will become harder for humans to read.&lt;/p&gt;

&lt;p&gt;Since the &quot;order&quot; field of the record is optional, it should be a union of null and Enum in the schema.&lt;/p&gt;</comment>
                            <comment id="12789825" author="philip" created="Sun, 13 Dec 2009 00:08:22 +0000"  >&lt;p&gt;I haven&apos;t had a chance to fully grok the changes to Schema.java yet (particularly the writeSchema() code), but here&apos;s what I&apos;ve been reviewing so far...&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;I wonder if we even need to serialize default values.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It depends on what the goal of a binary schema is.  If we want to preserve the entire nuance of the writing schema, we should keep the defaults.  In protocol buffers, it&apos;s sometimes the case that the default values aren&apos;t materialized, because a missing value gets read as the default (this assumes same read and write schema).  That&apos;s not the case here: it&apos;s actually valid to evolve a schema by changing the default value (this is not really valid in PBs).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Schema.Field.equals() to use string comparison of default values&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This deserves a quick comment in the code.  It&apos;s nuanced enough that someone might trip up over it later.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;names.space(savedSpace);                  // restore space&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I suspect this was a bug before (not popping back the previous space).  I didn&apos;t see a test for it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;avro/Schema.m4&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I should finish off &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-152&quot; title=&quot;Adding &amp;quot;doc&amp;quot; to record schemas, a la javadoc field and class comments.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-152&quot;&gt;&lt;del&gt;AVRO-152&lt;/del&gt;&lt;/a&gt; so there could be comments in here.&lt;/p&gt;

&lt;p&gt;One thing I noticed is that you don&apos;t store &quot;other&quot; fields.  For example, in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-152&quot; title=&quot;Adding &amp;quot;doc&amp;quot; to record schemas, a la javadoc field and class comments.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-152&quot;&gt;&lt;del&gt;AVRO-152&lt;/del&gt;&lt;/a&gt; I introduce adding &quot;doc&quot; to records and protocols.  And, of course, you&apos;ve been using the ability to write arbitrary extra fields to implement the reflection API.  I could see either storing or not storing extra stuff; I think it&apos;s quite similar to the question of whether or not to store defaults.&lt;/p&gt;

&lt;p&gt;Do you think it would be useful to have a hook at the schema type to have a way to evolve it?  Should it be a union?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;src/schemata/org/json/Json.avsc: {&quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;Field&quot;,&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think you should call this &quot;object&quot; to follow the JSON terminology.  See &lt;a href=&quot;http://www.json.org/fatfree.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.json.org/fatfree.html&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;I&apos;m also not sure about putting this into &quot;org.json&quot;.  &quot;org.apache.avro.json&quot;, perhaps?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;//System.out.println(new String(data, &quot;UTF-8&quot;));&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ditch it?&lt;/p&gt;
</comment>
                            <comment id="12789949" author="philip" created="Sun, 13 Dec 2009 21:45:20 +0000"  >&lt;p&gt;More thoughts:&lt;/p&gt;

&lt;p&gt;My main reservation here is using the Decoder/Encoder API (instead of a higher-level one) for decoding and encoding the binary form.&lt;/p&gt;

&lt;p&gt;If you&apos;re curious, Protocol Buffer&apos;s version of the PB that describes PBs is at &lt;a href=&quot;http://code.google.com/p/protobuf/source/browse/trunk/src/google/protobuf/descriptor.proto&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/protobuf/source/browse/trunk/src/google/protobuf/descriptor.proto&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Default values&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thinking about &lt;b&gt;default values&lt;/b&gt; once more, I think you could encode them in binary.  Store them in a &quot;bytes&quot; type, and force users to decode them according to the schema that the default value corresponds to.  More compact, and no JSON conceptual dependency.  (This pattern is generally sometimes useful: &quot;dynamic schemas&quot; within an avro file.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;public abstract void writeIndex(int unionIndex)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is Encoder.java a public api?  Is it too late to rename writeIndex to writeUnionTag?  Had to scratch my head there until I looked at the code.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;private static final int NAME_INDEX = Type.values().length;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;From a maintainability perspective, it scares me that Type.values() has to be kept in sync with the order of the types in the union in Schema.m4.  The &quot;string&quot; that corresponds to NAME_INDEX in Schema.m4 deserves a comment; it&apos;s a pretty different category than the others.  It seems that instead of string, it could be a record (that contains a string) called &quot;reference&quot;, or just use a comment.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;writeSchema...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This method uses the Encoder API to write an AVRO record.  Is there a reason not to use the Specific or Generic APIs instead?&lt;/p&gt;

&lt;p&gt;I think the same thing about readSchema().&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;readJson()&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Is this method decoding AVRO&apos;s json schema into JSON objects?  You should spell that out more clearly; there are a lot of different things json could refer to in this class.&lt;/p&gt;
</comment>
                            <comment id="12790283" author="cutting" created="Mon, 14 Dec 2009 18:48:18 +0000"  >&lt;p&gt;Thiru&amp;gt; it won&apos;t match the standard JSON version of the schema [ ... ]&lt;/p&gt;

&lt;p&gt;Yes, but I don&apos;t expect folks to use this for anything but binary (which I should better document).  This schema representation is really only useful when schemas are written out frequently, and should then be written more efficiently than they can be with JSON.  It&apos;s not aesthetically ideal, but still useful, and I fear forcing the JSON encodings to correspond would be impractical for reasons you indicate.&lt;/p&gt;

&lt;p&gt;Thiru&amp;gt; Since the &quot;order&quot; field of the record is optional, it should be a union of null and Enum in the schema.&lt;/p&gt;

&lt;p&gt;It&apos;s not optional.  It has a default value in the Java API, but it&apos;s always specified for every field.  If it were such a union then its binary encoding would be larger.&lt;/p&gt;

&lt;p&gt;Philip&amp;gt; If we want to preserve the entire nuance of the writing schema, we should keep the defaults.&lt;/p&gt;

&lt;p&gt;Note that this currently does not preserve every nuance, e.g., user properties.  So my vote is to remove default values as well.&lt;/p&gt;

&lt;p&gt;A container that stores lots of binary schemas would be wise to include one copy of the JSON schema-for-schemas, so that, if that meta-schema changes, the data can still be processed.  This representation should contain only what&apos;s required to decode data, and its documentation should note that.  It should only contain things that are required of &quot;actual&quot; schemas, and applications can interpret with an &quot;expected&quot; schema that contains default values, user properties, etc.&lt;/p&gt;

&lt;p&gt;Philip&amp;gt; I suspect this was a bug before (not popping back the previous space). I didn&apos;t see a test for it.&lt;/p&gt;

&lt;p&gt;Good point.  Yes, it is a pre-existing bug triggered here by the inclusion of the Json schema from a different namespace in the Schema schema, so this patch does add a test, but not an explicit one.  I&apos;ve filed &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-255&quot; title=&quot;schema namespace should be lexically scoped&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-255&quot;&gt;&lt;del&gt;AVRO-255&lt;/del&gt;&lt;/a&gt; for this.  (This schema also identified &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-256&quot; title=&quot;specific: class names can clash in imports&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-256&quot;&gt;&lt;del&gt;AVRO-256&lt;/del&gt;&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;Philip&amp;gt; Do you think it would be useful to have a hook at the schema type to have a way to evolve it? Should it be a union?&lt;/p&gt;

&lt;p&gt;It is in fact a union, wrapped in a record to give it a name.  But, no, I think the best way to evolve it is for containers to keep a copy of the meta schema, as with any other and build on Avro&apos;s evolution mechanisms.  Worst case, if an application neglects to store a copy and this schema changes in a subsequent release, the application can always go back to the prior release and retrieve it and use it as the &quot;actual&quot; schema while using the new release&apos;s version as &quot;expected&quot;.&lt;/p&gt;

&lt;p&gt;Philip&amp;gt; I think you should call this &quot;object&quot; to follow the JSON terminology.&lt;/p&gt;

&lt;p&gt;It&apos;s not a JSON object but a &quot;key value pair&quot; within an object.  So perhaps we should call it KeyValuePair?  Note though that if we drop default values we don&apos;t need this schema here anyway.  This code could however still be useful for a command-line tool that takes arbitrary Json input and encodes it in an Avro data file, and then for MapReduce programs that process Json-format generic data.  It&apos;s nice to see how little code is required to incorporate full JSON data into Avro.&lt;/p&gt;

&lt;p&gt;Philip&amp;gt; From a maintainability perspective, it scares me that Type.values() has to be kept in sync with the order of the types in the union in Schema.m4&lt;/p&gt;

&lt;p&gt;There are two things that protect us here:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;We have unit tests that attempt to exhaustively test this encoding/decoding code.  So it&apos;s in that sense its as safe as our DatumReader/DatumWriter implementations.  But if this were our only protection, it would not be a programming style we&apos;d recommend for applications.  Except,&lt;/li&gt;
	&lt;li&gt;We have ValidatingEncoder and ValidatingDecoder.  Folks who use this programming style who do not develop exhaustive test suites should be strongly advised to only use it with ValidatingEncoder and ValidatingDecoder.  When I initially wrote this code there were a few errors (I forgot to read/write null values) that were caught by the validator.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This &quot;event based&quot; programming style requires only a bit more coding than wrapper classes, but saves a level of redirection and/or copies.  It also works well for applications whose serialized data does not correspond directly to in-memory structures (e.g., a streaming application with array values too large to fit in memory).  The validators make it practical.&lt;/p&gt;

&lt;p&gt;Philip&amp;gt; It seems that instead of string, it could be a record (that contains a string) called &quot;reference&quot;&lt;/p&gt;

&lt;p&gt;That&apos;s a good idea.  Using the event-style, the code need not actually change, nor would the serialized representation, only the schema.&lt;/p&gt;</comment>
                            <comment id="12790298" author="philip" created="Mon, 14 Dec 2009 19:13:32 +0000"  >&lt;p&gt;Does the serialization and deserialization to binary schemas belong in Schema.java or does it belong in a nearby class?  I think the usecase for it (I know you have one in mind, and we&apos;re hinting at it in this JIRA) ought to be spelled out in the JavaDoc for the appropriate methods.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Note that this currently does not preserve every nuance, e.g., user properties. So my vote is to remove default values as well.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If you&apos;re not preserving user properties, I&apos;m +1 for killing the defaults.  This leaves us in a place where we have representations of schemas that, without other representations, we can&apos;t read data with.  (The way I think of it, we always need two schemas: the schema the data was written with, and the schema the data is being read with.  We can use the binary version for the former, but not the latter.  Is that right?  Do we have names for these two schemas?)&lt;/p&gt;

&lt;p&gt;If you were inclined towards keeping the defaults, I would keep pushing for storing them as avro-encoded binary bytes.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It&apos;s nice to see how little code is required to incorporate full JSON data into Avro.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, that JSON itself has a small schema is re-assuring.  I&apos;m +1 for taking this out of this patch, but separately producing a tool to represent &quot;binary JSON&quot; in Avro.&lt;/p&gt;

&lt;p&gt;Just to be sure we&apos;ve thought of it, one alternative is to ditch the whole binary representation and store the original schema in Avro-encoded binary JSON.  I actually prefer schemas to be typed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This &quot;event based&quot; programming style requires only a bit more coding than wrapper classes, but saves a level of redirection and/or copies.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I appreciate that with ValidatingEncoder we get a sense of security.  But I have a hard time buying the performance argument here.  I think you would agree that using either the specific (my preference) API or the generic API would be clearer from a code perspective.  If the performance of the specific API is crap, then we need to measure it and fix it: after all, that is the API Avro recommends people to use.  Considering that set of schemas in a program should have small cardinality, and the binary representation could be cached, speed doesn&apos;t seem paramount here.&lt;/p&gt;

&lt;p&gt;I agree that event-based models are very useful for things that, say, don&apos;t fit into memory readily.  Schemas pretty much have to fit into memory readily, so I don&apos;t think the case applies here.&lt;/p&gt;
</comment>
                            <comment id="12790333" author="cutting" created="Mon, 14 Dec 2009 20:26:42 +0000"  >&lt;p&gt;&amp;gt; I think the usecase for it (I know you have one in mind, and we&apos;re hinting at it in this JIRA)&lt;/p&gt;

&lt;p&gt;I think you&apos;re referring to &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-160&quot; title=&quot;file format should be friendly to streaming&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-160&quot;&gt;&lt;del&gt;AVRO-160&lt;/del&gt;&lt;/a&gt;.  That&apos;s indeed what instigated this last week, but over the weekend I&apos;ve since had second thoughts about actually using it there.  I still believe this is useful for some applications, but, if folks agree with me about &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-160&quot; title=&quot;file format should be friendly to streaming&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-160&quot;&gt;&lt;del&gt;AVRO-160&lt;/del&gt;&lt;/a&gt;, then committing this is not urgent.&lt;/p&gt;

&lt;p&gt;&amp;gt; one alternative is to ditch the whole binary representation and store the original schema in Avro-encoded binary JSON.&lt;/p&gt;

&lt;p&gt;I like that idea.  It&apos;d be bigger than with the schema here, since all of the Avro keywords will be included, but it will still be considerably smaller and faster than textual JSON.  Plus the specification for JSON is much less likely to change, so its schema is likely to be much more stable and hence its less risky to assume that schema as a system constant.&lt;/p&gt;

&lt;p&gt;&amp;gt; I think you would agree that using either the specific (my preference) API or the generic API would be clearer from a code perspective.&lt;/p&gt;

&lt;p&gt;Perhaps a bit, but not much.  It adds an intermediate representation, which has some cognitive overhead, which this code does not.  This code instead requires some understanding of Avro&apos;s encoder/decoder API.  I don&apos;t think that would reduce the code size by more than perhaps 10%, and I don&apos;t think it would be much more robust.  Efficiently mapping the union branch classes to Schema subclasses would require something like a Map&amp;lt;Class,Schema.Type&amp;gt;.  This table could be built by processing the schema, rather than as this patch does by assuming that the Schema.Type enum is sync&apos;d with the union.  But we could change this patch to build that mapping from the schema too if we are particularly concerned about that.&lt;/p&gt;

&lt;p&gt;I actually generated the specific code first, and considered writing it that way, but it felt like more work to me.&lt;/p&gt;</comment>
                            <comment id="12835132" author="scott_carey" created="Thu, 18 Feb 2010 06:28:50 +0000"  >&lt;p&gt;I am using DataFileReader/Writer and the header is about 5K in size because the whole schema is in text.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure if the approach in this ticket is best for the file format, but some way to persist a schema in a compact form would be useful.  A binary format would be smaller, but every field and type would still have to be there in text.  Maybe, for the data file we could just store the schema as the string, deflate compressed.  That might be computationally more expensive for a compact schema representation, but it could be clean in general &amp;#8211; if the first character in a byte[] that represents a schema is a special marker value (that is invalid in JSON), then the remaining bytes are compressed json, otherwise its utf-8 json.&lt;/p&gt;

&lt;p&gt;My largest schema is 6.3k as a string including whitespace &apos;pretty printed&apos;, and 4.9k without whitespace as printed by Schema.toString().&lt;br/&gt;
It is 1.3k compressed by gzip -5 or higher,  and 1.5k by gzip -1.&lt;/p&gt;</comment>
                            <comment id="12835330" author="cutting" created="Thu, 18 Feb 2010 18:49:48 +0000"  >&lt;p&gt;Might we instead add a metadata field like, &quot;avro.schema.codec&quot;?&lt;/p&gt;</comment>
                            <comment id="12835392" author="scott_carey" created="Thu, 18 Feb 2010 20:50:19 +0000"  >&lt;p&gt;Yeah, in the file format case that is simpler.&lt;/p&gt;

&lt;p&gt;In the general case of serializing a schema compactly, compression may be an option.  Schema could have a constructor or factory that takes a byte[] and a corresponding serializer method that returns a the schema as a set of compressed bytes.&lt;/p&gt;</comment>
                            <comment id="12892868" author="waterdragon" created="Tue, 27 Jul 2010 17:40:21 +0000"  >&lt;p&gt;While it is certainly nice to be able to serialize to binary I suspect that having complete meta will enable a lot more applications than you would expect. I am working on one in particular where I need this schema but I need it to be complete. I need the &quot;other&quot; fields mentioned above. As it stands in this patch my application needs:&lt;/p&gt;

&lt;p&gt;Record: name, namespace, and doc fields.&lt;br/&gt;
Field: doc.&lt;br/&gt;
Enum: namespace.&lt;br/&gt;
Order is not a union with null. (Already mentioned)&lt;/p&gt;

&lt;p&gt;For what I am writing I need these in the meta-data to be able to drive things and it would be nice if they were offered as officially supported meta-data so that it is maintained as Avro evolves and my application can adapt to new versions via this meta-data when I drop a new Avro jar in instead of having to maintain it myself.&lt;/p&gt;</comment>
                            <comment id="13028222" author="noble.paul" created="Tue, 3 May 2011 13:33:21 +0000"  >&lt;p&gt;We have a use case where we send messages (over a message bus) using avro format. Because these are one way messages, handshake is not an option. With the binary encoding we should be able to dramatically reduce the payload&lt;/p&gt;</comment>
                            <comment id="13028305" author="cutting" created="Tue, 3 May 2011 16:56:15 +0000"  >&lt;p&gt;Paul, In the current patch the binary schema format does not preserve all schema attributes, e.g., documentation strings, keeping the representation smaller and faster.  If all attributes are required one could use the read/writeJson() methods in this class to serialize schemas, or we could enhance the patch.&lt;/p&gt;

&lt;p&gt;Another approach to one-way messaging is to have senders schemas registered in a shared database, and refer to them by a numeric ID in each message sent.  The receiver can then lookup the ID in the database.  Access to the database is cached.&lt;/p&gt;

&lt;p&gt;Nick, the current patch does not preserve documentation, but does preserve namespace and order correctly.  The patch is out of date with trunk, however.&lt;/p&gt;</comment>
                            <comment id="13028576" author="noble.paul" created="Wed, 4 May 2011 03:45:24 +0000"  >&lt;p&gt;I see that the current patch is not complete. The most important requirement is to keep it as compact as possible. All that we need to deserialize a message is just the field names and types.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Another approach to one-way messaging is to have senders schemas registered in a shared database..&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We are exploring that approach. The problem is that it adds an extra element to the deployment (which can be another failure point in the system). Moreover, it is error prone if we rely on manually keeping the repository up-to-date&lt;/p&gt;
</comment>
                            <comment id="13028878" author="cutting" created="Wed, 4 May 2011 18:27:02 +0000"  >&lt;p&gt;I think the patch is/was complete, it just no longer applies cleanly to trunk.  If it looks like it meets your needs I could work to update it.&lt;/p&gt;</comment>
                            <comment id="13029256" author="noble.paul" created="Thu, 5 May 2011 09:55:17 +0000"  >&lt;p&gt;It will be helpful if I can get this patch up to date with trunk&lt;/p&gt;</comment>
                            <comment id="13030133" author="cutting" created="Fri, 6 May 2011 20:55:34 +0000"  >&lt;p&gt;Here&apos;s an updated version of this that applies to trunk.  It fails two tests, one in testRecord that&apos;s expected, since it doesn&apos;t preserve record properties.  The other is in testComplexUnions and I&apos;ve not yet debugged that.  But it&apos;s still probably good enough for you to evaluate.&lt;/p&gt;</comment>
                            <comment id="13030260" author="noble.paul" created="Sat, 7 May 2011 02:33:59 +0000"  >&lt;p&gt;Thanks Doug, I&apos;ll test this and post my findings&lt;/p&gt;</comment>
                            <comment id="14123168" author="theduderog" created="Fri, 5 Sep 2014 17:09:41 +0000"  >&lt;p&gt;I wanted to try this out to see if encoding the binary schema would be small enough to send it with messages in an messaging/RPC context.  Since the patch was last updated in 2011, I tried applying it to the 1.5 branch.&lt;/p&gt;

&lt;p&gt;I&apos;m getting this error trying to use the avro-maven-plugin to compile the ipc module.  Any ideas?&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Failed to execute goal org.apache.avro:avro-maven-plugin:1.5.5-SNAPSHOT:schema (schemas) on project avro-ipc: Execution schemas of goal org.apache.avro:avro-maven-plugin:1.5.5-SNAPSHOT:schema failed: An API incompatibility was encountered while executing org.apache.avro:avro-maven-plugin:1.5.5-SNAPSHOT:schema: java.lang.ExceptionInInitializerError: null&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; -----------------------------------------------------&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; realm =    plugin&amp;gt;org.apache.avro:avro-maven-plugin:1.5.5-SNAPSHOT&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/org/apache/avro/avro-maven-plugin/1.5.5-SNAPSHOT/avro-maven-plugin-1.5.5-SNAPSHOT.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/org/apache/avro/avro-maven-plugin/1.5.5-SNAPSHOT/avro-maven-plugin-1.5.5-SNAPSHOT.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.1/plexus-interpolation-1.1.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.1/plexus-interpolation-1.1.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.5/plexus-utils-1.5.5.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.5/plexus-utils-1.5.5.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;4&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/org/apache/maven/shared/file-management/1.2.1/file-management-1.2.1.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/org/apache/maven/shared/file-management/1.2.1/file-management-1.2.1.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;5&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/org/apache/maven/shared/maven-shared-io/1.1/maven-shared-io-1.1.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/org/apache/maven/shared/maven-shared-io/1.1/maven-shared-io-1.1.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;6&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/org/apache/avro/avro-compiler/1.5.5-SNAPSHOT/avro-compiler-1.5.5-SNAPSHOT.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/org/apache/avro/avro-compiler/1.5.5-SNAPSHOT/avro-compiler-1.5.5-SNAPSHOT.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;7&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/org/apache/avro/avro/1.5.5-SNAPSHOT/avro-1.5.5-SNAPSHOT.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/org/apache/avro/avro/1.5.5-SNAPSHOT/avro-1.5.5-SNAPSHOT.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;8&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.3/jackson-mapper-asl-1.7.3.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.7.3/jackson-mapper-asl-1.7.3.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;9&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.3/jackson-core-asl-1.7.3.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.7.3/jackson-core-asl-1.7.3.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;10&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;11&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/org/xerial/snappy/snappy-java/1.0.3.2/snappy-java-1.0.3.2.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/org/xerial/snappy/snappy-java/1.0.3.2/snappy-java-1.0.3.2.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;12&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;13&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;14&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;15&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; urls&lt;span class=&quot;error&quot;&gt;&amp;#91;16&amp;#93;&lt;/span&gt; = &lt;a href=&quot;file:/Users/rhoover/.m2/repository/org/slf4j/slf4j-simple/1.6.1/slf4j-simple-1.6.1.jar&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/Users/rhoover/.m2/repository/org/slf4j/slf4j-simple/1.6.1/slf4j-simple-1.6.1.jar&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; Number of foreign imports: 1&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; import: Entry[import  from realm ClassRealm&lt;span class=&quot;error&quot;&gt;&amp;#91;maven.api, parent: null&amp;#93;&lt;/span&gt;]&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; &lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ERROR&amp;#93;&lt;/span&gt; -----------------------------------------------------: java.io.EOFException: No content to map to Object due to end of input&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12539716">AVRO-1006</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12458699">AVRO-456</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12478469" name="AVRO-251.patch" size="17007" author="cutting" created="Fri, 6 May 2011 20:55:34 +0000"/>
                            <attachment id="12427795" name="AVRO-251.patch" size="19413" author="cutting" created="Fri, 11 Dec 2009 23:45:57 +0000"/>
                            <attachment id="12427665" name="AVRO-251.patch" size="4865" author="cutting" created="Fri, 11 Dec 2009 01:00:20 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 12 Dec 2009 13:51:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94578</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 20 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dz6n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79630</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-252] Add a tell() method to DataFileReader.java which returns the position in a file</title>
                <link>https://issues.apache.org/jira/browse/AVRO-252</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;A RecordReader needs to be able to get the current position in the file to determine when it has reached the end of a file split and to handle errors. This improvement will add a tell() method to DataFileReader.java which returns the position in a file. The position returned by the tell() method will only change when crossing a block boundary in a file. The position does not increment as DataFileReader.java processes data within a block. &lt;/p&gt;

&lt;p&gt;This will allow a RecordReader to do a simple check for when the position returned by tell() is past the end of a file split to know when to stop reading. The RecordReader will also be able to recover from errors by calling sync(tell()) to sync to the next block and attempting to continue reading. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12443117">AVRO-252</key>
            <summary>Add a tell() method to DataFileReader.java which returns the position in a file</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="6">Invalid</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="rsgoodman">Robert  Goodman</reporter>
                        <labels>
                    </labels>
                <created>Fri, 11 Dec 2009 17:11:00 +0000</created>
                <updated>Mon, 1 Mar 2010 17:09:13 +0000</updated>
                            <resolved>Tue, 12 Jan 2010 02:33:27 +0000</resolved>
                                                    <fixVersion>1.3.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12799029" author="rsgoodman" created="Tue, 12 Jan 2010 02:33:27 +0000"  >&lt;p&gt;I&apos;m marking this issue as Invalid because of the changes made to DataFilereader.java in the trunk. The intent of adding the tell() method was to allow a record reader to determine when it had reached the end of the file split and the pastSync(position) method now provides this functionality. &lt;/p&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94579</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 2 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dz6v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79631</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310192" key="com.atlassian.jira.plugin.system.customfieldtypes:textarea">
                        <customfieldname>Release Note</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Add a tell() method to DataFileReader.java which returns the position in a file</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-253] Spec should indicate rules for forming full name from &quot;name&quot; and &quot;namespace&quot; properties for named schemas</title>
                <link>https://issues.apache.org/jira/browse/AVRO-253</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;In the Java implementation of Avro, there exists logic for forming the full name of a named schema (see &lt;a href=&quot;http://svn.apache.org/viewvc/hadoop/avro/trunk/src/java/org/apache/avro/Schema.java?view=markup&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/hadoop/avro/trunk/src/java/org/apache/avro/Schema.java?view=markup&lt;/a&gt;). We should document this procedure, and add some unit tests to ensure correct behavior across languages.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12443235">AVRO-253</key>
            <summary>Spec should indicate rules for forming full name from &quot;name&quot; and &quot;namespace&quot; properties for named schemas</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="hammer">Jeff Hammerbacher</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Dec 2009 06:34:02 +0000</created>
                <updated>Mon, 1 Mar 2010 17:09:13 +0000</updated>
                            <resolved>Tue, 12 Jan 2010 22:16:01 +0000</resolved>
                                                    <fixVersion>1.3.0</fixVersion>
                                    <component>spec</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12790987" author="cutting" created="Tue, 15 Dec 2009 22:19:54 +0000"  >&lt;p&gt;Here&apos;s a patch for this.&lt;/p&gt;</comment>
                            <comment id="12790994" author="hammer" created="Tue, 15 Dec 2009 22:26:15 +0000"  >&lt;p&gt;+1, lgtm. Thanks Doug! This clarification makes the implementation a bit easier.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12444608">AVRO-284</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12438266">AVRO-153</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12428090" name="AVRO-253.patch" size="4004" author="cutting" created="Tue, 15 Dec 2009 22:19:54 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Dec 2009 22:19:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94580</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 6 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dz73:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79632</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-254] Add *~ and \#*\# to .gitignore</title>
                <link>https://issues.apache.org/jira/browse/AVRO-254</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I develop in emacs, which likes to leave around a bunch of &amp;#42;~ (last revision) and &amp;#35;*&amp;#35; (auto-saved copy of working files) files. Not a big deal, but would be helpful to me to add these files to .gitignore.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12443236">AVRO-254</key>
            <summary>Add *~ and \#*\# to .gitignore</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="hammer">Jeff Hammerbacher</assignee>
                                    <reporter username="hammer">Jeff Hammerbacher</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Dec 2009 07:13:58 +0000</created>
                <updated>Tue, 13 Dec 2011 19:10:04 +0000</updated>
                            <resolved>Mon, 4 Jan 2010 15:58:14 +0000</resolved>
                                                                    <component>build</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12793077" author="hammer" created="Mon, 21 Dec 2009 04:18:27 +0000"  >&lt;p&gt;Poke?&lt;/p&gt;</comment>
                            <comment id="12795196" author="cutting" created="Tue, 29 Dec 2009 23:33:05 +0000"  >&lt;p&gt;&quot;Patterns which a user wants git to ignore in all situations (e.g., backup or temporary files generated by the user&apos;s editor of choice) generally go into a file specified by core.excludesfile in the user&apos;s ~/.gitconfig.&quot;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.kernel.org/pub/software/scm/git-core/docs/v1.6.0.6/gitignore.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.kernel.org/pub/software/scm/git-core/docs/v1.6.0.6/gitignore.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="12796222" author="hammer" created="Mon, 4 Jan 2010 15:58:14 +0000"  >&lt;p&gt;Thanks Doug, updated my ~/.gitconfig.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12427894" name="AVRO-254.patch" size="208" author="hammer" created="Mon, 14 Dec 2009 07:16:42 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 29 Dec 2009 23:33:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94581</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 4 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dz7b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79633</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-255] schema namespace should be lexically scoped</title>
                <link>https://issues.apache.org/jira/browse/AVRO-255</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;If a nested schema specifies a different namespace, then schemas nested within it should inherit that namespace rather than the top-level namespace.  This permits textual inclusion of schemas within schemas.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12443291">AVRO-255</key>
            <summary>schema namespace should be lexically scoped</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Dec 2009 18:37:44 +0000</created>
                <updated>Mon, 1 Mar 2010 17:09:13 +0000</updated>
                            <resolved>Tue, 15 Dec 2009 21:30:29 +0000</resolved>
                                                    <fixVersion>1.3.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12790479" author="cutting" created="Tue, 15 Dec 2009 00:07:06 +0000"  >&lt;p&gt;Here&apos;s a patch that fixes this.&lt;/p&gt;</comment>
                            <comment id="12790518" author="philip" created="Tue, 15 Dec 2009 01:42:22 +0000"  >&lt;p&gt;+1, but your test doesn&apos;t use the fact that the schema &quot;x&quot; has a field &quot;f&quot;.  Did you mean to write an assertion about x.f?&lt;/p&gt;</comment>
                            <comment id="12790882" author="cutting" created="Tue, 15 Dec 2009 18:58:01 +0000"  >&lt;p&gt;&amp;gt; your test doesn&apos;t use the fact that the schema &quot;x&quot; has a field &quot;f&quot;.&lt;/p&gt;

&lt;p&gt;The test means to check that the text &apos;&lt;/p&gt;
{&quot;type&quot;: &quot;record&quot;, &quot;name&quot;: &quot;X&quot;, &quot;fields&quot;: []}
&lt;p&gt;&apos; can be embedded twice in a single schema and inherit different namespaces and hence define different records.  The fields are otherwise not of interest.  Does that make sense?&lt;/p&gt;</comment>
                            <comment id="12790965" author="cutting" created="Tue, 15 Dec 2009 21:30:29 +0000"  >&lt;p&gt;I just committed this.&lt;/p&gt;</comment>
                            <comment id="12791503" author="philip" created="Wed, 16 Dec 2009 18:19:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;Does that make sense?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12427978" name="AVRO-255.patch" size="6865" author="cutting" created="Tue, 15 Dec 2009 00:07:06 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Dec 2009 01:42:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94582</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 6 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dz7j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79634</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-256] specific: class names can clash in imports</title>
                <link>https://issues.apache.org/jira/browse/AVRO-256</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;If a schema references two same-named types in different namespaces, the specific compiler will attempt to import them both, generating illegal Java code.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12443292">AVRO-256</key>
            <summary>specific: class names can clash in imports</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Dec 2009 18:40:36 +0000</created>
                <updated>Mon, 1 Mar 2010 17:09:13 +0000</updated>
                            <resolved>Tue, 15 Dec 2009 21:24:25 +0000</resolved>
                                                    <fixVersion>1.3.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12790281" author="cutting" created="Mon, 14 Dec 2009 18:41:03 +0000"  >&lt;p&gt;We should change the specific compiler to import nothing and always use fully-qualified class names.&lt;/p&gt;</comment>
                            <comment id="12790500" author="cutting" created="Tue, 15 Dec 2009 00:53:01 +0000"  >&lt;p&gt;Here&apos;s a patch that fixes this.&lt;/p&gt;</comment>
                            <comment id="12790517" author="philip" created="Tue, 15 Dec 2009 01:38:02 +0000"  >&lt;p&gt;+1.  Looked at the patch.&lt;/p&gt;

&lt;p&gt;We don&apos;t yet have any tests that compile the specific code (which is fine; it&apos;s irksome to get at the compiler), but I&apos;m satisfied that the regular build compiles at least one of these.&lt;/p&gt;</comment>
                            <comment id="12790963" author="cutting" created="Tue, 15 Dec 2009 21:24:25 +0000"  >&lt;p&gt;I just committed this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12427986" name="AVRO-256.patch" size="9452" author="cutting" created="Tue, 15 Dec 2009 00:53:01 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Dec 2009 01:38:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94583</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 6 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dz7r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79635</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
