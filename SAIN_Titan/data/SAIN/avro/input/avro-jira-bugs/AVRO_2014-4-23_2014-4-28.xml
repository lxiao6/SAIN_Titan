<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:20:13 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2014-4-23+AND+created+%3C%3D+2014-4-28+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="1" total="1"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1499] Ruby 2+ Writes Invalid avro files using the avro gem</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1499</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The rubygem writes corrupted avro files under ruby 2.0.0 and ruby 2.1.1. It appears to work correctly under jruby-1.7.10 and ruby 1.9.3.&lt;/p&gt;

&lt;p&gt;Here is a reproducible:&lt;/p&gt;

&lt;p&gt;```ruby&lt;br/&gt;
require &apos;avro&apos;&lt;/p&gt;

&lt;p&gt;data = [&lt;br/&gt;
  &lt;/p&gt;
{&quot;guid&quot;=&amp;gt;&quot;144045de-eb44-dd1b-d9af-6c8b5d41a96e&quot;, &quot;user_guid&quot;=&amp;gt;&quot;0cd41235-5c14-eae9-00ed-c6eb11dd9119&quot;, &quot;name&quot;=&amp;gt;&quot;My Awesome Bank&quot;, &quot;created_at&quot;=&amp;gt;1390617818, &quot;updated_at&quot;=&amp;gt;1398180288, &quot;deleted_at&quot;=&amp;gt;nil}
&lt;p&gt;,&lt;br/&gt;
  &lt;/p&gt;
{&quot;guid&quot;=&amp;gt;&quot;51e06057-14d2-7527-81fa-b07dba0a263b&quot;, &quot;user_guid&quot;=&amp;gt;&quot;0cd41235-5c14-eae9-00ed-c6eb11dd9119&quot;, &quot;name&quot;=&amp;gt;&quot;Student Loans R&apos; Us&quot;, &quot;created_at&quot;=&amp;gt;1386178342, &quot;updated_at&quot;=&amp;gt;1398180286, &quot;deleted_at&quot;=&amp;gt;nil}
&lt;p&gt;,&lt;br/&gt;
  &lt;/p&gt;
{&quot;guid&quot;=&amp;gt;&quot;b4d1d99f-4351-d0e7-221c-a3fae08716bc&quot;, &quot;user_guid&quot;=&amp;gt;&quot;0cd41235-5c14-eae9-00ed-c6eb11dd9119&quot;, &quot;name&quot;=&amp;gt;&quot;My Awesome Bank&quot;, &quot;created_at&quot;=&amp;gt;1390617026, &quot;updated_at&quot;=&amp;gt;1398180288, &quot;deleted_at&quot;=&amp;gt;nil}
&lt;p&gt;,&lt;br/&gt;
  &lt;/p&gt;
{&quot;guid&quot;=&amp;gt;&quot;084638fa-a78d-bbdd-e075-7c9c957a9b46&quot;, &quot;user_guid&quot;=&amp;gt;&quot;0cd41235-5c14-eae9-00ed-c6eb11dd9119&quot;, &quot;name&quot;=&amp;gt;&quot;My Awesome Bank&quot;, &quot;created_at&quot;=&amp;gt;1390617138, &quot;updated_at&quot;=&amp;gt;1398180288, &quot;deleted_at&quot;=&amp;gt;nil}
&lt;p&gt;,&lt;br/&gt;
  &lt;/p&gt;
{&quot;guid&quot;=&amp;gt;&quot;79287c76-4e8f-0a21-7569-a2bcdc2b2f4d&quot;, &quot;user_guid&quot;=&amp;gt;&quot;0cd41235-5c14-eae9-00ed-c6eb11dd9119&quot;, &quot;name&quot;=&amp;gt;&quot;My Awesome Bank&quot;, &quot;created_at&quot;=&amp;gt;1390617135, &quot;updated_at&quot;=&amp;gt;1398180288, &quot;deleted_at&quot;=&amp;gt;nil}
&lt;p&gt;,&lt;br/&gt;
  &lt;/p&gt;
{&quot;guid&quot;=&amp;gt;&quot;3bcc26b2-7d3b-6c4d-cb27-4eb1574b3c20&quot;, &quot;user_guid&quot;=&amp;gt;&quot;0cd41235-5c14-eae9-00ed-c6eb11dd9119&quot;, &quot;name&quot;=&amp;gt;&quot;Cayman Islands Bank&quot;, &quot;created_at&quot;=&amp;gt;1386902345, &quot;updated_at&quot;=&amp;gt;1398180288, &quot;deleted_at&quot;=&amp;gt;nil}
&lt;p&gt;,&lt;br/&gt;
  &lt;/p&gt;
{&quot;guid&quot;=&amp;gt;&quot;75e1e56c-7611-4030-d002-afa2af70e5a1&quot;, &quot;user_guid&quot;=&amp;gt;&quot;0cd41235-5c14-eae9-00ed-c6eb11dd9119&quot;, &quot;name&quot;=&amp;gt;&quot;My Awesome Bank&quot;, &quot;created_at&quot;=&amp;gt;1390617427, &quot;updated_at&quot;=&amp;gt;1398180288, &quot;deleted_at&quot;=&amp;gt;nil}
&lt;p&gt;,&lt;br/&gt;
]&lt;/p&gt;

&lt;p&gt;member_schema = &amp;lt;&amp;lt;-SCHEMA&lt;br/&gt;
{&quot;namespace&quot;: &quot;md.data_logs&quot;,&lt;br/&gt;
 &quot;type&quot;: &quot;record&quot;,&lt;br/&gt;
 &quot;name&quot;: &quot;Member&quot;,&lt;br/&gt;
 &quot;fields&quot;: [&lt;br/&gt;
     &lt;/p&gt;
{&quot;name&quot;: &quot;guid&quot;, &quot;type&quot;: &quot;string&quot;}
&lt;p&gt;,&lt;br/&gt;
     &lt;/p&gt;
{&quot;name&quot;: &quot;user_guid&quot;, &quot;type&quot;: &quot;string&quot;}
&lt;p&gt;,&lt;br/&gt;
     &lt;/p&gt;
{&quot;name&quot;: &quot;name&quot;, &quot;type&quot;: [&quot;string&quot;,&quot;null&quot;]}
&lt;p&gt;,&lt;br/&gt;
     &lt;/p&gt;
{&quot;name&quot;: &quot;created_at&quot;, &quot;type&quot;:&quot;long&quot;}
&lt;p&gt;,&lt;br/&gt;
     &lt;/p&gt;
{&quot;name&quot;: &quot;updated_at&quot;, &quot;type&quot;:&quot;long&quot;}
&lt;p&gt;,&lt;/p&gt;
     {&quot;name&quot;: &quot;deleted_at&quot;, &quot;type&quot;:[&quot;long&quot;,&quot;null&quot;]}
&lt;p&gt; ]&lt;br/&gt;
}&lt;br/&gt;
SCHEMA&lt;br/&gt;
filepath = &quot;./members.avro&quot;&lt;br/&gt;
File.unlink(filepath) if File.exists?(filepath)&lt;/p&gt;

&lt;p&gt;Avro::DataFile.open(filepath, &quot;w&quot;, member_schema) do |dw|&lt;br/&gt;
  data.each do |entry|&lt;br/&gt;
    dw &amp;lt;&amp;lt; entry&lt;br/&gt;
  end&lt;br/&gt;
end&lt;/p&gt;


&lt;p&gt;entries = []&lt;br/&gt;
Avro::DataFile.open(filepath, &quot;r&quot;) do |reader|&lt;br/&gt;
  reader.each do |entry|&lt;br/&gt;
    entries &amp;lt;&amp;lt; entry&lt;br/&gt;
  end&lt;br/&gt;
end&lt;/p&gt;

&lt;p&gt;puts &quot;Here is the data I wrote into the file:&quot;&lt;br/&gt;
data.each&lt;/p&gt;
{|e| p e }&lt;br/&gt;
print &quot;\n\n\n\n&quot;&lt;br/&gt;
 &lt;br/&gt;
puts &quot;Here is the data I read from the file:&quot;&lt;br/&gt;
entries.each{|e| p e }
&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;Under ruby 2+ it fails with the message &quot;undefined method &apos;unpack&apos; for nil:NilClass (NoMethodError)&quot;. I have also tested that the rubygem can correctly read avro files written by the java client, but the java client fails to read files written by the ruby client, so the issue is definitely in how the rubygem is trying to write the binary file.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12710337">AVRO-1499</key>
            <summary>Ruby 2+ Writes Invalid avro files using the avro gem</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="martinkl">Martin Kleppmann</assignee>
                                    <reporter username="hqmq">Michael Ries</reporter>
                        <labels>
                            <label>ruby</label>
                    </labels>
                <created>Thu, 24 Apr 2014 15:39:16 +0000</created>
                <updated>Thu, 24 Jul 2014 20:16:14 +0000</updated>
                            <resolved>Thu, 3 Jul 2014 15:17:01 +0000</resolved>
                                    <version>1.7.5</version>
                                    <fixVersion>1.7.7</fixVersion>
                                    <component>ruby</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13979849" author="hqmq" created="Thu, 24 Apr 2014 15:40:00 +0000"  >&lt;p&gt;More information about the reproducible can be found here: &lt;a href=&quot;https://gist.github.com/hqmq/11193064&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gist.github.com/hqmq/11193064&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14007089" author="martinkl" created="Fri, 23 May 2014 12:24:23 +0000"  >&lt;p&gt;This is due to Ruby 2.0 changing the default file encoding from US-ASCII to UTF-8. When creating the in-memory buffer for a data file block, the Avro code was applying the default file encoding to the buffer. Later, when writing the block to file, the length of the block would be computed incorrectly in Ruby 2.0, since it counted the number of UTF-8 characters rather than the number of bytes. This caused the written data file to be corrupt.&lt;/p&gt;

&lt;p&gt;Fixed by forcing the block buffer to be binary, as it should be. Attaching a one-line patch which does this.&lt;/p&gt;

&lt;p&gt;No new tests needed, as several existing tests failed in Ruby 2.0. But that doesn&apos;t help if nobody is running the tests in Ruby 2.0. Created &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1515&quot; title=&quot;Test multiple Ruby versions in CI&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1515&quot;&gt;AVRO-1515&lt;/a&gt; to discuss that.&lt;/p&gt;</comment>
                            <comment id="14012470" author="martinkl" created="Thu, 29 May 2014 15:57:35 +0000"  >&lt;p&gt;Could someone review this please? I&apos;d like to get this patch into 1.7.7.&lt;/p&gt;

&lt;p&gt;I&apos;ve tested it in Ruby 1.8.7-p371, 1.9.3-p484, 2.0.0-p195, 2.1.2 and JRuby 1.7.3.&lt;/p&gt;</comment>
                            <comment id="14047936" author="wvanbergen" created="Mon, 30 Jun 2014 18:23:27 +0000"  >&lt;p&gt;I think it fails because the library uses `size` instead of `bytesize`. In Ruby 1.9+, size returns the number of characters, not the number of bytes in a string. Which means that in a unicode string, the length of a string that gets written is too short.&lt;/p&gt;

&lt;p&gt;I will attach a patch that aliases `bytesize` to `size` in Ruby 1.8, and uses bytesize.&lt;/p&gt;</comment>
                            <comment id="14047942" author="wvanbergen" created="Mon, 30 Jun 2014 18:27:50 +0000"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Ruby 1.8 compatibility changes are implemented in lib/avro/compat.rb so it&apos;s easy to remove them later.&lt;/li&gt;
	&lt;li&gt;Tested with Ruby 1.8.7, 1.9.3, 2.0.0, and 2.1.1.&lt;/li&gt;
	&lt;li&gt;Not sure if I should include Manifest changes&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Note: in Ruby 2.0+ there is still a failing test that is unrelated to this change. I have a fix for that as well.&lt;/p&gt;</comment>
                            <comment id="14049770" author="martinkl" created="Wed, 2 Jul 2014 09:17:31 +0000"  >&lt;p&gt;Thanks for your patch, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=wvanbergen&quot; class=&quot;user-hover&quot; rel=&quot;wvanbergen&quot;&gt;Willem van Bergen&lt;/a&gt;. I&apos;ve attached a new patch which merges our changes together:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removing the monkeypatching of Enumerable is a good idea, but it&apos;s a separate issue, so I&apos;ve split it out into &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1536&quot; title=&quot;Remove monkeypatching of Enumerable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1536&quot;&gt;&lt;del&gt;AVRO-1536&lt;/del&gt;&lt;/a&gt;.&lt;/li&gt;
	&lt;li&gt;Given that we&apos;ve just removed a monkeypatch on a core module, I&apos;m not so keen to add a new one for String#bytesize. I&apos;ve changed it to check for the presence of String#bytesize at the point where it&apos;s needed.&lt;/li&gt;
	&lt;li&gt;I&apos;ve retained my change to set the encoding of the buffer to BINARY. That by itself is actually sufficient, because String#size returns the number of bytes if the encoding is set to binary. However, I&apos;ve also kept it using #bytesize to make clear what&apos;s going on.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ve tested it in a broad range of Ruby versions. I&apos;ll commit this soon unless there are objections.&lt;/p&gt;</comment>
                            <comment id="14050073" author="wvanbergen" created="Wed, 2 Jul 2014 15:46:34 +0000"  >&lt;p&gt;W.r.t. monkey patching String. I agree with you in general, but in this case I think it is preferable over doing a `respond_to` in the write method.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It basically backports a method in a way that is completely compatible with Ruby 1.9+, and it only does so if it&apos;s not available.&lt;/li&gt;
	&lt;li&gt;This makes it a lot easier to drop 1.8 support later. Just one file of backports to delete, instead of having to go through the entire source code to find occurrences.&lt;/li&gt;
	&lt;li&gt;Performance: only one respond_to check when the library is loaded, instead of a check on every write.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I have no real strong feelings about it, so feel free to ignore this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="14051557" author="jira-bot" created="Thu, 3 Jul 2014 15:10:27 +0000"  >&lt;p&gt;Commit 1607667 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=martinkl&quot; class=&quot;user-hover&quot; rel=&quot;martinkl&quot;&gt;Martin Kleppmann&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1607667&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1607667&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1499&quot; title=&quot;Ruby 2+ Writes Invalid avro files using the avro gem&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1499&quot;&gt;&lt;del&gt;AVRO-1499&lt;/del&gt;&lt;/a&gt;. Ruby: Fix corruption of data files under Ruby 2.0+. Contributed by Willem van Bergen.&lt;/p&gt;</comment>
                            <comment id="14051561" author="martinkl" created="Thu, 3 Jul 2014 15:17:01 +0000"  >&lt;p&gt;I see what you&apos;re saying; I just fear that by adding String#bytesize (even in a way that&apos;s compatible) could cause other things to break if they are badly written. E.g. a library that uses &lt;tt&gt;&apos;&apos;.respond_to?(:bytesize)&lt;/tt&gt; to check whether it&apos;s running in 1.9 might be misled into thinking that it&apos;s running in 1.9, even though it&apos;s actually 1.8. Perhaps that&apos;s overly paranoid, but I&apos;d rather be conservative.&lt;/p&gt;

&lt;p&gt;I&apos;ve committed this change. Thanks for your contribution!&lt;/p&gt;</comment>
                            <comment id="14051591" author="hudson" created="Thu, 3 Jul 2014 15:37:03 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #462 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/462/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/462/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1499&quot; title=&quot;Ruby 2+ Writes Invalid avro files using the avro gem&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1499&quot;&gt;&lt;del&gt;AVRO-1499&lt;/del&gt;&lt;/a&gt;. Ruby: Fix corruption of data files under Ruby 2.0+. Contributed by Willem van Bergen. (martinkl: rev 1607667)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/lib/avro/data_file.rb&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12653200" name="AVRO-1499-2.patch" size="3539" author="wvanbergen" created="Mon, 30 Jun 2014 18:27:50 +0000"/>
                            <attachment id="12653553" name="AVRO-1499-3.patch" size="1360" author="martinkl" created="Wed, 2 Jul 2014 09:17:31 +0000"/>
                            <attachment id="12646501" name="AVRO-1499.patch" size="553" author="martinkl" created="Fri, 23 May 2014 12:24:23 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 23 May 2014 12:24:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>388659</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 29 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1uy6v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>388910</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
