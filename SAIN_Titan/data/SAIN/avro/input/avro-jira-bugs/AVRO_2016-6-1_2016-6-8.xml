<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:23:31 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2016-6-1+AND+created+%3C%3D+2016-6-8+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="5" total="5"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1857] GenericDatumWriter.write using BufferedBinaryEncoder leaves ByteBuffer in indeterminate state</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1857</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Calling &lt;tt&gt;GenericDatumWriter.write(Object, Encoder)&lt;/tt&gt; using a BufferedBinaryEncoder leaves any ByteBuffers within the object (representing BYTES or FIXED types) in an indeterminate state. Specifically, each buffer may be left either in its initial state, with (position, remaining) = (0, N) or in its &quot;consumed&quot; state of (N, 0).&lt;/p&gt;

&lt;p&gt;Although I cannot find it documented, I believe the correct behaviour is that the state of the object being written should be unmodified.&lt;/p&gt;

&lt;p&gt;This is an actual problem in our project where we save a copy of an object to disk before performing some action on it. This later action fails indeterminately because some of the ByteBuffers in the object are &quot;consumed&quot; and some are not.&lt;/p&gt;

&lt;p&gt;I think the fault lies in &lt;tt&gt;org.apache.avro.io.BufferedBinaryEncoder#writeFixed(java.nio.ByteBuffer)&lt;/tt&gt;, wherein the first branch advances the buffer&apos;s position but the second does not:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  @Override
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void writeFixed(ByteBuffer bytes) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!bytes.hasArray() &amp;amp;&amp;amp; bytes.remaining() &amp;gt; bulkLimit) {
      flushBuffer();
      sink.innerWrite(bytes);                     &lt;span class=&quot;code-comment&quot;&gt;// bypass the buffer
&lt;/span&gt;    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
      &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.writeFixed(bytes);
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is a failing test case:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; java.util.Arrays.asList;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; org.hamcrest.Matchers.equalTo;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; org.hamcrest.Matchers.is;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; org.junit.Assert.assertThat;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.ByteArrayOutputStream;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.nio.ByteBuffer;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.nio.MappedByteBuffer;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.nio.channels.FileChannel;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.nio.file.Files;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.nio.file.Path;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.nio.file.StandardOpenOption;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.Schema;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumWriter;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.Encoder;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.EncoderFactory;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;BugTest {
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; ENCODER_BUFFER_SIZE = 32;
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; EXAMPLE_DATA_SIZE = 17;

    @Test
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testArrayBackedByteBuffer() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        ByteBuffer buffer = ByteBuffer.wrap(someBytes(EXAMPLE_DATA_SIZE));

        doTest(buffer);
    }

    @Test
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testMappedByteBuffer() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        Path file = Files.createTempFile(&lt;span class=&quot;code-quote&quot;&gt;&quot;test&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;data&quot;&lt;/span&gt;);
        Files.write(file, someBytes(EXAMPLE_DATA_SIZE));
        MappedByteBuffer buffer = FileChannel.open(file, StandardOpenOption.READ).map(FileChannel.MapMode.READ_ONLY, 0, EXAMPLE_DATA_SIZE);

        doTest(buffer);
    }

    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void doTest(ByteBuffer buffer) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
        assertThat(asList(buffer.position(), buffer.remaining()), is(asList(0, EXAMPLE_DATA_SIZE)));

        ByteArrayOutputStream output = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream(EXAMPLE_DATA_SIZE * 2);
        EncoderFactory encoderFactory = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; EncoderFactory();
        encoderFactory.configureBufferSize(ENCODER_BUFFER_SIZE);

        Encoder encoder = encoderFactory.binaryEncoder(output, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
        &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericDatumWriter&amp;lt;ByteBuffer&amp;gt;(Schema.create(Schema.Type.BYTES)).write(buffer, encoder);
        encoder.flush();

        assertThat(output.toByteArray(), equalTo(avroEncoded(someBytes(EXAMPLE_DATA_SIZE))));

        assertThat(asList(buffer.position(), buffer.remaining()), is(asList(0, EXAMPLE_DATA_SIZE))); &lt;span class=&quot;code-comment&quot;&gt;// fails &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; buffer is not array-backed and buffer overflow occurs
&lt;/span&gt;    }

    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] someBytes(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; size) {
        &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] result = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[size];
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; size; i++) {
            result[i] = (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;) i;
        }
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; result;
    }

    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] avroEncoded(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] bytes) {
        &lt;span class=&quot;code-keyword&quot;&gt;assert&lt;/span&gt; bytes.length &amp;lt; 64;
        &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] result = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[1 + bytes.length];
        result[0] = (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;) (bytes.length * 2); &lt;span class=&quot;code-comment&quot;&gt;// zig-zag encoding
&lt;/span&gt;        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.arraycopy(bytes, 0, result, 1, bytes.length);
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; result;
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12975138">AVRO-1857</key>
            <summary>GenericDatumWriter.write using BufferedBinaryEncoder leaves ByteBuffer in indeterminate state</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nkollar">Nandor Kollar</assignee>
                                    <reporter username="pmg23">Matt Grimwade</reporter>
                        <labels>
                    </labels>
                <created>Thu, 2 Jun 2016 11:45:50 +0000</created>
                <updated>Thu, 25 May 2017 07:44:06 +0000</updated>
                            <resolved>Thu, 25 May 2017 07:44:06 +0000</resolved>
                                    <version>1.7.7</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="15312505" author="rdblue" created="Thu, 2 Jun 2016 15:42:28 +0000"  >&lt;p&gt;I agree, this sounds incorrect. Do you have a fix for the bug? I&apos;ll review and commit it if you do. Thanks!&lt;/p&gt;</comment>
                            <comment id="15874691" author="githubbot" created="Mon, 20 Feb 2017 15:26:19 +0000"  >&lt;p&gt;GitHub user nandorKollar opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/198&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/198&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1857&quot; title=&quot;GenericDatumWriter.write using BufferedBinaryEncoder leaves ByteBuffer in indeterminate state&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1857&quot;&gt;&lt;del&gt;AVRO-1857&lt;/del&gt;&lt;/a&gt;: GenericDatumWriter.write using BufferedBinaryEncoder leaves ByteBuffer in indeterminate state&lt;/p&gt;

&lt;p&gt;    Using readOnlyBuffer fixes the problem. I&apos;m not sure where to put the tests, is TestEncoders the proper class, or should I create a new one for these?&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/nandorKollar/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/nandorKollar/avro&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1857&quot; title=&quot;GenericDatumWriter.write using BufferedBinaryEncoder leaves ByteBuffer in indeterminate state&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1857&quot;&gt;&lt;del&gt;AVRO-1857&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/198.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/198.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #198&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 389a21b177a045a36b67fa75d84629f675773d46&lt;br/&gt;
Author: Nandor Kollar &amp;lt;nkollar@cloudera.com&amp;gt;&lt;br/&gt;
Date:   2017-02-20T15:21:39Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1857&quot; title=&quot;GenericDatumWriter.write using BufferedBinaryEncoder leaves ByteBuffer in indeterminate state&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1857&quot;&gt;&lt;del&gt;AVRO-1857&lt;/del&gt;&lt;/a&gt;: GenericDatumWriter.write using BufferedBinaryEncoder leaves ByteBuffer in indeterminate state&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="16021352" author="gszadovszky" created="Tue, 23 May 2017 15:40:03 +0000"  >&lt;p&gt;+1&lt;br/&gt;
I&apos;ll commit it tomorrow if no nobody else has any comment.&lt;/p&gt;</comment>
                            <comment id="16024355" author="jira-bot" created="Thu, 25 May 2017 07:42:09 +0000"  >&lt;p&gt;Commit c9f2c49241397fb3967bd281225f7cce353c32fc in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nkollar&quot; class=&quot;user-hover&quot; rel=&quot;nkollar&quot;&gt;Nandor Kollar&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=c9f2c49&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=c9f2c49&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1857&quot; title=&quot;GenericDatumWriter.write using BufferedBinaryEncoder leaves ByteBuffer in indeterminate state&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1857&quot;&gt;&lt;del&gt;AVRO-1857&lt;/del&gt;&lt;/a&gt;: GenericDatumWriter.write using BufferedBinaryEncoder leaves ByteBuffer in indeterminate state&lt;/p&gt;

&lt;p&gt;This closes #198&lt;/p&gt;</comment>
                            <comment id="16024356" author="githubbot" created="Thu, 25 May 2017 07:42:32 +0000"  >&lt;p&gt;Github user asfgit closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/198&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/198&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 2 Jun 2016 15:42:28 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 34 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2yvvz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1858] Update DataFileReadTool (tojson) to support a &quot;head&quot; concept</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1858</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It would be nice if the tojson operator supported a &quot;head&quot; concept in order to get a sampling of records in an Avro file.&lt;/p&gt;

&lt;p&gt;Allow specifying a maximum record count to display. If no max is given in head mode, use a reasonable default (like 10).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12975592">AVRO-1858</key>
            <summary>Update DataFileReadTool (tojson) to support a &quot;head&quot; concept</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mike.hurley">Mike Hurley</assignee>
                                    <reporter username="mike.hurley">Mike Hurley</reporter>
                        <labels>
                    </labels>
                <created>Fri, 3 Jun 2016 19:19:15 +0000</created>
                <updated>Tue, 11 Dec 2018 19:14:47 +0000</updated>
                            <resolved>Thu, 29 Nov 2018 20:47:29 +0000</resolved>
                                    <version>1.8.1</version>
                                    <fixVersion>1.9.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="15316597" author="githubbot" created="Mon, 6 Jun 2016 14:51:43 +0000"  >&lt;p&gt;GitHub user MikeHurleySurescripts opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/100&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/100&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode&lt;/p&gt;



&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/MikeHurleySurescripts/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/MikeHurleySurescripts/avro&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;-ToJson-HeadMode&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/100.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/100.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #100&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit f0c8e8b2bdf68d324e3fcc1d30e255f810707dec&lt;br/&gt;
Author: Mike Hurley &amp;lt;mike.hurley@surescripts.com&amp;gt;&lt;br/&gt;
Date:   2016-06-03T20:39:33Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/p&gt;

&lt;p&gt;commit fa7dc3aaa260ab6b89095f890ab081aa31beae43&lt;br/&gt;
Author: Mike Hurley &amp;lt;mike.hurley@surescripts.com&amp;gt;&lt;br/&gt;
Date:   2016-06-06T14:46:53Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15317313" author="cutting" created="Mon, 6 Jun 2016 21:40:05 +0000"  >&lt;p&gt;Should we use a long rather than an int for the counter?  Should we support both a starting and an ending point, or is that feature creep?&lt;/p&gt;</comment>
                            <comment id="15317337" author="mike.hurley" created="Mon, 6 Jun 2016 21:53:37 +0000"  >&lt;p&gt;I thought about int vs long. Since there&apos;s somebody else pointing that out, it&apos;s probably a good idea to use a long.&lt;/p&gt;

&lt;p&gt;When I added the head operation for my team, we talked about if we also wanted tail. Our consensus was tail would be too expensive to implement (performance, not code). Or, we just don&apos;t understand the Avro lib well enough. We just wanted a feature to allow taking a quick peek into an Avro file.&lt;/p&gt;

&lt;p&gt;I think the best option is to keep &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; as it is. If you or others think it&apos;s worthwhile, add tail and &quot;substring&quot; (or whatever better name for pos+length dumps) JIRA items.&lt;/p&gt;</comment>
                            <comment id="15317360" author="cutting" created="Mon, 6 Jun 2016 22:05:06 +0000"  >&lt;p&gt;Switching to long has no performance impact and may be helpful for someone someday.&lt;/p&gt;

&lt;p&gt;I agree that tail is hard and should be skipped for now.&lt;/p&gt;

&lt;p&gt;Adding a start would not be too difficult, and it could be optimized with getBlockCount() and nextBlock(), but, you&apos;re right, that too should be a separate issue for later.  But, with it in mind, would you alter the implementation of head?  It might be better call the option &apos;count&apos; or &apos;length&apos; instead of &apos;head&apos;, so that it makes better sense if/when &apos;start&apos; is added, but &apos;head&apos; is such a well-known name for this feature and is the most common use case, so perhaps it&apos;s not worth it.  I don&apos;t have a strong opinion either way.&lt;/p&gt;</comment>
                            <comment id="15317476" author="mike.hurley" created="Mon, 6 Jun 2016 23:23:06 +0000"  >&lt;p&gt;Since there&apos;s no skip/take feature yet, I think it makes sense to stay put as head since that&apos;s a well known term for the operation. If skip/take is ever added, head can be made an alias of &quot;skip 0, take X&quot;.&lt;/p&gt;</comment>
                            <comment id="16703784" author="githubbot" created="Thu, 29 Nov 2018 20:39:37 +0000"  >&lt;p&gt;dkulp closed pull request #100: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode&lt;br/&gt;
URL: &lt;a href=&quot;https://github.com/apache/avro/pull/100&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/100&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a PR merged from a forked repository.&lt;br/&gt;
As GitHub hides the original diff on merge, it is displayed below for&lt;br/&gt;
the sake of provenance:&lt;/p&gt;

&lt;p&gt;As this is a foreign pull request (from a fork), the diff is supplied&lt;br/&gt;
below (as it won&apos;t show otherwise due to GitHub magic):&lt;/p&gt;

&lt;p&gt;diff --git a/lang/java/tools/src/main/java/org/apache/avro/tool/DataFileReadTool.java b/lang/java/tools/src/main/java/org/apache/avro/tool/DataFileReadTool.java&lt;br/&gt;
index fcc89caf0..79625e3cd 100644&lt;br/&gt;
&amp;#8212; a/lang/java/tools/src/main/java/org/apache/avro/tool/DataFileReadTool.java&lt;br/&gt;
+++ b/lang/java/tools/src/main/java/org/apache/avro/tool/DataFileReadTool.java&lt;br/&gt;
@@ -20,12 +20,14 @@&lt;br/&gt;
 import java.io.BufferedInputStream;&lt;br/&gt;
 import java.io.InputStream;&lt;br/&gt;
 import java.io.PrintStream;&lt;br/&gt;
+import java.util.ArrayList;&lt;br/&gt;
 import java.util.List;&lt;/p&gt;

&lt;p&gt; import joptsimple.OptionParser;&lt;br/&gt;
 import joptsimple.OptionSet;&lt;br/&gt;
 import joptsimple.OptionSpec;&lt;/p&gt;

&lt;p&gt;+import org.apache.avro.AvroRuntimeException;&lt;br/&gt;
 import org.apache.avro.Schema;&lt;br/&gt;
 import org.apache.avro.file.DataFileStream;&lt;br/&gt;
 import org.apache.avro.io.DatumWriter;&lt;br/&gt;
@@ -36,6 +38,7 @@&lt;/p&gt;

&lt;p&gt; /** Reads a data file and dumps to JSON */&lt;br/&gt;
 public class DataFileReadTool implements Tool {&lt;br/&gt;
+  private static final long DEFAULT_HEAD_COUNT = 10;&lt;/p&gt;

&lt;p&gt;   @Override&lt;br/&gt;
   public String getName() {&lt;br/&gt;
@@ -53,10 +56,14 @@ public int run(InputStream stdin, PrintStream out, PrintStream err,&lt;br/&gt;
     OptionParser optionParser = new OptionParser();&lt;br/&gt;
     OptionSpec&amp;lt;Void&amp;gt; prettyOption = optionParser&lt;br/&gt;
         .accepts(&quot;pretty&quot;, &quot;Turns on pretty printing.&quot;);&lt;br/&gt;
+    String headDesc = String.format(&quot;Converts the first X records (default is %d).&quot;, DEFAULT_HEAD_COUNT);&lt;br/&gt;
+    OptionSpec&amp;lt;String&amp;gt; headOption = optionParser.accepts(&quot;head&quot;, headDesc).withOptionalArg();&lt;/p&gt;

&lt;p&gt;     OptionSet optionSet = optionParser.parse(args.toArray(new String&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;));&lt;br/&gt;
     Boolean pretty = optionSet.has(prettyOption);&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;List&amp;lt;String&amp;gt; nargs = (List&amp;lt;String&amp;gt;)optionSet.nonOptionArguments();&lt;br/&gt;
+    List&amp;lt;String&amp;gt; nargs = new ArrayList&amp;lt;String&amp;gt;((List&amp;lt;String&amp;gt;)optionSet.nonOptionArguments());&lt;br/&gt;
+&lt;br/&gt;
+    long headCount = getHeadCount(optionSet, headOption, nargs);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;     if (nargs.size() != 1) {&lt;br/&gt;
       printHelp(err);&lt;br/&gt;
@@ -73,8 +80,10 @@ public int run(InputStream stdin, PrintStream out, PrintStream err,&lt;br/&gt;
       Schema schema = streamReader.getSchema();&lt;br/&gt;
       DatumWriter&amp;lt;Object&amp;gt; writer = new GenericDatumWriter&amp;lt;Object&amp;gt;(schema);&lt;br/&gt;
       JsonEncoder encoder = EncoderFactory.get().jsonEncoder(schema, out, pretty);&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;for (Object datum : streamReader)&lt;br/&gt;
+      for(long recordCount = 0; streamReader.hasNext() &amp;amp;&amp;amp; recordCount &amp;lt; headCount; recordCount++) 
{
+        Object datum = streamReader.next();
         writer.write(datum, encoder);
+      }
&lt;p&gt;       encoder.flush();&lt;br/&gt;
       out.println();&lt;br/&gt;
       out.flush();&lt;br/&gt;
@@ -84,8 +93,28 @@ public int run(InputStream stdin, PrintStream out, PrintStream err,&lt;br/&gt;
     return 0;&lt;br/&gt;
   }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+  private static long getHeadCount(OptionSet optionSet, OptionSpec&amp;lt;String&amp;gt; headOption, List&amp;lt;String&amp;gt; nargs) {&lt;br/&gt;
+    long headCount = Long.MAX_VALUE;&lt;br/&gt;
+    if(optionSet.has(headOption)) {&lt;br/&gt;
+      headCount = DEFAULT_HEAD_COUNT;&lt;br/&gt;
+      List&amp;lt;String&amp;gt; headValues = optionSet.valuesOf(headOption);&lt;br/&gt;
+      if(headValues.size() &amp;gt; 0) {&lt;br/&gt;
+        // if the value parses to int, assume it&apos;s meant to go with --head&lt;br/&gt;
+        // otherwise assume it was an optionSet.nonOptionArgument and add back to the list&lt;br/&gt;
+        // TODO: support input filenames whose whole path+name is int parsable?&lt;br/&gt;
+        try &lt;/p&gt;
{
+          headCount = Long.parseLong(headValues.get(0));
+          if(headCount &amp;lt; 0) throw new AvroRuntimeException(&quot;--head count must not be negative&quot;);
+        }
&lt;p&gt; catch(NumberFormatException ex) &lt;/p&gt;
{
+          nargs.addAll(headValues);
+        }
&lt;p&gt;+      }&lt;br/&gt;
+    }&lt;br/&gt;
+    return headCount;&lt;br/&gt;
+  }&lt;br/&gt;
+&lt;br/&gt;
   private void printHelp(PrintStream ps) {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ps.println(&quot;tojson --pretty input-file&quot;);&lt;br/&gt;
+    ps.println(&quot;tojson &lt;span class=&quot;error&quot;&gt;&amp;#91;--pretty&amp;#93;&lt;/span&gt; [--head&lt;span class=&quot;error&quot;&gt;&amp;#91;=X&amp;#93;&lt;/span&gt;] input-file&quot;);&lt;br/&gt;
     ps.println();&lt;br/&gt;
     ps.println(getShortDescription());&lt;br/&gt;
     ps.println(&quot;A dash (&apos;-&apos;) can be given as an input file to use stdin&quot;);&lt;br/&gt;
diff --git a/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java b/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java&lt;br/&gt;
index 0270b713f..473ac2d4d 100644
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;a/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java&lt;br/&gt;
+++ b/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java&lt;br/&gt;
@@ -35,6 +35,7 @@&lt;br/&gt;
 import java.util.Collections;&lt;br/&gt;
 import java.util.List;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+import org.apache.avro.AvroRuntimeException;&lt;br/&gt;
 import org.apache.avro.AvroTestUtil;&lt;br/&gt;
 import org.apache.avro.Schema;&lt;br/&gt;
 import org.apache.avro.Schema.Type;&lt;br/&gt;
@@ -47,7 +48,7 @@&lt;/p&gt;

&lt;p&gt; @SuppressWarnings(&quot;deprecation&quot;)&lt;br/&gt;
 public class TestDataFileTools {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;static final int COUNT = 10;&lt;br/&gt;
+  static final int COUNT = 15;&lt;br/&gt;
   static File sampleFile;&lt;br/&gt;
   static String jsonData;&lt;br/&gt;
   static Schema schema;&lt;br/&gt;
@@ -117,6 +118,43 @@ public void testReadToJsonPretty() throws Exception 
{
         run(new DataFileReadTool(), &quot;--pretty&quot;, sampleFile.getPath()));
   }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;+  @Test&lt;br/&gt;
+  public void testReadHeadDefaultCount() throws Exception &lt;/p&gt;
{
+    String expectedJson = jsonData.substring(0, 20); // first 10 numbers
+    assertEquals(expectedJson,
+      run(new DataFileReadTool(), &quot;--head&quot;, sampleFile.getPath()));
+  }
&lt;p&gt;+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testReadHeadEquals3Count() throws Exception &lt;/p&gt;
{
+    String expectedJson = jsonData.substring(0, 6); // first 3 numbers
+    assertEquals(expectedJson,
+      run(new DataFileReadTool(), &quot;--head=3&quot;, sampleFile.getPath()));
+  }
&lt;p&gt;+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testReadHeadSpace5Count() throws Exception &lt;/p&gt;
{
+    String expectedJson = jsonData.substring(0, 10); // first 5 numbers
+    assertEquals(expectedJson,
+      run(new DataFileReadTool(), &quot;--head&quot;, &quot;5&quot;, sampleFile.getPath()));
+  }
&lt;p&gt;+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testReadHeadLongCount() throws Exception &lt;/p&gt;
{
+    assertEquals(jsonData,
+      run(new DataFileReadTool(), &quot;--head=3000000000&quot;, sampleFile.getPath()));
+  }
&lt;p&gt;+&lt;br/&gt;
+  @Test&lt;br/&gt;
+  public void testReadHeadEqualsZeroCount() throws Exception &lt;/p&gt;
{
+    assertEquals(&quot;\n&quot;, run(new DataFileReadTool(), &quot;--head=0&quot;, sampleFile.getPath()));
+  }
&lt;p&gt;+&lt;br/&gt;
+  @Test(expected = AvroRuntimeException.class)&lt;br/&gt;
+  public void testReadHeadNegativeCount() throws Exception &lt;/p&gt;
{
+    assertEquals(&quot;\n&quot;, run(new DataFileReadTool(), &quot;--head=-5&quot;, sampleFile.getPath()));
+  }
&lt;p&gt;+&lt;br/&gt;
   @Test&lt;br/&gt;
   public void testGetMeta() throws Exception {&lt;br/&gt;
     String output = run(new DataFileGetMetaTool(), sampleFile.getPath());&lt;/p&gt;




&lt;p&gt;----------------------------------------------------------------&lt;br/&gt;
This is an automated message from the Apache Git Service.&lt;br/&gt;
To respond to the message, please log on GitHub and use the&lt;br/&gt;
URL above to go to the specific comment.&lt;/p&gt;

&lt;p&gt;For queries about this service, please contact Infrastructure at:&lt;br/&gt;
users@infra.apache.org&lt;/p&gt;</comment>
                            <comment id="16703785" author="jira-bot" created="Thu, 29 Nov 2018 20:39:42 +0000"  >&lt;p&gt;Commit 6970d2f64ab77748f895bb82b0fa6cd512a34c30 in avro&apos;s branch refs/heads/branch-1.8 from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16703786" author="jira-bot" created="Thu, 29 Nov 2018 20:39:43 +0000"  >&lt;p&gt;Commit 6970d2f64ab77748f895bb82b0fa6cd512a34c30 in avro&apos;s branch refs/heads/branch-1.8 from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16703787" author="jira-bot" created="Thu, 29 Nov 2018 20:39:45 +0000"  >&lt;p&gt;Commit 6970d2f64ab77748f895bb82b0fa6cd512a34c30 in avro&apos;s branch refs/heads/branch-1.8 from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16703788" author="jira-bot" created="Thu, 29 Nov 2018 20:39:46 +0000"  >&lt;p&gt;Commit 6970d2f64ab77748f895bb82b0fa6cd512a34c30 in avro&apos;s branch refs/heads/branch-1.8 from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16703789" author="jira-bot" created="Thu, 29 Nov 2018 20:39:48 +0000"  >&lt;p&gt;Commit 6970d2f64ab77748f895bb82b0fa6cd512a34c30 in avro&apos;s branch refs/heads/branch-1.8 from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16703790" author="jira-bot" created="Thu, 29 Nov 2018 20:40:18 +0000"  >&lt;p&gt;Commit 22320848679b6c70cf4112192d06ad97773da480 in avro&apos;s branch refs/heads/revert-100-&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;-ToJson-HeadMode from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dkulp&quot; class=&quot;user-hover&quot; rel=&quot;dkulp&quot;&gt;Daniel Kulp&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=2232084&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=2232084&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Revert &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&quot;&lt;/p&gt;

&lt;p&gt;This reverts commit 6970d2f64ab77748f895bb82b0fa6cd512a34c30.&lt;/p&gt;</comment>
                            <comment id="16703797" author="jira-bot" created="Thu, 29 Nov 2018 20:45:29 +0000"  >&lt;p&gt;Commit ee5008d9ed66f3237cf1304484b1d1e6836c8a33 in avro&apos;s branch refs/heads/master from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=ee5008d&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=ee5008d&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16703798" author="jira-bot" created="Thu, 29 Nov 2018 20:45:30 +0000"  >&lt;p&gt;Commit ee5008d9ed66f3237cf1304484b1d1e6836c8a33 in avro&apos;s branch refs/heads/master from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=ee5008d&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=ee5008d&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16703799" author="jira-bot" created="Thu, 29 Nov 2018 20:45:32 +0000"  >&lt;p&gt;Commit ee5008d9ed66f3237cf1304484b1d1e6836c8a33 in avro&apos;s branch refs/heads/master from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=ee5008d&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=ee5008d&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16703800" author="jira-bot" created="Thu, 29 Nov 2018 20:45:33 +0000"  >&lt;p&gt;Commit ee5008d9ed66f3237cf1304484b1d1e6836c8a33 in avro&apos;s branch refs/heads/master from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=ee5008d&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=ee5008d&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16703801" author="jira-bot" created="Thu, 29 Nov 2018 20:45:34 +0000"  >&lt;p&gt;Commit ee5008d9ed66f3237cf1304484b1d1e6836c8a33 in avro&apos;s branch refs/heads/master from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=ee5008d&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=ee5008d&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16703807" author="mike.hurley" created="Thu, 29 Nov 2018 20:56:00 +0000"  >&lt;p&gt;I just got a notification email. Looking at the issue and PR history is unclear. Looks like the PR was merged but I see comments about the commit being reverted...?&lt;/p&gt;</comment>
                            <comment id="16717792" author="jira-bot" created="Tue, 11 Dec 2018 19:14:40 +0000"  >&lt;p&gt;Commit 6970d2f64ab77748f895bb82b0fa6cd512a34c30 in avro&apos;s branch refs/heads/branch-1.8 from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16717793" author="jira-bot" created="Tue, 11 Dec 2018 19:14:42 +0000"  >&lt;p&gt;Commit 6970d2f64ab77748f895bb82b0fa6cd512a34c30 in avro&apos;s branch refs/heads/branch-1.8 from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16717794" author="jira-bot" created="Tue, 11 Dec 2018 19:14:43 +0000"  >&lt;p&gt;Commit 6970d2f64ab77748f895bb82b0fa6cd512a34c30 in avro&apos;s branch refs/heads/branch-1.8 from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16717795" author="jira-bot" created="Tue, 11 Dec 2018 19:14:45 +0000"  >&lt;p&gt;Commit 6970d2f64ab77748f895bb82b0fa6cd512a34c30 in avro&apos;s branch refs/heads/branch-1.8 from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16717796" author="jira-bot" created="Tue, 11 Dec 2018 19:14:47 +0000"  >&lt;p&gt;Commit 6970d2f64ab77748f895bb82b0fa6cd512a34c30 in avro&apos;s branch refs/heads/branch-1.8 from MikeHurleySurescripts&lt;br/&gt;
[ &lt;a href=&quot;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gitbox.apache.org/repos/asf?p=avro.git;h=6970d2f&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt; add tojson head mode (#100)&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added --head option to the tojson operation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added unit tests for tojson --head option&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: head input and record counters are now longs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1858&quot; title=&quot;Update DataFileReadTool (tojson) to support a &amp;quot;head&amp;quot; concept&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1858&quot;&gt;&lt;del&gt;AVRO-1858&lt;/del&gt;&lt;/a&gt;: added tojson --head tests for zero and negative values. Negative head count is now an error.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 6 Jun 2016 14:51:43 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2yyo7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1859] Potential Invalid memory allocation</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1859</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The (potential) memory issue is illustrated by the following code, which is a minimal set of steps to reproduce an issue found on a much larger real application in which avro buffers are read from a third party producer using pre-configured reader and writer schemas, which are not attached to each individual avro buffer.&lt;/p&gt;

&lt;p&gt;The cause of the original problem identified was a down to a change in one of these schemas, but the sample code below shows the same effect and illustrates that without additional validation a crafted input can cause unwanted behaviour in the avro c library.&lt;/p&gt;

&lt;p&gt;It may be that here there are additional required validation steps missing  - in which case are there any examples of how validation should be performed by the application?&lt;/p&gt;

&lt;p&gt;Essentially a particular avro input buffer causes the library to attempt to allocate memory of  18446744073709551577 bytes in realloc.&lt;/p&gt;

&lt;p&gt;This was caught in testing of the real application because the jemalloc memory allocator&apos;s xmalloc setting was in use, which causes an abort on any failed memory allocation.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;#include &lt;span class=&quot;code-quote&quot;&gt;&quot;avro.h&quot;&lt;/span&gt;

&lt;span class=&quot;code-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt;* schemaBuffer = &quot;\
\
{\&lt;span class=&quot;code-quote&quot;&gt;&quot;namespace\&quot;&lt;/span&gt;: \&lt;span class=&quot;code-quote&quot;&gt;&quot;example.avro\&quot;&lt;/span&gt;,\
 \&lt;span class=&quot;code-quote&quot;&gt;&quot;type\&quot;&lt;/span&gt;:\&lt;span class=&quot;code-quote&quot;&gt;&quot;record\&quot;&lt;/span&gt;,\
 \&lt;span class=&quot;code-quote&quot;&gt;&quot;name\&quot;&lt;/span&gt;:\&lt;span class=&quot;code-quote&quot;&gt;&quot;example\&quot;&lt;/span&gt;,\
 \&lt;span class=&quot;code-quote&quot;&gt;&quot;fields\&quot;&lt;/span&gt;: [\
    {\&lt;span class=&quot;code-quote&quot;&gt;&quot;name\&quot;&lt;/span&gt;: \&lt;span class=&quot;code-quote&quot;&gt;&quot;s1\&quot;&lt;/span&gt;, \&lt;span class=&quot;code-quote&quot;&gt;&quot;type\&quot;&lt;/span&gt;: \&lt;span class=&quot;code-quote&quot;&gt;&quot;string\&quot;&lt;/span&gt;}\
 ]\
}&quot;;

&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; main(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt;* argv[])
{
  &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt; buffer[4];
  memset(buffer,0 , sizeof(buffer));

  buffer[0] = 0x4f;

  avro_reader_t reader = avro_reader_memory(buffer, 1);
  avro_schema_t schema;

  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(!avro_schema_from_json_length(schemaBuffer, strlen(schemaBuffer), &amp;amp;schema) &amp;amp;&amp;amp; reader)
  {
    avro_value_iface_t* iface = avro_generic_class_from_schema(schema);

    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(iface)
    {
      avro_value_t row;

      avro_generic_value_new(iface, &amp;amp;row);

      &lt;span class=&quot;code-comment&quot;&gt;// the following attempts to allocate memory &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; a string of size -39 bytes represented as int64_t in:
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;//      &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; read_string(avro_reader_t reader, &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt; **s, int64_t *len)
&lt;/span&gt;
      &lt;span class=&quot;code-comment&quot;&gt;// -39 is &lt;span class=&quot;code-keyword&quot;&gt;cast&lt;/span&gt; a to size_t of size 18446744073709551577 which is passed to the size to realloc in:
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;//      avro_default_allocator(void *ud, void *ptr, size_t osize, size_t nsize)
&lt;/span&gt;
      &lt;span class=&quot;code-comment&quot;&gt;// an attempt is then made to allocate memory of 18446744073709551577 bytes
&lt;/span&gt;
      avro_value_read(reader, &amp;amp;row);
    }
  }
}

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Should there by additional validation steps in application code to ensure the buffer is valid for the schema before reading it?&lt;/p&gt;
</description>
                <environment>&lt;p&gt;linux 64 bit&lt;/p&gt;</environment>
        <key id="12975741">AVRO-1859</key>
            <summary>Potential Invalid memory allocation</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jackstockdale">Jack Stockdale</reporter>
                        <labels>
                    </labels>
                <created>Sat, 4 Jun 2016 13:02:57 +0000</created>
                <updated>Sat, 4 Jun 2016 13:07:24 +0000</updated>
                                            <version>1.8.1</version>
                                                    <component>c</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 33 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2yzlb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1860] DefaultValue() returns Ints for Long fields</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1860</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I am iterating over the schemas for getting default values for fields. When the type of a field is Long Avro returns INT instead:&lt;br/&gt;
field.defaultVal()&lt;br/&gt;
--&amp;gt;Field.defaultVal()&lt;br/&gt;
--&amp;gt;Jacksonutils.toObject(jsonNode)&lt;br/&gt;
--&amp;gt;Jacksonutils.toObject(jsonNode, null)&lt;/p&gt;

&lt;p&gt;The Field class already contains the information (&quot;long&quot;), so shouldn&apos;t the Field class use Jacksonutils-toObject-Method with schema? Otherwise it is always null and Integer are returned.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12976053">AVRO-1860</key>
            <summary>DefaultValue() returns Ints for Long fields</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gszadovszky">Gabor Szadovszky</assignee>
                                    <reporter username="manuelp3">Manuel Rieke</reporter>
                        <labels>
                    </labels>
                <created>Mon, 6 Jun 2016 12:41:00 +0000</created>
                <updated>Sat, 5 Nov 2016 20:20:24 +0000</updated>
                            <resolved>Thu, 6 Oct 2016 21:50:07 +0000</resolved>
                                    <version>1.8.1</version>
                                    <fixVersion>1.9.0</fixVersion>
                    <fixVersion>1.8.2</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="15542157" author="githubbot" created="Mon, 3 Oct 2016 11:06:29 +0000"  >&lt;p&gt;GitHub user gszadovszky opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/138&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/138&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1860&quot; title=&quot;DefaultValue() returns Ints for Long fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1860&quot;&gt;&lt;del&gt;AVRO-1860&lt;/del&gt;&lt;/a&gt; - DefaultValue() returns Ints for Long fields&lt;/p&gt;

&lt;p&gt;    Added conversions to the proper JsonNode implementation to support returning the proper object type (e.g. Long from a LongNode in case of the schema has Long type).&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/gszadovszky/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/gszadovszky/avro&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1860&quot; title=&quot;DefaultValue() returns Ints for Long fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1860&quot;&gt;&lt;del&gt;AVRO-1860&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/138.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/138.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #138&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit de6068ba0ae2eca75ab9275781e22c79a64e5761&lt;br/&gt;
Author: Gabor Szadovszky &amp;lt;gabor.szadovszky@cloudera.com&amp;gt;&lt;br/&gt;
Date:   2016-10-03T11:03:55Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1860&quot; title=&quot;DefaultValue() returns Ints for Long fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1860&quot;&gt;&lt;del&gt;AVRO-1860&lt;/del&gt;&lt;/a&gt; - DefaultValue() returns Ints for Long fields&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15553286" author="jira-bot" created="Thu, 6 Oct 2016 21:49:06 +0000"  >&lt;p&gt;Commit ef0e1a1a011298ee77f1112ec9709ef03c5035ab in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=ef0e1a1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=ef0e1a1&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1860&quot; title=&quot;DefaultValue() returns Ints for Long fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1860&quot;&gt;&lt;del&gt;AVRO-1860&lt;/del&gt;&lt;/a&gt;: Java: Field#DefaultVal() returns Ints for Long fields.  Contributed by Gabor Szadovszky.&lt;/p&gt;</comment>
                            <comment id="15553292" author="cutting" created="Thu, 6 Oct 2016 21:50:08 +0000"  >&lt;p&gt;I committed this.  Thanks, Gabor!&lt;/p&gt;</comment>
                            <comment id="15561612" author="githubbot" created="Mon, 10 Oct 2016 08:10:13 +0000"  >&lt;p&gt;Github user gszadovszky closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/138&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/138&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15640511" author="jira-bot" created="Sat, 5 Nov 2016 20:20:24 +0000"  >&lt;p&gt;Commit f02db39114cd3b1bd02e87b86812f2c0cafdba86 in avro&apos;s branch refs/heads/branch-1.8 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=f02db39&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=f02db39&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1860&quot; title=&quot;DefaultValue() returns Ints for Long fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1860&quot;&gt;&lt;del&gt;AVRO-1860&lt;/del&gt;&lt;/a&gt;: Java: Field#DefaultVal() returns Ints for Long fields.  Contributed by Gabor Szadovszky.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                                                <inwardlinks description="is part of">
                                        <issuelink>
            <issuekey id="12976243">AVRO-1861</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 3 Oct 2016 11:06:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 11 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2z0sf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1861] Avro Schema parser treats Avro float type as Java Double for default values</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1861</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The following code snippet in the &lt;a href=&quot;https://github.com/apache/avro/blob/master/lang/java/avro/src/main/java/org/apache/avro/Schema.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Schema class&lt;/a&gt; shows that we explicitly treat Avro &lt;tt&gt;FLOAT&lt;/tt&gt; and &lt;tt&gt;DOUBLE&lt;/tt&gt; as a Java &lt;tt&gt;Double&lt;/tt&gt;.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;JsonNode defaultValue = field.get(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;&quot;&lt;/span&gt;);
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (defaultValue != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
    &amp;amp;&amp;amp; (Type.FLOAT.equals(fieldSchema.getType())
        || Type.DOUBLE.equals(fieldSchema.getType()))
    &amp;amp;&amp;amp; defaultValue.isTextual())
  defaultValue =
    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DoubleNode(&lt;span class=&quot;code-object&quot;&gt;Double&lt;/span&gt;.valueOf(defaultValue.getTextValue()));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Jackson has support for &lt;a href=&quot;https://fasterxml.github.io/jackson-databind/javadoc/2.3.0/com/fasterxml/jackson/databind/node/FloatNode.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;FloatNode&lt;/a&gt; so why don&apos;t we use that?&lt;/p&gt;

&lt;p&gt;This is a problem when someone calls &lt;a href=&quot;https://avro.apache.org/docs/1.8.1/api/java/org/apache/avro/Schema.Field.html#defaultVal()&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Schema.Field#defaultVal&lt;/a&gt; for an Avro field with Avro type &lt;tt&gt;FLOAT&lt;/tt&gt; and they try to typecast the object to a Java &lt;tt&gt;float&lt;/tt&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12976243">AVRO-1861</key>
            <summary>Avro Schema parser treats Avro float type as Java Double for default values</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="gszadovszky">Gabor Szadovszky</assignee>
                                    <reporter username="amok">Andy Mok</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Jun 2016 00:03:37 +0000</created>
                <updated>Mon, 10 Oct 2016 08:11:24 +0000</updated>
                            <resolved>Mon, 10 Oct 2016 08:11:24 +0000</resolved>
                                    <version>1.8.1</version>
                                    <fixVersion>1.9.0</fixVersion>
                    <fixVersion>1.8.2</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="15317574" author="amok" created="Tue, 7 Jun 2016 00:46:20 +0000"  >&lt;p&gt;Another issue is that Jackson always returns a &lt;a href=&quot;https://fasterxml.github.io/jackson-databind/javadoc/2.2.0/com/fasterxml/jackson/databind/node/DoubleNode.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;DoubleNode&lt;/a&gt; when parsing a floating point number in JSON. This makes sense since JSON doesn&apos;t encode the type of a value so Jackson will assume a Java &lt;tt&gt;Double&lt;/tt&gt;. However, I think the Avro library should be smart enough since the type is encoded in the Schema for a field and try to cast the value to the correct Java type based on the Avro type.&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;{
  &quot;name&quot; : &quot;float&quot;,
  &quot;type&quot; : &quot;float&quot;,
  &quot;doc&quot; : &quot;The default value in Java is actually a Double when trying to parse this JSON element into an Avro Schema.&quot;,
  &quot;default&quot; : -1
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15322882" author="rdblue" created="Thu, 9 Jun 2016 17:11:54 +0000"  >&lt;p&gt;Sounds reasonable to me. If you want to submit a PR for this, I&apos;ll review it. Thanks, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=amok&quot; class=&quot;user-hover&quot; rel=&quot;amok&quot;&gt;Andy Mok&lt;/a&gt;!&lt;/p&gt;</comment>
                            <comment id="15542143" author="gszadovszky" created="Mon, 3 Oct 2016 10:59:34 +0000"  >&lt;p&gt;Fix needs the Jackson class FloatNode which added in 2.2.&lt;/p&gt;</comment>
                            <comment id="15542660" author="rdblue" created="Mon, 3 Oct 2016 15:23:12 +0000"  >&lt;p&gt;Since the Avro type is float, can&apos;t we just cast the double to a float?&lt;/p&gt;</comment>
                            <comment id="15544668" author="gszadovszky" created="Tue, 4 Oct 2016 07:55:59 +0000"  >&lt;p&gt;You are absolutely right. I just wanted to resolve this one the same way as &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1860&quot; title=&quot;DefaultValue() returns Ints for Long fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1860&quot;&gt;&lt;del&gt;AVRO-1860&lt;/del&gt;&lt;/a&gt; but it would not make sense. Removing the requires reference...&lt;/p&gt;</comment>
                            <comment id="15544838" author="gszadovszky" created="Tue, 4 Oct 2016 09:10:01 +0000"  >&lt;p&gt;One fix for both.&lt;/p&gt;</comment>
                            <comment id="15561616" author="gszadovszky" created="Mon, 10 Oct 2016 08:11:24 +0000"  >&lt;p&gt;The fix of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1860&quot; title=&quot;DefaultValue() returns Ints for Long fields&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1860&quot;&gt;&lt;del&gt;AVRO-1860&lt;/del&gt;&lt;/a&gt; resolves this one as well.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310010">
                    <name>Incorporates</name>
                                            <outwardlinks description="incorporates">
                                        <issuelink>
            <issuekey id="12976053">AVRO-1860</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 9 Jun 2016 17:11:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 15 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2z1yn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
