<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:21:49 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2015-4-28+AND+created+%3C%3D+2015-5-6+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="3" total="3"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1665] Provide way to represent BYTES type using base64 encoding in JSON</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1665</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Currently JsonEncoder and JsonDecoder represent BYTES type as String encoded using ISO-8859-1 charset.&lt;/p&gt;

&lt;p&gt;It would be good to provide option to use base64 encoding (e.g. using jackson JsonGenerator.writeBinary(byte[] data, int offset, int len) method).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12825441">AVRO-1665</key>
            <summary>Provide way to represent BYTES type using base64 encoding in JSON</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="k.shaposhnikov@gmail.com">Konstantin Shaposhnikov</reporter>
                        <labels>
                    </labels>
                <created>Tue, 28 Apr 2015 07:00:06 +0000</created>
                <updated>Sun, 30 Dec 2018 05:35:04 +0000</updated>
                                            <version>1.7.7</version>
                                                    <component>spec</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="14518060" author="rdblue" created="Tue, 28 Apr 2015 21:06:18 +0000"  >&lt;p&gt;I agree, this is a good idea. There&apos;s even support for it in Jackson. This would be an incompatible change, though. We&apos;d have to do it in 1.8 and update the spec.&lt;/p&gt;</comment>
                            <comment id="14518098" author="cutting" created="Tue, 28 Apr 2015 21:23:21 +0000"  >&lt;p&gt;We permit incompatible changes to APIs in minor releases, but an incompatible changes to data formats are only supposed to be made in major releases, e.g., Avro 2.0.  I think it would be better to incorporate this change into a new json format like &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1582&quot; title=&quot;Json serialization of nullable fileds and fields with default values improvement.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1582&quot;&gt;AVRO-1582&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14518109" author="rdblue" created="Tue, 28 Apr 2015 21:28:09 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think it would be better to incorporate this change into a new json format like &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1582&quot; title=&quot;Json serialization of nullable fileds and fields with default values improvement.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1582&quot;&gt;AVRO-1582&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds like a good plan to me. It would also be good to have a stated format for JSON files, since I don&apos;t think we currently specify it.&lt;/p&gt;</comment>
                            <comment id="14529761" author="k.shaposhnikov@gmail.com" created="Wed, 6 May 2015 02:05:34 +0000"  >&lt;p&gt;Another alternative is to make binary format configurable in JSON encoder/decoder. &lt;/p&gt;

&lt;p&gt;Something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt; BytesJsonFormat { STRING, BASE64 }

encoder.setBytesFormat(BytesJsonFormat format)
decoder.setBytesFormat(BytesJsonFormat format)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;Creating another pair of encoder/decoder classes that use base64 for BYTES and incorporate proposal from &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1582&quot; title=&quot;Json serialization of nullable fileds and fields with default values improvement.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1582&quot;&gt;AVRO-1582&lt;/a&gt; and probably some other changes is a good approach as well. Especially that it can be implemented in AVRO 1.8 without need to wait for AVRO 2.0&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 28 Apr 2015 21:06:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 37 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2dzvj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1666] avro.ipc.Responder logger is too noisy and have system/user error as WARN</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1666</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I used avro ipc a lot and enjoy it. Great work! Would love to contribute back.&lt;/p&gt;

&lt;p&gt;We sometimes use avro-ipc exceptions to signal rare, but correct situations (e.g. user session has ended). Because of the scale this cause tons of WARN logs with stack traces from avro.icp.Responder:&lt;br/&gt;
&lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/org.apache.avro/avro-ipc/1.7.5/org/apache/avro/ipc/Responder.java#156&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://grepcode.com/file/repo1.maven.org/maven2/org.apache.avro/avro-ipc/1.7.5/org/apache/avro/ipc/Responder.java#156&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Though would like to exclude in log4j, I can&apos;t because I&apos;m interested in &quot;system error&quot; which signal real bug and are also on WARN level.&lt;/p&gt;

&lt;p&gt;Potential solutions that would make me happy:&lt;br/&gt;
1. Move &quot;user error&quot; to INFO level.&lt;br/&gt;
2. Move &quot;system error&quot; to ERROR level.&lt;br/&gt;
3. Have some option/flag to switch of INFO level.&lt;/p&gt;

&lt;p&gt;Happy to write a patch for that, once I get blessing from core developer.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12826528">AVRO-1666</key>
            <summary>avro.ipc.Responder logger is too noisy and have system/user error as WARN</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="Jakozaur">Jacek Migdal</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 May 2015 09:59:33 +0000</created>
                <updated>Sun, 30 Dec 2018 04:17:16 +0000</updated>
                                            <version>1.7.7</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                    <timeoriginalestimate seconds="3600">1h</timeoriginalestimate>
                            <timeestimate seconds="3600">1h</timeestimate>
                                        <comments>
                            <comment id="14523442" author="cutting" created="Fri, 1 May 2015 16:55:18 +0000"  >&lt;p&gt;Moving &quot;system error&quot; to ERROR level seems reasonable.&lt;/p&gt;

&lt;p&gt;We might also or instead change the &quot;user error&quot; logging so that the error message alone is printed at WARN and the stack trace only at INFO.&lt;/p&gt;
</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 1 May 2015 16:55:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 38 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2e6fj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1667] Parser symbol tree flattening is broken for recursive schemas</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1667</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Here is a unit test to reproduce:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;package org.apache.avro.io.parsing;

import java.io.IOException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;
import junit.framework.Assert;
import org.apache.avro.Schema;
import org.junit.Test;


public class SymbolTest {


    private static final String SCHEMA = &quot;{\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;SampleNode\&quot;,&quot;
            + &quot;\&quot;namespace\&quot;:\&quot;org.spf4j.ssdump2.avro\&quot;,\n&quot; +
&quot; \&quot;fields\&quot;:[\n&quot; +
&quot;    {\&quot;name\&quot;:\&quot;count\&quot;,\&quot;type\&quot;:\&quot;int\&quot;,\&quot;default\&quot;:0},\n&quot; +
&quot;    {\&quot;name\&quot;:\&quot;subNodes\&quot;,\&quot;type\&quot;:\n&quot; +
&quot;       {\&quot;type\&quot;:\&quot;array\&quot;,\&quot;items\&quot;:{\n&quot; +
&quot;           \&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;SamplePair\&quot;,\n&quot; +
&quot;           \&quot;fields\&quot;:[\n&quot; +
&quot;              {\&quot;name\&quot;:\&quot;method\&quot;,\&quot;type\&quot;:\n&quot; +
&quot;                  {\&quot;type\&quot;:\&quot;record\&quot;,\&quot;name\&quot;:\&quot;Method\&quot;,\n&quot; +
&quot;                  \&quot;fields\&quot;:[\n&quot; +
&quot;                     {\&quot;name\&quot;:\&quot;declaringClass\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;string\&quot;,\&quot;avro.java.string\&quot;:\&quot;String\&quot;}},\n&quot; +
&quot;                     {\&quot;name\&quot;:\&quot;methodName\&quot;,\&quot;type\&quot;:{\&quot;type\&quot;:\&quot;string\&quot;,\&quot;avro.java.string\&quot;:\&quot;String\&quot;}}\n&quot; +
&quot;                  ]}},\n&quot; +
&quot;              {\&quot;name\&quot;:\&quot;node\&quot;,\&quot;type\&quot;:\&quot;SampleNode\&quot;}]}}}]}&quot;;


    @Test
    public void testSomeMethod() throws IOException {

        Schema schema = new Schema.Parser().parse(SCHEMA);

        Symbol root = Symbol.root(new ResolvingGrammarGenerator()
                .generate(schema, schema, new HashMap&amp;lt;ValidatingGrammarGenerator.LitS, Symbol&amp;gt;()));
        validateNonNull(root, new HashSet&amp;lt;Symbol&amp;gt;());
    }

    private static void validateNonNull(final Symbol symb, Set&amp;lt;Symbol&amp;gt; seen) {
        if (seen.contains(symb)) {
            return;
        } else {
            seen.add(symb);
        }
        if (symb.production != null) {
            for (Symbol s : symb.production) {
                if (s == null) {
                    Assert.fail(&quot;invalid parsing tree should not contain nulls&quot;);
                }
                if (s.kind != Symbol.Kind.ROOT) {
                    validateNonNull(s, seen);;
                }
            }
        }
    }

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12827396">AVRO-1667</key>
            <summary>Parser symbol tree flattening is broken for recursive schemas</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="zolyfarkas">Zoltan Farkas</assignee>
                                    <reporter username="zolyfarkas">Zoltan Farkas</reporter>
                        <labels>
                    </labels>
                <created>Tue, 5 May 2015 19:41:06 +0000</created>
                <updated>Fri, 10 Feb 2017 04:48:37 +0000</updated>
                            <resolved>Tue, 15 Mar 2016 15:50:18 +0000</resolved>
                                    <version>1.7.7</version>
                                    <fixVersion>1.8.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="14529144" author="zolyfarkas" created="Tue, 5 May 2015 19:50:18 +0000"  >&lt;p&gt;I have a fix that seem to work at: &lt;a href=&quot;https://github.com/zolyfarkas/avro/commit/54728d12868f8e1b1423b494a53eb3b3bb9721bd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/zolyfarkas/avro/commit/54728d12868f8e1b1423b494a53eb3b3bb9721bd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;the fix is in Symbol.java:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  static void flatten(Symbol[] in, int start,
      Symbol[] out, int skip,
      Map&amp;lt;Sequence, Sequence&amp;gt; map,
      Map&amp;lt;Sequence, List&amp;lt;Fixup&amp;gt;&amp;gt; map2) {
    for (int i = start, j = skip; i &amp;lt; in.length; i++) {
      Symbol s = in[i].flatten(map, map2);
      if (s instanceof Sequence) {
        Symbol[] p = s.production;
        List&amp;lt;Fixup&amp;gt; l = map2.get(s);
        if (l == null) {
          System.arraycopy(p, 0, out, j, p.length);
         // Fixups need to be relocated!
          for (List&amp;lt;Fixup&amp;gt; value : map2.values()) {
              for (Fixup fixup : value) {
                  if (fixup.symbols == p) {
                      fixup.symbols = out;
                      fixup.pos += j;
                  }
              }
          }
        } else {
          l.add(new Fixup(out, j));
        }
        j += p.length;
      } else {
        out[j++] = s;
      }
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;please review, and let me know what you think, it would be nice to have this released soon...&lt;/p&gt;</comment>
                            <comment id="14608973" author="zolyfarkas" created="Tue, 30 Jun 2015 20:03:10 +0000"  >&lt;p&gt;Any interest in somebody integrating this?&lt;/p&gt;</comment>
                            <comment id="14609227" author="rdblue" created="Tue, 30 Jun 2015 23:11:00 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zolyfarkas&quot; class=&quot;user-hover&quot; rel=&quot;zolyfarkas&quot;&gt;Zoltan Farkas&lt;/a&gt;, I can take a look. Can you describe the problem you hit and what your solution does to fix it?&lt;/p&gt;</comment>
                            <comment id="14609296" author="zolyfarkas" created="Wed, 1 Jul 2015 00:09:44 +0000"  >&lt;p&gt;HI Ryan,&lt;/p&gt;

&lt;p&gt;The issue is actually highlighted in the unit test that I added to this JIRA description. For a [articular recursive schema, the grammar generator generates null productions which result in NPE during serialiazation/deserialization.&lt;/p&gt;

&lt;p&gt;The schema in the unit test is the actual schema of objects that I was attempting to serialize/deserialize.&lt;/p&gt;

&lt;p&gt;The patch that I have attached, seems to resolve the problem. (we have been using this for a while without any issues)&lt;/p&gt;

&lt;p&gt;let me know if you have any questions.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="14610705" author="rdblue" created="Wed, 1 Jul 2015 17:45:36 +0000"  >&lt;p&gt;What I&apos;m trying to understand is why the null productions are getting generated (what is the underlying bug? what assumption did the previous version make that was a problem?) and how your patch addresses it. I can look at the code to figure it out, but it is usually faster if you can tell me what is going on.&lt;/p&gt;</comment>
                            <comment id="14610764" author="zolyfarkas" created="Wed, 1 Jul 2015 18:16:42 +0000"  >&lt;p&gt;A tough one, it was tuff to fix this more than a month ago...&lt;/p&gt;

&lt;p&gt;when copying the production p with:&lt;/p&gt;

&lt;p&gt; System.arraycopy(p, 0, out, j, p.length);&lt;/p&gt;

&lt;p&gt;if case there is a Fixup for this production, (the production will be constructed later), this array copy will copy nulls... (this is the source of the nulls)&lt;/p&gt;

&lt;p&gt;what the patch does by adding after the array copy:&lt;/p&gt;

&lt;p&gt;          for (List&amp;lt;Fixup&amp;gt; value : map2.values()) {&lt;br/&gt;
              for (Fixup fixup : value) {&lt;br/&gt;
                  if (fixup.symbols == p) &lt;/p&gt;
{
                      fixup.symbols = out;
                      fixup.pos += j;
                  }
&lt;p&gt;              }&lt;br/&gt;
          }&lt;/p&gt;

&lt;p&gt;Update all the Fixups for P to the destination of the array copy&lt;/p&gt;

&lt;p&gt;I hope I make sense, let me know otherwise...&lt;/p&gt;</comment>
                            <comment id="14610769" author="rdblue" created="Wed, 1 Jul 2015 18:19:32 +0000"  >&lt;p&gt;I think I see what you&apos;re saying: when flattening a recursive structure, it makes a copy and needs to fill in values later (from the Fixup, when it is available) but wasn&apos;t doing that. Does that sound correct?&lt;/p&gt;</comment>
                            <comment id="14611725" author="zolyfarkas" created="Thu, 2 Jul 2015 09:50:42 +0000"  >&lt;p&gt;yup, that is correct.&lt;/p&gt;</comment>
                            <comment id="14616501" author="tomwhite" created="Tue, 7 Jul 2015 10:45:13 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zolyfarkas&quot; class=&quot;user-hover&quot; rel=&quot;zolyfarkas&quot;&gt;Zoltan Farkas&lt;/a&gt; thanks for the patch. I think that thethe test would belong better in TestResolvingGrammarGenerator2, where the schema could be constructed using SchemaBuilder so it&apos;s easier to read.&lt;/p&gt;

&lt;p&gt;Also, there are some spurious whitespace changes, as well as a change in &lt;tt&gt;flattenedSize&lt;/tt&gt; which doesn&apos;t look like it&apos;s needed. The indentation level should be two spaces.&lt;/p&gt;</comment>
                            <comment id="14723423" author="zolyfarkas" created="Mon, 31 Aug 2015 13:59:27 +0000"  >&lt;p&gt;you&apos;re welcome&lt;/p&gt;

&lt;p&gt;The whitespace changes are for whatever reason done by my IDE, I have 2 spaces set for indenting, however I have my IDE set to automatically strip whitespaces from end of line, which I believe that is the source of this... will try to do something about this...&lt;/p&gt;

&lt;p&gt;The flattenedSize changes have nothing to do with this issue, it is only a minor performance improvement,&lt;br/&gt;
 which we should implement never the less... (even if we do it in a separate issue). In the fork I use I try to clean up everything I stumble upon...&lt;/p&gt;

&lt;p&gt;In about 2 months I will take some time and work the issues I have opened and integrate any suggestions...&lt;br/&gt;
unfortunately I have very limited time until then...&lt;/p&gt;</comment>
                            <comment id="15145969" author="zolyfarkas" created="Sat, 13 Feb 2016 13:02:46 +0000"  >&lt;p&gt;Here is a patch with a fix + unit test&lt;/p&gt;</comment>
                            <comment id="15145970" author="zolyfarkas" created="Sat, 13 Feb 2016 13:06:03 +0000"  >&lt;p&gt;A feature branch based on latest official trunk is also available at: &lt;a href=&quot;https://github.com/zolyfarkas/avro/tree/trunk-AVRO-1667&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/zolyfarkas/avro/tree/trunk-AVRO-1667&lt;/a&gt; &lt;/p&gt;</comment>
                            <comment id="15174106" author="githubbot" created="Tue, 1 Mar 2016 17:58:12 +0000"  >&lt;p&gt;GitHub user zolyfarkas opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/74&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/74&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;fix&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1667&quot; title=&quot;Parser symbol tree flattening is broken for recursive schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1667&quot;&gt;&lt;del&gt;AVRO-1667&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/zolyfarkas/avro&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/zolyfarkas/avro&lt;/a&gt; trunk-&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1667&quot; title=&quot;Parser symbol tree flattening is broken for recursive schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1667&quot;&gt;&lt;del&gt;AVRO-1667&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/74.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/74.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #74&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit 615301895d33e8b0480fe24abc97f46a8fc1549a&lt;br/&gt;
Author: Zoltan Farkas &amp;lt;zolyfarkas@yahoo.com&amp;gt;&lt;br/&gt;
Date:   2016-02-13T12:58:42Z&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;fix&amp;#93;&lt;/span&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1667&quot; title=&quot;Parser symbol tree flattening is broken for recursive schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1667&quot;&gt;&lt;del&gt;AVRO-1667&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15182515" author="rdblue" created="Mon, 7 Mar 2016 03:17:00 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zolyfarkas&quot; class=&quot;user-hover&quot; rel=&quot;zolyfarkas&quot;&gt;Zoltan Farkas&lt;/a&gt;, thanks for your patience on this one. It took a while for me to get the time to learn the grammar part of the code.&lt;/p&gt;

&lt;p&gt;Your fix works, but if a given sequence is copied more than once, the other copies aren&apos;t fixed up. That happens because your versions moves fixups rather than making copies. I&apos;ve updated the patch to add copies instead, which was a simple fix. I&apos;d appreciate it if you could review it for me. When we get a +1, I&apos;ll commit this.&lt;/p&gt;</comment>
                            <comment id="15183147" author="zolyfarkas" created="Mon, 7 Mar 2016 15:43:06 +0000"  >&lt;p&gt;Thank you,  we should also update the unit test to catch that scenario...if you have a quick idea how to do that let me know, I will have to re-understand this piece of code &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;--Z&lt;/p&gt;</comment>
                            <comment id="15183246" author="rdblue" created="Mon, 7 Mar 2016 16:45:47 +0000"  >&lt;p&gt;We just need a fixup that applies to a production that gets copied twice. I think a recursive binary tree structure would do it, where each node has optional left and right child nodes.&lt;/p&gt;</comment>
                            <comment id="15183556" author="zolyfarkas" created="Mon, 7 Mar 2016 19:46:11 +0000"  >&lt;p&gt;will improve the unit test.&lt;/p&gt;</comment>
                            <comment id="15183646" author="zolyfarkas" created="Mon, 7 Mar 2016 20:31:08 +0000"  >&lt;p&gt;I extended, the unit test to complicate the recursiveness, an I am unable to break my original implementation.&lt;/p&gt;

&lt;p&gt;I like your implementation since it does not mutate the fixups... however I believe in my implementation I was mutating the existing fixups, since the old ones were not valid fixups anymore?&lt;br/&gt;
I still have to re-understand this....&lt;/p&gt;

&lt;p&gt;In any case here is the lastest unit test code, I would really like to test and catch the issue my original implementation had:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; org.apache.avro.io.parsing;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.ByteArrayInputStream;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.ByteArrayOutputStream;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.Arrays;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.Collections;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.HashMap;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.HashSet;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.util.Set;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; junit.framework.Assert;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.Schema;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericData;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumReader;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.&lt;span class=&quot;code-keyword&quot;&gt;generic&lt;/span&gt;.GenericDatumWriter;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.BinaryDecoder;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.BinaryEncoder;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.DecoderFactory;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.avro.io.EncoderFactory;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;


&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;SymbolTest {


    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; SCHEMA = &lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;SampleNode\&lt;span class=&quot;code-quote&quot;&gt;&quot;,&quot;&lt;/span&gt;
            + &lt;span class=&quot;code-quote&quot;&gt;&quot;\&quot;&lt;/span&gt;namespace\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;org.spf4j.ssdump2.avro\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot; \&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;    {\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;count\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;:0},\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;    {\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;otherNode\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[\&quot;&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;SampleNode\&lt;span class=&quot;code-quote&quot;&gt;&quot;], \&quot;&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot; : &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;},\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;    {\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;subNodes\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;       {\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;array\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;items\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;           \&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;SamplePair\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;           \&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;              {\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;method\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;                  {\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;record\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;Method\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;                  \&quot;&lt;/span&gt;fields\&lt;span class=&quot;code-quote&quot;&gt;&quot;:[\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;                     {\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;declaringClass\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;avro.java.string\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;}},\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;                     {\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;methodName\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:{\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;string\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;avro.java.string\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;\&lt;span class=&quot;code-quote&quot;&gt;&quot;}}\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;                  ]}},\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;              {\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;node\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;SampleNode\&lt;span class=&quot;code-quote&quot;&gt;&quot;},&quot;&lt;/span&gt;
            + &lt;span class=&quot;code-quote&quot;&gt;&quot;{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;otherNode\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;SampleNode\&lt;span class=&quot;code-quote&quot;&gt;&quot;}]}}}&quot;&lt;/span&gt;
            + &lt;span class=&quot;code-quote&quot;&gt;&quot;,{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;subNodes2\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;       {\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;array\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;items\&lt;span class=&quot;code-quote&quot;&gt;&quot;: \&quot;&lt;/span&gt;SampleNode\&lt;span class=&quot;code-quote&quot;&gt;&quot;}}&quot;&lt;/span&gt;
           + &lt;span class=&quot;code-quote&quot;&gt;&quot;,{\&quot;&lt;/span&gt;name\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;subNodes3\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\n&quot;&lt;/span&gt; +
&lt;span class=&quot;code-quote&quot;&gt;&quot;       {\&quot;&lt;/span&gt;type\&lt;span class=&quot;code-quote&quot;&gt;&quot;:\&quot;&lt;/span&gt;array\&lt;span class=&quot;code-quote&quot;&gt;&quot;,\&quot;&lt;/span&gt;items\&lt;span class=&quot;code-quote&quot;&gt;&quot;: \&quot;&lt;/span&gt;SampleNode\&lt;span class=&quot;code-quote&quot;&gt;&quot;}} ]}&quot;&lt;/span&gt;;


    @Test
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testValidSymbolTree() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {

        Schema schema = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Schema.Parser().parse(SCHEMA);

        Symbol root = Symbol.root(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ResolvingGrammarGenerator()
                .generate(schema, schema, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;ValidatingGrammarGenerator.LitS, Symbol&amp;gt;()));
        validateNonNull(root, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;Symbol&amp;gt;());

        Schema samplePairSchema = schema.getField(&lt;span class=&quot;code-quote&quot;&gt;&quot;subNodes&quot;&lt;/span&gt;).schema().getElementType();
        Schema methodSchema = samplePairSchema.getField(&lt;span class=&quot;code-quote&quot;&gt;&quot;method&quot;&lt;/span&gt;).schema();

        GenericData.Record method = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericData.Record(methodSchema);
        method.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;methodName&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;m1&quot;&lt;/span&gt;);
        method.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;declaringClass&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;c1&quot;&lt;/span&gt;);

        GenericData.Record samplePair = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericData.Record(samplePairSchema);
        samplePair.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;method&quot;&lt;/span&gt;, method);

        GenericData.Record sampleNode1 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericData.Record(schema);
        sampleNode1.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;subNodes&quot;&lt;/span&gt;, Collections.EMPTY_LIST);
        sampleNode1.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;subNodes2&quot;&lt;/span&gt;, Collections.EMPTY_LIST);
        sampleNode1.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;subNodes3&quot;&lt;/span&gt;, Collections.EMPTY_LIST);
        sampleNode1.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;count&quot;&lt;/span&gt;, 0);
        sampleNode1.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;otherNode&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);

        samplePair.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;node&quot;&lt;/span&gt;, sampleNode1);
        samplePair.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;otherNode&quot;&lt;/span&gt;, sampleNode1);

        GenericData.Record sampleNode2 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericData.Record(schema);
        sampleNode2.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;subNodes&quot;&lt;/span&gt;, Arrays.asList(samplePair));
        sampleNode2.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;subNodes2&quot;&lt;/span&gt;, Arrays.asList(sampleNode1));
        sampleNode2.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;subNodes3&quot;&lt;/span&gt;, Arrays.asList(sampleNode1));
        sampleNode2.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;count&quot;&lt;/span&gt;, 0);
        sampleNode2.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;otherNode&quot;&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);

        ByteArrayOutputStream bos = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream();
        GenericDatumWriter writer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericDatumWriter(schema);
        BinaryEncoder directBinaryEncoder = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; EncoderFactory().directBinaryEncoder(bos, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
        writer.write(sampleNode2, directBinaryEncoder);

        ByteArrayInputStream bis = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayInputStream(bos.toByteArray());
        GenericDatumReader reader = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; GenericDatumReader(schema);
        BinaryDecoder binaryDecoder = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; DecoderFactory().binaryDecoder(bis, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
        &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; read = reader.read(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, binaryDecoder);

        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(read);
        Assert.assertEquals(read, sampleNode2);


    }

    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void validateNonNull(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Symbol symb, Set&amp;lt;Symbol&amp;gt; seen) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (seen.contains(symb)) {
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt;;
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
            seen.add(symb);
        }
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (symb.production != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
            &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Symbol s : symb.production) {
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (s == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
                    Assert.fail(&lt;span class=&quot;code-quote&quot;&gt;&quot;invalid parsing tree should not contain nulls&quot;&lt;/span&gt;);
                }
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (s.kind != Symbol.Kind.ROOT) {
                    validateNonNull(s, seen);;
                }
            }
        }
    }

}

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="15183736" author="zolyfarkas" created="Mon, 7 Mar 2016 21:20:00 +0000"  >&lt;p&gt;Ryan, &lt;/p&gt;

&lt;p&gt;So far I think your code is logically correct and an improvement on my implementation,&lt;br/&gt;
the copyFixups method can be improved to:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void copyFixups(List&amp;lt;Fixup&amp;gt; fixups, Symbol[] out, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; outPos,
                                 Symbol[] toCopy) {
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; nrFixups = fixups.size();
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; nrFixups; i++) {
      Fixup fixup = fixups.get(i);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (fixup.symbols == toCopy) {
        fixups.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Fixup(out, fixup.pos + outPos));
      }
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the original implementation was iterating over the added Fixups (since mixups.size() was reevaluated at every iteration) which is unnecessary...&lt;/p&gt;</comment>
                            <comment id="15189903" author="zolyfarkas" created="Thu, 10 Mar 2016 20:39:39 +0000"  >&lt;p&gt;Updated pull request: &lt;a href=&quot;https://github.com/apache/avro/pull/74&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/74&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;contains:&lt;br/&gt;
1) a slightly improved version of Ryan&apos;s implementation&lt;br/&gt;
2) improved unit test to try to break the original implementation (unsuccessful)&lt;/p&gt;</comment>
                            <comment id="15195523" author="jira-bot" created="Tue, 15 Mar 2016 15:48:07 +0000"  >&lt;p&gt;Commit 482adcfa1857033f2a76b07b429a266b0231f433 in avro&apos;s branch refs/heads/master from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=rdblue&quot; class=&quot;user-hover&quot; rel=&quot;rdblue&quot;&gt;Ryan Blue&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=482adcf&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://git-wip-us.apache.org/repos/asf?p=avro.git;h=482adcf&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1667&quot; title=&quot;Parser symbol tree flattening is broken for recursive schemas&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1667&quot;&gt;&lt;del&gt;AVRO-1667&lt;/del&gt;&lt;/a&gt;: Fix parser grammar flattening for recursive cases. Contributed by Zoltan Farkas.&lt;/p&gt;

&lt;p&gt;Recursive records use a Fixup class to copy sequences of parser Symbols&lt;br/&gt;
because the final sequence isn&apos;t yet known. But these weren&apos;t being&lt;br/&gt;
copied when the sequences being fixed up were copied, which caused the&lt;br/&gt;
final grammar to have nulls in some cases.&lt;/p&gt;</comment>
                            <comment id="15195527" author="rdblue" created="Tue, 15 Mar 2016 15:50:18 +0000"  >&lt;p&gt;I committed the fix with the update. Thanks for working on this, &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zolyfarkas&quot; class=&quot;user-hover&quot; rel=&quot;zolyfarkas&quot;&gt;Zoltan Farkas&lt;/a&gt;! I didn&apos;t add the test since it doesn&apos;t catch the broken case. I&apos;d like to get one that does, but there&apos;s no need to make this fix dependent on it.&lt;/p&gt;</comment>
                            <comment id="15196036" author="zolyfarkas" created="Tue, 15 Mar 2016 19:32:41 +0000"  >&lt;p&gt;The unit test did catch the original issue though, so it is quite useful to have it in.&lt;br/&gt;
The latest version of the test I complicated it a lot to try to beak my original fix, but I was unable to.&lt;/p&gt;

&lt;p&gt;It currently contains testing the equivalent of:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;record Node {

array&amp;lt;Node&amp;gt; left;
array&amp;lt;Node&amp;gt; right;
union {&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, Node} center;
array&amp;lt;NodePair&amp;gt; nodepairs;;

}

record NodePair {
Node node1;
Node node2;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In any case I will proceed with the rebase of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1723&quot; title=&quot;Add support for forward declarations in avro IDL&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1723&quot;&gt;&lt;del&gt;AVRO-1723&lt;/del&gt;&lt;/a&gt;. The unit test for that, does cover this bug as well...&lt;/p&gt;


&lt;p&gt;thank you!&lt;/p&gt;
</comment>
                            <comment id="15196059" author="rdblue" created="Tue, 15 Mar 2016 19:45:54 +0000"  >&lt;p&gt;I committed the test that caught the original bug, just not the binary tree test that didn&apos;t catch the other case. We can revisit it later.&lt;/p&gt;</comment>
                            <comment id="15196094" author="zolyfarkas" created="Tue, 15 Mar 2016 20:01:23 +0000"  >&lt;p&gt;that&apos;s great! &lt;/p&gt;</comment>
                            <comment id="15199528" author="zolyfarkas" created="Thu, 17 Mar 2016 13:36:52 +0000"  >&lt;p&gt;Ryan I just reviewed the commit, can we change:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void copyFixups(List&amp;lt;Fixup&amp;gt; fixups, Symbol[] out, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; outPos,
                                 Symbol[] toCopy) {
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0, n = fixups.size(); i &amp;lt; n; i += 1) {
      Fixup fixup = fixups.get(i);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (fixup.symbols == toCopy) {
        fixups.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Fixup(out, fixup.pos + outPos));
      }
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void copyFixups(List&amp;lt;Fixup&amp;gt; fixups, Symbol[] out, &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; outPos,
                                 Symbol[] toCopy) {
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; nrFixups = fixups.size();
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; nrFixups; i++) {
      Fixup fixup = fixups.get(i);
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (fixup.symbols == toCopy) {
        fixups.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Fixup(out, fixup.pos + outPos));
      }
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                            <comment id="15199881" author="rdblue" created="Thu, 17 Mar 2016 16:43:54 +0000"  >&lt;p&gt;Is there a semantic difference between the two?&lt;/p&gt;</comment>
                            <comment id="15199891" author="zolyfarkas" created="Thu, 17 Mar 2016 16:48:49 +0000"  >&lt;p&gt;Yes, &lt;/p&gt;

&lt;p&gt; for (int i = 0, n = fixups.size(); i &amp;lt; n; i += 1) &lt;/p&gt;

&lt;p&gt;will iterate also on the entries added with:&lt;/p&gt;

&lt;p&gt;fixups.add(new Fixup(out, fixup.pos + outPos));&lt;/p&gt;

&lt;p&gt;which I am not sure we want... (fixups.size() is reevaluated at every step...)&lt;/p&gt;</comment>
                            <comment id="15199896" author="rdblue" created="Thu, 17 Mar 2016 16:51:15 +0000"  >&lt;p&gt;I don&apos;t think that&apos;s correct. The call to fixups.size() is in initialization, not in the size check. The integer n should be constant.&lt;/p&gt;</comment>
                            <comment id="15199918" author="zolyfarkas" created="Thu, 17 Mar 2016 16:56:38 +0000"  >&lt;p&gt;You&apos;re right... I was still visualizing the initial implementation from the patch ...&lt;/p&gt;

&lt;p&gt;One thing though, we should replace i+=1 with i++...&lt;/p&gt;

&lt;p&gt;thanks&lt;/p&gt;</comment>
                            <comment id="15860700" author="githubbot" created="Fri, 10 Feb 2017 04:48:37 +0000"  >&lt;p&gt;Github user asfgit closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/avro/pull/74&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/avro/pull/74&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310040">
                    <name>Required</name>
                                                                <inwardlinks description="is required by">
                                        <issuelink>
            <issuekey id="12860688">AVRO-1723</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12791704" name="AVRO-1667.2.patch" size="6085" author="rdblue" created="Mon, 7 Mar 2016 03:17:00 +0000"/>
                            <attachment id="12787805" name="avro-1667.patch" size="4432" author="zolyfarkas" created="Sat, 13 Feb 2016 13:02:46 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 30 Jun 2015 23:11:00 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 49 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2ebjz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
