<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:12:26 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2009-7-15+AND+created+%3C%3D+2009-7-22+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="3" total="3"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-78] &apos;reflect&apos; implementation works only with public fields</title>
                <link>https://issues.apache.org/jira/browse/AVRO-78</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;As per the documentation &apos;reflect&apos; implementation should work for Class#getDeclaredFields() &lt;/p&gt;</description>
                <environment></environment>
        <key id="12430458">AVRO-78</key>
            <summary>&apos;reflect&apos; implementation works only with public fields</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="sharadag">Sharad Agarwal</reporter>
                        <labels>
                    </labels>
                <created>Wed, 15 Jul 2009 03:11:26 +0000</created>
                <updated>Wed, 16 Sep 2009 22:31:45 +0000</updated>
                            <resolved>Thu, 16 Jul 2009 20:34:35 +0000</resolved>
                                    <version>1.0.0</version>
                                    <fixVersion>1.1.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12731261" author="sharadag" created="Wed, 15 Jul 2009 04:14:52 +0000"  >&lt;p&gt;Testcase:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;TestReflect {
....

@Test
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testRefRecord() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    Schema schm = ReflectData.getSchema(RefRecord.class);
    &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; clazz = RefRecord.class;
    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; prefix =  
      ((clazz.getEnclosingClass() == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; 
          || &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;&quot;&lt;/span&gt;.equals(clazz.getEnclosingClass())) ? 
            clazz.getPackage().getName() + &lt;span class=&quot;code-quote&quot;&gt;&quot;.&quot;&lt;/span&gt; 
            : (clazz.getEnclosingClass().getName() + &lt;span class=&quot;code-quote&quot;&gt;&quot;$&quot;&lt;/span&gt;));
    ReflectDatumWriter writer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReflectDatumWriter(schm);
    ByteArrayOutputStream out = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream();
    RefRecord rec = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RefRecord();
    rec.x = 5;
    rec.y = 10;
    writer.write(rec, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BinaryEncoder(out));
    ReflectDatumReader reader = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ReflectDatumReader(schm, prefix);
    &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; decoded =
      reader.read(&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BinaryDecoder(
          &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayInputStream(out.toByteArray())));
    assertEquals(rec, decoded);
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;class &lt;/span&gt;RefRecord {
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; x = 1;
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; y = 2;

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; hashCode() {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; x + y;
    }

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; equals(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; obj) {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; == obj)
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (obj == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (getClass() != obj.getClass())
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
      &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; RefRecord other = (RefRecord) obj;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (x != other.x)
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (y != other.y)
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12731649" author="cutting" created="Wed, 15 Jul 2009 19:59:17 +0000"  >&lt;p&gt;Thanks for the test case.  Here&apos;s a patch that fixes this.&lt;/p&gt;</comment>
                            <comment id="12731890" author="sharadag" created="Thu, 16 Jul 2009 10:31:53 +0000"  >&lt;p&gt;+1 for the patch&lt;/p&gt;</comment>
                            <comment id="12732138" author="cutting" created="Thu, 16 Jul 2009 20:34:35 +0000"  >&lt;p&gt;I just committed this.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12413593" name="AVRO-78.patch" size="5935" author="cutting" created="Wed, 15 Jul 2009 19:59:17 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 15 Jul 2009 19:59:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94407</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 28 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dy3j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79454</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-79] The spec does not say how to encode default values for &quot;fixed&quot;</title>
                <link>https://issues.apache.org/jira/browse/AVRO-79</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The spec is silent on how to encode default values for &quot;fixed&quot; type in schema. The code in GenericDatumReader suggests that that it should be encoded as a JSON string with Java&apos;s platform default charset. A more appropriate way is to encode &quot;fixed&quot; in the same way as binary, that is a string with ISO-8859-1.&lt;/p&gt;

&lt;p&gt;I&apos;ll submit a patch for this soon.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12430840">AVRO-79</key>
            <summary>The spec does not say how to encode default values for &quot;fixed&quot;</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thiru_mg">Thiruvalluvan M. G.</assignee>
                                    <reporter username="thiru_mg">Thiruvalluvan M. G.</reporter>
                        <labels>
                    </labels>
                <created>Sat, 18 Jul 2009 04:29:51 +0000</created>
                <updated>Wed, 16 Sep 2009 22:31:45 +0000</updated>
                            <resolved>Mon, 20 Jul 2009 21:04:14 +0000</resolved>
                                                    <fixVersion>1.1.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12733354" author="cutting" created="Mon, 20 Jul 2009 21:04:14 +0000"  >&lt;p&gt;I just committed this.  Thanks, Thiru!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12413907" name="AVRO-79.patch" size="1288" author="thiru_mg" created="Sat, 18 Jul 2009 04:31:09 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 20 Jul 2009 21:04:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94408</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 27 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dy3r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79455</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-80] &apos;reflect&apos; implementation requires Avro classes to define types</title>
                <link>https://issues.apache.org/jira/browse/AVRO-80</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Since &apos;reflect&apos; implementation is expected to work with existing code, it should work with java types. For example it should work with java String instead of org.apache.avro.util.Utf8.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12430900">AVRO-80</key>
            <summary>&apos;reflect&apos; implementation requires Avro classes to define types</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="sharadag">Sharad Agarwal</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 Jul 2009 03:44:49 +0000</created>
                <updated>Mon, 1 Mar 2010 17:10:27 +0000</updated>
                            <resolved>Fri, 20 Nov 2009 22:58:44 +0000</resolved>
                                                    <fixVersion>1.3.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="12759790" author="cutting" created="Fri, 25 Sep 2009 22:31:39 +0000"  >&lt;p&gt;Even if we don&apos;t fix this, we should document the current behaviour better in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-35&quot; title=&quot;document limitations of reflect implementation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-35&quot;&gt;AVRO-35&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also note that since &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-104&quot; title=&quot;Reflective API can&amp;#39;t handle nulls&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-104&quot;&gt;&lt;del&gt;AVRO-104&lt;/del&gt;&lt;/a&gt; it&apos;s possible to subclass ReflectData.  So, to, e.g. use String instead of Utf8, one could:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;subclass ReflectData, overriding getClass() and createSchema() to map the string Schema to java.lang.String and back;&lt;/li&gt;
	&lt;li&gt;subclass ReflectDatumReader, overriding readString() and createString();&lt;/li&gt;
	&lt;li&gt;subclass ReflectDatumWriter, overriding writeString().&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Similarly, one can provide alternate representations of arrays and maps.&lt;/p&gt;</comment>
                            <comment id="12759793" author="cutting" created="Fri, 25 Sep 2009 22:39:17 +0000"  >&lt;p&gt;Do folks feel we should switch the default from String to Utf8?  This has a performance implications, since Strings are immutable, while a Utf8 can and is re-used.  Also, when strings are created they must decode UTF-8, while Utf8 only decodes on demand.&lt;/p&gt;

&lt;p&gt;Alternately, we could include implementations of ReflectData, DatumReader and DatumWriter that represent strings with java.lang.String so that folks can use whichever they prefer.  Is that too confusing?&lt;/p&gt;</comment>
                            <comment id="12762937" author="sharadag" created="Wed, 7 Oct 2009 08:37:15 +0000"  >&lt;p&gt;I think there should be a default and easy way to work with Strings. I came across couple of instances where potential users enquired about this and this limitation deterred them to use Avro.&lt;br/&gt;
Should we make the reflect &lt;b&gt;default&lt;/b&gt; representation of String schema as java.lang.String itself? I agree that performance is the concern but I think for reflect that trade-off is fine.&lt;/p&gt;</comment>
                            <comment id="12774432" author="cutting" created="Fri, 6 Nov 2009 22:01:05 +0000"  >&lt;p&gt;The more I think about it, the more I agree that reflect should be independent of Avro&apos;s runtime classes, instead using built-in Java classes.  In particular, reflection should represent Avro strings with java.lang.String and Avro arrays with java.util.ArrayList.  I&apos;ll start work on this ASAP.&lt;/p&gt;</comment>
                            <comment id="12774442" author="scott_carey" created="Fri, 6 Nov 2009 22:15:21 +0000"  >&lt;p&gt;In the future, what Java types Avro reflection maps to can be configurable.&lt;/p&gt;

&lt;p&gt;Jackson&apos;s annotations, and mix-in annotations might be good for reference when thinking about the sort of flexibility needed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wiki.fasterxml.com/JacksonAnnotations&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.fasterxml.com/JacksonAnnotations&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://wiki.fasterxml.com/JacksonMixInAnnotations&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wiki.fasterxml.com/JacksonMixInAnnotations&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From one end: what to do with the reflect case &amp;#8211; to the other: a specific mapping from an object to a schema &amp;#8211; there will need to be a lot of flexibility in the long run and Jackson has a lot of nice examples to keep in mind.&lt;/p&gt;</comment>
                            <comment id="12777595" author="cutting" created="Fri, 13 Nov 2009 18:14:43 +0000"  >&lt;p&gt;The mixin annotations seem like they could be a useful pattern for Avro.  Thanks for pointing them out!&lt;/p&gt;

&lt;p&gt;For this issue I just intend to switch the default mapping for strings and arrays to use common, built-in Java types.  I might even try to be clever and map both Foo[] and ArrayList&amp;lt;Foo&amp;gt; to Avro arrays, or I might punt that to a follow-on issue.  Making it configurable with mixin annotations is definitely a follow-on.&lt;/p&gt;</comment>
                            <comment id="12779175" author="cutting" created="Tue, 17 Nov 2009 22:25:50 +0000"  >&lt;p&gt;Here&apos;s a first version of this.  All tests pass.  I added new tests in TestReflect, but should probably add more before we commit this.&lt;/p&gt;</comment>
                            <comment id="12780437" author="cutting" created="Fri, 20 Nov 2009 04:59:46 +0000"  >&lt;p&gt;Here&apos;s a version with more tests and few bugs fixed.&lt;/p&gt;</comment>
                            <comment id="12780461" author="philip" created="Fri, 20 Nov 2009 06:13:12 +0000"  >&lt;p&gt;Took a look.  Overall, confusing, but I can see why it&apos;s necessary.  Some questions and comments...&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Should isString() report true on utf8?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Should isBytes understand ByteBuffer?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Should ReflectData.validate() on java arrays check the type of the array?  Is that do-able?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;ReflectData.getClass() needs to explain what&apos;s going on with the&lt;br/&gt;
LIST_CLASSES thing.  Leave a note somewhere to explain that&lt;br/&gt;
it&apos;s a map determining whether to use List&amp;lt;?&amp;gt; or java native&lt;br/&gt;
arrays for a given field.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Have you considered subclassing Schema to keep the list information, instead of the LIST_CLASSES static?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Why does peekarray return null?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Does it ever come up that you made an array, but then need to lengthen it later, because of the chunked encoding?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Why not just Arrays.asList(o).iterator() here?
&lt;blockquote&gt;&lt;p&gt;protected Iterator&amp;lt;Object&amp;gt; getArrayElements&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Should we import WeakIdentityHashMap&apos;s test too?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;For TestReflect, it would be great to see some tests that&lt;br/&gt;
check that exceptions are thrown on schemas that TestReflect doesn&apos;t support.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;The current tests don&apos;t hit the line:
&lt;blockquote&gt;&lt;p&gt;Type component = ((GenericArrayType)type).getGenericComponentType();&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="12780803" author="cutting" created="Fri, 20 Nov 2009 22:43:22 +0000"  >&lt;p&gt;&amp;gt; Should isString() report true on utf8?&lt;/p&gt;

&lt;p&gt;I don&apos;t think so.  Reflect should be independent of Avro-specific datatypes.&lt;/p&gt;

&lt;p&gt;&amp;gt; Should isBytes understand ByteBuffer?&lt;/p&gt;

&lt;p&gt;I think most folks use byte[] for binary data.  If we find otherwise, we can add reflection support for ByteBuffer too.  As you&apos;ve seen with arrays though, it&apos;s tricky to map a single Avro type to two different Java types, so I&apos;d rather avoid doing so unless we need to.&lt;/p&gt;

&lt;p&gt;&amp;gt; explain what&apos;s going on with the LIST_CLASSES thing&lt;/p&gt;

&lt;p&gt;Good idea.  I&apos;ve added a comment for this.&lt;/p&gt;

&lt;p&gt;&amp;gt; Have you considered subclassing Schema to keep the list information, instead of the LIST_CLASSES static?&lt;/p&gt;

&lt;p&gt;That&apos;s not possible without exposing a lot of internals.  A better long-term approach might be to have schemas support extensible properties.&lt;/p&gt;

&lt;p&gt;&amp;gt;  Does it ever come up that you made an array, but then need to lengthen it later, because of the chunked encoding?&lt;/p&gt;

&lt;p&gt;Yes.  This becomes a bug in the reflect implementation after this patch is committed: it cannot correctly read chunked data without throwing ArrayIndexOutOfBounds.  But its unlikely the reflect implementation will ever generate blocked data, nor be used to read blocked data.&lt;/p&gt;

&lt;p&gt;&amp;gt; Why not just Arrays.asList(o).iterator() here?&lt;/p&gt;

&lt;p&gt;This does not work with int[], but only with Integer[].  We need something that works with both.  Plus that allocates two objects instead of one.&lt;/p&gt;

&lt;p&gt;&amp;gt; Should we import WeakIdentityHashMap&apos;s test too?&lt;/p&gt;

&lt;p&gt;None exist.&lt;/p&gt;



</comment>
                            <comment id="12780812" author="cutting" created="Fri, 20 Nov 2009 22:58:44 +0000"  >&lt;p&gt;I just committed this.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10032">
                    <name>Blocker</name>
                                                                <inwardlinks description="is blocked by">
                                        <issuelink>
            <issuekey id="12440066">AVRO-185</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12426135">AVRO-35</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12425576" name="AVRO-80.patch" size="38092" author="cutting" created="Fri, 20 Nov 2009 04:59:46 +0000"/>
                            <attachment id="12425266" name="AVRO-80.patch" size="30821" author="cutting" created="Tue, 17 Nov 2009 22:25:49 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 25 Sep 2009 22:31:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>94409</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10342"><![CDATA[Incompatible change]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 10 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0dy3z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>79456</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
