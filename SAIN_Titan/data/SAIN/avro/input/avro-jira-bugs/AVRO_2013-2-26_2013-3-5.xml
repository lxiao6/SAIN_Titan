<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:18:22 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2013-2-26+AND+created+%3C%3D+2013-3-5+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="10" total="10"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1261] Honor schema defaults with the Constructor in addition to the builders.</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1261</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;As I understand it, currently if you want to utilize defaults in a schema, ie:&lt;/p&gt;

{ 
&quot;namespace&quot;: &quot;com.chris.test&quot;, 
&quot;type&quot;: &quot;record&quot;, 
&quot;name&quot;: &quot;CHRISTEST&quot;, 
&quot;doc&quot;: &quot;Chris Test&quot;, 
&quot;fields&quot;: [ 
{&quot;name&quot;: &quot;firstname&quot;, &quot;type&quot;: &quot;string&quot;, &quot;default&quot;: &quot;Chris&quot;}
&lt;p&gt;, &lt;/p&gt;
{&quot;name&quot;: &quot;lastname&quot;, &quot;type&quot;: &quot;string&quot;, &quot;default&quot;: &quot;Conner&quot;}
&lt;p&gt;, &lt;/p&gt;
{&quot;name&quot;: &quot;username&quot;, &quot;type&quot;: &quot;string&quot;, &quot;default&quot;: &quot;cconner&quot;}
&lt;p&gt;] &lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Then I have to use the builders to create my objects.  IE:&lt;/p&gt;

&lt;p&gt;public class ChrisAvroTest {&lt;/p&gt;

&lt;p&gt;public static void main(String[] args) throws Exception &lt;/p&gt;
{


CHRISTEST person = CHRISTEST.newBuilder() 
.build(); 
System.out.println(&quot;person:&quot; + person);

}
&lt;p&gt; &lt;br/&gt;
}&lt;/p&gt;


&lt;p&gt;Is my understanding correct?  Is it possible to make it so the default constructor as well?&lt;/p&gt;</description>
                <environment></environment>
        <key id="12634471">AVRO-1261</key>
            <summary>Honor schema defaults with the Constructor in addition to the builders.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="cconner">Christopher Conner</reporter>
                        <labels>
                    </labels>
                <created>Wed, 27 Feb 2013 19:37:53 +0000</created>
                <updated>Tue, 20 Aug 2013 17:46:07 +0000</updated>
                            <resolved>Tue, 9 Jul 2013 22:14:50 +0000</resolved>
                                    <version>1.7.4</version>
                                    <fixVersion>1.7.5</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="13588693" author="cutting" created="Wed, 27 Feb 2013 19:58:58 +0000"  >&lt;p&gt;The no-arg constructor is also used to create instances when reading.  Setting field defaults in this case may harm performance, especially when new copies of mutable default values are allocated each time.  Similarly, setting field values to defaults when writing may harm performance when the application overwrites the default.  In general, there are cases where it&apos;s probably fastest to create instances without defaults set.  Currently the no-arg constructor serves this purpose and the Builder API supports the case where defaults are desired.&lt;/p&gt;

&lt;p&gt;Perhaps we could better document this?  The generated no-arg constructor might include javadoc cautioning that no default values are set and that the builder should be used if they&apos;re desired?&lt;/p&gt;</comment>
                            <comment id="13588699" author="cconner" created="Wed, 27 Feb 2013 20:05:54 +0000"  >&lt;p&gt;Thanks Doug, makes sense!  I definitely think the documentation change would be nice.&lt;/p&gt;</comment>
                            <comment id="13590032" author="cutting" created="Thu, 28 Feb 2013 23:13:33 +0000"  >&lt;p&gt;Here&apos;s a patch that improves the generated javadoc as suggested.&lt;/p&gt;</comment>
                            <comment id="13645789" author="scott_carey" created="Tue, 30 Apr 2013 18:02:20 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                            <comment id="13703866" author="jira-bot" created="Tue, 9 Jul 2013 22:00:09 +0000"  >&lt;p&gt;Commit 1501581 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1501581&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1501581&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1261&quot; title=&quot;Honor schema defaults with the Constructor in addition to the builders.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1261&quot;&gt;&lt;del&gt;AVRO-1261&lt;/del&gt;&lt;/a&gt;. Clarify in documentation that generated no-arg constructors do not use default values from schema.&lt;/p&gt;</comment>
                            <comment id="13703885" author="cutting" created="Tue, 9 Jul 2013 22:14:50 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                            <comment id="13703937" author="hudson" created="Tue, 9 Jul 2013 22:47:07 +0000"  >&lt;p&gt;Integrated in AvroJava #382 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/382/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/382/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1261&quot; title=&quot;Honor schema defaults with the Constructor in addition to the builders.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1261&quot;&gt;&lt;del&gt;AVRO-1261&lt;/del&gt;&lt;/a&gt;. Clarify in documentation that generated no-arg constructors do not use default values from schema. (Revision 1501581)&lt;/p&gt;

&lt;p&gt;     Result = FAILURE&lt;br/&gt;
cutting : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/classic/record.vm&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13704704" author="jira-bot" created="Wed, 10 Jul 2013 16:14:12 +0000"  >&lt;p&gt;Commit 1501821 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1501821&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1501821&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1261&quot; title=&quot;Honor schema defaults with the Constructor in addition to the builders.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1261&quot;&gt;&lt;del&gt;AVRO-1261&lt;/del&gt;&lt;/a&gt;. Add missing escape that broke the build.  Oops.&lt;/p&gt;</comment>
                            <comment id="13704736" author="jira-bot" created="Wed, 10 Jul 2013 16:40:07 +0000"  >&lt;p&gt;Commit 1501842 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1501842&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1501842&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1261&quot; title=&quot;Honor schema defaults with the Constructor in addition to the builders.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1261&quot;&gt;&lt;del&gt;AVRO-1261&lt;/del&gt;&lt;/a&gt;. Fix tests whose generated javadoc has changed.&lt;/p&gt;</comment>
                            <comment id="13704750" author="hudson" created="Wed, 10 Jul 2013 17:02:13 +0000"  >&lt;p&gt;Integrated in AvroJava #383 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/383/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/383/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1261&quot; title=&quot;Honor schema defaults with the Constructor in addition to the builders.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1261&quot;&gt;&lt;del&gt;AVRO-1261&lt;/del&gt;&lt;/a&gt;. Fix tests whose generated javadoc has changed. (Revision 1501842)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1261&quot; title=&quot;Honor schema defaults with the Constructor in addition to the builders.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1261&quot;&gt;&lt;del&gt;AVRO-1261&lt;/del&gt;&lt;/a&gt;. Add missing escape that broke the build.  Oops. (Revision 1501821)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
cutting : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/test/compiler/output-string/avro/examples/baseball/Player.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/tools/src/test/compiler/output/Player.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;cutting : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/lang/java/compiler/src/main/velocity/org/apache/avro/compiler/specific/templates/java/classic/record.vm&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12571489" name="AVRO-1261.patch" size="768" author="cutting" created="Thu, 28 Feb 2013 23:13:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 27 Feb 2013 19:58:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>314964</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 28 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1icnb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315308</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1262] Provide access to the writer schema from the mapper</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1262</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;When using an Avro InputFormat like AvroKeyInputFormat, the writer schema of the container file should be accessible from the mapper.  This is useful in cases where a reader schema is not specified.  &lt;/p&gt;

&lt;p&gt;A workaround is to use FileSplit#getPath() to access the container file and manually pull out the schema.  This workaround is not ideal because internally the writer schema has already been read (see AvroRecordReaderBase#createAvroFileReader(...)) - it is awkward and inefficient for the user to repeat this work.&lt;/p&gt;

&lt;p&gt;See also:&lt;br/&gt;
&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/avro-user/201302.mbox/%3CCAOF3b61nFw4ztOo9Q5pHHtoUDFZ3sRrvEdRGbXGV_cscTqd5LA%40mail.gmail.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mail-archives.apache.org/mod_mbox/avro-user/201302.mbox/%3CCAOF3b61nFw4ztOo9Q5pHHtoUDFZ3sRrvEdRGbXGV_cscTqd5LA%40mail.gmail.com%3E&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="12634473">AVRO-1262</key>
            <summary>Provide access to the writer schema from the mapper</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21141&amp;avatarType=issuetype">New Feature</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="jojspieg@gmail.com">Josh Spiegel</reporter>
                        <labels>
                    </labels>
                <created>Wed, 27 Feb 2013 19:50:50 +0000</created>
                <updated>Wed, 7 Aug 2013 19:24:33 +0000</updated>
                                            <version>1.7.4</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13591029" author="cutting" created="Fri, 1 Mar 2013 22:35:55 +0000"  >&lt;p&gt;Here&apos;s a patch that implements this.&lt;/p&gt;</comment>
                            <comment id="13591104" author="jojspieg@gmail.com" created="Fri, 1 Mar 2013 23:45:17 +0000"  >&lt;p&gt;Thanks!  It looks like you exposed the writer schema on the RecordReader.  Is the RecordReader accessible from the Mapper?  I can see that the RecordReader is referenced in the MapContext (*.hadoop.mapreduce.MapContext) but access to it seems to be private.  Am I missing something?&lt;/p&gt;</comment>
                            <comment id="13618419" author="qwertymaniac" created="Sun, 31 Mar 2013 18:43:04 +0000"  >&lt;p&gt;Josh,&lt;/p&gt;

&lt;p&gt;You&apos;re correct. One does not get access to the RR via a Mapper in new API, but can get it if they use the old API&apos;s &lt;a href=&quot;http://hadoop.apache.org/docs/current/api/org/apache/hadoop/mapred/MapRunner.html#run(org.apache.hadoop.mapred.RecordReader,%20org.apache.hadoop.mapred.OutputCollector,%20org.apache.hadoop.mapred.Reporter)&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;MapRunner&lt;/a&gt; implementation.&lt;/p&gt;

&lt;p&gt;I guess one other way would be to have the RR load a defined config key during its initialization, which can be fetched from the Mapper. This would be more &quot;inelegant&quot; (i.e. no API) but would work with both APIs.&lt;/p&gt;</comment>
                            <comment id="13618951" author="jojspieg@gmail.com" created="Mon, 1 Apr 2013 17:33:08 +0000"  >&lt;p&gt;Harsh - thanks for confirming!  The way I patched it locally was to expose the schema on AvroKey.  I think your configuration suggestion would work too but it requires serializing the schema and reparsing it in the mapper.  My solution does not require a reparse but it is not perfect either because it might imply to a user that the schema can change per datum (which of course is not true).  &lt;/p&gt;

&lt;p&gt;In any case, I am optimistic that Doug will know what to do &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Josh&lt;/p&gt;</comment>
                            <comment id="13732608" author="cutting" created="Wed, 7 Aug 2013 19:24:33 +0000"  >&lt;p&gt;It doesn&apos;t seem that the patch I provided is what is required.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12571671" name="AVRO-1262.patch" size="2943" author="cutting" created="Fri, 1 Mar 2013 22:35:55 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 1 Mar 2013 22:35:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>314966</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 24 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1icnr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315310</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1263] Responder should not log SpecificExceptionBase in the same log level as RuntimeException</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1263</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It would be nice when only RuntimeExceptions or other exceptions to extending SpecificExceptionBase would be logged at WARN level.&lt;/p&gt;

&lt;p&gt;Our log file is flooded with Exceptions extending SpecificExceptionBase but we want to log them in a different way to the &quot;unexpected&quot; exceptions.&lt;/p&gt;

&lt;p&gt;Maybe SpecificExceptionBase exceptions could be logged in a lower log level.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12634590">AVRO-1263</key>
            <summary>Responder should not log SpecificExceptionBase in the same log level as RuntimeException</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="tino">Tino Kissig</reporter>
                        <labels>
                    </labels>
                <created>Thu, 28 Feb 2013 11:01:14 +0000</created>
                <updated>Thu, 28 Feb 2013 17:40:42 +0000</updated>
                                            <version>1.7.4</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="13589700" author="cutting" created="Thu, 28 Feb 2013 17:40:42 +0000"  >&lt;p&gt;This sounds reasonable to me.&lt;/p&gt;

&lt;p&gt;Perhaps, for back-compatibility, one could add setters to Responder that determine the level these should be logged at, e.g., setUserErrorLogLevel(level) and setSystemErrorLogLevel(level).  Unfortunately slf4j doesn&apos;t have a log(level, message, ...) method, but we could work around that, perhaps adding an &apos;enum Level &lt;/p&gt;
{TRACE, DEBUG, INFO, WARN, ERROR}
&lt;p&gt;&apos; definition and &apos;static log(Logger, level, message, ...)&apos; to Avro somewhere. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 28 Feb 2013 17:40:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315083</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 47 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1iddr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315427</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1264] IDL documentation uses wrong annotation for java-class</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1264</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The IDL documentation uses the annotation @java_class as an example, which is meaningless.  The meaningful annotation would be @java-class.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12634650">AVRO-1264</key>
            <summary>IDL documentation uses wrong annotation for java-class</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Thu, 28 Feb 2013 17:19:04 +0000</created>
                <updated>Thu, 28 Feb 2013 23:05:14 +0000</updated>
                            <resolved>Thu, 28 Feb 2013 23:05:14 +0000</resolved>
                                                                    <component>doc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                    <issuelinks>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                                                <inwardlinks description="is superceded by">
                                        <issuelink>
            <issuekey id="12634695">AVRO-1267</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315143</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 47 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1idr3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315487</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1265] Python: schema objects should support builder() default-filling behavior</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1265</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;There seems to be no way to easily use the avro libraries in Python (where I feel most qualified to comment) to encode generics with &quot;missing default values&quot; and have them transmitted in well-formed avro binary.&lt;/p&gt;

&lt;p&gt;If you fill in the &quot;missing&quot; default values, the Python libraries will transmit correctly.&lt;/p&gt;

&lt;p&gt;I&apos;d be happy to add methods to the avro.RecordSchema objects (in the Python libraries) that &quot;fill defaults&quot; on missing member fields of a record, recursively (which probably means method extension of other schema classes as well).&lt;/p&gt;

&lt;p&gt;For backwards compatibility (and probably to avoid unnecessary data traversal), clients probably want to explicitly ask the schema to fill in defaults before transmission in the cases where you&apos;d like to set only the non-default values.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12634655">AVRO-1265</key>
            <summary>Python: schema objects should support builder() default-filling behavior</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="10002" iconUrl="https://issues.apache.org/jira/images/icons/statuses/document.png" description="A patch for this issue has been uploaded to JIRA by a contributor.">Patch Available</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="trochee">Jeremy Kahn</assignee>
                                    <reporter username="trochee">Jeremy Kahn</reporter>
                        <labels>
                            <label>features</label>
                    </labels>
                <created>Thu, 28 Feb 2013 18:28:35 +0000</created>
                <updated>Fri, 29 Jan 2016 12:35:37 +0000</updated>
                                                            <fixVersion>1.9.0</fixVersion>
                                    <component>python</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13589764" author="trochee" created="Thu, 28 Feb 2013 18:32:08 +0000"  >&lt;p&gt;see &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/avro-user/201302.mbox/%3CCA+i_aEk0-ROfP5fMWtE7At0JYzhRVsQ9nMjuBVOVRkbEX6mEVA@mail.gmail.com%3E&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;this thread&lt;/a&gt; on the mailing list.&lt;/p&gt;</comment>
                            <comment id="13589970" author="trochee" created="Thu, 28 Feb 2013 21:59:56 +0000"  >&lt;p&gt;Here&apos;s &lt;a href=&quot;https://github.com/jkahn/avro/tree/feature/fill-defaults&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;where development is happening&lt;/a&gt; for this ticket.  I need to add tests, and won&apos;t propose a patch until I have them. I&apos;m hoping to find time to write the tests tomorrow or early next week.&lt;/p&gt;</comment>
                            <comment id="13613366" author="trochee" created="Tue, 26 Mar 2013 01:11:52 +0000"  >&lt;p&gt;Changes are revised to be &lt;a href=&quot;https://github.com/jkahn/avro/tree/avro-1265&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;at this github branch&lt;/a&gt;. Note also that &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1284&quot; title=&quot;Python: validation should be a method of Schema objects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1284&quot;&gt;AVRO-1284&lt;/a&gt; is a prerequisite fix for this patch.&lt;/p&gt;</comment>
                            <comment id="13618113" author="trochee" created="Sat, 30 Mar 2013 16:18:44 +0000"  >&lt;p&gt;Implement default-build behavior on schema and update tests to do (rather cursory) testing of this behavior&lt;/p&gt;</comment>
                            <comment id="13618114" author="trochee" created="Sat, 30 Mar 2013 16:22:15 +0000"  >&lt;p&gt;Patches on top of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1284&quot; title=&quot;Python: validation should be a method of Schema objects&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1284&quot;&gt;AVRO-1284&lt;/a&gt; provide &lt;tt&gt;schema.build_defaults(datum)&lt;/tt&gt; behavior that expands &lt;tt&gt;datum&lt;/tt&gt; to include default values if they are available.&lt;/p&gt;

&lt;p&gt;Useful for systematically producing valid data for (e.g.) IPC protocols.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12576237" name="avro-1265a-build-defaults.patch" size="3188" author="trochee" created="Sat, 30 Mar 2013 16:18:44 +0000"/>
                            <attachment id="12576238" name="avro-1265b-tests.patch" size="1761" author="trochee" created="Sat, 30 Mar 2013 16:18:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315148</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 43 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ids7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315492</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1266] Fix mapred AvroMultipleOutputs class to write the schema to Jobconf rather than private Hashmap</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1266</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The current version of mapred AvroMultipleOutputs stores schemas in provate hashmap which has issues when run in a mapreduce code. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12634674">AVRO-1266</key>
            <summary>Fix mapred AvroMultipleOutputs class to write the schema to Jobconf rather than private Hashmap</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="nagav.ashish">Ashish Nagavaram</assignee>
                                    <reporter username="nagav.ashish">Ashish Nagavaram</reporter>
                        <labels>
                    </labels>
                <created>Thu, 28 Feb 2013 20:02:16 +0000</created>
                <updated>Tue, 20 Aug 2013 17:46:06 +0000</updated>
                            <resolved>Sat, 13 Apr 2013 04:32:35 +0000</resolved>
                                                    <fixVersion>1.7.5</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13590837" author="cutting" created="Fri, 1 Mar 2013 19:09:39 +0000"  >&lt;p&gt;This looks like the mapred version of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1215&quot; title=&quot;AvroMultipleOutputs not working when specifying baseOutputPath&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1215&quot;&gt;&lt;del&gt;AVRO-1215&lt;/del&gt;&lt;/a&gt;.  Is that right?  If so, let&apos;s link it to that issue.&lt;/p&gt;

&lt;p&gt;Also, does this address the following question raised on the user list?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://s.apache.org/mapredmultiple&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://s.apache.org/mapredmultiple&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13590847" author="nagav.ashish" created="Fri, 1 Mar 2013 19:21:35 +0000"  >&lt;p&gt;Yes, it is the mapred version of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1215&quot; title=&quot;AvroMultipleOutputs not working when specifying baseOutputPath&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1215&quot;&gt;&lt;del&gt;AVRO-1215&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently the only way it supports multiple schemas is by created a namedOutput and schema for each output file. But it makes sense to have a collect(namedoutput,K,V,schema) and collect(K,V,schema,baseOutputFile) methods too. &lt;/p&gt;

&lt;p&gt;I will work on these and should mostly have a patch out by monday.&lt;/p&gt;

</comment>
                            <comment id="13592006" author="nagav.ashish" created="Mon, 4 Mar 2013 05:28:21 +0000"  >&lt;p&gt;Attached a new patch with the required changes, added functions with takes in basefilename and a schema and writes output according to that schema.&lt;/p&gt;</comment>
                            <comment id="13592639" author="cutting" created="Mon, 4 Mar 2013 21:06:48 +0000"  >&lt;p&gt;Looks good to me.  I&apos;ll commit this soon unless someone objects.&lt;/p&gt;</comment>
                            <comment id="13593615" author="pierremariani" created="Tue, 5 Mar 2013 17:23:27 +0000"  >&lt;p&gt;I am getting a null pointer exception when using avro 1.7.4 and the patch from March 3rd.&lt;/p&gt;

&lt;p&gt;Details of the exception:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;java.lang.NullPointerException
        at java.io.StringReader.&amp;lt;init&amp;gt;(StringReader.java:33)
        at org.apache.avro.Schema$Parser.parse(Schema.java:917)
        at org.apache.avro.Schema.parse(Schema.java:966)
        at org.apache.avro.mapred.AvroMultipleOutputs$InternalFileOutputFormat.getRecordWriter(AvroMultipleOutputs.java:611)
        at org.apache.avro.mapred.AvroMultipleOutputs.getRecordWriter(AvroMultipleOutputs.java:411)
        at org.apache.avro.mapred.AvroMultipleOutputs.getCollector(AvroMultipleOutputs.java:570)
        at org.apache.avro.mapred.AvroMultipleOutputs.getCollector(AvroMultipleOutputs.java:506)
        &amp;lt;call to amos.getCollector(&quot;outA&quot;, reporter).collect(object);&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Configuration of my job:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;JobConf conf = new JobConf(getConf(), getClass());
AvroJob.setInputSchema(conf, schemaA);
AvroJob.setMapOutputSchema(conf, Pair.getPairSchema(Schema.create(Schema.Type.STRING), schemaA));
AvroJob.setOutputSchema(conf, schemaA);
AvroJob.setMapperClass(conf, MyMapper.class);
AvroJob.setReducerClass(conf, MyReducer.class);
AvroMultipleOutputs.addNamedOutput(conf, &quot;outA&quot;, AvroOutputFormat.class, schemaA);
AvroMultipleOutputs.addNamedOutput(conf, &quot;outB&quot;, AvroOutputFormat.class, schemaB);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13593718" author="nagav.ashish" created="Tue, 5 Mar 2013 18:28:30 +0000"  >&lt;p&gt;Is the schemaA passed in the AvroMultipleOutputs.addNamedOutput(conf, &quot;outA&quot;, AvroOutputFormat.class, schemaA) null? &lt;/p&gt;

&lt;p&gt;eitherways it shouldn&apos;t throw a NullPointerException, I am attaching a new patch.  &lt;/p&gt;

&lt;p&gt;Can you try the new patch ?&lt;/p&gt;


</comment>
                            <comment id="13594782" author="pierremariani" created="Wed, 6 Mar 2013 15:27:21 +0000"  >&lt;p&gt;schemaA is not null.&lt;/p&gt;

&lt;p&gt;I confirmed that I am not getting the NullPointerException with the new patch, but bugs and difficulties in configuring the job in my own code are preventing me from confirming that it works. I am still trying and will update if I get anywhere.&lt;/p&gt;</comment>
                            <comment id="13596074" author="pierremariani" created="Thu, 7 Mar 2013 17:25:32 +0000"  >&lt;p&gt;I am not getting anywhere, and opted to port my job to the mapreduce api. I am running into troubles there as well which I&apos;ll mention in a mailing list email.&lt;/p&gt;</comment>
                            <comment id="13603588" author="nagav.ashish" created="Fri, 15 Mar 2013 17:49:55 +0000"  >&lt;p&gt;Hi Pierre,&lt;/p&gt;

&lt;p&gt;did you get a chance to test the patch again? &lt;/p&gt;

&lt;p&gt;I am attaching the test code just in case you need any reference.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://svn.apache.org/viewvc/avro/trunk/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java?view=log&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc/avro/trunk/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java?view=log&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="13603601" author="pierremariani" created="Fri, 15 Mar 2013 17:56:58 +0000"  >&lt;p&gt;I&apos;ll try again&lt;/p&gt;</comment>
                            <comment id="13605680" author="pierremariani" created="Mon, 18 Mar 2013 21:33:01 +0000"  >&lt;p&gt;I am really sorry, but I won&apos;t be trying to make this work anymore. I have reached my limit in terms of time spent and frustration.&lt;/p&gt;

&lt;p&gt;FYI, this is what I am getting when trying to run a job with a configuration similar to the one in the test file:&lt;br/&gt;
13/03/18 14:30:55 INFO mapred.JobClient: Task Id : attempt_201302121658_15642_m_000003_2, Status : FAILED&lt;br/&gt;
java.lang.Throwable: Child Error&lt;br/&gt;
        at org.apache.hadoop.mapred.TaskRunner.run(TaskRunner.java:475)&lt;br/&gt;
Caused by: java.io.IOException: Task process exit with nonzero status of 1.&lt;/p&gt;</comment>
                            <comment id="13627484" author="martinkl" created="Wed, 10 Apr 2013 05:11:49 +0000"  >&lt;p&gt;Unit tests pass and look good, and I have successfully used this patch in a real Hadoop job (running on a Hadoop-1.0.4 cluster). Can&apos;t tell for sure, but it looks like the error that Pierre was seeing is unrelated to this patch. I&apos;ll commit this soon unless there are any objections.&lt;/p&gt;</comment>
                            <comment id="13630929" author="martinkl" created="Sat, 13 Apr 2013 04:32:35 +0000"  >&lt;p&gt;I committed this (r1467543). Thanks Ashish!&lt;/p&gt;</comment>
                            <comment id="13630968" author="hudson" created="Sat, 13 Apr 2013 06:41:46 +0000"  >&lt;p&gt;Integrated in AvroJava #361 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/361/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/361/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1266&quot; title=&quot;Fix mapred AvroMultipleOutputs class to write the schema to Jobconf rather than private Hashmap&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1266&quot;&gt;&lt;del&gt;AVRO-1266&lt;/del&gt;&lt;/a&gt;. Java: Fix mapred.AvroMultipleOutputs to support multiple different schemas.  Contributed by Ashish Nagavaram. (Revision 1467543)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
martinkl : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/src/main/java/org/apache/avro/mapred/AvroMultipleOutputs.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12622859">AVRO-1215</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12572127" name="AVRO-1266-v1.patch" size="12847" author="nagav.ashish" created="Tue, 5 Mar 2013 18:28:25 +0000"/>
                            <attachment id="12571845" name="AVRO-1266.patch" size="12766" author="nagav.ashish" created="Mon, 4 Mar 2013 05:26:48 +0000"/>
                            <attachment id="12571455" name="AVRO-1266.patch" size="2023" author="nagav.ashish" created="Thu, 28 Feb 2013 20:03:16 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 1 Mar 2013 19:09:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315167</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 41 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1idwf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315511</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1267] permit dashes in IDL property names</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1267</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Since dashes are used in some schema property names, IDL ought to permit them in property names too so such properties can be specified in IDL.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12634695">AVRO-1267</key>
            <summary>permit dashes in IDL property names</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cutting">Doug Cutting</assignee>
                                    <reporter username="cutting">Doug Cutting</reporter>
                        <labels>
                    </labels>
                <created>Thu, 28 Feb 2013 21:50:47 +0000</created>
                <updated>Tue, 20 Aug 2013 17:46:03 +0000</updated>
                            <resolved>Mon, 4 Mar 2013 21:09:13 +0000</resolved>
                                                    <fixVersion>1.7.5</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13589964" author="cutting" created="Thu, 28 Feb 2013 21:52:45 +0000"  >&lt;p&gt;Here&apos;s a patch that implements this.&lt;/p&gt;</comment>
                            <comment id="13589965" author="cutting" created="Thu, 28 Feb 2013 21:53:09 +0000"  >&lt;p&gt;Unless there are objections I&apos;ll commit this soon.&lt;/p&gt;</comment>
                            <comment id="13592640" author="cutting" created="Mon, 4 Mar 2013 21:09:13 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310051">
                    <name>Supercedes</name>
                                            <outwardlinks description="supercedes">
                                        <issuelink>
            <issuekey id="12634650">AVRO-1264</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12571476" name="AVRO-1267.patch" size="2542" author="cutting" created="Thu, 28 Feb 2013 21:52:45 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315188</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 46 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ie13:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315532</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1268] Add java-class, java-key-class and java-element-class support for stringable types to SpecificData</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1268</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Stringable types are java classes that can be serialized through strings (which require a single string constructor and a valid toString() implementation). ReflectData currently has support from stringable types but it would be desirable to get this feature with SpecificData. &lt;/p&gt;

&lt;p&gt;The work involves changes to the SpecificCompiler (depends on &lt;tt&gt;@java-class&lt;/tt&gt; support in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1267&quot; title=&quot;permit dashes in IDL property names&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1267&quot;&gt;&lt;del&gt;AVRO-1267&lt;/del&gt;&lt;/a&gt;) to generate the specific sources with the proper java type as well as moving the ReflectDatumReader and ReflectDatumWriter to read the java-class/java-key-class and java-element-class properties. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12634703">AVRO-1268</key>
            <summary>Add java-class, java-key-class and java-element-class support for stringable types to SpecificData</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="alexandre.normand">Alexandre Normand</assignee>
                                    <reporter username="alexandre.normand">Alexandre Normand</reporter>
                        <labels>
                    </labels>
                <created>Thu, 28 Feb 2013 22:18:27 +0000</created>
                <updated>Tue, 27 Aug 2013 18:19:46 +0000</updated>
                            <resolved>Wed, 27 Mar 2013 21:34:31 +0000</resolved>
                                    <version>1.7.4</version>
                                    <fixVersion>1.7.5</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="13589995" author="alexandre.normand" created="Thu, 28 Feb 2013 22:19:23 +0000"  >&lt;p&gt;I have a patch in progress that I&apos;m going to post &quot;soon&quot;. &lt;/p&gt;</comment>
                            <comment id="13591314" author="alexandre.normand" created="Sat, 2 Mar 2013 05:38:49 +0000"  >&lt;p&gt;I thought I&apos;d post a quick update. I have a working patch for at least the basic use case that got me interested in making this change (declaring a type with &lt;tt&gt;@java-class(&quot;java.math.BigDecimal&quot;)&lt;/tt&gt; in a schema and have that used as the type in the generated sources). I added tests for that for the compiler portion and I&apos;ve also confirmed it works in a real end-to-end use case but I have yet to add tests for the reader/writer changes. &lt;/p&gt;

&lt;p&gt;I also won&apos;t be submitting the patch until &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1267&quot; title=&quot;permit dashes in IDL property names&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1267&quot;&gt;&lt;del&gt;AVRO-1267&lt;/del&gt;&lt;/a&gt; is committed because I rely on that change to have the &lt;tt&gt;@java-class&lt;/tt&gt; be allowed in an IDL file.&lt;/p&gt;</comment>
                            <comment id="13594386" author="alexandre.normand" created="Wed, 6 Mar 2013 05:25:00 +0000"  >&lt;p&gt;I tried to cover the maven plugin tests, the compiler tests as well as the reader/writer tests. I also updated the documentation to reflect the changes. &lt;/p&gt;

&lt;p&gt;The changes are more involved than I originally anticipated so it will be good to have eyes on this.&lt;/p&gt;</comment>
                            <comment id="13595146" author="cutting" created="Wed, 6 Mar 2013 21:38:45 +0000"  >&lt;p&gt;Some quick thoughts on the patch:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ReflectData#addStringable&apos;s result type changes incompatibly.  This might be fixable with generics.  We technically can include incompatible API changes in a 1.8 release, but I&apos;d prefer not to, as they make it hard for folks to update to the latest version of Avro.  We might fix this by just using a different method name in SpecificData and deprecating but keeping the method in ReflectData.&lt;/li&gt;
	&lt;li&gt;Similarly, removing ReflectData.CLASS_PROP, etc. is an incompatible API change.  We could just leave these constants where they are and use them from SpecificData, or we could deprecate them and add them to Specific, but we should not simply remove them if we want to maintain compatibility.&lt;/li&gt;
	&lt;li&gt;StringablesRecord.java shouldn&apos;t need to be checked in.  This should be generated by the build in the target/ directory.&lt;/li&gt;
	&lt;li&gt;It might be good to check that performance isn&apos;t altered.  We might modify Perf.java to be able to use SpecificDatumReader/Writer and see that this patch doesn&apos;t affect things adversely.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13595613" author="alexandre.normand" created="Thu, 7 Mar 2013 06:46:34 +0000"  >&lt;p&gt;Thanks for the comments Doug. I wasn&apos;t thinking of the API compatibility but I revisited the changes after reading your comments and: &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;I settled on leaving the addStringable in ReflectData while having the default list of stringables in SpecificData. I think the use-case for SpecificData would be for one of the default JDK classes that are stringable by default or one could potentially write the schema to generate the &lt;tt&gt;@Stringable&lt;/tt&gt; annotation. Using a SpecificData#addStringable is probably not a very common use case.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I brought the PROP constants in ReflectData but marked them as deprecated with the javadoc to redirected to SpecificData&apos;s constants.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;As for the &lt;tt&gt;StringablesRecord&lt;/tt&gt; not needing to be checked in, I&apos;m missing something. The avdl files for that record are in &lt;tt&gt;java/compiler&lt;/tt&gt; and &lt;tt&gt;java/maven-plugin&lt;/tt&gt; while the test for the &lt;tt&gt;SpecificDatumReader&lt;/tt&gt; is in &lt;tt&gt;java/avro&lt;/tt&gt;. The generated class for that record won&apos;t show up in &lt;tt&gt;avro&lt;/tt&gt; since &lt;tt&gt;compiler&lt;/tt&gt; and &lt;tt&gt;maven-plugin&lt;/tt&gt; both depend on &lt;tt&gt;avro&lt;/tt&gt; to have built first. Also, the other specific record used in &lt;tt&gt;SpecificDatumReader&lt;/tt&gt; is &lt;tt&gt;FooBarSpecificRecord&lt;/tt&gt; and that one is also in the source. What am I missing?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I added a Specific test to &lt;tt&gt;Perf&lt;/tt&gt; with the &lt;tt&gt;FooBarSpecificRecord&lt;/tt&gt; (a good reference since that&apos;s the one that was there prior to any of my changes). I ran the modified &lt;tt&gt;Perf&lt;/tt&gt; with and without my changes and it&apos;s not looking great:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Before&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Executing tests: 
[FooBarSpecificRecordTest]
 readTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 writeTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 cycles=800
                    test name     time    M entries/sec   M bytes/sec  bytes/cycle
 FooBarSpecificRecordTestRead:  16086 ms       1.036        60.413       1214805
FooBarSpecificRecordTestWrite:   8794 ms       1.895       110.505       1214805
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Executing tests: 
[FooBarSpecificRecordTest]
 readTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 writeTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 cycles=800
                    test name     time    M entries/sec   M bytes/sec  bytes/cycle
 FooBarSpecificRecordTestRead:  23937 ms       0.696        40.600       1214805
FooBarSpecificRecordTestWrite:  11369 ms       1.466        85.481       1214805
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m adding the latest patch with the changes above. It&apos;s possible that the performance hit could be less if I were to remove support for stringable array/map elements and stringable keys and just keep the &lt;tt&gt;@java-class&lt;/tt&gt; support. I&apos;d like not to do that though as this seems like a weird place to leave things. &lt;/p&gt;

&lt;p&gt;I would like if we could find a solution to mitigate the performance drop as I think this is still a desirable feature.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="13596063" author="alexandre.normand" created="Thu, 7 Mar 2013 17:10:17 +0000"  >&lt;p&gt;I think the additional &lt;tt&gt;#getClassProp&lt;/tt&gt; calls is one of the causes for the performance hit. In the cases where we&apos;re looking for the class to then check if it&apos;s stringable, I think I could make this faster by just dealing with strings (have a string stringable list and a &lt;tt&gt;#isStringable&lt;/tt&gt; that uses the full qualified name instead of the class object). I hacked a test removing the &lt;tt&gt;#getClassProp&lt;/tt&gt; from writeElement/readElement and got better numbers already: &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Executing tests: 
[FooBarSpecificRecordTest]
 readTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 writeTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 cycles=800
                    test name     time    M entries/sec   M bytes/sec  bytes/cycle
 FooBarSpecificRecordTestRead:  19788 ms       0.842        49.112       1214805
FooBarSpecificRecordTestWrite:   8543 ms       1.951       113.752       1214805
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;I&apos;m going to try and make those changes and have a new patch this evening.&lt;/p&gt;</comment>
                            <comment id="13596131" author="cutting" created="Thu, 7 Mar 2013 18:13:22 +0000"  >&lt;p&gt;A test of generated specific code should live in the compiler module, not in the core avro module, even if it&apos;s testing code that&apos;s in the core avro module.  Otherwise we won&apos;t end up re-generating the code when the compiler&apos;s changed.  (The compiler output tests are an exception, since tests will fail if they&apos;re not updated when the compiler changes.)  Those tests that currently use FooBarSpecificRecord should be moved.  (The compiler has in fact changed since FooBarSpecificRecord.java was last generated, illustrating the problem.)&lt;/p&gt;

&lt;p&gt;As for performance, arrays and maps might be improved by factoring the getClassProp outside of the loop.  So the methods might become something like:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Class getJavaClass(Schema);&lt;/li&gt;
	&lt;li&gt;Object readElement(Class, ...);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;It would be good to benchmark strings and arrays of strings too.  Your second benchmark above should be identical to the first, since no strings exist in FooBarSpecificRecord, right?  Maybe we need to run more iterations, since we might just be seeing run-to-run variations?&lt;/p&gt;</comment>
                            <comment id="13596137" author="cutting" created="Thu, 7 Mar 2013 18:17:46 +0000"  >&lt;p&gt;Or, more generally, the API could become:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Object getElementState(Schema);&lt;/li&gt;
	&lt;li&gt;Object readElement(Object state, ...)&lt;br/&gt;
This style already used to permit once-per-record lookups with getRecordState, so adding it to permit once-per-array and once-per-map lookups would be consistent.  Ideally we might add a state parameter to the read() and write() methods, so that a pre-computed state tree could be walked in parallel to the schema where all lookups would be pre-computed.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13596845" author="alexandre.normand" created="Fri, 8 Mar 2013 05:22:25 +0000"  >&lt;p&gt;Again, thanks for the feedback Doug. A few thoughts:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Regarding the tests using SpecificRecords, shouldn&apos;t those be moved under &lt;tt&gt;maven-plugin&lt;/tt&gt; rather than &lt;tt&gt;compiler&lt;/tt&gt;? This would be the way to have generated sources prior to the compilation/execution of tests that use specific records generated from schemas.&lt;/li&gt;
	&lt;li&gt;About the benchmark results, I did run each a few times and copied here what seems like an average (they didn&apos;t vary by much). To be clear, the before/after from my &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1268?focusedCommentId=13595613&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13595613&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;first results&lt;/a&gt; &lt;em&gt;should&lt;/em&gt; be similar since there&apos;s no stringable serialization/deserialization involved but it looks like the extra getClassProp that in turn calls Schema#getProp causes a performance hit. Maybe that&apos;s made worse by the fact that this is done on every readElement/writeElement and it would explain somewhat better results if I remove the #getClassProp from readElement/writeElement.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m moving the tests now and then I&apos;ll resume the work on addressing the performance by incorporating your suggestions. I&apos;ll try to post an updated patch on Sunday. &lt;/p&gt;</comment>
                            <comment id="13596862" author="alexandre.normand" created="Fri, 8 Mar 2013 06:09:36 +0000"  >&lt;p&gt;I looked again some more at the testing of specific records. The only currently available generated SpecificRecords live under avro-ipc and avro-mapred which makes sense because for those to be available at compilation and made usable in tests, they need to be generated at the pre-compilation phase of maven and that&apos;s done by the maven-plugin that both avro-ipc and avro-mapred have the luxury of being able to use. Both the &lt;tt&gt;compiler&lt;/tt&gt; and the &lt;tt&gt;maven-plugin&lt;/tt&gt; modules can&apos;t use the maven-plugin to generate those at pre-compilation. &lt;/p&gt;

&lt;p&gt;Is the correct solution to have the tests live in another module that could depend on &lt;tt&gt;avro&lt;/tt&gt;, &lt;tt&gt;compiler&lt;/tt&gt; and the &lt;tt&gt;maven-plugin&lt;/tt&gt;? This would be analogous to have integration tests of the overall avro solution (at least of those 3 modules I mentioned). &lt;/p&gt;</comment>
                            <comment id="13597435" author="cutting" created="Fri, 8 Mar 2013 19:30:46 +0000"  >&lt;p&gt;Right, the ipc module has become the home of most tests that depend on the compiler &amp;amp; maven plugins.  Perhaps we should create a module just for such tests, but in the meantime, let&apos;s just keep them all in ipc.&lt;/p&gt;

&lt;p&gt;Thanks for sticking with this!&lt;/p&gt;</comment>
                            <comment id="13597518" author="cutting" created="Fri, 8 Mar 2013 20:27:11 +0000"  >&lt;p&gt;I just noticed that GenericDatumReader#readString() does a Schema.getProp() for every String read.  This could be optimized if we added a state/class parameter to GenericDatumReader#read().  We might add a getStringClass(Schema) method called once when the DatumReader is created, then readString(Class...) would do something like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (c == Utf8.class)
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; in.readString(old);
&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
  &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; s = in.readString();
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (c == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;)
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; s;
  &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; { &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; c.getConstructor(s);}
  &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; ...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This should make things faster than they are at present, since it would avoid the Schema.getProp() call for every string read.  Simply commenting out that call I see a 17% performance improvement in reading a GenericRecord with three strings (benchmark attached).&lt;/p&gt;</comment>
                            <comment id="13597545" author="alexandre.normand" created="Fri, 8 Mar 2013 20:49:20 +0000"  >&lt;p&gt;I&apos;ll push the specific tests in ipc. Thanks for digging into the performance stuff. I&apos;ll add your GenericStrings to the Perf tests along with a SpecificRecord test with Strings to my next patch. &lt;/p&gt;

&lt;p&gt;I&apos;ll have a few hours over the weekend to try and get a better patch out. &lt;br/&gt;
Thanks for your help.&lt;/p&gt;</comment>
                            <comment id="13599717" author="alexandre.normand" created="Tue, 12 Mar 2013 05:25:01 +0000"  >&lt;p&gt;This needs some more love than I wasn&apos;t able to provide this last weekend. &lt;/p&gt;

&lt;p&gt;I&apos;m still attaching the most recent version of the patch to keep the conversation moving and, hopefully, some momentum. In this latest patch, the tests using SpecificRecords have been moved to &lt;tt&gt;idl&lt;/tt&gt; like we discussed. There&apos;s also a first performance tweak with a &lt;tt&gt;#getState&lt;/tt&gt; before reading elements of arrays/maps which saves the classes for both the keys and elements which are then reused on reading each one.&lt;/p&gt;

&lt;p&gt;There are still some optimizations left to do:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;I haven&apos;t touched at the &lt;tt&gt;#readString&lt;/tt&gt; optimizations.&lt;/li&gt;
	&lt;li&gt;I haven&apos;t started to look into the &lt;em&gt;&quot;pre-computed state tree could be walked in parallel to the schema where all lookups would be pre-computed&quot;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I made changes to the &lt;tt&gt;FooBarSpecificRecord&lt;/tt&gt; to include strings and here are the latest before/after results for that updated version, including the small optimization I made to keep the state prior to reading arrays/maps.&lt;/p&gt;

&lt;p&gt;Before&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Executing tests: 
[FooBarSpecificRecordTest]
 readTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 writeTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 cycles=800
                    test name     time    M entries/sec   M bytes/sec  bytes/cycle
 FooBarSpecificRecordTestRead:  31546 ms       0.528        88.284       3481319
FooBarSpecificRecordTestWrite:  30538 ms       0.546        91.197       3481319          
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Executing tests: 
[FooBarSpecificRecordTest]
 readTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 writeTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 cycles=800
                    test name     time    M entries/sec   M bytes/sec  bytes/cycle
 FooBarSpecificRecordTestRead:  40579 ms       0.411        68.632       3481319
FooBarSpecificRecordTestWrite:  34651 ms       0.481        80.373       3481319
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;ll probably be unable to do much active work on this in the next few days (tax preparation time) but I&apos;ll be back.&lt;/p&gt;</comment>
                            <comment id="13605850" author="alexandre.normand" created="Tue, 19 Mar 2013 00:16:30 +0000"  >&lt;p&gt;Doug, I&apos;d like to come back on &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1268?focusedCommentId=13597518&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13597518&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;your comment&lt;/a&gt; on the #readString optimization. I think I&apos;m missing a piece or I&apos;m misunderstanding. &lt;/p&gt;

&lt;p&gt;The &lt;tt&gt;data.STRING_PROP&lt;/tt&gt; property is set on individual string fields so we can&apos;t really read it just once at the initialization of the &lt;tt&gt;GenerateDatumReader&lt;/tt&gt;, can&apos;t we? We could read it in #read before calling #readString but that would end up having the same performance. That is, unless we keep track of states as we pile up calls to #read on the reader instance and reuse that on subsequent reads using the same reader (we wouldn&apos;t have any performance gains on readers being used for single read operations but performance is probably not important in such use cases). Is that what you were referring to with your suggestion to &quot;pre-compute a state tree could be walked in parallel to the schema where all lookups would be pre-computed&quot;?&lt;/p&gt;</comment>
                            <comment id="13606434" author="cutting" created="Tue, 19 Mar 2013 15:56:36 +0000"  >&lt;p&gt;Yes, a pre-computed tree would avoid this lookup.  When the DatumReader is constructed we&apos;d walk the schema, returning a parallel tree with resolved string classes as its leaves.  Then we&apos;d add a parameter to read() and pass this tree there.  Does that make sense?&lt;/p&gt;

&lt;p&gt;We could also avoid these lookups if we added fields to Schema, which we probably don&apos;t want to do.  Or we could try to optimize the lookups somehow.  Do you have any other ideas?&lt;/p&gt;</comment>
                            <comment id="13607115" author="alexandre.normand" created="Wed, 20 Mar 2013 00:46:14 +0000"  >&lt;p&gt;I worked on a patch inspired by your approach although the implementation details are rough and it needs cleaning up.&lt;/p&gt;

&lt;p&gt;I was just wondering what you think of these numbers. Performance is better than with previous versions of my patch but it&apos;s probably never going to be better than &quot;before&quot;:&lt;/p&gt;

&lt;p&gt;Before:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Executing tests: 
[IntTest, SmallLongTest, LongTest, FloatTest, DoubleTest, BoolTest, BytesTest, StringTest, ArrayTest, MapTest, RecordTest, ValidatingRecord, ResolvingRecord, RecordWithDefault, RecordWithOutOfOrder, RecordWithPromotion, GenericTest, GenericStrings, GenericNested, GenericNestedFake, GenericWithDefault, GenericWithOutOfOrder, GenericWithPromotion, GenericOneTimeDecoderUse, GenericOneTimeReaderUse, GenericOneTimeUse, FooBarSpecificRecordTest]
 readTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 writeTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 cycles=800
                    test name     time    M entries/sec   M bytes/sec  bytes/cycle
                      IntRead:    687 ms     290.855       732.169        629325
                     IntWrite:   1490 ms     134.208       337.841        629325
                SmallLongRead:    734 ms     272.301       685.465        629325
               SmallLongWrite:   1493 ms     133.922       337.122        629325
                     LongRead:   1652 ms     121.024       528.802       1092353
                    LongWrite:   2594 ms      77.097       336.868       1092353
                    FloatRead:    376 ms     531.422      2125.687       1000000
                   FloatWrite:   1211 ms     165.028       660.112       1000000
                   DoubleRead:    358 ms     557.637      4461.099       2000000
                  DoubleWrite:   1940 ms     103.057       824.458       2000000
                  BooleanRead:    244 ms     818.090       818.090        250000
                 BooleanWrite:    524 ms     381.058       381.058        250000
                    BytesRead:   1629 ms      24.550       872.489       1776937
                   BytesWrite:   2164 ms      18.476       656.624       1776937
                   StringRead:   8490 ms       4.711       167.801       1780910
                  StringWrite:   8300 ms       4.819       171.641       1780910
                    ArrayRead:    411 ms     485.936      1943.755       1000006
                   ArrayWrite:   1161 ms     172.159       688.639       1000006
                      MapRead:   1361 ms     146.907       734.536       1250004
                     MapWrite:   2177 ms      91.837       459.186       1250004
                   RecordRead:    645 ms      51.669      2005.278       1617069
                  RecordWrite:   1999 ms      16.668       646.898       1617069
         ValidatingRecordRead:   3834 ms       8.693       337.391       1617069
        ValidatingRecordWrite:   3677 ms       9.065       351.822       1617069
          ResolvingRecordRead:   4223 ms       7.892       306.280       1617069
        RecordWithDefaultRead:  11246 ms       2.964       115.031       1617069
     RecordWithOutOfOrderRead:   3273 ms      10.182       395.157       1617069
      RecordWithPromotionRead:   3607 ms       9.241       358.649       1617069
                  GenericRead:   4717 ms       3.533       137.102        808498
                 GenericWrite:   3212 ms       5.187       201.318        808498
           GenericStringsRead:   7117 ms       2.342       249.629       2220873
          GenericStringsWrite:  13290 ms       1.254       133.683       2220873
           GenericNested_Read:   7968 ms       2.092        81.169        808498
          GenericNested_Write:   4800 ms       3.472       134.731        808498
       GenericNestedFake_Read:   3424 ms       4.867       188.878        808498
      GenericNestedFake_Write:   1571 ms      10.604       411.528        808498
      GenericWithDefault_Read:  10052 ms       1.658        64.343        808498
   GenericWithOutOfOrder_Read:   4821 ms       3.456       134.139        808498
    GenericWithPromotion_Read:   5124 ms       3.253       126.227        808498
GenericOneTimeDecoderUse_Read:   4725 ms       3.527       136.873        808498
 GenericOneTimeReaderUse_Read:   6392 ms       2.607       101.182        808498
       GenericOneTimeUse_Read:   6254 ms       2.665       103.414        808498
 FooBarSpecificRecordTestRead:  35180 ms       0.474        79.165       3481319
FooBarSpecificRecordTestWrite:  28941 ms       0.576        96.229       3481319
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Executing tests: 
[IntTest, SmallLongTest, LongTest, FloatTest, DoubleTest, BoolTest, BytesTest, StringTest, ArrayTest, MapTest, RecordTest, ValidatingRecord, ResolvingRecord, RecordWithDefault, RecordWithOutOfOrder, RecordWithPromotion, GenericTest, GenericStrings, GenericNested, GenericNestedFake, GenericWithDefault, GenericWithOutOfOrder, GenericWithPromotion, GenericOneTimeDecoderUse, GenericOneTimeReaderUse, GenericOneTimeUse, FooBarSpecificRecordTest]
 readTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 writeTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 cycles=800
                    test name     time    M entries/sec   M bytes/sec  bytes/cycle
                      IntRead:    702 ms     284.702       716.680        629325
                     IntWrite:   1503 ms     133.012       334.831        629325
                SmallLongRead:    773 ms     258.570       650.898        629325
               SmallLongWrite:   1489 ms     134.232       337.903        629325
                     LongRead:   1652 ms     121.035       528.853       1092353
                    LongWrite:   2653 ms      75.362       329.289       1092353
                    FloatRead:    373 ms     534.960      2139.838       1000000
                   FloatWrite:   1183 ms     168.949       675.796       1000000
                   DoubleRead:    357 ms     559.525      4476.201       2000000
                  DoubleWrite:   2009 ms      99.537       796.300       2000000
                  BooleanRead:    253 ms     789.933       789.933        250000
                 BooleanWrite:    520 ms     384.196       384.196        250000
                    BytesRead:   1623 ms      24.645       875.850       1776937
                   BytesWrite:   2178 ms      18.365       652.673       1776937
                   StringRead:   8350 ms       4.790       170.614       1780910
                  StringWrite:   8286 ms       4.827       171.935       1780910
                    ArrayRead:    403 ms     495.061      1980.254       1000006
                   ArrayWrite:   1202 ms     166.268       665.074       1000006
                      MapRead:   1342 ms     148.945       744.729       1250004
                     MapWrite:   2144 ms      93.255       466.277       1250004
                   RecordRead:    634 ms      52.542      2039.176       1617069
                  RecordWrite:   1984 ms      16.793       651.726       1617069
         ValidatingRecordRead:   3807 ms       8.755       339.801       1617069
        ValidatingRecordWrite:   3683 ms       9.050       351.246       1617069
          ResolvingRecordRead:   4199 ms       7.937       308.031       1617069
        RecordWithDefaultRead:  11242 ms       2.965       115.065       1617069
     RecordWithOutOfOrderRead:   3313 ms      10.060       390.412       1617069
      RecordWithPromotionRead:   3575 ms       9.324       361.861       1617069
                  GenericRead:   5043 ms       3.304       128.233        808498
                 GenericWrite:   3213 ms       5.186       201.255        808498
           GenericStringsRead:   6645 ms       2.508       267.358       2220873
          GenericStringsWrite:  13025 ms       1.280       136.400       2220873
           GenericNested_Read:   7923 ms       2.104        81.634        808498
          GenericNested_Write:   4883 ms       3.413       132.436        808498
       GenericNestedFake_Read:   3392 ms       4.912       190.628        808498
      GenericNestedFake_Write:   1541 ms      10.811       419.574        808498
      GenericWithDefault_Read:   9962 ms       1.673        64.923        808498
   GenericWithOutOfOrder_Read:   5046 ms       3.302       128.163        808498
    GenericWithPromotion_Read:   5177 ms       3.219       124.926        808498
GenericOneTimeDecoderUse_Read:   5211 ms       3.198       124.101        808498
 GenericOneTimeReaderUse_Read:   7531 ms       2.213        85.877        808498
       GenericOneTimeUse_Read:   7243 ms       2.301        89.295        808498
 FooBarSpecificRecordTestRead:  40359 ms       0.413        69.007       3481319
FooBarSpecificRecordTestWrite:  31255 ms       0.533        89.105       3481319
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13607783" author="cutting" created="Wed, 20 Mar 2013 16:13:06 +0000"  >&lt;p&gt;The tests that are running altered code are GenericStrings and FooBarSpecificRecord, right?&lt;/p&gt;

&lt;p&gt;GenericStringsRead fares the worst, slowing 7%, while FooBarSpecificRecordTestRead is 16% faster.  Also some tests that shouldn&apos;t be altered much, like GenericRead, are also 6% faster.  Am I interpreting this right?&lt;/p&gt;</comment>
                            <comment id="13607815" author="alexandre.normand" created="Wed, 20 Mar 2013 16:27:59 +0000"  >&lt;p&gt;There could be some impact in reading maps and arrays too in addition to reading strings.&lt;/p&gt;

&lt;p&gt;Your interpretation is correct except for the fact that you seemed to have inverted the results. After my changes, FooBarSpecificRecordTestRead takes 40359ms where it took 35180ms before...therefore I would say my changes make it 16% slower. The GenericStringsRead is actually faster now.&lt;/p&gt;

&lt;p&gt;Right now, my rough version stores states per schema in a map. There&apos;s a potential additional performance gain in replacing that by a tree structure and get rid of the cost of get/puts that map.  That&apos;s the next thing I&apos;m going to look at. &lt;/p&gt;

&lt;p&gt;Do you have an idea on what performance level would be considered acceptable?&lt;/p&gt;</comment>
                            <comment id="13607947" author="alexandre.normand" created="Wed, 20 Mar 2013 18:17:43 +0000"  >&lt;p&gt;To clarify my previous comment, the &quot;Before&quot; from my numbers is actually clean trunk without any of the work in this patch (except for the additional tests in Perf) and &quot;After&quot; is the latest version of my work-in-progress patch.&lt;/p&gt;</comment>
                            <comment id="13608343" author="alexandre.normand" created="Wed, 20 Mar 2013 22:39:15 +0000"  >&lt;p&gt;I made a few incremental changes to my version and got again some performance improvements. I&apos;m still using a Map&amp;lt;Schema, Object&amp;gt; to keep states but after looking at some other alternatives, it seems like a good one (since a GenericDatumReader has the same instance of schema object (and, consequently, field schemas), the keys being the same makes the lookups faster than if it had to do a call to #equals()). &lt;/p&gt;

&lt;p&gt;New numbers:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Executing tests: 
[IntTest, SmallLongTest, LongTest, FloatTest, DoubleTest, BoolTest, BytesTest, StringTest, ArrayTest, MapTest, RecordTest, ValidatingRecord, ResolvingRecord, RecordWithDefault, RecordWithOutOfOrder, RecordWithPromotion, GenericTest, GenericStrings, GenericNested, GenericNestedFake, GenericWithDefault, GenericWithOutOfOrder, GenericWithPromotion, GenericOneTimeDecoderUse, GenericOneTimeReaderUse, GenericOneTimeUse, FooBarSpecificRecordTest]
 readTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 writeTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 cycles=800
                    test name     time    M entries/sec   M bytes/sec  bytes/cycle
                      IntRead:    718 ms     278.233       700.395        629325
                     IntWrite:   1459 ms     137.044       344.981        629325
                SmallLongRead:    778 ms     256.954       646.831        629325
               SmallLongWrite:   1448 ms     138.061       347.541        629325
                     LongRead:   1695 ms     117.930       515.283       1092353
                    LongWrite:   2608 ms      76.660       334.959       1092353
                    FloatRead:    369 ms     541.313      2165.252       1000000
                   FloatWrite:   1185 ms     168.692       674.768       1000000
                   DoubleRead:    349 ms     572.961      4583.687       2000000
                  DoubleWrite:   1897 ms     105.408       843.267       2000000
                  BooleanRead:    254 ms     786.909       786.909        250000
                 BooleanWrite:    521 ms     383.473       383.473        250000
                    BytesRead:   1597 ms      25.032       889.589       1776937
                   BytesWrite:   2069 ms      19.329       686.930       1776937
                   StringRead:   8347 ms       4.792       170.685       1780910
                  StringWrite:   8405 ms       4.759       169.496       1780910
                    ArrayRead:    399 ms     500.144      2000.587       1000006
                   ArrayWrite:   1154 ms     173.186       692.747       1000006
                      MapRead:   1337 ms     149.536       747.683       1250004
                     MapWrite:   2125 ms      94.090       470.449       1250004
                   RecordRead:    627 ms      53.122      2061.677       1617069
                  RecordWrite:   1978 ms      16.846       653.812       1617069
         ValidatingRecordRead:   3808 ms       8.752       339.682       1617069
        ValidatingRecordWrite:   3615 ms       9.219       357.807       1617069
          ResolvingRecordRead:   4189 ms       7.956       308.777       1617069
        RecordWithDefaultRead:  11088 ms       3.006       116.664       1617069
     RecordWithOutOfOrderRead:   3307 ms      10.077       391.092       1617069
      RecordWithPromotionRead:   3575 ms       9.323       361.820       1617069
                  GenericRead:   4979 ms       3.347       129.888        808498
                 GenericWrite:   3076 ms       5.418       210.253        808498
           GenericStringsRead:   6826 ms       2.441       260.269       2220873
          GenericStringsWrite:  12930 ms       1.289       137.399       2220873
           GenericNested_Read:   7881 ms       2.115        82.064        808498
          GenericNested_Write:   4710 ms       3.538       137.296        808498
       GenericNestedFake_Read:   3348 ms       4.977       193.162        808498
      GenericNestedFake_Write:   1503 ms      11.085       430.191        808498
      GenericWithDefault_Read:   9872 ms       1.688        65.518        808498
   GenericWithOutOfOrder_Read:   4988 ms       3.341       129.658        808498
    GenericWithPromotion_Read:   5220 ms       3.193       123.900        808498
GenericOneTimeDecoderUse_Read:   4979 ms       3.347       129.897        808498
 GenericOneTimeReaderUse_Read:   7130 ms       2.337        90.708        808498
       GenericOneTimeUse_Read:   7147 ms       2.332        90.492        808498
 FooBarSpecificRecordTestRead:  37078 ms       0.449        75.113       3481319
FooBarSpecificRecordTestWrite:  29507 ms       0.565        94.384       3481319
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;FooBarSpecificRecordTestRead is ~5.3% slower than without the patch and FooBarSpecificRecordTestWrite is ~2% slower. &lt;br/&gt;
GenericStringsRead is ~4.2% faster and GenericStringWrite is ~2.7% faster.&lt;/p&gt;

&lt;p&gt;All tests are still passing and I&apos;m going to make a pass at the patch to clean up/make sure I haven&apos;t broken API compatibility but I&apos;d like to get some feedback on these results. &lt;/p&gt;

&lt;p&gt;Doug, what do you think of these last numbers?&lt;/p&gt;</comment>
                            <comment id="13608353" author="cutting" created="Wed, 20 Mar 2013 22:48:17 +0000"  >&lt;p&gt;The numbers (some faster, some slower) sound like they might be acceptable.  It&apos;d sure be nice to not make anything significantly slower.  I&apos;m not clear why you need the Map&amp;lt;Schema,Object&amp;gt; map.  It seems to me that you should be able to have the DatumReader hold the root of the state tree, but perhaps I&apos;m missing something.  The tree might simply be either a leaf state or an array of trees, one per field/union branch.&lt;/p&gt;

&lt;p&gt;Can you post the patch?&lt;/p&gt;</comment>
                            <comment id="13608367" author="alexandre.normand" created="Wed, 20 Mar 2013 22:54:51 +0000"  >&lt;p&gt;Here&apos;s the patch. Consider this as a draft patch as I haven&apos;t had the chance to review all of my changes for potential bad formatting/potential clean up.&lt;/p&gt;

&lt;p&gt;The same &lt;tt&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1168&quot; title=&quot;IDL Tool - Field properties are added against schema instead of field&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1168&quot;&gt;&lt;del&gt;AVRO-1168&lt;/del&gt;&lt;/a&gt;.sh&lt;/tt&gt; script to move files should still apply. &lt;/p&gt;

&lt;p&gt;Thanks. &lt;/p&gt;</comment>
                            <comment id="13608414" author="cutting" created="Wed, 20 Mar 2013 23:48:50 +0000"  >&lt;p&gt;I&apos;m still optimistic that we can get rid of these map lookups.  Here&apos;s a patch that won&apos;t compile but hopefully illustrates what I mean. We traverse the expected schema once when the DatumReader is constructed, in createState.  Then, that tree is merely de-referenced as each instance is read.  Does this make sense?  Might something like this work?&lt;/p&gt;</comment>
                            <comment id="13608458" author="alexandre.normand" created="Thu, 21 Mar 2013 00:37:39 +0000"  >&lt;p&gt;I think it would work. I&apos;ll try to get this done tomorrow but I might have a bit less time to spend on this that I had today. Thanks. &lt;/p&gt;</comment>
                            <comment id="13609140" author="cutting" created="Thu, 21 Mar 2013 17:16:51 +0000"  >&lt;p&gt;Another way we might implement this is to use the parser.  The parser pre-processes the schema into a grammar, allocating symbols that correspond to the elements of the schema.  As the resolver runs, the top of the parser&apos;s stack contains the symbol corresponding to the current point in the schema being read.  So we might add fields to these symbol classes that contain any needed state.&lt;/p&gt;

&lt;p&gt;To be more specific, we could pass the GenericData instance when the ResolvingDecoder is constructed.  We&apos;d then add an ArrayStartAction symbol class with a field for the array&apos;s class, replacing the constant Symbol.ARRAY_START.  In ResolvingGrammarGenerator#generate() we&apos;d add a call to data.getArrayClass(Schema) and pass this when we construct the ArrayStartAction.&lt;/p&gt;

&lt;p&gt;In ResolvingDecoder we&apos;d add a method like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt; getArrayClass() {
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; ((ArrayStartAction)parser.topSymbol()).getArrayClass();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This could be called by SpecificDatumReader#newArray() to efficiently get the array class while reading.&lt;/p&gt;

&lt;p&gt;Does that make sense?&lt;/p&gt;

&lt;p&gt;It would be helpful to have someone more familiar with the parser to advise here.  Thiru?&lt;/p&gt;</comment>
                            <comment id="13609155" author="alexandre.normand" created="Thu, 21 Mar 2013 17:30:48 +0000"  >&lt;p&gt;I&apos;m close to having the parallel tree implemented (a few tests are failing, which I&apos;m fixing now). Do you think I should I drop this in favor of this last approach? &lt;/p&gt;</comment>
                            <comment id="13609177" author="cutting" created="Thu, 21 Mar 2013 17:42:50 +0000"  >&lt;p&gt;It would be great to be able to benchmark both.  Piggybacking on the parser seems a little more elegant, and should be nearly as fast.  Having an alternate implementation to benchmark against will help us evaluate.  So even if we don&apos;t use it, it shouldn&apos;t be wasted effort.&lt;/p&gt;</comment>
                            <comment id="13609202" author="alexandre.normand" created="Thu, 21 Mar 2013 17:56:43 +0000"  >&lt;p&gt;I&apos;m asking because I&apos;ve spent a lot of my spare time on this patch already. I have some day time this week to work on this but I&apos;d like to wrap this up. I&apos;ll focus on getting the parallel tree solution done and I&apos;ll see if I have time for the parser one after that. &lt;/p&gt;</comment>
                            <comment id="13609215" author="cutting" created="Thu, 21 Mar 2013 17:59:26 +0000"  >&lt;p&gt;It would be interesting to see if the caching added in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1277&quot; title=&quot;Improve performance of reflection-based serializers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1277&quot;&gt;&lt;del&gt;AVRO-1277&lt;/del&gt;&lt;/a&gt; helps here.&lt;/p&gt;</comment>
                            <comment id="13609222" author="cutting" created="Thu, 21 Mar 2013 18:02:01 +0000"  >&lt;p&gt;I can take a stab at the parser-based solution if you don&apos;t have time.&lt;/p&gt;</comment>
                            <comment id="13609240" author="alexandre.normand" created="Thu, 21 Mar 2013 18:10:36 +0000"  >&lt;p&gt;Regarding &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1277&quot; title=&quot;Improve performance of reflection-based serializers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1277&quot;&gt;&lt;del&gt;AVRO-1277&lt;/del&gt;&lt;/a&gt;, I&apos;ve been following the activity and it could help indeed. I&apos;ll be interested in seeing the Perf numbers. I think the optimizations for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1268&quot; title=&quot;Add java-class, java-key-class and java-element-class support for stringable types to SpecificData&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1268&quot;&gt;&lt;del&gt;AVRO-1268&lt;/del&gt;&lt;/a&gt; and that other ticket are complementary so both can be done in parallel. Hopefully, 1.7.5 will show good performance. &lt;/p&gt;

&lt;p&gt;As for the parser-based solution, it would be great if you could jump on this. I&apos;m really more interested in seeing the best solution than getting my own code committed.  &lt;br/&gt;
Thanks!&lt;/p&gt;</comment>
                            <comment id="13609486" author="alexandre.normand" created="Thu, 21 Mar 2013 21:13:38 +0000"  >&lt;p&gt;I&apos;ve hit a snag. The parallel tree solution mostly works but it doesn&apos;t with recursive schemas. With a recursive schema, we fail with a StackOverflow when building the tree. To work around that, we would need to have some way of pointing state elements to previously built state but that would require some mechanism to lookup these states. It&apos;s essentially going back to using a Map. Or maybe we could be clever and keep such a Map just while building the state tree. &lt;/p&gt;

&lt;p&gt;In any event, I tried running the perf test even with the current broken state of recursive schemas and the results are similar to the ones I had when doing the Map lookup (some are a bit slower than my last results but they might just be run-to-run variations):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Executing tests: 
[IntTest, SmallLongTest, LongTest, FloatTest, DoubleTest, BoolTest, BytesTest, StringTest, ArrayTest, MapTest, RecordTest, ValidatingRecord, ResolvingRecord, RecordWithDefault, RecordWithOutOfOrder, RecordWithPromotion, GenericTest, GenericStrings, GenericNested, GenericNestedFake, GenericWithDefault, GenericWithOutOfOrder, GenericWithPromotion, GenericOneTimeDecoderUse, GenericOneTimeReaderUse, GenericOneTimeUse, FooBarSpecificRecordTest]
 readTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 writeTests:&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
 cycles=800
                    test name     time    M entries/sec   M bytes/sec  bytes/cycle
                      IntRead:    712 ms     280.712       706.637        629325
                     IntWrite:   1456 ms     137.289       345.598        629325
                SmallLongRead:    801 ms     249.549       628.189        629325
               SmallLongWrite:   1478 ms     135.299       340.589        629325
                     LongRead:   1690 ms     118.319       516.984       1092353
                    LongWrite:   2708 ms      73.842       322.645       1092353
                    FloatRead:    374 ms     533.773      2135.093       1000000
                   FloatWrite:   1201 ms     166.403       665.611       1000000
                   DoubleRead:    353 ms     564.997      4519.978       2000000
                  DoubleWrite:   1906 ms     104.890       839.122       2000000
                  BooleanRead:    249 ms     802.739       802.739        250000
                 BooleanWrite:    524 ms     381.048       381.048        250000
                    BytesRead:   1613 ms      24.797       881.263       1776937
                   BytesWrite:   2138 ms      18.708       664.843       1776937
                   StringRead:   8433 ms       4.743       168.929       1780910
                  StringWrite:   8097 ms       4.940       175.956       1780910
                    ArrayRead:    403 ms     495.969      1983.888       1000006
                   ArrayWrite:   1162 ms     172.068       688.277       1000006
                      MapRead:   1368 ms     146.168       730.842       1250004
                     MapWrite:   2127 ms      94.017       470.089       1250004
                   RecordRead:    650 ms      51.265      1989.599       1617069
                  RecordWrite:   1987 ms      16.769       650.802       1617069
         ValidatingRecordRead:   3790 ms       8.793       341.252       1617069
        ValidatingRecordWrite:   3656 ms       9.116       353.806       1617069
          ResolvingRecordRead:   4159 ms       8.014       311.034       1617069
        RecordWithDefaultRead:  11357 ms       2.935       113.905       1617069
     RecordWithOutOfOrderRead:   3295 ms      10.115       392.571       1617069
      RecordWithPromotionRead:   3603 ms       9.251       359.046       1617069
                  GenericRead:   5192 ms       3.210       124.566        808498
                 GenericWrite:   3285 ms       5.072       196.853        808498
           GenericStringsRead:   5913 ms       2.818       300.434       2220873
          GenericStringsWrite:  13740 ms       1.213       129.301       2220873
           GenericNested_Read:   8459 ms       1.970        76.459        808498
          GenericNested_Write:   4873 ms       3.420       132.708        808498
       GenericNestedFake_Read:   3397 ms       4.906       190.390        808498
      GenericNestedFake_Write:   1596 ms      10.442       405.222        808498
      GenericWithDefault_Read:  10029 ms       1.662        64.492        808498
   GenericWithOutOfOrder_Read:   5355 ms       3.112       120.782        808498
    GenericWithPromotion_Read:   5369 ms       3.104       120.464        808498
GenericOneTimeDecoderUse_Read:   5324 ms       3.130       121.473        808498
 GenericOneTimeReaderUse_Read:   8190 ms       2.035        78.965        808498
       GenericOneTimeUse_Read:   8274 ms       2.014        78.171        808498
 FooBarSpecificRecordTestRead:  37938 ms       0.439        73.409       3481319
FooBarSpecificRecordTestWrite:  31674 ms       0.526        87.927       3481319
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;I&apos;m not sure if it&apos;s worth continuing down that path. If you get better results with the parsed-based solution, it&apos;s probably the way to go. &lt;/p&gt;</comment>
                            <comment id="13609613" author="alexandre.normand" created="Thu, 21 Mar 2013 22:33:31 +0000"  >&lt;p&gt;Attaching the patch with the Map solution. The namespace was wrong in stringables.avdl and this fixes it. &lt;/p&gt;</comment>
                            <comment id="13611031" author="alexandre.normand" created="Fri, 22 Mar 2013 18:21:59 +0000"  >&lt;p&gt;Doug, would you like me to try and complete a fully working version of the parallel-tree solution? I was going to drop it because of the complications with unions and the recursive schemas issue but I might be able to fix it. Although I still think that combined with the slightly worse performance compared to the Map-based solution makes this somewhat less appealing. &lt;/p&gt;</comment>
                            <comment id="13611168" author="cutting" created="Fri, 22 Mar 2013 20:06:10 +0000"  >&lt;p&gt;The parser-based approach ended up being more complicated than I had hoped, so I returned to a simplified map-based approach that only extends specific to handle java-class for string schemas and java-key-class for map schemas.&lt;/p&gt;

&lt;p&gt;A difference from the prior patches is that, to create an array or map whose values are stringables, instead of annotating the array one must annotate the value type itself.  So, in IDL, instead of:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;@java-element-class(&lt;span class=&quot;code-quote&quot;&gt;&quot;java.math.BigDecimal&quot;&lt;/span&gt;) map&amp;lt;string&amp;gt; mapWithBigDecimalElements;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;one must now use&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;map&amp;lt;@java-class(&lt;span class=&quot;code-quote&quot;&gt;&quot;java.math.BigDecimal&quot;&lt;/span&gt;)string&amp;gt; mapWithBigDecimalElements;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The implementation makes no operations slower and makes generic strings a bit faster.&lt;/p&gt;

&lt;p&gt;With patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;           GenericStringsRead:   4183 ms       3.984       424.717       2220873
          GenericStringsWrite:   6310 ms       2.641       281.542       2220873
 FooBarSpecificRecordTestRead:  19585 ms       0.851       142.199       3481319
FooBarSpecificRecordTestWrite:  12903 ms       1.292       215.839       3481319
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Without patch:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;           GenericStringsRead:   4832 ms       3.449       367.626       2220873
          GenericStringsWrite:   6522 ms       2.555       272.395       2220873
 FooBarSpecificRecordTestRead:  19401 ms       0.859       143.549       3481319
FooBarSpecificRecordTestWrite:  12981 ms       1.284       214.536       3481319
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This patch also requires that &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1268&quot; title=&quot;Add java-class, java-key-class and java-element-class support for stringable types to SpecificData&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1268&quot;&gt;&lt;del&gt;AVRO-1268&lt;/del&gt;&lt;/a&gt;.sh is run before it is applied.&lt;/p&gt;</comment>
                            <comment id="13611219" author="alexandre.normand" created="Fri, 22 Mar 2013 20:53:01 +0000"  >&lt;p&gt;It looks good. I just did a sanity check by integrating it in my own code and testing it with my use case and I&apos;m happy. &lt;br/&gt;
My goal was to wrap this up this week and it looks like you might have completed the last mile (thanks!). &lt;/p&gt;

&lt;p&gt;My vote doesn&apos;t count but I say &lt;em&gt;ship it&lt;/em&gt;!&lt;/p&gt;</comment>
                            <comment id="13611399" author="cutting" created="Fri, 22 Mar 2013 23:01:22 +0000"  >&lt;p&gt;I&apos;ll commit this soon unless there are objections.&lt;/p&gt;</comment>
                            <comment id="13615780" author="cutting" created="Wed, 27 Mar 2013 21:34:31 +0000"  >&lt;p&gt;I committed this.&lt;/p&gt;</comment>
                            <comment id="13616957" author="hudson" created="Fri, 29 Mar 2013 01:30:55 +0000"  >&lt;p&gt;Integrated in AvroJava #360 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/360/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/360/&lt;/a&gt;)&lt;br/&gt;
    &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1268&quot; title=&quot;Add java-class, java-key-class and java-element-class support for stringable types to SpecificData&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1268&quot;&gt;&lt;del&gt;AVRO-1268&lt;/del&gt;&lt;/a&gt;. Java: Extend support for stringables from reflect to specific.  Contributed by Alexandre Normand and cutting. (Revision 1461856)&lt;/p&gt;

&lt;p&gt;     Result = SUCCESS&lt;br/&gt;
cutting : &lt;br/&gt;
Files : &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/doc/src/content/xdocs/idl.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumReader.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectData.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectDatumReader.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/ReflectDatumWriter.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/reflect/package.html&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/specific/SpecificData.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/specific/SpecificDatumReader.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/main/java/org/apache/avro/specific/SpecificDatumWriter.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/io/Perf.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectDatumReader.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/specific/TestSpecificData.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/java/org/apache/avro/specific/TestSpecificDatumReader.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/avro/src/test/resources/FooBarSpecificRecord.avsc&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/compiler/src/main/java/org/apache/avro/compiler/specific/SpecificCompiler.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/compiler/src/main/javacc/org/apache/avro/compiler/idl/idl.jj&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/ipc/src/test/java/org/apache/avro/io&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/ipc/src/test/java/org/apache/avro/io/Perf.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificData.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumReader.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/share/test/schemas/FooBarSpecificRecord.avsc&lt;/li&gt;
	&lt;li&gt;/avro/trunk/share/test/schemas/stringables.avdl&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13751391" author="cutting" created="Tue, 27 Aug 2013 16:15:22 +0000"  >&lt;p&gt;Oops.  I mistakenly reported that this issue added support for Date, but stringable support for dates was actually removed in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1155&quot; title=&quot;Stringable Date test in TestReflect fails if timezone doesn&amp;#39;t match locale&amp;#39;s default&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1155&quot;&gt;&lt;del&gt;AVRO-1155&lt;/del&gt;&lt;/a&gt;, since Date.toString() isn&apos;t reliable.&lt;/p&gt;</comment>
                            <comment id="13751393" author="jira-bot" created="Tue, 27 Aug 2013 16:17:31 +0000"  >&lt;p&gt;Commit 1517866 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1517866&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1517866&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1268&quot; title=&quot;Add java-class, java-key-class and java-element-class support for stringable types to SpecificData&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1268&quot;&gt;&lt;del&gt;AVRO-1268&lt;/del&gt;&lt;/a&gt;.  Corrected change log message.  Date is not supported as a&lt;br/&gt;
stringable.  That support was removed in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1155&quot; title=&quot;Stringable Date test in TestReflect fails if timezone doesn&amp;#39;t match locale&amp;#39;s default&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1155&quot;&gt;&lt;del&gt;AVRO-1155&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13751419" author="kryzthov" created="Tue, 27 Aug 2013 16:43:35 +0000"  >&lt;p&gt;Is it an expected side effect that any Java object is now accepted where an Avro string is required?&lt;br/&gt;
This appears as a type safety regression to me.&lt;/p&gt;

&lt;p&gt;C.&lt;/p&gt;</comment>
                            <comment id="13751443" author="hudson" created="Tue, 27 Aug 2013 17:00:19 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #394 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/394/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/394/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1268&quot; title=&quot;Add java-class, java-key-class and java-element-class support for stringable types to SpecificData&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1268&quot;&gt;&lt;del&gt;AVRO-1268&lt;/del&gt;&lt;/a&gt;.  Corrected change log message.  Date is not supported as a&lt;br/&gt;
stringable.  That support was removed in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1155&quot; title=&quot;Stringable Date test in TestReflect fails if timezone doesn&amp;#39;t match locale&amp;#39;s default&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1155&quot;&gt;&lt;del&gt;AVRO-1155&lt;/del&gt;&lt;/a&gt;. (cutting: rev 1517866)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="13751521" author="cutting" created="Tue, 27 Aug 2013 18:05:44 +0000"  >&lt;p&gt;Christophe, are you referring to the toString() call in SpecificDatumWriter#writeString()?  You&apos;re right, this does loosen type safety.&lt;/p&gt;

&lt;p&gt;This could perhaps be fixed if the code changed to something like:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!(datum &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; CharSequence) &amp;amp;&amp;amp; getData().isStringable(datum.getClass()))
    datum = datum.toString();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If that sounds reasonable, please file an issue.  Thanks!&lt;/p&gt;</comment>
                            <comment id="13751526" author="cutting" created="Tue, 27 Aug 2013 18:07:57 +0000"  >&lt;p&gt;It looks like you already did file an issue: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1368&quot; title=&quot;String schema accepts any Java object, and converts it with toString()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1368&quot;&gt;&lt;del&gt;AVRO-1368&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="13751542" author="kryzthov" created="Tue, 27 Aug 2013 18:19:46 +0000"  >&lt;p&gt;Yes, that would appear to be an appropriate fix. I&apos;m trying this now, and will update on &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1368&quot; title=&quot;String schema accepts any Java object, and converts it with toString()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1368&quot;&gt;&lt;del&gt;AVRO-1368&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12638314">AVRO-1277</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12574907" name="AVRO-1268-MapSolution.patch" size="57038" author="alexandre.normand" created="Thu, 21 Mar 2013 22:33:31 +0000"/>
                            <attachment id="12573261" name="AVRO-1268-needs-work.patch" size="115255" author="alexandre.normand" created="Tue, 12 Mar 2013 05:25:01 +0000"/>
                            <attachment id="12574664" name="AVRO-1268-performance.patch" size="73677" author="alexandre.normand" created="Wed, 20 Mar 2013 22:54:51 +0000"/>
                            <attachment id="12575085" name="AVRO-1268.patch" size="36507" author="cutting" created="Fri, 22 Mar 2013 20:06:10 +0000"/>
                            <attachment id="12572493" name="AVRO-1268.patch" size="49661" author="alexandre.normand" created="Thu, 7 Mar 2013 06:46:34 +0000"/>
                            <attachment id="12572259" name="AVRO-1268.patch" size="46512" author="alexandre.normand" created="Wed, 6 Mar 2013 05:25:00 +0000"/>
                            <attachment id="12573262" name="AVRO-1268.sh" size="485" author="alexandre.normand" created="Tue, 12 Mar 2013 05:25:01 +0000"/>
                            <attachment id="12572821" name="GenericStringsPerf.patch" size="2708" author="cutting" created="Fri, 8 Mar 2013 20:27:11 +0000"/>
                            <attachment id="12574680" name="pseudo.patch" size="4384" author="cutting" created="Wed, 20 Mar 2013 23:49:48 +0000"/>
                            <attachment id="12574679" name="pseudo.patch" size="2368" author="cutting" created="Wed, 20 Mar 2013 23:48:50 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 6 Mar 2013 21:38:45 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315196</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 21 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ie2v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315540</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1269] AVRO is converting ORACLE,Netezza,Teradata decmials &amp; long integers to Strings.</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1269</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;I  tried to sqoop ORALCE,NETEZZA,TERADATA tables with AVRO foramt using plain JDBC (without using Cloudera connectors). I can see DECIMAL &amp;amp; NUMERIC data types are being converted to AVRO Strings.&lt;/p&gt;

&lt;p&gt;Oracle         &amp;#8211;    NUMBER &amp;amp;  INTEGER  data types  are being converted to AVRO String format.&lt;/p&gt;

&lt;p&gt;NETEZZA        &amp;#8211;   DECIMAL,NUMERIC data types are converted to AVRO String format.&lt;/p&gt;

&lt;p&gt;Teradata       &amp;#8211;  DECIMAL AND LONG data types are converted to AVRO String format.&lt;/p&gt;

&lt;p&gt; When i tried with map-columns to BigDecimal,BigInteger i can see AVRO does not support BigDecimal error message.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Prasad Dasari.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12634899">AVRO-1269</key>
            <summary>AVRO is converting ORACLE,Netezza,Teradata decmials &amp; long integers to Strings.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="madhuwithu">Prasad Dasari</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Mar 2013 20:47:02 +0000</created>
                <updated>Sun, 30 Dec 2018 05:50:32 +0000</updated>
                                            <version>1.7.1</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="13592048" author="esammer" created="Mon, 4 Mar 2013 07:53:25 +0000"  >&lt;p&gt;Prasad: I&apos;m pretty sure this is a bug in Sqoop. Specifically, it&apos;s Sqoop that decides which Avro type to use based on the database column type. Avro just writes the types it&apos;s asked to write, according to the schema.&lt;/p&gt;</comment>
                            <comment id="13592052" author="hshreedharan" created="Mon, 4 Mar 2013 08:00:00 +0000"  >&lt;p&gt;Prasad: I agree with Eric. You should file a jira here: &lt;a href=&quot;https://issues.apache.org/jira/browse/SQOOP&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/SQOOP&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="13592402" author="cutting" created="Mon, 4 Mar 2013 17:47:43 +0000"  >&lt;p&gt;Avro&apos;s Reflect API does support BigDecimal and BigInteger.  They&apos;re written with a schema like, &lt;/p&gt;
{&quot;type&quot;:&quot;string&quot;, &quot;java-class&quot;:&quot;java.math.BigDecimal&quot;}
&lt;p&gt;.  Using such a schema, ReflectDatumWriter will write BigDecimal instances and ReflectDatumReader will reconstruct a BigDecimal.  This was added in &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1146&quot; title=&quot;Can&amp;#39;t use ReflectData to get schema when the type has a BigDecimal or BigInteger field&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1146&quot;&gt;&lt;del&gt;AVRO-1146&lt;/del&gt;&lt;/a&gt;.  We should update the reflect package documentation (&lt;a href=&quot;http://avro.apache.org/docs/current/api/java/org/apache/avro/reflect/package-summary.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://avro.apache.org/docs/current/api/java/org/apache/avro/reflect/package-summary.html&lt;/a&gt;) to better document this.&lt;/p&gt;

&lt;p&gt;Converting SQL&apos;s DECIMAL or NUMERIC to Avro&apos;s long or float would be lossy.&lt;/p&gt;</comment>
                            <comment id="13593126" author="alexandre.normand" created="Tue, 5 Mar 2013 06:40:21 +0000"  >&lt;p&gt;Regarding Doug&apos;s last comment, I&apos;m making documentation changes as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1268&quot; title=&quot;Add java-class, java-key-class and java-element-class support for stringable types to SpecificData&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1268&quot;&gt;&lt;del&gt;AVRO-1268&lt;/del&gt;&lt;/a&gt; since that touches Stringable functionality and this should cover the reflect package doc.&lt;/p&gt;</comment>
                            <comment id="13788956" author="kshitij_pawar" created="Tue, 8 Oct 2013 06:20:11 +0000"  >&lt;p&gt;Hi Hari,&lt;/p&gt;

&lt;p&gt;I want to know(in detail) how to move data between Teradata and Hadoop.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 4 Mar 2013 07:53:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315392</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 15 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ifaf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315736</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1270] Emit default values from resolved reader during schema evolution/projection</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1270</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;Default values are not being returned by a resolved reader schema for fields that were not present in the writer schema.&lt;/p&gt;

&lt;p&gt;The code that demonstrates this issue can be found in this gist (&lt;a href=&quot;https://gist.github.com/claws/5069264&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gist.github.com/claws/5069264&lt;/a&gt;). It is a slightly modified version of an example by Douglas Creager.&lt;/p&gt;

&lt;p&gt;The section of interest is the READER_SCHEMA_C where a new field is added (to simulate schema evolution). In the main function the line:&lt;/p&gt;

&lt;p&gt;read_with_schema_resolution(FILENAME, READER_SCHEMA_C, &quot;c&quot;);&lt;/p&gt;

&lt;p&gt;which is intended to display the default value for field &apos;c&apos;, as this field is not present in the writer schema. This does not happen. Instead an error is reported:&lt;/p&gt;

&lt;p&gt;Error: Reader field c doesn&apos;t appear in writer&lt;/p&gt;

&lt;p&gt;This error indicates that the avro-c implementation does not appear to support returning default values.&lt;/p&gt;

&lt;p&gt;While posting about my avro problems on the avro user mailing list Douglas Creager indicated that the avro-c implementation does not support this functionality and suggested that a JIRA issue be raised.&lt;/p&gt;</description>
                <environment>&lt;p&gt;avro-c, schema evolution, return default values for fields not present in writer schema.&lt;/p&gt;</environment>
        <key id="12634952">AVRO-1270</key>
            <summary>Emit default values from resolved reader during schema evolution/projection</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.svg">Minor</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="claws">Chris Laws</reporter>
                        <labels>
                    </labels>
                <created>Sat, 2 Mar 2013 02:02:30 +0000</created>
                <updated>Tue, 7 May 2013 09:21:23 +0000</updated>
                                            <version>1.7.4</version>
                                                    <component>c</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13650647" author="fjcyue" created="Tue, 7 May 2013 09:21:23 +0000"  >&lt;p&gt;It seems that C++ implemenation has the same problem. This caused a big trouble to the backward compatibility&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 May 2013 09:21:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315445</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 37 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1ifm7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>315789</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                    <customfield id="customfield_12310230" key="com.atlassian.jira.plugin.system.customfieldtypes:textfield">
                        <customfieldname>Tags</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>avro-c</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>
