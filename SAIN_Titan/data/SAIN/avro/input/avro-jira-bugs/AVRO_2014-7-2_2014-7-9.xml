<!--
RSS generated by JIRA (7.6.3#76005-sha1:8a4e38d34af948780dbf52044e7aafb13a7cae58) at Mon Jan 21 19:20:31 UTC 2019

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/issues/?jql=project+%3D+AVRO+AND+created+%3E%3D+2014-7-2+AND+created+%3C%3D+2014-7-9+ORDER+BY+key+ASC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="4" total="4"/>
                <build-info>
            <version>7.6.3</version>
            <build-number>76005</build-number>
            <build-date>09-01-2018</build-date>
        </build-info>

<item>
            <title>[AVRO-1536] Remove monkeypatching of Enumerable</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1536</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The Avro Ruby gem adds a method &lt;tt&gt;collect_hash&lt;/tt&gt; to the core module &lt;tt&gt;Enumerable&lt;/tt&gt;. It&apos;s bad form for a library to extend core modules like this, and it&apos;s also unnecessary (stdlib methods can do the job perfectly well).&lt;/p&gt;</description>
                <environment></environment>
        <key id="12724917">AVRO-1536</key>
            <summary>Remove monkeypatching of Enumerable</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="martinkl">Martin Kleppmann</assignee>
                                    <reporter username="martinkl">Martin Kleppmann</reporter>
                        <labels>
                    </labels>
                <created>Wed, 2 Jul 2014 08:44:30 +0000</created>
                <updated>Thu, 24 Jul 2014 20:16:18 +0000</updated>
                            <resolved>Thu, 3 Jul 2014 15:02:36 +0000</resolved>
                                    <version>1.7.6</version>
                                    <fixVersion>1.7.7</fixVersion>
                                    <component>ruby</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="14049762" author="martinkl" created="Wed, 2 Jul 2014 09:00:48 +0000"  >&lt;p&gt;Attached a patch, extracted from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=wvanbergen&quot; class=&quot;user-hover&quot; rel=&quot;wvanbergen&quot;&gt;Willem van Bergen&lt;/a&gt;&apos;s patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1499&quot; title=&quot;Ruby 2+ Writes Invalid avro files using the avro gem&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1499&quot;&gt;&lt;del&gt;AVRO-1499&lt;/del&gt;&lt;/a&gt;. Willem, could you please check whether this looks right?&lt;/p&gt;</comment>
                            <comment id="14050222" author="wvanbergen" created="Wed, 2 Jul 2014 15:47:42 +0000"  >&lt;p&gt;Looks good!&lt;/p&gt;</comment>
                            <comment id="14051550" author="jira-bot" created="Thu, 3 Jul 2014 15:02:14 +0000"  >&lt;p&gt;Commit 1607665 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=martinkl&quot; class=&quot;user-hover&quot; rel=&quot;martinkl&quot;&gt;Martin Kleppmann&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1607665&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1607665&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1536&quot; title=&quot;Remove monkeypatching of Enumerable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1536&quot;&gt;&lt;del&gt;AVRO-1536&lt;/del&gt;&lt;/a&gt;. Ruby: Remove monkeypatching of Enumerable. Contributed by Willem van Bergen.&lt;/p&gt;</comment>
                            <comment id="14051551" author="martinkl" created="Thu, 3 Jul 2014 15:02:36 +0000"  >&lt;p&gt;I have committed this. Thanks Willem!&lt;/p&gt;</comment>
                            <comment id="14051590" author="hudson" created="Thu, 3 Jul 2014 15:37:03 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #462 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/462/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/462/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1536&quot; title=&quot;Remove monkeypatching of Enumerable&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1536&quot;&gt;&lt;del&gt;AVRO-1536&lt;/del&gt;&lt;/a&gt;. Ruby: Remove monkeypatching of Enumerable. Contributed by Willem van Bergen. (martinkl: rev 1607665)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/Manifest&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/lib/avro.rb&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/lib/avro/collect_hash.rb&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/ruby/lib/avro/protocol.rb&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12653551" name="AVRO-1536.patch" size="2334" author="martinkl" created="Wed, 2 Jul 2014 09:00:48 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 2 Jul 2014 15:47:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>403100</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 29 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1xdnz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>403155</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1537] Make it easier to set up a multi-language build environment</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1537</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;It&apos;s currently quite tedious to set up an environment in which the Avro test suites for all supported languages can be run, and in which release candidates can be built. This is especially so when we need to test against several different versions of a programming language or VM (e.g. JDK6/JDK7/JDK8, Ruby 1.8.7/1.9.3/2.0/2.1).&lt;/p&gt;

&lt;p&gt;Our shared Hudson server isn&apos;t an ideal solution, because it only runs tests on changes that are already committed, and maintenance of the server can&apos;t easily be shared across the community.&lt;/p&gt;

&lt;p&gt;I think a Docker image might be a good solution, since it could be set up by one person, shared with all Avro developers, and maintained by the community on an ongoing basis. But other VM solutions (Vagrant, for example?) might work just as well. Suggestions welcome.&lt;/p&gt;

&lt;p&gt;Related resources:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Using AWS (setting up an EC2 instance for Avro build and release): &lt;a href=&quot;https://cwiki.apache.org/confluence/display/AVRO/How+To+Release#HowToRelease-UsingAWSforAvroBuildandRelease&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://cwiki.apache.org/confluence/display/AVRO/How+To+Release#HowToRelease-UsingAWSforAvroBuildandRelease&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Testing multiple versions of Ruby in CI: &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1515&quot; title=&quot;Test multiple Ruby versions in CI&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1515&quot;&gt;AVRO-1515&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
        <key id="12724991">AVRO-1537</key>
            <summary>Make it easier to set up a multi-language build environment</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="tomwhite">Tom White</assignee>
                                    <reporter username="martinkl">Martin Kleppmann</reporter>
                        <labels>
                    </labels>
                <created>Wed, 2 Jul 2014 15:06:11 +0000</created>
                <updated>Mon, 11 Apr 2016 17:11:32 +0000</updated>
                            <resolved>Mon, 12 Jan 2015 12:12:22 +0000</resolved>
                                                    <fixVersion>1.7.8</fixVersion>
                    <fixVersion>1.8.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="14050004" author="martinkl" created="Wed, 2 Jul 2014 15:06:54 +0000"  >&lt;p&gt;I&apos;m happy to give this a try, but I don&apos;t know a lot about Docker, so it&apos;ll take me a bit of time to learn the basics. If anyone is more experienced in this area, please jump in.&lt;/p&gt;</comment>
                            <comment id="14241373" author="tomwhite" created="Wed, 10 Dec 2014 16:55:01 +0000"  >&lt;p&gt;I created a Dockerfile that does this. I can run &lt;tt&gt;./build.sh test&lt;/tt&gt; and &lt;tt&gt;./build.sh dist&lt;/tt&gt;, however there are a few failures (which I will open JIRAs for).&lt;/p&gt;

&lt;p&gt;Please try it out and send feedback!&lt;/p&gt;</comment>
                            <comment id="14241376" author="tomwhite" created="Wed, 10 Dec 2014 16:56:48 +0000"  >&lt;p&gt;Forgot to say that I based the Dockerfile on the one from HBase. In particular, the way that it bundles a JDK and Maven.&lt;/p&gt;</comment>
                            <comment id="14241506" author="cutting" created="Wed, 10 Dec 2014 18:33:13 +0000"  >&lt;p&gt;Tom, this looks great!&lt;/p&gt;

&lt;p&gt;It&apos;d be nice to get rid of the manual installs.&lt;/p&gt;

&lt;p&gt;Why can&apos;t we install java, and maven with apt-get?  The versions in Ubuntu 14.04 look fine to me:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://packages.ubuntu.com/trusty/maven&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://packages.ubuntu.com/trusty/maven&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://packages.ubuntu.com/trusty/openjdk-7-jdk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://packages.ubuntu.com/trusty/openjdk-7-jdk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As for forrest, might we use wget if the file doesn&apos;t exist?&lt;/p&gt;

&lt;p&gt;wget &lt;a href=&quot;http://archive.apache.org/dist/forrest/0.8/apache-forrest-0.8.tar.gz&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://archive.apache.org/dist/forrest/0.8/apache-forrest-0.8.tar.gz&lt;/a&gt;&lt;/p&gt;

</comment>
                            <comment id="14242467" author="tomwhite" created="Thu, 11 Dec 2014 12:22:19 +0000"  >&lt;p&gt;Thanks for taking a look, Doug. I&apos;ve updated the patch with your suggestions. The Dockerfile is based on an OpenJDK 7 image (which uses Ubuntu 14.04), and it installs Maven with apt-get and Forrest using curl, so there are no manual steps now.&lt;/p&gt;

&lt;p&gt;There are two failures in the tests: lang/js (see &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1573&quot; title=&quot;lan/js: grunt : which version must be used ?&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1573&quot;&gt;&lt;del&gt;AVRO-1573&lt;/del&gt;&lt;/a&gt;) and lang/php (&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1621&quot; title=&quot;PHP: FloatIntEncodingTest fails for NAN&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1621&quot;&gt;&lt;del&gt;AVRO-1621&lt;/del&gt;&lt;/a&gt;). I don&apos;t think either if these need prevent this from being committed though.&lt;/p&gt;

&lt;p&gt;Interestingly I hit &lt;a href=&quot;https://bugs.launchpad.net/ubuntu/+bug/1401390&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://bugs.launchpad.net/ubuntu/+bug/1401390&lt;/a&gt;, which just popped up, but I added &lt;tt&gt;--no-install-recommends&lt;/tt&gt; to apt-get as a workaround, as suggested in that thread.&lt;/p&gt;</comment>
                            <comment id="14248477" author="nielsbasjes" created="Tue, 16 Dec 2014 16:56:12 +0000"  >&lt;p&gt;I&apos;m just reading up on Docker and just had an Idea: &lt;br/&gt;
What if instead of doing &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;# Clone Avro
RUN git clone http:&lt;span class=&quot;code-comment&quot;&gt;//git.apache.org/avro.git
&lt;/span&gt;RUN svn checkout https:&lt;span class=&quot;code-comment&quot;&gt;//svn.apache.org/repos/asf/avro/trunk/ avro-trunk&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You used something like (warning: I just read about this command; I didn&apos;t have time yet to try it out)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;ONBUILD ADD . avro
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See: &lt;a href=&quot;https://docs.docker.com/reference/builder/#onbuild&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://docs.docker.com/reference/builder/#onbuild&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That would add your local version of Avro (which will most likely contain the change you&apos;re working on) to the container.&lt;br/&gt;
In that scenario you would be able to run all tests for all languages/version on the patched code before submitting it.&lt;/p&gt;</comment>
                            <comment id="14248516" author="nielsbasjes" created="Tue, 16 Dec 2014 17:19:59 +0000"  >&lt;p&gt;Perhaps using this option with &quot;docker run&quot; is better:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; -v $(pwd):/somewhere/avro 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14248701" author="cutting" created="Tue, 16 Dec 2014 19:05:33 +0000"  >&lt;p&gt;This is great.  It works for me!&lt;/p&gt;

&lt;p&gt;It would be great if one could easily use this to create tag and branch workspaces in addition to trunk.  Can we somehow pass a parameter to indicate this?&lt;/p&gt;

&lt;p&gt;Why check out from both SVN and git?  Is that just for exemplary purposes?&lt;/p&gt;

&lt;p&gt;Might we somehow use this to create a release-building script?&lt;/p&gt;</comment>
                            <comment id="14249839" author="nielsbasjes" created="Wed, 17 Dec 2014 13:36:17 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tomwhite&quot; class=&quot;user-hover&quot; rel=&quot;tomwhite&quot;&gt;Tom White&lt;/a&gt;, I played around with the last version you uploaded. (Apparently I wasn&apos;t looking at the last version when I wrote the previous comment).&lt;/p&gt;

&lt;p&gt;What I changed here locally is that I removed the last 3 lines from your Dockerfile (i.e. the git clone and svn checkout) and changed the build.sh like below.&lt;br/&gt;
Now you can do a simple &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;./build.sh safetest&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; and validate the entire build for all languages without any problems of needing to install anything tricky.&lt;br/&gt;
If I want to run a single command manually from within that environment I can simply do &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;./build.sh shell&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; and get a shell in the docker container.&lt;/p&gt;

&lt;p&gt;Let me know what you think of this.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;diff --git a/build.sh b/build.sh
index 06961c0..cff8dad 100755
--- a/build.sh
+++ b/build.sh
@@ -17,12 +17,16 @@

 set -e                                           # exit on error

-cd `dirname &lt;span class=&quot;code-quote&quot;&gt;&quot;$0&quot;&lt;/span&gt;`                                # connect to root
+SOURCEDIR=$( cd &lt;span class=&quot;code-quote&quot;&gt;&quot;$( dirname &quot;&lt;/span&gt;${BASH_SOURCE[0]}&lt;span class=&quot;code-quote&quot;&gt;&quot; )&quot;&lt;/span&gt; &amp;amp;&amp;amp; pwd )
+cd ${SOURCEDIR}                                  # connect to root

 VERSION=`cat share/VERSION.txt`

+# The cryptic name is to avoid conflicts in &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; of a shared development system (like jenkins)
+DOCKER_IMAGE_NAME=&lt;span class=&quot;code-quote&quot;&gt;&quot;avro_build_image_$(md5sum ${SOURCEDIR}/docker/Dockerfile | cut -d&lt;span class=&quot;code-quote&quot;&gt;&apos; &apos;&lt;/span&gt; -f1)&quot;&lt;/span&gt;
+
 function usage {
-  echo &lt;span class=&quot;code-quote&quot;&gt;&quot;Usage: $0 {test|dist|sign|clean}&quot;&lt;/span&gt;
+  echo &lt;span class=&quot;code-quote&quot;&gt;&quot;Usage: $0 {test|safetest|shell|dist|sign|clean}&quot;&lt;/span&gt;
   exit 1
 }

@@ -31,6 +35,13 @@ then
   usage
 fi

+function runindocker {
+    docker build -t ${DOCKER_IMAGE_NAME} ${SOURCEDIR}/docker
+    # By mapping the .m2 directory you can &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; an mvn install from within the container and use the result on your normal system.
+    # And &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; also is a significant speedup in subsequent builds because the dependencies are downloaded only once.
+    docker run --rm=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; -t -i -v ${SOURCEDIR}:/root/avro -w /root/avro -v ${HOME}/.m2:/root/.m2 ${DOCKER_IMAGE_NAME} $1 $2 $3 $4 $5 $6
+}
+
 set -x                                           # echo commands

 &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; target in &lt;span class=&quot;code-quote&quot;&gt;&quot;$@&quot;&lt;/span&gt;
@@ -72,7 +83,14 @@ &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;code-quote&quot;&gt;&quot;$target&quot;&lt;/span&gt; in
         (cd lang/java; mvn &lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; -DskipTests)
        # run interop rpc test
         /bin/bash share/test/interop/bin/test_rpc_interop.sh
+       ;;
+
+    safetest)
+       runindocker ./build.sh test
+       ;;

+    shell)
+       runindocker /bin/bash
        ;;

     dist)

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14250035" author="tomwhite" created="Wed, 17 Dec 2014 16:06:15 +0000"  >&lt;p&gt;&amp;gt; It would be great if one could easily use this to create tag and branch workspaces in addition to trunk. Can we somehow pass a parameter to indicate this?&lt;/p&gt;

&lt;p&gt;After &lt;tt&gt;docker run -it avro-build&lt;/tt&gt; you can do tagging/branching from the command line. If you use the -v option then you can use the same Avro workspace that you have checked out locally, which is probably the most useful option.&lt;/p&gt;

&lt;p&gt;&amp;gt; Why check out from both SVN and git? Is that just for exemplary purposes?&lt;/p&gt;

&lt;p&gt;Yes. You need SVN to run &lt;tt&gt;./build.sh dist&lt;/tt&gt; since it does an svn export. Lots of people use git for development so I added that. Maybe I should just remove these lines (as Niels suggests too).&lt;/p&gt;

&lt;p&gt;&amp;gt; Might we somehow use this to create a release-building script?&lt;/p&gt;

&lt;p&gt;Definitely, that would be a good thing to aim for. We&apos;d need to fix the tests first.&lt;/p&gt;</comment>
                            <comment id="14250051" author="tomwhite" created="Wed, 17 Dec 2014 16:13:04 +0000"  >&lt;p&gt;Thanks for the suggestions Niels. Here are my comments:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;I don&apos;t think ONBUILD adds anything. As far as I can tell its for dependent dockerfiles, which isn&apos;t a situation we have here.&lt;/li&gt;
	&lt;li&gt;The name &apos;safetest&apos; isn&apos;t very suggestive. Also, running in docker is orthogonal to build.sh, so all of its arguments are appropriate, not just test. Maybe we need a wrapper script. OTOH, we could delay adding this until we&apos;ve got more experience of what&apos;s useful, since you can just use &lt;tt&gt;docker run ...&lt;/tt&gt;.&lt;/li&gt;
	&lt;li&gt;Doing a &lt;tt&gt;docker build&lt;/tt&gt; every time you run docker isn&apos;t necessary. Also, I noticed that it can be slow on my machine since apt-get does an update (not sure why this isn&apos;t cached by docker).&lt;/li&gt;
	&lt;li&gt;Won&apos;t the cryptic docker build name be the same everywhere since you are calculating the MD5 of Dockerfile, which doesn&apos;t change?&lt;/li&gt;
	&lt;li&gt;Running &lt;tt&gt;docker&lt;/tt&gt; from the top-level and using &lt;tt&gt;-v ${SOURCEDIR}:/root/avro&lt;/tt&gt; is a good idea. I can change the patch to do that.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="14250075" author="tomwhite" created="Wed, 17 Dec 2014 16:29:30 +0000"  >&lt;p&gt;This patch removes the git and SVN checkouts in favour of mounting the local Avro tree under &lt;em&gt;avro&lt;/em&gt;.&lt;/p&gt;</comment>
                            <comment id="14250261" author="cutting" created="Wed, 17 Dec 2014 18:23:48 +0000"  >&lt;p&gt;I wonder if this might better be in share/docker, or perhaps just as Dockerfile in the project root?&lt;/p&gt;</comment>
                            <comment id="14250437" author="cutting" created="Wed, 17 Dec 2014 20:07:40 +0000"  >&lt;p&gt;It works a lot faster if you also mount your .m2 directory, so it doesn&apos;t have to re-download all the java dependencies.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;sudo docker run -it -v ${PWD}:/root/avro -v ${HOME}/.m2:/root/.m2 avro-build
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14251528" author="nielsbasjes" created="Thu, 18 Dec 2014 11:21:13 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tomwhite&quot; class=&quot;user-hover&quot; rel=&quot;tomwhite&quot;&gt;Tom White&lt;/a&gt;, &lt;br/&gt;
I verified on my system but running the scipt for the first time takes &apos;ages&apos; and running it the second time I see the command prompt within two seconds.&lt;br/&gt;
So if you get very different results I suspect a problem on your system.&lt;/p&gt;

&lt;p&gt;I agree that the &apos;safetest&apos; name is a poor choice. Perhaps simply having the &lt;tt&gt;./build.sh shell&lt;/tt&gt; is good enough for the first version?&lt;/p&gt;

&lt;p&gt;I also noticed that all files in the avro directory become owned by &lt;tt&gt;root&lt;/tt&gt; because that is the default user inside docker.&lt;br/&gt;
So after exiting the docker environment I could not longer do a &lt;tt&gt;mvn clean&lt;/tt&gt; because the generated files (.class, .jar, etc) are all stored in directories owned by the root user.&lt;/p&gt;

&lt;p&gt;In an attempt to solve this I came up with this.&lt;br/&gt;
I effectively create an additional layer that simply recreates the current user (same username, userid, groupid) in the docker environment.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;function runindocker {
    docker build -t ${DOCKER_IMAGE_NAME} ${SOURCEDIR}/docker
    docker build -t ${DOCKER_IMAGE_NAME}_${USER} - &amp;lt;&amp;lt; UserSpecificDocker
    FROM ${DOCKER_IMAGE_NAME}
    RUN groupadd -g $(id -g) ${USER}
    RUN useradd  -g $(id -g) -u $(id -u) -k /root -m ${USER}
    ENV HOME /home/${USER}
UserSpecificDocker
    # By mapping the .m2 directory you can &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; an mvn install from within the container and use the result on your normal system.
    # And &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; also is a significant speedup in subsequent builds because the dependencies are downloaded only once.
    docker run --rm=&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; -t -i -v ${SOURCEDIR}:/home/${USER}/avro -w /home/${USER}/avro -v ${HOME}/.m2:/home/${USER}/.m2 -u ${USER} ${DOCKER_IMAGE_NAME}_${USER} $1 $2 $3 $4 $5 $6
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14251842" author="tomwhite" created="Thu, 18 Dec 2014 15:57:50 +0000"  >&lt;p&gt;Doug&amp;gt; I wonder if this might better be in share/docker, or perhaps just as Dockerfile in the project root?&lt;/p&gt;

&lt;p&gt;Project root won&apos;t work unfortunately, since it will copy all the files in there into the image. I can move it to share/docker though.&lt;/p&gt;

&lt;p&gt;Doug&amp;gt; It works a lot faster if you also mount your .m2 directory&lt;/p&gt;

&lt;p&gt;Good idea.&lt;/p&gt;

&lt;p&gt;Niels&amp;gt; I also noticed that all files in the avro directory become owned by root because that is the default user inside docker.&lt;/p&gt;

&lt;p&gt;Good catch! It seems that there isn&apos;t a good solution for this in docker (see e.g. &lt;a href=&quot;https://groups.google.com/forum/#!msg/docker-user/EUndR1W5EBo/4hmJau8WyjAJ&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;this explanation from Solomon Hykes&lt;/a&gt;). I tried your runindocker function, but it failed for me since I got a GID clash. Does running &apos;./build.sh clean&apos; from the container fix the problem? Perhaps we can just document the workaround, or we could mention the git/svn checkout (or add them back) to avoid the user-mapping problem entirely. &lt;/p&gt;
</comment>
                            <comment id="14251927" author="cutting" created="Thu, 18 Dec 2014 17:40:59 +0000"  >&lt;p&gt;I like the idea of not running as root within the container.  It&apos;d be great if we can get this to work.  File ownership in ~/.m2/repository also won&apos;t be fixed unless we can run as the same user, right?&lt;/p&gt;</comment>
                            <comment id="14253226" author="tomwhite" created="Fri, 19 Dec 2014 10:40:00 +0000"  >&lt;p&gt;Here&apos;s an updated patch that uses Niels&apos; runindocker function, adapted to be used from build.sh. The idea is that you type &apos;./buildsh docker&apos; to build an image and run a container. I&apos;m using boot2docker on the Mac which uses a hard-coded UID and GID, so the script takes that into account. &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nielsbasjes&quot; class=&quot;user-hover&quot; rel=&quot;nielsbasjes&quot;&gt;Niels Basjes&lt;/a&gt;, does this work for you on Linux?&lt;/p&gt;

&lt;p&gt;I&apos;ve also moved the Dockerfile to share/docker and mounted the local .m2 directory.&lt;/p&gt;</comment>
                            <comment id="14253293" author="tomwhite" created="Fri, 19 Dec 2014 11:22:59 +0000"  >&lt;p&gt;New patch to fix an error that was occurring in &apos;./build.sh docker&apos; on Mac.&lt;/p&gt;</comment>
                            <comment id="14253332" author="tomwhite" created="Fri, 19 Dec 2014 12:24:10 +0000"  >&lt;p&gt;A (hopefully final) patch with updated dependencies for &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1573&quot; title=&quot;lan/js: grunt : which version must be used ?&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1573&quot;&gt;&lt;del&gt;AVRO-1573&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="14253656" author="nielsbasjes" created="Fri, 19 Dec 2014 17:04:36 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=tomwhite&quot; class=&quot;user-hover&quot; rel=&quot;tomwhite&quot;&gt;Tom White&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;I checked your current patch and I really like it.&lt;br/&gt;
I did a test on CentOS 6.5 x86_64 inside a Virtual Box in Windows 7 and this works really great.&lt;br/&gt;
The first build takes a while and then subsequent runs are within a second on the screen.&lt;br/&gt;
The Java build went perfect and I let it run for a while and it all seems to work fine (until it all stops with the known bug &lt;tt&gt;./build.sh: line 25: node_modules/grunt/bin/grunt: No such file or directory&lt;/tt&gt;).&lt;/p&gt;

&lt;p&gt;A few feedback points:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Using the naming like &lt;tt&gt;avro-build&lt;/tt&gt; and &lt;tt&gt;avro-build-$USER&lt;/tt&gt; means that there can only be a single images at a time with that name.&lt;br/&gt;
So in the scenario where you want to enhance the image (i.e. edit the Dockerfile) and then a different user on the same system cannot use the build system reliably; there will be conflicts between those two users. I realize this is an extremely unlikely scenario in normal development situations. I&apos;m sure not how unlikely it becomes when we make this docker part of the normal build and run it on a shared CI environment (i.e. Jenkins) where everything runs as the same user.&lt;br/&gt;
I think it is fine to do this form as long as we realize (and preferably document) this caveat. Perhaps something a comment as simple as &quot;The &quot;build.sh docker&quot; environment is intended for use on personal development systems.&quot; should suffice.&lt;/li&gt;
	&lt;li&gt;The Dockerfile does the installation of the various things by means of naming the tool that needs to be installed. Then this docker image will be different if for one of the tools a new version is released. So I was wondering;
	&lt;ol&gt;
		&lt;li&gt;What happens if in the future one of those tools creates a regression or a incompatible change in their API? Like the PHP NaN example? Is that a good thing because you&apos;re actually building and testing against what end users will be using too? Or is this a bad thing because you have a changing build environment?&lt;/li&gt;
		&lt;li&gt;What happens if in the future one of those tools is updated and it is an update that is really needed for the build to succeed? How can it be validated/ensured that the image is updated too on the desktop of the developers? Perhaps the project can be enhanced to ensure/enforce minimal versions of the tools that are needed?&lt;/li&gt;
	&lt;/ol&gt;
	&lt;/li&gt;
	&lt;li&gt;I vote you push back the improvements towards HBase where you based the original on (at least make a ticket in HBase &lt;tt&gt;Evaluate Docker improvements from AVRO project&lt;/tt&gt;).&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="14253866" author="cutting" created="Fri, 19 Dec 2014 19:30:50 +0000"  >&lt;p&gt;On Linux docker requires sudo.&lt;/p&gt;

&lt;p&gt;With the current patch, trying &apos;sudo ./build.sh docker&apos; on Ubuntu 14.04 fails for me with:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Step 2 : RUN useradd -g 0 -u 0 -k /root -m root
 ---&amp;gt; Running in 761a21dcc7fb
useradd: user &lt;span class=&quot;code-quote&quot;&gt;&apos;root&apos;&lt;/span&gt; already exists
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I fixed this by setting $USER to $SUDO_USER on Linux in build.sh:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;code-quote&quot;&gt;&quot;$(uname -s)&quot;&lt;/span&gt; == &lt;span class=&quot;code-quote&quot;&gt;&quot;Linux&quot;&lt;/span&gt; ]; then
   USER=${SUDO_USER}
   ...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then everything works great for me.&lt;/p&gt;</comment>
                            <comment id="14254113" author="nielsbasjes" created="Fri, 19 Dec 2014 22:19:22 +0000"  >&lt;p&gt;On Linux docker does not &lt;em&gt;require&lt;/em&gt; sudo.&lt;/p&gt;

&lt;p&gt;In fact the docker manual says this:&lt;br/&gt;
&lt;a href=&quot;https://docs.docker.com/installation/ubuntulinux/#giving-non-root-access&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://docs.docker.com/installation/ubuntulinux/#giving-non-root-access&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Starting in version 0.5.3, if you (or your Docker installer) create a Unix group called docker and add users to it, then the docker daemon will make the ownership of the Unix socket read/writable by the docker group when the daemon starts. The docker daemon must always run as the root user, but if you run the docker client as a user in the docker group then you don&apos;t need to add sudo to all the client commands.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I always set it up like this (i.e. adding my user to the docker group) and this means that the $SUDO_USER is always unset.&lt;/p&gt;

&lt;p&gt;So to make both situations work I expect we should have something that only overwrites $USER with $SUDO_USER if it was set.&lt;/p&gt;</comment>
                            <comment id="14254963" author="nielsbasjes" created="Sat, 20 Dec 2014 21:51:39 +0000"  >&lt;p&gt;I just realized that the original issue states &lt;blockquote&gt;&lt;p&gt;This is especially so when we need to test against several different versions of a programming language or VM (e.g. JDK6/JDK7/JDK8, Ruby 1.8.7/1.9.3/2.0/2.1).&lt;/p&gt;&lt;/blockquote&gt;&lt;br/&gt;
What we have created so far is actually a good way of setting up the &apos;default&apos; build environment (which is a very good first step).&lt;/p&gt;

&lt;p&gt;Any idea&apos;s how we&apos;re going to approach the &apos;real question&apos; ?&lt;/p&gt;</comment>
                            <comment id="14267817" author="tomwhite" created="Wed, 7 Jan 2015 16:19:54 +0000"  >&lt;p&gt;Here&apos;s a new patch that sets USER to SUDO_USER if set, otherwise falls back to the current user, as suggested by Niels.&lt;/p&gt;

&lt;p&gt;To answer Niels points:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;It would be great to use Docker to run on Jenkins, but I&apos;m not sure we can do that at the ASF yet. We can address any issues that arise to do with naming when they arise.&lt;/li&gt;
	&lt;li&gt;The Dockerfile does not specify which versions of each library to use, so you are right that when they are updated we might get failures due to incompatibilities. I propose we address them on a case-by-case basis - since they may uncover bugs that need fixing in the Avro code or tests.&lt;/li&gt;
	&lt;li&gt;Regarding the question about testing different versions of Java, Ruby etc - we could add more Dockerfiles for the different combinations. Separate issues would be best for that.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                            <comment id="14268437" author="cutting" created="Wed, 7 Jan 2015 22:48:21 +0000"  >&lt;p&gt;Here&apos;s a version that works for me.  On Linux with sudo, I need to set USER, not just USER_ID.  Is it odious style to alter USER?  Should we use a different variable?  If so, we need to do so consistently in the script.&lt;/p&gt;</comment>
                            <comment id="14269418" author="nielsbasjes" created="Thu, 8 Jan 2015 15:07:31 +0000"  >&lt;p&gt;I agree with Doug. &lt;br/&gt;
We should not tamper with a &apos;system&apos; environment variable if we can avoid it.&lt;/p&gt;

&lt;p&gt;Proposal: In the build.sh we should go something like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;USER_NAME=${SUDO_USER:=$USER}
USER_ID=$(id -u $USER_NAME)
GROUP_ID=$(id -g $USER_NAME)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and in the rest of the script replace the instances of ${USER} with ${USER_NAME}&lt;/p&gt;

&lt;p&gt;I updated Doug&apos;s latest patch, did a clean test run and attached the resulting patch.&lt;/p&gt;

&lt;p&gt;P.S. I did see an error being reported in the csharp area but I think this has nothing to do with this change.&lt;/p&gt;</comment>
                            <comment id="14269742" author="cutting" created="Thu, 8 Jan 2015 17:50:12 +0000"  >&lt;p&gt;Niels, your version works well for me and is a nice improvement.&lt;/p&gt;

&lt;p&gt;Here&apos;s a new version that changes whitespace to keep things in 80 columns and also attempts to improve the comments &amp;amp; documentation a bit.  No functional changes.&lt;/p&gt;</comment>
                            <comment id="14270801" author="nielsbasjes" created="Fri, 9 Jan 2015 09:23:59 +0000"  >&lt;p&gt;I ran a complete build from scratch using Doug&apos;s latest update and I think we should go with this one.&lt;/p&gt;

&lt;p&gt;So I say: +1 (non-binding)&lt;/p&gt;

&lt;p&gt;I submitted a new issue for the only real error I saw (which I think is not related to this patch): &lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1626&quot; title=&quot;Missing lang/csharp/src/apache/perf/app.config&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1626&quot;&gt;AVRO-1626&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="14270873" author="tomwhite" created="Fri, 9 Jan 2015 11:03:42 +0000"  >&lt;p&gt;Here&apos;s a one-line change to Doug&apos;s patch to set USER_NAME in the non-Linux case. With this change, the patch works for me.&lt;/p&gt;</comment>
                            <comment id="14272158" author="cutting" created="Sat, 10 Jan 2015 00:45:10 +0000"  >&lt;p&gt;Tom, this looks great.  +1&lt;/p&gt;</comment>
                            <comment id="14272447" author="nielsbasjes" created="Sat, 10 Jan 2015 11:24:32 +0000"  >&lt;p&gt;+1 (non-binding)&lt;/p&gt;</comment>
                            <comment id="14273534" author="jira-bot" created="Mon, 12 Jan 2015 12:11:57 +0000"  >&lt;p&gt;Commit 1651069 from tomwhite@apache.org in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1651069&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1651069&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1537&quot; title=&quot;Make it easier to set up a multi-language build environment&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1537&quot;&gt;&lt;del&gt;AVRO-1537&lt;/del&gt;&lt;/a&gt;. Make it easier to set up a multi-language build environment.&lt;/p&gt;</comment>
                            <comment id="14273536" author="tomwhite" created="Mon, 12 Jan 2015 12:12:22 +0000"  >&lt;p&gt;I committed this. Thanks for all your help Niels and Doug!&lt;/p&gt;</comment>
                            <comment id="14273554" author="hudson" created="Mon, 12 Jan 2015 12:36:18 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #510 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/510/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/510/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1537&quot; title=&quot;Make it easier to set up a multi-language build environment&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1537&quot;&gt;&lt;del&gt;AVRO-1537&lt;/del&gt;&lt;/a&gt;. Make it easier to set up a multi-language build environment. (tomwhite: rev 1651069)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/BUILD.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/build.sh&lt;/li&gt;
	&lt;li&gt;/avro/trunk/share/docker&lt;/li&gt;
	&lt;li&gt;/avro/trunk/share/docker/Dockerfile&lt;/li&gt;
	&lt;li&gt;/avro/trunk/share/rat-excludes.txt&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12826299">PIG-4526</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12737466">AVRO-1573</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12761031">AVRO-1621</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12690861" name="AVRO-1537-2015-01-08.patch" size="5181" author="nielsbasjes" created="Thu, 8 Jan 2015 15:07:31 +0000"/>
                            <attachment id="12691113" name="AVRO-1537.patch" size="5259" author="tomwhite" created="Fri, 9 Jan 2015 11:03:42 +0000"/>
                            <attachment id="12690894" name="AVRO-1537.patch" size="5306" author="cutting" created="Thu, 8 Jan 2015 17:50:12 +0000"/>
                            <attachment id="12690646" name="AVRO-1537.patch" size="5165" author="cutting" created="Wed, 7 Jan 2015 22:48:21 +0000"/>
                            <attachment id="12690559" name="AVRO-1537.patch" size="5144" author="tomwhite" created="Wed, 7 Jan 2015 16:19:54 +0000"/>
                            <attachment id="12688311" name="AVRO-1537.patch" size="5043" author="tomwhite" created="Fri, 19 Dec 2014 12:24:10 +0000"/>
                            <attachment id="12688305" name="AVRO-1537.patch" size="4966" author="tomwhite" created="Fri, 19 Dec 2014 11:22:59 +0000"/>
                            <attachment id="12688296" name="AVRO-1537.patch" size="4969" author="tomwhite" created="Fri, 19 Dec 2014 10:42:26 +0000"/>
                            <attachment id="12688295" name="AVRO-1537.patch" size="4971" author="tomwhite" created="Fri, 19 Dec 2014 10:40:00 +0000"/>
                            <attachment id="12687757" name="AVRO-1537.patch" size="4038" author="tomwhite" created="Wed, 17 Dec 2014 16:29:30 +0000"/>
                            <attachment id="12686576" name="AVRO-1537.patch" size="4581" author="tomwhite" created="Thu, 11 Dec 2014 12:22:19 +0000"/>
                            <attachment id="12686299" name="AVRO-1537.patch" size="4837" author="tomwhite" created="Wed, 10 Dec 2014 16:55:01 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 10 Dec 2014 16:55:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>403174</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310191" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                        <customfieldname>Hadoop Flags</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10343"><![CDATA[Reviewed]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 2 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1xe53:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>403229</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>


<item>
            <title>[AVRO-1538] NettyTransceiver descriptor leaks</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1538</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;NettyTransceiver created without channel factory results in file descriptors leak while connecting with IOException (java.io.IOException: Error connecting to, NettyTransceiver.java:280).&lt;/p&gt;

&lt;p&gt;It seems very similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/FLUME-2221&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/FLUME-2221&lt;/a&gt;. But I am not flume user.&lt;/p&gt;

&lt;p&gt;To reproduce - run the test below (IP:9999 was nobody listened.)&lt;br/&gt;
In my enviroment (run from IDEA, openSuse 13.1 64bit, all system settings are by default) stable fails after 146 cycles (count = 146). &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    @Test
    public void testAvroNettyTest() {
        for (int count = 0; count &amp;lt; 4500; count++) {
            try {
                NettyTransceiver apiClient = new NettyTransceiver(new InetSocketAddress(&quot;&amp;lt;IP&amp;gt;&quot;, 9999), 5000L);
            } catch (Exception exc) {
                System.out.println(String.format(&quot;=========================== %d ===========================&quot;, count));
                exc.printStackTrace();

                if ( exc.getMessage().contains(&quot;Too many open files&quot;)
                        || exc.getCause().getMessage().contains(&quot;Too many open files&quot;)  ) {
                    System.out.println(&quot;Found [Too many open files].&quot;);
                    break;
                }
            }
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And test that OK&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    @Test
    public void testAvroCustomNettyTest() throws Exception {
        for (int count = 0; count &amp;lt; 4500; count++) {
            NioClientSocketChannelFactory channelFactory = null;
            ExecutorService bossExecutor = null, workerExecutor = null;
            try {
                bossExecutor = Executors.newCachedThreadPool(new NettyTransceiverThreadFactory(
                        &quot;Avro &quot; + NettyTransceiver.class.getSimpleName() + &quot; Boss&quot;));
                workerExecutor = Executors.newCachedThreadPool(new NettyTransceiverThreadFactory(
                        &quot;Avro &quot; + NettyTransceiver.class.getSimpleName() + &quot; I/O Worker&quot;));

                channelFactory = new NioClientSocketChannelFactory(
                        bossExecutor,
                        workerExecutor
                        );

                NettyTransceiver apiClient = new NettyTransceiver(
                        new InetSocketAddress(&quot;&amp;lt;IP&amp;gt;&quot;, 9999),
                        channelFactory,
                        5000L);
            } catch (Exception exc) {
                System.out.println(String.format(&quot;=========================== %d ===========================&quot;, count));
                exc.printStackTrace();

                if ( channelFactory != null ) {
                    channelFactory.shutdown();
                }

                if ( exc.getMessage().contains(&quot;Too many open files&quot;)
                        || exc.getCause().getMessage().contains(&quot;Too many open files&quot;)  ) {
                    System.out.println(&quot;Found [Too many open files].&quot;);
                    break;
                }
            }
        }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So workaround exists it would be cool if NettyTransceiver in next release will be more &quot;friendly&quot; (release all internal resources if initialization failed). &lt;/p&gt;</description>
                <environment>&lt;p&gt;openSuse 13.1 64 bit, jdk1.7.0_51 64 bit&lt;/p&gt;</environment>
        <key id="12725748">AVRO-1538</key>
            <summary>NettyTransceiver descriptor leaks</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21133&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.svg">Major</priority>
                        <status id="1" iconUrl="https://issues.apache.org/jira/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="platon-vai">Platon Vai</reporter>
                        <labels>
                    </labels>
                <created>Mon, 7 Jul 2014 14:14:06 +0000</created>
                <updated>Mon, 7 Jul 2014 14:16:06 +0000</updated>
                                            <version>1.7.5</version>
                    <version>1.7.6</version>
                                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                        <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>403906</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 29 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1xik7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>403949</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>


<item>
            <title>[AVRO-1539] Add FileSystem-based FsInput Constructor</title>
                <link>https://issues.apache.org/jira/browse/AVRO-1539</link>
                <project id="12310911" key="AVRO">Apache Avro</project>
                    <description>&lt;p&gt;The current FsInput constructor uses a Configuration object to retrieve the FileSystem. It would be convenient to have an additional constructor that directly took a FileSystem for instances where consuming code already has that available.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12725775">AVRO-1539</key>
            <summary>Add FileSystem-based FsInput Constructor</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/secure/viewavatar?size=xsmall&amp;avatarId=21140&amp;avatarType=issuetype">Improvement</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.svg">Trivial</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="aj987">Allan Shoup</assignee>
                                    <reporter username="aj987">Allan Shoup</reporter>
                        <labels>
                    </labels>
                <created>Mon, 7 Jul 2014 16:15:48 +0000</created>
                <updated>Mon, 1 Feb 2016 14:56:06 +0000</updated>
                            <resolved>Wed, 17 Dec 2014 23:36:41 +0000</resolved>
                                    <version>1.7.6</version>
                                    <fixVersion>1.8.0</fixVersion>
                                    <component>java</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="14242072" author="aj987" created="Thu, 11 Dec 2014 03:27:07 +0000"  >&lt;p&gt;Any objections to this trivial patch?&lt;/p&gt;</comment>
                            <comment id="14242246" author="cutting" created="Thu, 11 Dec 2014 07:08:06 +0000"  >&lt;p&gt;This looks like a reasonable addition, but you should continue to call path.getFileSystem(conf) to get the FileSystem instance so that the path is still used to create the correct filesystem.&lt;/p&gt;</comment>
                            <comment id="14242651" author="aj987" created="Thu, 11 Dec 2014 15:05:17 +0000"  >&lt;p&gt;Good point. Attaching &lt;em&gt;AVRO&amp;#45;1539b.patch&lt;/em&gt;.&lt;/p&gt;</comment>
                            <comment id="14248583" author="cutting" created="Tue, 16 Dec 2014 18:06:05 +0000"  >&lt;p&gt;Looks good.  We should probably also add a test that uses the new constructor.&lt;/p&gt;</comment>
                            <comment id="14250131" author="aj987" created="Wed, 17 Dec 2014 17:04:34 +0000"  >&lt;p&gt;Added tests for FsInput. I also included some missing &lt;tt&gt;@Override&lt;/tt&gt; annotations.&lt;/p&gt;</comment>
                            <comment id="14250818" author="jira-bot" created="Wed, 17 Dec 2014 23:36:23 +0000"  >&lt;p&gt;Commit 1646365 from &lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cutting&quot; class=&quot;user-hover&quot; rel=&quot;cutting&quot;&gt;Doug Cutting&lt;/a&gt; in branch &apos;avro/trunk&apos;&lt;br/&gt;
[ &lt;a href=&quot;https://svn.apache.org/r1646365&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://svn.apache.org/r1646365&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1539&quot; title=&quot;Add FileSystem-based FsInput Constructor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1539&quot;&gt;&lt;del&gt;AVRO-1539&lt;/del&gt;&lt;/a&gt;. Java: Add FileSystem based FsInput constructor.  Contributed by Allan Shoup.&lt;/p&gt;</comment>
                            <comment id="14250820" author="cutting" created="Wed, 17 Dec 2014 23:36:42 +0000"  >&lt;p&gt;I committed this.  Thanks, Allan!&lt;/p&gt;</comment>
                            <comment id="14250890" author="hudson" created="Thu, 18 Dec 2014 00:36:33 +0000"  >&lt;p&gt;SUCCESS: Integrated in AvroJava #507 (See &lt;a href=&quot;https://builds.apache.org/job/AvroJava/507/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://builds.apache.org/job/AvroJava/507/&lt;/a&gt;)&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/AVRO-1539&quot; title=&quot;Add FileSystem-based FsInput Constructor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;AVRO-1539&quot;&gt;&lt;del&gt;AVRO-1539&lt;/del&gt;&lt;/a&gt;. Java: Add FileSystem based FsInput constructor.  Contributed by Allan Shoup. (cutting: rev 1646365)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;/avro/trunk/CHANGES.txt&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/pom.xml&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/src/main/java/org/apache/avro/mapred/FsInput.java&lt;/li&gt;
	&lt;li&gt;/avro/trunk/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestFsInput.java&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    </comments>
                    <attachments>
                            <attachment id="12686432" name="AVRO-1539.patch" size="1228" author="aj987" created="Thu, 11 Dec 2014 03:27:07 +0000"/>
                            <attachment id="12686599" name="AVRO-1539b.patch" size="1232" author="aj987" created="Thu, 11 Dec 2014 15:05:17 +0000"/>
                            <attachment id="12687767" name="AVRO-1539c.patch" size="6471" author="aj987" created="Wed, 17 Dec 2014 17:04:34 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 11 Dec 2014 07:08:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12313422" key="com.atlassian.jirafisheyeplugin:jobcheckbox">
                        <customfieldname>Enable Automatic Patch Review</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[false]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>403933</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            4 years, 5 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1xiq7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>403976</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                    </customfields>
    </item>
</channel>
</rss>
